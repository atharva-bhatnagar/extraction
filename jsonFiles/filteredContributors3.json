[
  {
    "login": "rumenov",
    "id": 547359,
    "totalContributions": 1073,
    "github": "https://github.com/rumenov",
    "commits": [
      {
        "id": "b2d61df54614b3e3a79b75f535b6c8236ad47adb",
        "date": "2023-11-22T14:04:55Z",
        "message": "Merge branch 'rumenov/rmexp' into 'master'\n\nrefactor: remove rs/experimental\n\nIdeally dead/unused code doesn't live in the main repo. Having such code makes future migrations and upgrading crates harder.\n\nNo one claimed that this directory is [useful in anyway](https://dfinity.slack.com/archives/CH4CADCJX/p1700469123209219).\n\nAlso looking at history of subdirectories there are no changes in the last two years. Just crate upgrades. \n\nSee merge request dfinity-lab/public/ic!16216"
      },
      {
        "id": "fd0ac2fa4461241481b31155d5c870cd96bd0cc9",
        "date": "2023-11-22T14:04:55Z",
        "message": "refactor: remove rs/experimental"
      },
      {
        "id": "04e66e57068b8ff04f9215c0a1c70c3ad6c158f5",
        "date": "2023-11-22T07:11:49Z",
        "message": "Merge branch 'rumenov/upppr' into 'master'\n\nchore: upgrade prost to 0.12 and tonic to 0.10\n\n`from_i32` is deprecated for enums. In order to make the diff smaller I used the `try_from(..).ok()` pattern in places of `from_i32`\n\nIn some situations this pattern is suboptimal but wanted to keep the diff minimal. I will suggest teams fixing it after this MR is merged. \n\nSee merge request dfinity-lab/public/ic!16169"
      },
      {
        "id": "830feb65804d9e857d10d0663e46deaca21cfd04",
        "date": "2023-11-22T07:11:48Z",
        "message": "chore: upgrade prost to 0.12 and tonic to 0.10"
      },
      {
        "id": "c69a2068640a3df0e9731518d06f46bf95461acd",
        "date": "2023-11-20T17:44:31Z",
        "message": "chore: remove un-existing destinations from the owners file"
      },
      {
        "id": "cb46ac4f0ed65f5930d539a7ce1c0d621bb4f1ad",
        "date": "2023-11-20T13:43:53Z",
        "message": "Merge branch 'rumenov/defffe' into 'master'\n\nchore: NET-1330 enable https outcalls on all newly created subnets\n\nWhen creating the CreateSubnetPayload we use the [SubnetFeatures default](https://sourcegraph.com/github.com/dfinity/ic/-/blob/rs/registry/admin/src/main.rs?L1277) values to write to the registry. \n\nChanging the default values should be sufficient to enable the feature for new subnets.\n\nSubnets where the feature is kept disabled for now\n\n- tdb26 (NNS)\n- 4zbus ( \"subnet_type\": \"verified_application\", )\n- x33ed (SNS)\n- 2fq7c (ecdsa Test-key signing subnet) \n\nSee merge request dfinity-lab/public/ic!16111"
      },
      {
        "id": "5946332f1df13eb6b7f2fbafc4b76022f54e6f0d",
        "date": "2023-11-20T13:43:53Z",
        "message": "chore: NET-1330 enable https outcalls on all newly created subnets"
      },
      {
        "id": "c98f779ea66dc6f18241210a2f07b116e63145a6",
        "date": "2023-11-20T10:59:00Z",
        "message": "Merge branch 'rumenov/plrm' into 'master'\n\nchore: remove the policy monitoring code\n\nideally we should not be having unused code in the main repo, \nthere are no plans to enable it in the near future, so let's remove the code in order to decrease the maintenance burden in the future \n\nSee merge request dfinity-lab/public/ic!16209"
      },
      {
        "id": "86f5d06e2cf5aefbb4f37123f6bc020195cb7876",
        "date": "2023-11-20T10:58:59Z",
        "message": "chore: remove the policy monitoring code"
      },
      {
        "id": "e300986b369ba0bccf07260591bf02347b11fc93",
        "date": "2023-11-17T13:32:49Z",
        "message": "Merge branch 'rumenov/baseds' into 'master'\n\nbuild: fix few build dependencies\n\n- strip the suffix of `rand-0_8_4, rand_chacha-0_3_1, rand_distr-0_4, opentelemetry_0_20_0_metrics, opentelemetry_prometheus_0_13_0`\n- use only rcgen at version 0.11 \n\nSee merge request dfinity-lab/public/ic!16168"
      },
      {
        "id": "d0d02d41a8efb51b1118fe1447e522ae537749c0",
        "date": "2023-11-17T13:32:48Z",
        "message": "build: fix few build dependencies"
      },
      {
        "id": "157a3a6d8fccc148ac2749c71859f7a23f3186d3",
        "date": "2023-11-14T16:43:06Z",
        "message": "Merge branch 'rumenov/p2pint' into 'master'\n\nrefactor: p2p interfaces\n\n- Put the p2p interfaces in the `interfaces/src/p2p module`\n- Rename `UnvalidartedArtifactEvent` to `UnvalidartedArtifactMutation` and move it under `rs/types/types/` \n\nSee merge request dfinity-lab/public/ic!16031"
      },
      {
        "id": "0f2736bc34a8f83c653486e57f257862f840d0f5",
        "date": "2023-11-14T16:43:05Z",
        "message": "refactor: p2p interfaces"
      },
      {
        "id": "fcfaad1eb0415b34311add82aa07f2530c7771c8",
        "date": "2023-11-10T20:48:46Z",
        "message": "Merge branch 'rumenov/ssytesdff' into 'master'\n\ntest: remove the mockall 0.7.x and 0.8.x versions\n\nIn addition the MR moves interfaces mocks from test_utilities to interfaces/mocks. \n\nSee merge request dfinity-lab/public/ic!16017"
      },
      {
        "id": "7fc91b5177c32333d5771b20fbaee5c62217c3bc",
        "date": "2023-11-10T20:48:46Z",
        "message": "test: remove the mockall 0.7.x and 0.8.x versions"
      },
      {
        "id": "22ce7636dc3dedf7ad64a8e0a920ccf9cae3ef93",
        "date": "2023-11-10T10:21:30Z",
        "message": "Merge branch 'rumenov/chessepmf' into 'master'\n\nchore: Remove the TimeSource usage in the artifact_pool in favour of consensus suppling the full mutation\n\nCurrently, only the consensus artifact pool uses the time_source to set the timestamp when an artifact is moved from unvalidated to validated. \nThe timestamp can be directly given as part of the whole mutation instead of having the artifact pool do an extra mutation to the passed in values.\n\nThis way we make the artifact pool agnostic to time and it is clearer that the on_stage_change call should provide the full mutation. \n\nSee merge request dfinity-lab/public/ic!15938"
      },
      {
        "id": "5e87f78d007cd54a486fd15e3da84226a451b0a5",
        "date": "2023-11-10T10:21:29Z",
        "message": "chore: Remove the TimeSource usage in the artifact_pool in favour of consensus suppling the full mutation"
      },
      {
        "id": "7f2ed411f716593c1cd5be0d94ea2c49e08f50c5",
        "date": "2023-11-08T16:02:50Z",
        "message": "Merge branch 'rumenov/realclock' into 'master'\n\nchore: introduce a \"RealClock\" that currently is used only by the backup pool.\n\nAs discussed with @chmllr the real clock is more appropriate for the backup pool. \n\nSee merge request dfinity-lab/public/ic!15968"
      },
      {
        "id": "75689f594314a0de38a12e90d4792670c19f8ee2",
        "date": "2023-11-08T16:02:50Z",
        "message": "chore: introduce a \"RealClock\" that currently is used only by the backup pool."
      },
      {
        "id": "8e4b824b0c5b7d6199d965e10a003c9c8466748f",
        "date": "2023-11-07T11:45:05Z",
        "message": "Merge branch 'rumenov/arpoltimerm' into 'master'\n\ntest: move the MockCertifiedStreamStore inside the packages that defines the interface trait\n\nThis is consistent with the other interface trait packages. \n\nSee merge request dfinity-lab/public/ic!15926"
      },
      {
        "id": "824fa47e040f7ce979943230af7aa922e16515d8",
        "date": "2023-11-07T11:45:04Z",
        "message": "test: move the MockCertifiedStreamStore inside the packages that defines the interface trait"
      },
      {
        "id": "2f12680cd3b84fdeb55beee6bdac9e9133c48a27",
        "date": "2023-11-07T10:33:42Z",
        "message": "Merge branch 'rumenov/trdodc' into 'master'\n\ndocs: Extend the quic transport documentation\n\n \n\nSee merge request dfinity-lab/public/ic!15909"
      },
      {
        "id": "c2a23592aabf73f77e76cd43d0fd37372287492f",
        "date": "2023-11-07T10:33:42Z",
        "message": "docs: Extend the quic transport documentation"
      },
      {
        "id": "4242d369d5e95a6b1bb15a109af40c6e264ea787",
        "date": "2023-11-07T08:13:01Z",
        "message": "Merge branch 'rumenov/moresussf' into 'master'\n\ntest: Use MockTimeSource instead of the SysTimeSource in tests which don't access the time.\n\nTo be explicit that the time is not accessed use MockTimeSource.\n\nFurthermore, SysTimeSource is a clock that needs to be used mostly only inside consensus. \n\nSee merge request dfinity-lab/public/ic!15900"
      },
      {
        "id": "e14d30e8f2d8e467e5e24d587db71973dea92f45",
        "date": "2023-11-07T08:13:00Z",
        "message": "test: Use MockTimeSource instead of the SysTimeSource in tests which don't access the time."
      },
      {
        "id": "d83ac4ba61b39ad5796fe3bf4b91cf0ab38119e7",
        "date": "2023-11-06T11:51:19Z",
        "message": "Merge branch 'rumenov/timessssss' into 'master'\n\ntest: limit the usage of SysTimeSource and TimeSource\n\nThe MR removes the usage of SysTimeSource in ECDSA, DKG and Certification tests since the time is not used at all there. \n\nSee merge request dfinity-lab/public/ic!15820"
      },
      {
        "id": "f3a7317eef1f9cf0699b92539f6b7561eba27c33",
        "date": "2023-11-06T11:51:18Z",
        "message": "test: limit the usage of SysTimeSource and TimeSource"
      },
      {
        "id": "16f3b2c5f2c771661a6b16693ce863a6cef20af4",
        "date": "2023-11-01T12:34:28Z",
        "message": "Merge branch 'rumenov/mutmrff' into 'master'\n\nchore: don't leak the consensus time across the stack.\n\nIdeally we have one place where consensus time is set and advanced. \nOtherwise we end-up using the consensus time throughout the stack. This can lead to undesired behaviour since the consensus time is advanced only every ~100 milliseconds. \n\nSee merge request dfinity-lab/public/ic!15774"
      },
      {
        "id": "c1ffd9845d2f5466a2be51814fd349fde33cc263",
        "date": "2023-11-01T12:34:28Z",
        "message": "chore: don't leak the consensus time across the stack."
      },
      {
        "id": "54592701d9f01bcfb30b7451cb0f73240e79183e",
        "date": "2023-11-01T10:38:55Z",
        "message": "Merge branch 'rumenov/ielashi/bitcoin_flakiness' into 'master'\n\ntest: fix bitcoin flakiness\n\n \n\nSee merge request dfinity-lab/public/ic!15777"
      },
      {
        "id": "abac6aa643034c5b339ee228c610744d10ae9252",
        "date": "2023-11-01T10:38:50Z",
        "message": "test: fix bitcoin flakiness"
      },
      {
        "id": "6b82119971f1c0d991ca1aa0635d162dc2c93dba",
        "date": "2023-10-30T13:17:41Z",
        "message": "Merge branch 'tim/transport-lfaky' into 'master'\n\ntest: mark transport tests as flaky.\n\nOthers reported that this test is flaky. This MR marks it as flaky. \n\nSee merge request dfinity-lab/public/ic!15696"
      },
      {
        "id": "7dbe6dc6a1ec007e06847cdef8ab7e16bafa25f3",
        "date": "2023-10-30T08:55:36Z",
        "message": "Merge branch 'rumenov/NET-1533' into 'master'\n\nrefactor: NET-1533 remove the redundant AllowClients type\n\nCloses NET-1533 \n\nCloses NET-1533\n\nSee merge request dfinity-lab/public/ic!15600"
      },
      {
        "id": "88dc685dc4173a3a72461c618d1afc093ab22e2d",
        "date": "2023-10-30T08:55:34Z",
        "message": "refactor: NET-1533 remove the redundant AllowClients type"
      },
      {
        "id": "dc09a9c339a6250e1d4a6b851903b995270dff96",
        "date": "2023-10-28T20:24:23Z",
        "message": "Merge branch 'rumenov/dontrelaychttpshares' into 'master'\n\nchore: don't relay canister http shares\n\nRelaying shares of the small feature results thousands artifacts generated for only few user http requests.\n\nDisabling shares should not impact correctness or security of the feature. \n\nSee merge request dfinity-lab/public/ic!15634"
      },
      {
        "id": "2c152d16ac9ee79bdf045f6226f8dbc154d33749",
        "date": "2023-10-28T20:24:23Z",
        "message": "chore: don't relay canister http shares"
      },
      {
        "id": "4ee333a48f9e48a22c3863ceea2ea2a5dc66e3a1",
        "date": "2023-10-28T09:32:58Z",
        "message": "Merge branch 'rumenov/rmvalded' into 'master'\n\nrefactor: move the ValidatedArtifact type to the consensus_pool module\n\nThe type is exclusively used by consensus so no point in being defined in the artifact_pool module which defines the API between consensus and P2P. \n\nSee merge request dfinity-lab/public/ic!15565"
      },
      {
        "id": "4b1d17e4195cdbd35c4c6b194936ad0481413d95",
        "date": "2023-10-28T09:32:58Z",
        "message": "refactor: move the ValidatedArtifact type to the consensus_pool module"
      },
      {
        "id": "79a6204712faa5b8a38c29c2b910c5c308b0ad96",
        "date": "2023-10-25T19:26:12Z",
        "message": "fix: ICSUP-3716 don't expose publicly the production NNS_SUBNET_ID"
      },
      {
        "id": "bf71350517235965b0fd232dc5d1d1514e258387",
        "date": "2023-10-25T16:46:31Z",
        "message": "Merge branch 'rumenov/testingddd' into 'master'\n\nchore: update the two dashboards to have the same json model as the prod dashboards\n\n \n\nSee merge request dfinity-lab/public/ic!15655"
      },
      {
        "id": "b887c1e883a214f428bb505cd42176c5082de8f9",
        "date": "2023-10-25T16:46:30Z",
        "message": "chore: update the two dashboards to have the same json model as the prod dashboards"
      },
      {
        "id": "62401dd27ca079ac9f7a6c4fa4ae9e2cf3c90e07",
        "date": "2023-10-25T12:01:41Z",
        "message": "Merge branch 'rumenov/CertifiedStateSnapshot' into 'master'\n\nrefator: rename CertifiedStateReader to CertifiedStateSnapshot\n\nAs discussed on the original MR\n\n> Because the internal data model in `StateReader` is incompatible with this API. All methods in `StateReader` access the latest state that changes under your feet, while CertifiedStateReader acts as a snapshot. Maybe I should have called this trait `CertifiedStateSnapshot` or something like that.\n\nCertifiedStateSnapshot is more appropriate given all the different traits that are suffixed by Reader. \n\nSee merge request dfinity-lab/public/ic!15630"
      },
      {
        "id": "8bf524f19f9739734852ef4a19e730f448b6b7c6",
        "date": "2023-10-25T12:01:39Z",
        "message": "refator: rename CertifiedStateReader to CertifiedStateSnapshot"
      },
      {
        "id": "62207d34aeb650da5876d8afc203c734f9bd3972",
        "date": "2023-10-24T21:59:41Z",
        "message": "Merge branch 'rumenov/systtte' into 'master'\n\ntest: use a small nns for the networking tests\n\n \n\nSee merge request dfinity-lab/public/ic!15612"
      },
      {
        "id": "fbf5d97fa1942a8aedfdac86996dd18eebc5242b",
        "date": "2023-10-24T21:59:39Z",
        "message": "test: use a small nns for the networking tests"
      },
      {
        "id": "301f5f2f4d8f5be93fee4883cc6e931ece816b92",
        "date": "2023-10-24T09:38:02Z",
        "message": "build: use the tokio version from the workspace"
      },
      {
        "id": "e4e3b1c5f15ccc832306307d435cf8773146c5af",
        "date": "2023-10-23T14:26:41Z",
        "message": "Merge branch 'tim/check-statesync-id-3' into 'master'\n\nfeat(state_sync_manager): prefer peers with fewer outstanding chunk requests\n\nAdd weighted sampling that favors peers with fewer outstanding request. This should improve downloading time since peers with capacity receive more load.\n\nBelow some experiment results.\n\nRequest rate per peer:\n\n![Screenshot 2023-09-19 at 17.41.31.png](/uploads/5ebf6582996265719db728457a06a967/Screenshot_2023-09-19_at_17.41.31.png)When syncing 100Gb it seems to do exactly what we want. Peer `229c,e48c,a083,2c5b` are close (5-10ms latency) while `bd15,acec,12ad,a338` are far away (100ms). Closer nodes receive more requests. Below it shows the inflight request per peer. One can see that here it is the opposite. Peers that are far away have more active request handlers.\n\n![Screenshot 2023-09-19 at 17.43.58.png](/uploads/6af58dbc23c0d9a3a75f724f22f658ab/Screenshot_2023-09-19_at_17.43.58.png) \n\nSee merge request dfinity-lab/public/ic!14875"
      },
      {
        "id": "3ea6236e949a90a4684007f25c4a653130fd646e",
        "date": "2023-10-23T13:46:12Z",
        "message": "Merge branch 'rumenov/rmtestchp' into 'master'\n\ntest: remove the legacy chunking test\n\nNow that we have a complete new statesync impl I believe this test is obsolete. \n\nSee merge request dfinity-lab/public/ic!15451"
      },
      {
        "id": "161803c5d5685d58049ffbbf972b5477924e8dbc",
        "date": "2023-10-23T13:46:12Z",
        "message": "test: remove the legacy chunking test"
      },
      {
        "id": "896c9017b83d29a42bafa76ed1c9180de1de1a1f",
        "date": "2023-10-23T08:03:20Z",
        "message": "Merge branch 'rumenov/dkgval' into 'master'\n\nchore: remove the optimization that delays the addition of validated DKG artifact to the block\n\n@ninegua did some experiments with/without and tunning the delay.\n\n> After testing with 3 scenarios: no delay, 10ms and 10s delays, I see practically no difference in the verification of DKG payload. All are about 0.15~0.17s for a 13 nodes network (with 100ms artificial latency between nodes imposed). (edited) \n\nSo the optimization is deemed not very useful\n\nhttps://dfinity.slack.com/archives/CGZF2NKGT/p1697874237668839?thread_ts=1697794688.020099&cid=CGZF2NKGT \n\nSee merge request dfinity-lab/public/ic!15528"
      },
      {
        "id": "646bf1c0e2b27ef6b992800f8cf843f966e934ee",
        "date": "2023-10-23T08:03:20Z",
        "message": "chore: remove the optimization that delays the addition of validated DKG artifact to the block"
      },
      {
        "id": "2e3589427cd9648d4edaebc1b96b5daf8fdd94d8",
        "date": "2023-10-22T21:08:19Z",
        "message": "Merge branch 'rumenov/rostirollback' into 'master'\n\nfix: Revert \"dbf1b2039d chore: Remove the filter templating and use directly the height\"\n\nThis reverts commit d1ac31621fca8d3251b851711d21d98c0f9aaddb. \n\nSee merge request dfinity-lab/public/ic!15538"
      },
      {
        "id": "249666a1c1a4ab8bc32a5bef0b3204c6606b8b93",
        "date": "2023-10-22T21:08:18Z",
        "message": "fix: Revert \"dbf1b2039d chore: Remove the filter templating and use directly the height\""
      },
      {
        "id": "876f47af79857f7606d4e989fcc7d038645a3573",
        "date": "2023-10-22T15:12:47Z",
        "message": "Merge branch 'rumenov/mvdkgint' into 'master'\n\nrefactor: move dkg traits and types from rs/interfaces to rs/consensus/src/dkg\n\nThe types are used only in that module/crate, not much point exposing them as public interface. \n\nSee merge request dfinity-lab/public/ic!15535"
      },
      {
        "id": "5e4fbbc599d1142edeb94b9b6d7ca928a67a635a",
        "date": "2023-10-22T15:12:47Z",
        "message": "refactor: move dkg traits and types from rs/interfaces to rs/consensus/src/dkg"
      },
      {
        "id": "d84a1cecd33efd585aa7d7997543b1fd4bd6da8b",
        "date": "2023-10-20T14:43:33Z",
        "message": "Merge branch 'rumenov/leorollback' into 'master'\n\nfix: Revert \"feat(consensus): CON-1087 Don't relay shares during retransmissions\"\n\nThis reverts commit d1ac31621fca8d3251b851711d21d98c0f9aaddb. \n\nSee merge request dfinity-lab/public/ic!15537"
      },
      {
        "id": "81c3647745f272746ffb8160f88cf71ad1634cf5",
        "date": "2023-10-20T14:43:33Z",
        "message": "fix: Revert \"feat(consensus): CON-1087 Don't relay shares during retransmissions\""
      },
      {
        "id": "52f1246b4b85c298c355a1d44cc84adb43d6bf22",
        "date": "2023-10-20T10:42:00Z",
        "message": "Merge branch 'rumenov/rnchangedstate' into 'master'\n\nrefactor: rename the 'change' field from the ChangeResult\n\n- changing slightly the semantics of the `changed` field of the `ChangeResult`, will enables us to simplify the artifact_manager furter. \n\nSee merge request dfinity-lab/public/ic!15510"
      },
      {
        "id": "d76d28c90daf71527cf856b48b245742f9da3409",
        "date": "2023-10-20T10:41:59Z",
        "message": "refactor: rename the 'change' field from the ChangeResult"
      },
      {
        "id": "42697c68c2c1c45a340d21d819d5127df1e8d669",
        "date": "2023-10-19T15:06:36Z",
        "message": "Merge branch 'rumenov/mvvalaer' into 'master'\n\nrefactor: move the IntoInner and HasTimestamp in the crate where they are actually used\n\nThe move reduces the official interface surface between P2P and consensus. \n\nSee merge request dfinity-lab/public/ic!15505"
      },
      {
        "id": "3123bf4141b00efc375476607eec15c108840ff0",
        "date": "2023-10-19T15:06:35Z",
        "message": "refactor: move the IntoInner and HasTimestamp in the crate where they are actually used"
      },
      {
        "id": "297f119a158aea339e375e4e1a7aadcdca226e6e",
        "date": "2023-10-19T13:28:45Z",
        "message": "Merge branch 'rumenov/canisterattributerm' into 'master'\n\nchore: remove the CanisterHttpAttribute and use the full share as the key of the pool\n\nExtend the key of the https outcalls pool to contain the full share.\nThis enables us to delete the attribute. \n\nSee merge request dfinity-lab/public/ic!15290"
      },
      {
        "id": "8e7a6f026e9cf606f3530882deda72000c9bec42",
        "date": "2023-10-19T13:28:45Z",
        "message": "chore: remove the CanisterHttpAttribute and use the full share as the key of the pool"
      },
      {
        "id": "6d8446ec97b4c75daaa005afe28a6133fa638ba2",
        "date": "2023-10-18T20:11:27Z",
        "message": "Merge branch 'rumenov/asscartik' into 'master'\n\nrefactor: remove unused traits impls from the consensus-p2p interface\n\n \n\nSee merge request dfinity-lab/public/ic!15472"
      },
      {
        "id": "f546c3e3cad06bb1c6a0745ee907f4e2c2d40367",
        "date": "2023-10-18T20:11:27Z",
        "message": "refactor: remove unused traits impls from the consensus-p2p interface"
      },
      {
        "id": "a6887bc3ef68ace29ed498faae40f01e1e60de2f",
        "date": "2023-10-18T12:18:42Z",
        "message": "Merge branch 'rumenov/trter' into 'master'\n\nrefactor: improve the consensus - networking API by making the generic ChangeSet an associated type\n\nAs an effect the ChangeSet type is completely hidden from networking. \n\nSee merge request dfinity-lab/public/ic!15438"
      },
      {
        "id": "db4114798c14269f1fb221474f74f39838f44a2c",
        "date": "2023-10-18T12:18:42Z",
        "message": "refactor: improve the consensus - networking API by making the generic ChangeSet an associated type"
      },
      {
        "id": "dffca174913946c60e2254bb54d52abd6c729106",
        "date": "2023-10-17T11:39:37Z",
        "message": "Merge branch 'rumenov/message_to_advert-generic' into 'master'\n\nrefactor: Implement From<...Message> for <...Id> instead of using custom conversions for all artifact types\n\n \n\nSee merge request dfinity-lab/public/ic!15415"
      },
      {
        "id": "06d32bda3e6dbcc2143dfabbc150155107c3f92a",
        "date": "2023-10-17T11:39:36Z",
        "message": "refactor: Implement From<...Message> for <...Id> instead of using custom conversions for all artifact types"
      },
      {
        "id": "f401c7177dfa34c8f32b959af1e7397b696728e7",
        "date": "2023-10-10T13:03:56Z",
        "message": "Merge branch 'rumenov/dkg1' into 'master'\n\nchore: CON-1141 Add the starting interval height as part of the DkgMessageId key used for the in-memory poll\n\nThe MR extends the key used for the in-memory dkg pool by adding the interval starting height. \n\nI am proposing the change for the following reasons:\n- It is consistent with the consensus and certifications keys. Both contain the height.\n- It enables the removal of the DkgMessageAttribute type\n- Purging of the dkg pool can be done only by filtering keys. \n\nSee merge request dfinity-lab/public/ic!15259"
      },
      {
        "id": "1674515b64d5a7526a2de4f8225c0446a544b396",
        "date": "2023-10-10T13:03:55Z",
        "message": "chore: CON-1141 Add the starting interval height as part of the DkgMessageId key used for the in-memory poll"
      },
      {
        "id": "30757b561ea549ec6cd03798a73053f256ea92cd",
        "date": "2023-10-09T08:40:07Z",
        "message": "Merge branch 'rumenov/rmatred' into 'master'\n\nrefactor: remove redundant attributes\n\nThe change should not change the semantics of the code. It just reuses the height from the id, instead of the attribute \n\nSee merge request dfinity-lab/public/ic!15252"
      },
      {
        "id": "4ebf741d6e8e39210b3f500ba7781f58e65b57ce",
        "date": "2023-10-09T08:40:07Z",
        "message": "refactor: remove redundant attributes"
      },
      {
        "id": "d1902ac0eea776654cdff0c0433f157f0462d79d",
        "date": "2023-10-09T08:29:17Z",
        "message": "Merge branch 'rumenov/addhstmesf' into 'master'\n\nchore: instead of having counters for total and count use a histogram\n\nHaving a histogram will gives us insight on the distribution of the message size as well. \n\nSee merge request dfinity-lab/public/ic!15251"
      },
      {
        "id": "fb8d57ee0cfc971c510802f5cac20d546223a53f",
        "date": "2023-10-09T08:29:17Z",
        "message": "chore: instead of having counters for total and count use a histogram"
      },
      {
        "id": "f8198af124d7a62f463da8e0fd3e44c9b20eae0e",
        "date": "2023-10-05T10:41:15Z",
        "message": "Merge branch 'rumenov/useproto' into 'master'\n\nrefactor: remove serde serialization for attributes\n\nNow that we have protobufs for all attributes, make it explicit that we should not be using serde serialization \n\nSee merge request dfinity-lab/public/ic!15211"
      },
      {
        "id": "d48263ee2252aa780a0363857667ba73bcb0ca0e",
        "date": "2023-10-05T10:41:15Z",
        "message": "refactor: remove serde serialization for attributes"
      },
      {
        "id": "7d0bbfbf630a208e6e5d4cabcbc5fbd595643906",
        "date": "2023-10-05T07:57:49Z",
        "message": "Merge branch 'rumenov/mvbod' into 'master'\n\nrefactor: move out the body receiver service out of the endpoint services\n\n \n\nSee merge request dfinity-lab/public/ic!15210"
      },
      {
        "id": "95a2b09245542f5ccca1a2ddf3435c34584a6f8e",
        "date": "2023-10-05T07:57:49Z",
        "message": "refactor: move out the body receiver service out of the endpoint services"
      },
      {
        "id": "1718379fec47a87ed1191deb80b05fda714756db",
        "date": "2023-10-04T21:33:32Z",
        "message": "Merge branch 'rumenov/mvtimeout' into 'master'\n\nfix: the connection_setup_duration counter and use the more efficient bytes instead of vec<u8>\n\nthe connection_setup_duration metric was calculated in a wrong fashion - observations were made after the connection was closed instead of before serving. \n\nSee merge request dfinity-lab/public/ic!15197"
      },
      {
        "id": "149566319a6eb8e0dee9ae02bb132f3befa434c0",
        "date": "2023-10-04T21:33:31Z",
        "message": "fix: the connection_setup_duration counter and use the more efficient bytes instead of vec<u8>"
      },
      {
        "id": "339f8d970ad24c01fa19d6f90e5d6fdc3e30bada",
        "date": "2023-10-02T09:09:06Z",
        "message": "Merge branch 'rumenov/cargocl' into 'master'\n\nrefactor: run cargo clippy fix on the repository\n\n \n\nSee merge request dfinity-lab/public/ic!15085"
      },
      {
        "id": "fdffb2bad4c5db433ce9fbd68b455828fad8a400",
        "date": "2023-10-02T09:09:06Z",
        "message": "refactor: run cargo clippy fix on the repository"
      },
      {
        "id": "f7eb149d02031eca2a092d9dc3bbffa67b804dc5",
        "date": "2023-10-02T08:54:25Z",
        "message": "Merge branch 'rumenov/rmfilt' into 'master'\n\nchore: Remove the filter templating and use directly the height\n\nThere is way to much indirection for the filter concept given the filter is just the height and I am not aware of any future plans of changing this. \n\nSee merge request dfinity-lab/public/ic!15084"
      },
      {
        "id": "dbf1b2039d5ff8ae7c798e96741ca496477d0f01",
        "date": "2023-10-02T08:54:24Z",
        "message": "chore: Remove the filter templating and use directly the height"
      },
      {
        "id": "423f17976070f91353a817ee234b68284094b6e0",
        "date": "2023-09-30T19:54:40Z",
        "message": "Merge branch 'rumenov/certattr' into 'master'\n\nchore: remove the redundant CertificationMessageAttribute.\n\nThe height used by the priority function is also present in the id. No need to pass redundant data over the wire. \n\nSee merge request dfinity-lab/public/ic!15066"
      },
      {
        "id": "4958d852624609e1518880ae4d2df1906d68e79b",
        "date": "2023-09-30T19:54:40Z",
        "message": "chore: remove the redundant CertificationMessageAttribute."
      },
      {
        "id": "2b0892b58dfbd6104b323d3444584ac7bd32df3b",
        "date": "2023-09-29T17:58:26Z",
        "message": "Merge branch 'rumenov/rmcryptoattr' into 'master'\n\nrefactor: remove unused attributes\n\n \n\nSee merge request dfinity-lab/public/ic!15058"
      },
      {
        "id": "273ff988f0547cd5b384d96e9d9cc8d87028c8c6",
        "date": "2023-09-29T17:58:26Z",
        "message": "refactor: remove unused attributes"
      },
      {
        "id": "579e1558ba7e03d6e786593fd6ed14dcd851ffae",
        "date": "2023-09-28T12:11:53Z",
        "message": "Merge branch 'rumenov/NET-1369' into 'master'\n\nchore: NET-1369 remove the earliest timestamp from the SEV attestation handshake\n\nThe MR removes the earliest registry timestamp from the SEV attestation version.\nIMHO, the TLS and SEV handshake should more or less have similar signatures i.e. the latest registry timestamp.\n\nAlso removing the timestamp now can prevent further confusion what logic should be exactly performed inside the SEV attestation code.\n\nI know the earliest time was added to bypass some failing system tests, however, now I see that the whole code is just unconditionally ignored.\n\nCloses NET-1369 \n\nCloses NET-1369\n\nSee merge request dfinity-lab/public/ic!14802"
      },
      {
        "id": "8f58a0bb0ad4f387c25d598469d0cf7fa4305d42",
        "date": "2023-09-28T12:11:53Z",
        "message": "chore: NET-1369 remove the earliest timestamp from the SEV attestation handshake"
      },
      {
        "id": "5e02dc012a3118ed76bb7099663c8dc6a5079f9c",
        "date": "2023-09-27T12:49:11Z",
        "message": "Merge branch 'rumenov/rrt' into 'master'\n\nfix: NET-1559  introduce a dedicated tokio runtime for P2P\n\n \n\nCloses NET-1559\n\nSee merge request dfinity-lab/public/ic!15023"
      },
      {
        "id": "3e72f3af83ccf44007bec897535d6a6d8cad3e65",
        "date": "2023-09-27T12:49:11Z",
        "message": "fix: NET-1559  introduce a dedicated tokio runtime for P2P"
      },
      {
        "id": "f11d7a0b4a21046bb7fa961de46d4c0282a019ad",
        "date": "2023-09-27T09:53:03Z",
        "message": "Merge branch 'rumenov/watermarktest' into 'master'\n\nchore: remove the unused RemoveFromValidated from the set of ChangeActions\n\nI am not sure if there are plans to ever use the RemoveFromValidated action. If not maybe let's remove it. \n\nSee merge request dfinity-lab/public/ic!14850"
      },
      {
        "id": "6c08a277c57fbe898749b850c47b422f523ddf1d",
        "date": "2023-09-27T09:53:02Z",
        "message": "chore: remove the unused RemoveFromValidated from the set of ChangeActions"
      },
      {
        "id": "05bd2099d9da8022a24da6b8e38bbe3779f3662b",
        "date": "2023-09-25T11:57:28Z",
        "message": "Merge branch 'rumenov/transport_req' into 'master'\n\ndocs: add the initial version of the transport design readme\n\n \n\nSee merge request dfinity-lab/public/ic!14653"
      },
      {
        "id": "7216f303e335979fa7d2d779f70d0f276436c686",
        "date": "2023-09-25T11:57:28Z",
        "message": "docs: add the initial version of the transport design readme"
      },
      {
        "id": "c365dc51cd48a07f1daa8ec85dfc6a76364d8fce",
        "date": "2023-09-25T10:49:46Z",
        "message": "Merge branch 'rumenov/smaasuc' into 'master'\n\nchore: remove redundant/unused code\n\n \n\nSee merge request dfinity-lab/public/ic!14920"
      },
      {
        "id": "63057f7a56a75c7d070f89d5d802825acd8298f5",
        "date": "2023-09-25T10:49:44Z",
        "message": "chore: remove redundant/unused code"
      },
      {
        "id": "13d02270dc39dd21f5bc1ae1a21c29554df156ac",
        "date": "2023-09-25T07:48:53Z",
        "message": "refactor: use the workspace for prost-build and bytes crate version"
      },
      {
        "id": "27d80069d636f8dd1e70ad569049a8e85698e9ff",
        "date": "2023-09-22T21:26:59Z",
        "message": "Merge branch 'rumenov/futreff' into 'master'\n\nchore: use the global workspace for the version of the futures crate\n\n \n\nSee merge request dfinity-lab/public/ic!14943"
      },
      {
        "id": "78836a179ad4368805091667a1b80e69815da7fd",
        "date": "2023-09-22T21:26:58Z",
        "message": "chore: use the global workspace for the version of the futures crate"
      },
      {
        "id": "9371e6fbd8340adb1a2e8bf7741c29044f122056",
        "date": "2023-09-22T08:08:59Z",
        "message": "chore: use the global workspace for deriving the prost version"
      },
      {
        "id": "23674376952e9e17b9a866911f4e2f0d165ccc96",
        "date": "2023-09-21T21:20:15Z",
        "message": "Merge branch 'rumenov/qeuin' into 'master'\n\nbuild: SCAVM-626 update quinn\n\n \n\nSee merge request dfinity-lab/public/ic!14933"
      },
      {
        "id": "9214121fdec59fce81c378a72050b9ea5399de44",
        "date": "2023-09-21T21:20:14Z",
        "message": "build: SCAVM-626 update quinn"
      },
      {
        "id": "65bed45cd9dcdb0e01384d6fe8c55406230fbc02",
        "date": "2023-09-20T15:59:21Z",
        "message": "Merge branch 'rumenov/toweuppp' into 'master'\n\nchore: use tower from the workspace\n\n \n\nSee merge request dfinity-lab/public/ic!14871"
      },
      {
        "id": "52df8696a3fd70a115cac58347308fc68e7d3a75",
        "date": "2023-09-20T15:59:19Z",
        "message": "chore: use tower from the workspace"
      },
      {
        "id": "5bc015c6af104791eb4a507820e3677d36c99b7e",
        "date": "2023-09-20T13:58:12Z",
        "message": "Merge branch 'rumenov/statesyncdoc' into 'master'\n\nchore: add some p2p readmes and delete the experimental directory\n\n \n\nSee merge request dfinity-lab/public/ic!14873"
      },
      {
        "id": "9283d497c63b92da59c965ebcdff65a5682e3946",
        "date": "2023-09-20T13:58:09Z",
        "message": "chore: add some p2p readmes and delete the experimental directory"
      },
      {
        "id": "0890bd1e9cfaaa0fffdade2bc4397130250acde7",
        "date": "2023-09-20T13:49:49Z",
        "message": "Merge branch 'rumenov/renfff' into 'master'\n\nchore: rename get_transport_info to get_node_record\n\nget_transport_info is very misleading given the data being returned\n\nthis naming is an artifact from the times when the node record contained only transport data but this is not the case anymore \n\nSee merge request dfinity-lab/public/ic!14803"
      },
      {
        "id": "b827695ead8859631380aa1a2c1936d353d9c849",
        "date": "2023-09-20T13:49:49Z",
        "message": "chore: rename get_transport_info to get_node_record"
      },
      {
        "id": "81f89f41dea916a1894b6f8311e5ef9dbfe3fe09",
        "date": "2023-09-19T11:40:13Z",
        "message": "Merge branch 'rumenov/rmfetradr' into 'master'\n\nchore: do some small readability  changes\n\n \n\nSee merge request dfinity-lab/public/ic!14866"
      },
      {
        "id": "4455a7ec8a67c99c24f75b378a26f9b9ada60cfc",
        "date": "2023-09-19T11:40:12Z",
        "message": "chore: do some small readability  changes"
      },
      {
        "id": "28d89cb1a099b41330724779c69494729c21d350",
        "date": "2023-09-18T19:03:34Z",
        "message": "Merge branch 'rumenov/transpeede' into 'master'\n\nchore: remove unused deps\n\n \n\nSee merge request dfinity-lab/public/ic!14816"
      },
      {
        "id": "fc15b2bd3ca0c58a8aa8a2a50bf5d2390984c88b",
        "date": "2023-09-18T19:03:34Z",
        "message": "chore: remove unused deps"
      },
      {
        "id": "c41bc484dd2760e42edc8d0ad5f574e04c0d0221",
        "date": "2023-09-14T11:47:04Z",
        "message": "Merge branch 'rumenov/updjejfhfh' into 'master'\n\nchore: upgrade the prost, tonic and pprof versions\n\n \n\nSee merge request dfinity-lab/public/ic!14765"
      },
      {
        "id": "1fa41bdfcef0e7fbf331acf1e618d6c7044e7db5",
        "date": "2023-09-14T11:47:04Z",
        "message": "chore: upgrade the prost, tonic and pprof versions"
      },
      {
        "id": "26098e18ddd64ab50d3f3725f50c7f369cd3f90e",
        "date": "2023-09-12T15:30:42Z",
        "message": "Merge branch 'rumenov/bastyrptoge' into 'master'\n\nfix: fix the two broken protobuf gen scripts\n\nthe gen folder should be inside src/ looking by inspecting the existing code \n\nSee merge request dfinity-lab/public/ic!14729"
      },
      {
        "id": "9943fbb21ed180b6e549dc0d2f6cd1c76d28886f",
        "date": "2023-09-12T15:30:42Z",
        "message": "fix: fix the two broken protobuf gen scripts"
      },
      {
        "id": "0dd3fe15b40fc478e36b0625e072c76c2cac28ba",
        "date": "2023-09-12T10:35:33Z",
        "message": "Merge branch 'rumenov/ogbfjer' into 'master'\n\nchore: remove unused witness field\n\n \n\nSee merge request dfinity-lab/public/ic!14667"
      },
      {
        "id": "172766a8400f714dcc068d2c7611accbc6bd3b72",
        "date": "2023-09-12T10:35:33Z",
        "message": "chore: remove unused witness field"
      },
      {
        "id": "f6d7c48939f48dcbd55559694e08abcd5bed5561",
        "date": "2023-09-11T09:16:47Z",
        "message": "Merge branch 'rumenov/updex' into 'master'\n\nchore: update bytes and tokio metrics crates\n\n \n\nSee merge request dfinity-lab/public/ic!14707"
      },
      {
        "id": "c60ded1af257da39810eeebe3db541ba46120de5",
        "date": "2023-09-11T09:16:45Z",
        "message": "chore: update bytes and tokio metrics crates"
      },
      {
        "id": "9e979a20df53e8dc6cb33ea3d20b2602dcdcf31c",
        "date": "2023-09-08T13:20:07Z",
        "message": "Merge branch 'rumenov/rmfffepp2p24444' into 'master'\n\nchore: delete dead p2p code\n\n \n\nSee merge request dfinity-lab/public/ic!14628"
      },
      {
        "id": "e9c7d756b5068754efd5571326ad49d979c509ca",
        "date": "2023-09-08T13:20:06Z",
        "message": "chore: delete dead p2p code"
      },
      {
        "id": "a53e3fcfa2eadceda5d47439a01d85fa4a802008",
        "date": "2023-09-08T06:30:26Z",
        "message": "upgrade tokio to the 1.32.x LTS release"
      },
      {
        "id": "4684df8fbd4ce155aec416c54ebde7a935a49ec2",
        "date": "2023-09-07T20:32:28Z",
        "message": "Merge branch 'rumenov/tlsrmunp' into 'master'\n\nchore: Do not panic in an empty list is passed as allowed clients when TLS handshakes are performed.\n\nThe semantics of how we do handhshakes changed a bit with the new QUIC implementation. Before we would access the allowed set of clients after a TCP stream is accepted. Now, the list of allowed clients needs to be known before a QUIC connection is accepted. So creating a QUIC endpoint is much easier in some corner cases when a node doesn't have any peers. \n\nSee merge request dfinity-lab/public/ic!14401"
      },
      {
        "id": "3550f9abfc313da7aa694a764f2d1e200fb8c8f9",
        "date": "2023-09-07T20:32:27Z",
        "message": "chore: Do not panic in an empty list is passed as allowed clients when TLS handshakes are performed."
      },
      {
        "id": "18b0057b78cbbab4ff08aaffb2cc712e0146c12a",
        "date": "2023-09-04T08:36:38Z",
        "message": "Merge branch 'rumenov/terfe' into 'master'\n\nfix: NET-398 extend the TransportError to account for coding errors and big requests\n\nI also added a comment about the buffer of requests in case of a slow handler. \n\nCloses NET-398\n\nSee merge request dfinity-lab/public/ic!14506"
      },
      {
        "id": "fcecaf6f4c3f161d1a611a4a60a4cbfca6f1b2dd",
        "date": "2023-09-04T08:36:38Z",
        "message": "fix: NET-398 extend the TransportError to account for coding errors and big requests"
      },
      {
        "id": "3f7ec0a56573e1e1408cb7b6fb5e6ddbb193cc7d",
        "date": "2023-08-29T16:41:51Z",
        "message": "Merge branch 'rumenov/httper' into 'master'\n\nchore: improve readability of the http handler\n\nbetter decouple the handshake and serving parts\n\nthis MR is makes it easier to add http and https services in order to restrict access to some endpoints \n\nSee merge request dfinity-lab/public/ic!14409"
      },
      {
        "id": "33fc76c7bb1a7f759a6b0190e3d4dcf912d4dfd4",
        "date": "2023-08-29T16:41:50Z",
        "message": "chore: improve readability of the http handler"
      },
      {
        "id": "4258f027af9975bdfb8b2abea5e78d06123daaba",
        "date": "2023-08-25T16:52:17Z",
        "message": "Merge branch 'rumenov/mfef' into 'master'\n\ndocs: update docs and improve readability a little\n\n \n\nSee merge request dfinity-lab/public/ic!14375"
      },
      {
        "id": "404c96455b810bbae43f06d06ccc9e8b5129a273",
        "date": "2023-08-25T16:52:15Z",
        "message": "docs: update docs and improve readability a little"
      },
      {
        "id": "d56a7d85fa52b1e7d64d677f47602d7fe65f012c",
        "date": "2023-08-23T17:33:21Z",
        "message": "chore: update criterion to 0.5"
      },
      {
        "id": "ddefb4a20c6c0efb3e0c8f3ce4bfebed40fa2790",
        "date": "2023-08-22T09:11:53Z",
        "message": "Merge branch 'rumenov/trpoll' into 'master'\n\nchore: do some polishing of the quic transport\n\n \n\nSee merge request dfinity-lab/public/ic!14302"
      },
      {
        "id": "ca4ce496f2ad330328607133995a605334c5b882",
        "date": "2023-08-22T09:11:53Z",
        "message": "chore: do some polishing of the quic transport"
      },
      {
        "id": "3de316663b886555ed7ef14bbbbf17f85954b018",
        "date": "2023-08-22T07:40:56Z",
        "message": "Merge branch 'stefan/826-network_reliability' into 'master'\n\nchore[NET-826]: test using absolute number of successful requests\n\n \n\nSee merge request dfinity-lab/public/ic!14190"
      },
      {
        "id": "0d3efae939b5dcaa78784c72386915d1234a25e6",
        "date": "2023-08-21T17:01:15Z",
        "message": "Merge branch 'rumenov/utrm' into 'master'\n\nchore: remove dead code\n\n \n\nSee merge request dfinity-lab/public/ic!14270"
      },
      {
        "id": "07c9e80a06d8a10f571b74e319526ab50345835e",
        "date": "2023-08-21T17:01:15Z",
        "message": "chore: remove dead code"
      },
      {
        "id": "09edde6a2cba93ca6690d5888f8fd69ca95493d7",
        "date": "2023-08-21T16:05:55Z",
        "message": "Merge branch 'rumenov/NET-1296' into 'master'\n\nfix: NET-1296 add graceful shutdown of the P2P event loops\n\n- The MR merges the tick and advert event loops\n- The MR switch the tokio advert channel to crossbeam channel because most likely this is what we will use on the send side of the new protocol\n\nThere have been multiple MRs removing the circular dependancy between the artifact pool and P2P. This is the last one - both the artifact manager and P2P are created without a circular dep and they are destroyed when the JoinGuard is dropped.\n\nCloses NET-1296 \n\nCloses NET-1296\n\nSee merge request dfinity-lab/public/ic!14257"
      },
      {
        "id": "2c71c079bc55f26156cc498a365fb0aa61629830",
        "date": "2023-08-21T16:05:54Z",
        "message": "fix: NET-1296 add graceful shutdown of the P2P event loops"
      },
      {
        "id": "9961ed4f1e3c575d228aace00116c68a6e4b8cbe",
        "date": "2023-08-18T22:49:19Z",
        "message": "Merge branch 'rumenov/morefjfhr' into 'master'\n\nchore: remove further the dependency on the ArtifactManagerBackend when constructing the consensus stack.\n\nThis way the new P2P protocol can just use the internal ArtifactClient trait. \n\nSee merge request dfinity-lab/public/ic!14248"
      },
      {
        "id": "3d01690976ac3d79fc3969886475d1324d011ff3",
        "date": "2023-08-18T22:49:19Z",
        "message": "chore: remove further the dependency on the ArtifactManagerBackend when constructing the consensus stack."
      },
      {
        "id": "adf1ef5464a7e551240a0d37f1fec025d3e9abe1",
        "date": "2023-08-18T10:19:42Z",
        "message": "Merge branch 'rumenov/emdfe' into 'master'\n\nchore: construct the P2P and consensus stacks in order\n\nThe idea is that there is a single section of code that needs to be commented out when enabling the new P2P protocols. \n\nSee merge request dfinity-lab/public/ic!14217"
      },
      {
        "id": "8fbd87dd20ab36bc4b44a51c8f3abd369f4b2c26",
        "date": "2023-08-18T10:19:42Z",
        "message": "chore: construct the P2P and consensus stacks in order"
      },
      {
        "id": "09074aebd8df6120c635acdcf3224c8df7adee8f",
        "date": "2023-08-18T09:41:25Z",
        "message": "Merge branch 'rumenov/rollba' into 'master'\n\nRevert \"chore: delete obsolete bash based test script\"\n\nThis reverts commit 83787ac8a733cc5b99c6b097f08820b0521d2cfa.\n\nSpending sometime debugging flaky system tests I don't think we are ready to revert this script. The usability of system tests is not where I would like to be and some tasks are very complicated. \n\nSee merge request dfinity-lab/public/ic!14240"
      },
      {
        "id": "f146f744b21dc7060e667bccc7af396d528ae263",
        "date": "2023-08-18T09:41:25Z",
        "message": "Revert \"chore: delete obsolete bash based test script\""
      },
      {
        "id": "21b04b978840f77e87431aa9d4dca3ffdefea09b",
        "date": "2023-08-17T16:10:29Z",
        "message": "Merge branch 'rumenov/fjrer' into 'master'\n\nchore: remove the AdvertBroadcaster\n\nRemoving it allows us to have a bit more standard interface between the artifact manager and P2P (just a simple advert channel).\n\nFurthermore, according to the metric there have no [congestions](https://prometheus.mainnet.dfinity.network/graph?g0.expr=p2p_client_congested_adverts_total%7Bic%3D%22mercury%22%7D&g0.tab=0&g0.stacked=0&g0.show_exemplars=0&g0.range_input=4w) of adverts \n\nwhich is actually expected because transport will drop stuff if the queue is full. \n\nSee merge request dfinity-lab/public/ic!14205"
      },
      {
        "id": "24e3256b842bab7f01e083c5e1981c6bfe6b8bd6",
        "date": "2023-08-17T16:10:27Z",
        "message": "chore: remove the AdvertBroadcaster"
      },
      {
        "id": "51be0dfd798acb75740341c148e168d8314488b0",
        "date": "2023-08-16T20:57:47Z",
        "message": "Merge branch 'rumenov/ffjrjr' into 'master'\n\nchore: add metrics for the number of generated artifacts and their size\n\n \n\nSee merge request dfinity-lab/public/ic!14167"
      },
      {
        "id": "47d242d4570953a30df056e557469a91f597d69c",
        "date": "2023-08-16T20:57:46Z",
        "message": "chore: add metrics for the number of generated artifacts and their size"
      },
      {
        "id": "634bc6406d835595f48ece78a333ad7847260315",
        "date": "2023-08-14T13:50:44Z",
        "message": "test: remove the https outcalls non hermetic test"
      },
      {
        "id": "2203fd022b801c769e0e70c24ac63721eef93b6d",
        "date": "2023-08-14T12:19:27Z",
        "message": "Merge branch 'rumenov/updatedde' into 'master'\n\nbuild: use the most recent version of indicatif\n\nin addition allow version upgrade of wiremock and insta when re-pinning \n\nSee merge request dfinity-lab/public/ic!14138"
      },
      {
        "id": "e06f95639f4e36b7bf990f855d028f64df49d14a",
        "date": "2023-08-14T12:19:25Z",
        "message": "build: use the most recent version of indicatif"
      },
      {
        "id": "f222a9f17432f1c878dccaaf38c2268850716b43",
        "date": "2023-08-14T09:56:18Z",
        "message": "test: remove the two_third_latency_test.rs system test"
      },
      {
        "id": "1d39dd5ebc4609c635f641bb2ead791cd283c610",
        "date": "2023-08-14T09:21:23Z",
        "message": "Merge branch 'rumenov/rmfadsfe' into 'master'\n\nchore: move the advert/artifact check inside P2P\n\nMoving the check into the legacy code because in the new P2P it actually doesn't make sense.\n\nIn the old P2P, we receive a messages over TCP and we need to look up the corresponding advert from the in-memory data structures so we can connect the advert with the artifact.\n\nIn the new P2P since we will be doing RPC style downloading of artifacts such type of look up is not really necessary. \n\nSee merge request dfinity-lab/public/ic!14053"
      },
      {
        "id": "63a45549c392d17a6fd0ca0b483413beef39c0e6",
        "date": "2023-08-14T09:21:22Z",
        "message": "chore: move the advert/artifact check inside P2P"
      },
      {
        "id": "90848777c7cdf0ae12c863845b9ce15bc0987b13",
        "date": "2023-08-10T20:13:26Z",
        "message": "Merge branch 'rumenov/fnerh' into 'master'\n\ndocs: Remove implementation sections\n\n \n\nSee merge request dfinity-lab/public/ic!14100"
      },
      {
        "id": "bbde3725c0d778ad2294217de55c4ccc56f33afd",
        "date": "2023-08-10T20:13:25Z",
        "message": "docs: Remove implementation sections"
      },
      {
        "id": "173503933c6e3b94e62a7a9d241ed298f67a44f4",
        "date": "2023-08-10T14:35:58Z",
        "message": "Merge branch 'rumenov/updateralmd' into 'master'\n\nNET-1277 update the design principles of the http servers including section for rate limiting\n\n \n\nSee merge request dfinity-lab/public/ic!14082"
      },
      {
        "id": "d49639e5a3bf622856bb96955cd1989d78cc0f5e",
        "date": "2023-08-10T14:35:58Z",
        "message": "NET-1277 update the design principles of the http servers including section for rate limiting"
      },
      {
        "id": "158d1961f406a786df37dfcb96ea97c4c009adaa",
        "date": "2023-08-09T15:14:10Z",
        "message": "chore: remove unused deps"
      },
      {
        "id": "ff6f7317cda9529ec1dec5a81d5ed3bd2e593880",
        "date": "2023-08-08T15:02:13Z",
        "message": "Merge branch 'rumenov/fejfer' into 'master'\n\nchore: Remove old transaction as part of the advertising call\n\nThe rest of the MR is renaming to capture the intent of modules and structs better. \n\nSee merge request dfinity-lab/public/ic!13859"
      },
      {
        "id": "1bea3a0297e4fa0e0581cc6fbc94625ed54c3c40",
        "date": "2023-08-08T15:02:13Z",
        "message": "chore: Remove old transaction as part of the advertising call"
      },
      {
        "id": "4fe964ebca0edb862535cd2b0957273b3ac535c2",
        "date": "2023-08-08T14:41:18Z",
        "message": "Merge branch 'stefan/non_routable_ip' into 'master'\n\nfix: force artificial timeout using a non routable IP address\n\nThe `initialization_times_out_after_five_seconds` test makes use of a non routable IP address to simulate an unresponsive peer and force a timeout in `Stream::connect`.\n\nA non routable IP is unreachable over the public internet. \n\nSee merge request dfinity-lab/public/ic!14017"
      },
      {
        "id": "0a393efe3fc545f49e8d68b17d33eb031c841219",
        "date": "2023-08-08T10:02:34Z",
        "message": "Merge branch 'stefan/failing_connection_test' into 'master'\n\nfix: disable failing bitcoin adapter timeout test\n\n`initialization_times_out_after_five_seconds` was simulating an unresponsive peer by using a non routable ip address. This is wrong and the test now fails. \n\nSee merge request dfinity-lab/public/ic!14015"
      },
      {
        "id": "5b8bc8a8157d6465d011c3365878253fdbee0c8f",
        "date": "2023-08-07T14:33:00Z",
        "message": "chore: NET-1492 remove the prometheus-parse dep"
      },
      {
        "id": "461d4383473548355c9f30d6fb982b3218afa937",
        "date": "2023-08-07T12:23:09Z",
        "message": "Merge branch 'rumenov/rmbfr' into 'master'\n\ntest: remove unused execution benchmark\n\n \n\nSee merge request dfinity-lab/public/ic!13991"
      },
      {
        "id": "cdec393c293ef34e17f986558cf258cf215a1440",
        "date": "2023-08-07T12:23:09Z",
        "message": "test: remove unused execution benchmark"
      },
      {
        "id": "fcfd7f866d128e3d0e5b155463f3acf1d6c12f09",
        "date": "2023-08-07T11:18:26Z",
        "message": "Merge branch 'rumenov/fkferf' into 'master'\n\nchore: NET-1370 remove the onchain observability feature code\n\n \n\nSee merge request dfinity-lab/public/ic!13550"
      },
      {
        "id": "1bcf27e62d2bfd115a953241d5195fcca0182bc7",
        "date": "2023-08-07T11:18:25Z",
        "message": "chore: NET-1370 remove the onchain observability feature code"
      }
    ],
    "email": "rostislav.rumenov@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 172,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 83,
    "fixes": 11,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "fd0ac2fa4461241481b31155d5c870cd96bd0cc9",
        "date": "2023-11-22T14:04:55Z",
        "message": "refactor: remove rs/experimental"
      },
      {
        "id": "830feb65804d9e857d10d0663e46deaca21cfd04",
        "date": "2023-11-22T07:11:48Z",
        "message": "chore: upgrade prost to 0.12 and tonic to 0.10"
      },
      {
        "id": "c69a2068640a3df0e9731518d06f46bf95461acd",
        "date": "2023-11-20T17:44:31Z",
        "message": "chore: remove un-existing destinations from the owners file"
      },
      {
        "id": "5946332f1df13eb6b7f2fbafc4b76022f54e6f0d",
        "date": "2023-11-20T13:43:53Z",
        "message": "chore: NET-1330 enable https outcalls on all newly created subnets"
      },
      {
        "id": "86f5d06e2cf5aefbb4f37123f6bc020195cb7876",
        "date": "2023-11-20T10:58:59Z",
        "message": "chore: remove the policy monitoring code"
      },
      {
        "id": "d0d02d41a8efb51b1118fe1447e522ae537749c0",
        "date": "2023-11-17T13:32:48Z",
        "message": "build: fix few build dependencies"
      },
      {
        "id": "0f2736bc34a8f83c653486e57f257862f840d0f5",
        "date": "2023-11-14T16:43:05Z",
        "message": "refactor: p2p interfaces"
      },
      {
        "id": "7fc91b5177c32333d5771b20fbaee5c62217c3bc",
        "date": "2023-11-10T20:48:46Z",
        "message": "test: remove the mockall 0.7.x and 0.8.x versions"
      },
      {
        "id": "5e87f78d007cd54a486fd15e3da84226a451b0a5",
        "date": "2023-11-10T10:21:29Z",
        "message": "chore: Remove the TimeSource usage in the artifact_pool in favour of consensus suppling the full mutation"
      },
      {
        "id": "75689f594314a0de38a12e90d4792670c19f8ee2",
        "date": "2023-11-08T16:02:50Z",
        "message": "chore: introduce a \"RealClock\" that currently is used only by the backup pool."
      },
      {
        "id": "824fa47e040f7ce979943230af7aa922e16515d8",
        "date": "2023-11-07T11:45:04Z",
        "message": "test: move the MockCertifiedStreamStore inside the packages that defines the interface trait"
      },
      {
        "id": "c2a23592aabf73f77e76cd43d0fd37372287492f",
        "date": "2023-11-07T10:33:42Z",
        "message": "docs: Extend the quic transport documentation"
      },
      {
        "id": "e14d30e8f2d8e467e5e24d587db71973dea92f45",
        "date": "2023-11-07T08:13:00Z",
        "message": "test: Use MockTimeSource instead of the SysTimeSource in tests which don't access the time."
      },
      {
        "id": "f3a7317eef1f9cf0699b92539f6b7561eba27c33",
        "date": "2023-11-06T11:51:18Z",
        "message": "test: limit the usage of SysTimeSource and TimeSource"
      },
      {
        "id": "c1ffd9845d2f5466a2be51814fd349fde33cc263",
        "date": "2023-11-01T12:34:28Z",
        "message": "chore: don't leak the consensus time across the stack."
      },
      {
        "id": "abac6aa643034c5b339ee228c610744d10ae9252",
        "date": "2023-11-01T10:38:50Z",
        "message": "test: fix bitcoin flakiness"
      },
      {
        "id": "88dc685dc4173a3a72461c618d1afc093ab22e2d",
        "date": "2023-10-30T08:55:34Z",
        "message": "refactor: NET-1533 remove the redundant AllowClients type"
      },
      {
        "id": "2c152d16ac9ee79bdf045f6226f8dbc154d33749",
        "date": "2023-10-28T20:24:23Z",
        "message": "chore: don't relay canister http shares"
      },
      {
        "id": "4b1d17e4195cdbd35c4c6b194936ad0481413d95",
        "date": "2023-10-28T09:32:58Z",
        "message": "refactor: move the ValidatedArtifact type to the consensus_pool module"
      },
      {
        "id": "79a6204712faa5b8a38c29c2b910c5c308b0ad96",
        "date": "2023-10-25T19:26:12Z",
        "message": "fix: ICSUP-3716 don't expose publicly the production NNS_SUBNET_ID"
      },
      {
        "id": "b887c1e883a214f428bb505cd42176c5082de8f9",
        "date": "2023-10-25T16:46:30Z",
        "message": "chore: update the two dashboards to have the same json model as the prod dashboards"
      },
      {
        "id": "8bf524f19f9739734852ef4a19e730f448b6b7c6",
        "date": "2023-10-25T12:01:39Z",
        "message": "refator: rename CertifiedStateReader to CertifiedStateSnapshot"
      },
      {
        "id": "fbf5d97fa1942a8aedfdac86996dd18eebc5242b",
        "date": "2023-10-24T21:59:39Z",
        "message": "test: use a small nns for the networking tests"
      },
      {
        "id": "301f5f2f4d8f5be93fee4883cc6e931ece816b92",
        "date": "2023-10-24T09:38:02Z",
        "message": "build: use the tokio version from the workspace"
      },
      {
        "id": "161803c5d5685d58049ffbbf972b5477924e8dbc",
        "date": "2023-10-23T13:46:12Z",
        "message": "test: remove the legacy chunking test"
      },
      {
        "id": "646bf1c0e2b27ef6b992800f8cf843f966e934ee",
        "date": "2023-10-23T08:03:20Z",
        "message": "chore: remove the optimization that delays the addition of validated DKG artifact to the block"
      },
      {
        "id": "249666a1c1a4ab8bc32a5bef0b3204c6606b8b93",
        "date": "2023-10-22T21:08:18Z",
        "message": "fix: Revert \"dbf1b2039d chore: Remove the filter templating and use directly the height\""
      },
      {
        "id": "5e4fbbc599d1142edeb94b9b6d7ca928a67a635a",
        "date": "2023-10-22T15:12:47Z",
        "message": "refactor: move dkg traits and types from rs/interfaces to rs/consensus/src/dkg"
      },
      {
        "id": "81c3647745f272746ffb8160f88cf71ad1634cf5",
        "date": "2023-10-20T14:43:33Z",
        "message": "fix: Revert \"feat(consensus): CON-1087 Don't relay shares during retransmissions\""
      },
      {
        "id": "d76d28c90daf71527cf856b48b245742f9da3409",
        "date": "2023-10-20T10:41:59Z",
        "message": "refactor: rename the 'change' field from the ChangeResult"
      },
      {
        "id": "3123bf4141b00efc375476607eec15c108840ff0",
        "date": "2023-10-19T15:06:35Z",
        "message": "refactor: move the IntoInner and HasTimestamp in the crate where they are actually used"
      },
      {
        "id": "8e7a6f026e9cf606f3530882deda72000c9bec42",
        "date": "2023-10-19T13:28:45Z",
        "message": "chore: remove the CanisterHttpAttribute and use the full share as the key of the pool"
      },
      {
        "id": "f546c3e3cad06bb1c6a0745ee907f4e2c2d40367",
        "date": "2023-10-18T20:11:27Z",
        "message": "refactor: remove unused traits impls from the consensus-p2p interface"
      },
      {
        "id": "db4114798c14269f1fb221474f74f39838f44a2c",
        "date": "2023-10-18T12:18:42Z",
        "message": "refactor: improve the consensus - networking API by making the generic ChangeSet an associated type"
      },
      {
        "id": "06d32bda3e6dbcc2143dfabbc150155107c3f92a",
        "date": "2023-10-17T11:39:36Z",
        "message": "refactor: Implement From<...Message> for <...Id> instead of using custom conversions for all artifact types"
      },
      {
        "id": "1674515b64d5a7526a2de4f8225c0446a544b396",
        "date": "2023-10-10T13:03:55Z",
        "message": "chore: CON-1141 Add the starting interval height as part of the DkgMessageId key used for the in-memory poll"
      },
      {
        "id": "4ebf741d6e8e39210b3f500ba7781f58e65b57ce",
        "date": "2023-10-09T08:40:07Z",
        "message": "refactor: remove redundant attributes"
      },
      {
        "id": "fb8d57ee0cfc971c510802f5cac20d546223a53f",
        "date": "2023-10-09T08:29:17Z",
        "message": "chore: instead of having counters for total and count use a histogram"
      },
      {
        "id": "d48263ee2252aa780a0363857667ba73bcb0ca0e",
        "date": "2023-10-05T10:41:15Z",
        "message": "refactor: remove serde serialization for attributes"
      },
      {
        "id": "95a2b09245542f5ccca1a2ddf3435c34584a6f8e",
        "date": "2023-10-05T07:57:49Z",
        "message": "refactor: move out the body receiver service out of the endpoint services"
      },
      {
        "id": "149566319a6eb8e0dee9ae02bb132f3befa434c0",
        "date": "2023-10-04T21:33:31Z",
        "message": "fix: the connection_setup_duration counter and use the more efficient bytes instead of vec<u8>"
      },
      {
        "id": "fdffb2bad4c5db433ce9fbd68b455828fad8a400",
        "date": "2023-10-02T09:09:06Z",
        "message": "refactor: run cargo clippy fix on the repository"
      },
      {
        "id": "dbf1b2039d5ff8ae7c798e96741ca496477d0f01",
        "date": "2023-10-02T08:54:24Z",
        "message": "chore: Remove the filter templating and use directly the height"
      },
      {
        "id": "4958d852624609e1518880ae4d2df1906d68e79b",
        "date": "2023-09-30T19:54:40Z",
        "message": "chore: remove the redundant CertificationMessageAttribute."
      },
      {
        "id": "273ff988f0547cd5b384d96e9d9cc8d87028c8c6",
        "date": "2023-09-29T17:58:26Z",
        "message": "refactor: remove unused attributes"
      },
      {
        "id": "8f58a0bb0ad4f387c25d598469d0cf7fa4305d42",
        "date": "2023-09-28T12:11:53Z",
        "message": "chore: NET-1369 remove the earliest timestamp from the SEV attestation handshake"
      },
      {
        "id": "3e72f3af83ccf44007bec897535d6a6d8cad3e65",
        "date": "2023-09-27T12:49:11Z",
        "message": "fix: NET-1559  introduce a dedicated tokio runtime for P2P"
      },
      {
        "id": "6c08a277c57fbe898749b850c47b422f523ddf1d",
        "date": "2023-09-27T09:53:02Z",
        "message": "chore: remove the unused RemoveFromValidated from the set of ChangeActions"
      },
      {
        "id": "7216f303e335979fa7d2d779f70d0f276436c686",
        "date": "2023-09-25T11:57:28Z",
        "message": "docs: add the initial version of the transport design readme"
      },
      {
        "id": "63057f7a56a75c7d070f89d5d802825acd8298f5",
        "date": "2023-09-25T10:49:44Z",
        "message": "chore: remove redundant/unused code"
      },
      {
        "id": "13d02270dc39dd21f5bc1ae1a21c29554df156ac",
        "date": "2023-09-25T07:48:53Z",
        "message": "refactor: use the workspace for prost-build and bytes crate version"
      },
      {
        "id": "78836a179ad4368805091667a1b80e69815da7fd",
        "date": "2023-09-22T21:26:58Z",
        "message": "chore: use the global workspace for the version of the futures crate"
      },
      {
        "id": "9371e6fbd8340adb1a2e8bf7741c29044f122056",
        "date": "2023-09-22T08:08:59Z",
        "message": "chore: use the global workspace for deriving the prost version"
      },
      {
        "id": "9214121fdec59fce81c378a72050b9ea5399de44",
        "date": "2023-09-21T21:20:14Z",
        "message": "build: SCAVM-626 update quinn"
      },
      {
        "id": "52df8696a3fd70a115cac58347308fc68e7d3a75",
        "date": "2023-09-20T15:59:19Z",
        "message": "chore: use tower from the workspace"
      },
      {
        "id": "9283d497c63b92da59c965ebcdff65a5682e3946",
        "date": "2023-09-20T13:58:09Z",
        "message": "chore: add some p2p readmes and delete the experimental directory"
      },
      {
        "id": "b827695ead8859631380aa1a2c1936d353d9c849",
        "date": "2023-09-20T13:49:49Z",
        "message": "chore: rename get_transport_info to get_node_record"
      },
      {
        "id": "4455a7ec8a67c99c24f75b378a26f9b9ada60cfc",
        "date": "2023-09-19T11:40:12Z",
        "message": "chore: do some small readability  changes"
      },
      {
        "id": "fc15b2bd3ca0c58a8aa8a2a50bf5d2390984c88b",
        "date": "2023-09-18T19:03:34Z",
        "message": "chore: remove unused deps"
      },
      {
        "id": "1fa41bdfcef0e7fbf331acf1e618d6c7044e7db5",
        "date": "2023-09-14T11:47:04Z",
        "message": "chore: upgrade the prost, tonic and pprof versions"
      },
      {
        "id": "9943fbb21ed180b6e549dc0d2f6cd1c76d28886f",
        "date": "2023-09-12T15:30:42Z",
        "message": "fix: fix the two broken protobuf gen scripts"
      },
      {
        "id": "172766a8400f714dcc068d2c7611accbc6bd3b72",
        "date": "2023-09-12T10:35:33Z",
        "message": "chore: remove unused witness field"
      },
      {
        "id": "c60ded1af257da39810eeebe3db541ba46120de5",
        "date": "2023-09-11T09:16:45Z",
        "message": "chore: update bytes and tokio metrics crates"
      },
      {
        "id": "e9c7d756b5068754efd5571326ad49d979c509ca",
        "date": "2023-09-08T13:20:06Z",
        "message": "chore: delete dead p2p code"
      },
      {
        "id": "a53e3fcfa2eadceda5d47439a01d85fa4a802008",
        "date": "2023-09-08T06:30:26Z",
        "message": "upgrade tokio to the 1.32.x LTS release"
      },
      {
        "id": "3550f9abfc313da7aa694a764f2d1e200fb8c8f9",
        "date": "2023-09-07T20:32:27Z",
        "message": "chore: Do not panic in an empty list is passed as allowed clients when TLS handshakes are performed."
      },
      {
        "id": "fcecaf6f4c3f161d1a611a4a60a4cbfca6f1b2dd",
        "date": "2023-09-04T08:36:38Z",
        "message": "fix: NET-398 extend the TransportError to account for coding errors and big requests"
      },
      {
        "id": "33fc76c7bb1a7f759a6b0190e3d4dcf912d4dfd4",
        "date": "2023-08-29T16:41:50Z",
        "message": "chore: improve readability of the http handler"
      },
      {
        "id": "404c96455b810bbae43f06d06ccc9e8b5129a273",
        "date": "2023-08-25T16:52:15Z",
        "message": "docs: update docs and improve readability a little"
      },
      {
        "id": "d56a7d85fa52b1e7d64d677f47602d7fe65f012c",
        "date": "2023-08-23T17:33:21Z",
        "message": "chore: update criterion to 0.5"
      },
      {
        "id": "ca4ce496f2ad330328607133995a605334c5b882",
        "date": "2023-08-22T09:11:53Z",
        "message": "chore: do some polishing of the quic transport"
      },
      {
        "id": "07c9e80a06d8a10f571b74e319526ab50345835e",
        "date": "2023-08-21T17:01:15Z",
        "message": "chore: remove dead code"
      },
      {
        "id": "2c71c079bc55f26156cc498a365fb0aa61629830",
        "date": "2023-08-21T16:05:54Z",
        "message": "fix: NET-1296 add graceful shutdown of the P2P event loops"
      },
      {
        "id": "3d01690976ac3d79fc3969886475d1324d011ff3",
        "date": "2023-08-18T22:49:19Z",
        "message": "chore: remove further the dependency on the ArtifactManagerBackend when constructing the consensus stack."
      },
      {
        "id": "8fbd87dd20ab36bc4b44a51c8f3abd369f4b2c26",
        "date": "2023-08-18T10:19:42Z",
        "message": "chore: construct the P2P and consensus stacks in order"
      },
      {
        "id": "f146f744b21dc7060e667bccc7af396d528ae263",
        "date": "2023-08-18T09:41:25Z",
        "message": "Revert \"chore: delete obsolete bash based test script\""
      },
      {
        "id": "24e3256b842bab7f01e083c5e1981c6bfe6b8bd6",
        "date": "2023-08-17T16:10:27Z",
        "message": "chore: remove the AdvertBroadcaster"
      },
      {
        "id": "47d242d4570953a30df056e557469a91f597d69c",
        "date": "2023-08-16T20:57:46Z",
        "message": "chore: add metrics for the number of generated artifacts and their size"
      },
      {
        "id": "634bc6406d835595f48ece78a333ad7847260315",
        "date": "2023-08-14T13:50:44Z",
        "message": "test: remove the https outcalls non hermetic test"
      },
      {
        "id": "e06f95639f4e36b7bf990f855d028f64df49d14a",
        "date": "2023-08-14T12:19:25Z",
        "message": "build: use the most recent version of indicatif"
      },
      {
        "id": "f222a9f17432f1c878dccaaf38c2268850716b43",
        "date": "2023-08-14T09:56:18Z",
        "message": "test: remove the two_third_latency_test.rs system test"
      },
      {
        "id": "63a45549c392d17a6fd0ca0b483413beef39c0e6",
        "date": "2023-08-14T09:21:22Z",
        "message": "chore: move the advert/artifact check inside P2P"
      },
      {
        "id": "bbde3725c0d778ad2294217de55c4ccc56f33afd",
        "date": "2023-08-10T20:13:25Z",
        "message": "docs: Remove implementation sections"
      },
      {
        "id": "d49639e5a3bf622856bb96955cd1989d78cc0f5e",
        "date": "2023-08-10T14:35:58Z",
        "message": "NET-1277 update the design principles of the http servers including section for rate limiting"
      },
      {
        "id": "158d1961f406a786df37dfcb96ea97c4c009adaa",
        "date": "2023-08-09T15:14:10Z",
        "message": "chore: remove unused deps"
      },
      {
        "id": "1bea3a0297e4fa0e0581cc6fbc94625ed54c3c40",
        "date": "2023-08-08T15:02:13Z",
        "message": "chore: Remove old transaction as part of the advertising call"
      },
      {
        "id": "5b8bc8a8157d6465d011c3365878253fdbee0c8f",
        "date": "2023-08-07T14:33:00Z",
        "message": "chore: NET-1492 remove the prometheus-parse dep"
      },
      {
        "id": "cdec393c293ef34e17f986558cf258cf215a1440",
        "date": "2023-08-07T12:23:09Z",
        "message": "test: remove unused execution benchmark"
      },
      {
        "id": "1bcf27e62d2bfd115a953241d5195fcca0182bc7",
        "date": "2023-08-07T11:18:25Z",
        "message": "chore: NET-1370 remove the onchain observability feature code"
      }
    ],
    "line_additions": 11170,
    "line_deletions": 39326,
    "lines_effected_total": 50496,
    "rel_comm_add": 72,
    "rel_comm_del": 80,
    "rel_comm_total": 84
  },
  {
    "login": "levsha",
    "id": 374376,
    "totalContributions": 863,
    "github": "https://github.com/levsha",
    "commits": [
      {
        "id": "710edd1c7ff12d8f6cc8c289e513e8921480e702",
        "date": "2023-11-23T00:01:30Z",
        "message": "chore(IDX-3044): use more specific glob"
      },
      {
        "id": "46203f9e28fb3044df7b84893245a67b74de6111",
        "date": "2023-11-22T15:16:07Z",
        "message": "Merge branch 'marko-disable-tnet-init' into 'master'\n\nchore(tnet): tolerate CI failure [hotfix]\n\n \n\nSee merge request dfinity-lab/public/ic!16273"
      },
      {
        "id": "d0732934cd35e84b4be269dc5f0cb506b65abccb",
        "date": "2023-11-22T09:54:00Z",
        "message": "IDX-3044: Revert Temporary ignore genesis-token-canister-wasm.gz"
      },
      {
        "id": "cd2a14b708f93a45e69fc1ba66ad5cddb177e239",
        "date": "2023-11-21T15:55:37Z",
        "message": "Merge branch 'levsha/chore-IDX-3044-do-not-install-python-dependencies-in-build-ic-job' into 'master'\n\nchore(IDX-3044): do not install python dependencies in build-ic job\n\nThey should come as bazel dependencies. \n\nSee merge request dfinity-lab/public/ic!16240"
      },
      {
        "id": "ec2ff805b0ff7ab176db901d781a227784f86b69",
        "date": "2023-11-21T15:55:26Z",
        "message": "chore(IDX-3044): do not install python dependencies in build-ic job"
      },
      {
        "id": "e7bfe85e8aeb82036afb2941911043effaa24be0",
        "date": "2023-11-20T22:24:55Z",
        "message": "Merge branch 'levsha/chore-IDX-3044-Temporary-ignore-genesis-token-canister-wasm-gz' into 'master'\n\nDraft: chore(IDX-3044) Temporary ignore genesis-token-canister.wasm.gz\n\nIt often fails determinism tests for not yet known reasons. \n\nSee merge request dfinity-lab/public/ic!16228"
      },
      {
        "id": "2befdee3e518c0fb33b76a63ed252c7690df3f73",
        "date": "2023-11-20T22:24:55Z",
        "message": "Draft: chore(IDX-3044) Temporary ignore genesis-token-canister.wasm.gz"
      },
      {
        "id": "ff24b5ef97cc3cf70eab7fc6be5cb450233b18b3",
        "date": "2023-11-20T17:44:32Z",
        "message": "Merge branch 'rumenov/ceofjh' into 'master'\n\nchore: remove un-existing destinations from the owners file\n\n \n\nSee merge request dfinity-lab/public/ic!16211"
      },
      {
        "id": "cb1d6a27b75a2e56643f741c86f66db56b716cea",
        "date": "2023-11-20T10:15:04Z",
        "message": "Merge branch 'levsha/hotfix-temporary-disable-one_proposal_neurons_fund_swap_participation_test' into 'master'\n\nhotfix: temporary disable one_proposal_neurons_fund_swap_participation_test\n\nIt is currently broken. It is not risky to disable it as it was just\nrecently enabled and was never successfull since then. \n\nSee merge request dfinity-lab/public/ic!16205"
      },
      {
        "id": "9c961d64f33c7b4952776d887f7d3bd165dbbc80",
        "date": "2023-11-20T10:15:04Z",
        "message": "hotfix: temporary disable one_proposal_neurons_fund_swap_participation_test"
      },
      {
        "id": "66b0fca3a31519c7f9e02900590173692b69df93",
        "date": "2023-11-16T15:25:54Z",
        "message": "chore: update rules_python to 0.26.0"
      },
      {
        "id": "6001e75222f86b988a926e80ad2b22eda802fb5b",
        "date": "2023-11-16T10:11:51Z",
        "message": "Merge branch 'levsha/chore-update-bb-cli-to-5-0-25' into 'master'\n\nchore: update bb cli to 5.0.25\n\n \n\nSee merge request dfinity-lab/public/ic!16123"
      },
      {
        "id": "2b612b324ab442574ef6748f783cfe21982fc459",
        "date": "2023-11-16T10:11:50Z",
        "message": "chore: update bb cli to 5.0.25"
      },
      {
        "id": "2c84cd526ac6bcf17fdb24fa1370df3dd860c20f",
        "date": "2023-11-15T16:57:32Z",
        "message": "Merge branch 'levsha/chore-Update-bazel-to-6-4-0' into 'master'\n\nchore: Update bazel to 6.4.0\n\nUpdate to the latest fully compatible release that may still contain\nsome fixes. \n\nSee merge request dfinity-lab/public/ic!16102"
      },
      {
        "id": "c5dbfa3d2510f67b5e9b2b370f4c7a249f3f55fc",
        "date": "2023-11-15T16:57:30Z",
        "message": "chore: Update bazel to 6.4.0"
      },
      {
        "id": "c8781645f602d7c25dfa382f072ab122ab10bc3d",
        "date": "2023-11-15T11:41:07Z",
        "message": "Merge branch 'fixed_mock_bitcoind' into 'master'\n\nfix: mock bitcoind test flakiness\n\nThe flakiness was caused by handshake timeouts between the adapter and the mock (this requires further investigation).\nThe fix was making the mock allow for multiple connections and not panicking on broken pipes. \n\nSee merge request dfinity-lab/public/ic!16074"
      },
      {
        "id": "1e13ed3feb9e6ac736b167223cd6e262b766b179",
        "date": "2023-11-09T16:46:25Z",
        "message": "Merge branch 'raghav/security-policy-update-3' into 'master'\n\ndocs(security): update security policy\n\nEstablish:\n- Vulnerability disclosure process\n- Rules for Bug bounty \n\nSee merge request dfinity-lab/public/ic!16005"
      },
      {
        "id": "272cec37a0d9b80a5eead49541aeb98799f6b289",
        "date": "2023-11-09T07:07:45Z",
        "message": "Merge branch 'raghav/security-policy-update2' into 'master'\n\ndocs(security): Add security policy\n\nEstablish:\n- Vulnerability disclosure policy and process\n- Bug bounty rules \n\nSee merge request dfinity-lab/public/ic!15989"
      },
      {
        "id": "b861cf9fdd55e85de3ee18d495bcec2aeb7c042d",
        "date": "2023-11-08T08:48:53Z",
        "message": "Chore: Update bindgen."
      },
      {
        "id": "81d315d9c3f884874953c64e37b08c49e4758982",
        "date": "2023-11-07T17:38:08Z",
        "message": "chore: update rocksdb."
      },
      {
        "id": "0d8ec8daddaa03b5d5f972d68acb0a7697729bba",
        "date": "2023-11-03T11:20:05Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Update-indoc-and-sync-the-version-' into 'master'\n\nchore(IDX-3017): Update indoc and sync the version.\n\n \n\nSee merge request dfinity-lab/public/ic!15869"
      },
      {
        "id": "cedb91805ac81dc87216af2fa93561c7b07cd6ff",
        "date": "2023-11-03T11:20:05Z",
        "message": "chore(IDX-3017): Update indoc and sync the version."
      },
      {
        "id": "9395d4ae5e7e4153dcb9ff3645206c63ec901a53",
        "date": "2023-11-02T16:15:42Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-sync-version-of-build-info-and-move-to-the-workspace-' into 'master'\n\nrefactor(IDX-3017): sync version of build-info and move to the workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15857"
      },
      {
        "id": "b968ee6288f5cc8d5c063daca77d32c9f657e08d",
        "date": "2023-11-02T16:15:40Z",
        "message": "refactor(IDX-3017): sync version of build-info and move to the workspace."
      },
      {
        "id": "4eeab2a09e52c905eba1b9b745fb82c435175158",
        "date": "2023-11-02T13:40:35Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Sync-the-version-of-static_assertions-' into 'master'\n\nchore(IDX-3017): Sync the version of static_assertions.\n\n \n\nSee merge request dfinity-lab/public/ic!15849"
      },
      {
        "id": "7731f1e5f029f632ef6f84cabcd244ad24c5301f",
        "date": "2023-11-02T13:40:35Z",
        "message": "chore(IDX-3017): Sync the version of static_assertions."
      },
      {
        "id": "bca432b351380b0aafaaabcc336b7660dab3391e",
        "date": "2023-11-02T11:36:18Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Sync-pprof-version-with-external_crates-bzl' into 'master'\n\nchore(IDX-3017): Sync pprof version with external_crates.bzl\n\n \n\nSee merge request dfinity-lab/public/ic!15847"
      },
      {
        "id": "279d179ab6f591426fbe8396e0439db1e45e8ac5",
        "date": "2023-11-02T11:36:18Z",
        "message": "chore(IDX-3017): Sync pprof version with external_crates.bzl"
      },
      {
        "id": "86665139f1fe71d2e9f636f655d98dea6557b687",
        "date": "2023-11-02T08:47:08Z",
        "message": "refactor(IDX-3017): update syn and move to the workspace."
      },
      {
        "id": "e268b9807f1ab4ae65d7b29fe70a3b358d014d6a",
        "date": "2023-11-01T20:31:05Z",
        "message": "Merge branch 'IDX-3017-refactor-chrono' into 'master'\n\nrefactor(IDX-3017): move chrono to the workspace\n\n \n\nSee merge request dfinity-lab/public/ic!15832"
      },
      {
        "id": "32d95f033441238e77014fb912d0a08da85fee17",
        "date": "2023-11-01T18:18:13Z",
        "message": "refactor(IDX-3017): Update clap and move to the workspace."
      },
      {
        "id": "91690b15a222a2f9ee5c964f38a5b97261af4be0",
        "date": "2023-11-01T15:42:31Z",
        "message": "chore(IDX-3017) sync indoc version."
      },
      {
        "id": "e2ef23b32d7bd69717e80c8b04eae83f23c39087",
        "date": "2023-11-01T11:39:10Z",
        "message": "chore(IDX-3017): sync the version of libsecp256k1 between Cargo.toml and bazel"
      },
      {
        "id": "896223326c72b1a9e84728bfb8758a0af768fc0a",
        "date": "2023-11-01T10:05:34Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Sync-version-of-bit-vec-' into 'master'\n\nchore(IDX-3017): Sync version of bit-vec.\n\n \n\nSee merge request dfinity-lab/public/ic!15784"
      },
      {
        "id": "ba8c8af498873ec2bd4f284f0fad43402a839eb1",
        "date": "2023-11-01T10:05:32Z",
        "message": "chore(IDX-3017): Sync version of bit-vec."
      },
      {
        "id": "119693ae434ac179eadf05d9a26b392816f9ae19",
        "date": "2023-11-01T09:54:22Z",
        "message": "refactor: simplify conditional logic."
      },
      {
        "id": "3d44d7ed0a3db04f21d455ca9d5399d1c2c96147",
        "date": "2023-10-31T16:56:15Z",
        "message": "Merge branch 'ulan/run-819' into 'master'\n\nRUN-819: Upgrade `wasmtime` to version 13.0.1\n\nRelease notes:\n- https://github.com/bytecodealliance/wasmtime/blob/main/RELEASES.md#1300\n \nChanges:\n- https://github.com/bytecodealliance/wasmtime/compare/release-11.0.0...release-13.0.0 \n\nSee merge request dfinity-lab/public/ic!15607"
      },
      {
        "id": "66e068bed8a086040012eb8e357211257ef2c15f",
        "date": "2023-10-31T11:10:42Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Sync-the-version-of-derive_more-' into 'master'\n\nchore(IDX-3017) Sync the version of derive_more.\n\n \n\nSee merge request dfinity-lab/public/ic!15782"
      },
      {
        "id": "c098ffa431621d4b75a03184cd71ec0737568631",
        "date": "2023-10-31T11:10:42Z",
        "message": "chore(IDX-3017) Sync the version of derive_more."
      },
      {
        "id": "0656a573e4907575f082e2552a32ba3c6e045cfc",
        "date": "2023-10-30T18:11:29Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-move-serde-to-the-workspace-' into 'master'\n\nrefactor(IDX-3017): move serde to the workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15745"
      },
      {
        "id": "ab8783a919e1353fdb740d99f56e7f6c1115bf46",
        "date": "2023-10-30T18:11:26Z",
        "message": "refactor(IDX-3017): move serde to the workspace."
      },
      {
        "id": "70604cea6145a0be839000e4b4b800c5a079aaf0",
        "date": "2023-10-30T09:48:45Z",
        "message": "Merge branch 'newbazelrules' into 'master'\n\nchore(build): bump rules_rust to fix CARGO_MANIFEST_LINKS issues.\n\nRequired to build metrics-proxy soon to be included, but deserves its own PR. \n\nSee merge request dfinity-lab/public/ic!15688"
      },
      {
        "id": "5a9abf0bce375857c22a5d23cac5857719c39d8b",
        "date": "2023-10-27T12:45:14Z",
        "message": "refactor(IDX-3017) update pretty_assertions and move to the workspace."
      },
      {
        "id": "9844e2b7eef032bdfbabee02db5622973cfdd550",
        "date": "2023-10-27T08:41:16Z",
        "message": "refactor(IDX-3017): Update itertools and move to workspace."
      },
      {
        "id": "089fb006073d61ebf9ae75060a3e8b54d0681900",
        "date": "2023-10-26T17:08:25Z",
        "message": "Merge branch 'levsha/fix-also-automatically-rebuild-lock-files-for-fuzzing-' into 'master'\n\nfix: also automatically rebuild lock files for fuzzing.\n\nTested: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15645 \n\nSee merge request dfinity-lab/public/ic!15647"
      },
      {
        "id": "9913e450b650b05e9244abf9893e2ce432af7ff7",
        "date": "2023-10-26T17:08:24Z",
        "message": "fix: also automatically rebuild lock files for fuzzing."
      },
      {
        "id": "cc1c3a8f437205583a74335f0a9d93d8fa41a675",
        "date": "2023-10-26T11:51:11Z",
        "message": "Merge branch 'sat-ci-remove-blessed-handling' into 'master'\n\nchore(ci): Remove special handling and uploading of blessed binaries\n\n \n\nSee merge request dfinity-lab/public/ic!14486"
      },
      {
        "id": "5d5d0e45ab1f0006618a8ed152d53455ea2eaa88",
        "date": "2023-10-25T20:49:41Z",
        "message": "Merge branch 'test-mr' into 'master'\n\nFix: remove python requirements from bazel-test-all-rebuild\n\n \n\nSee merge request dfinity-lab/public/ic!15641"
      },
      {
        "id": "855acfb393798371871740dfa600573997b766bf",
        "date": "2023-10-25T10:34:57Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-sync-strum-version-and-move-to-workspace-' into 'master'\n\nrefactor(IDX-3017) sync strum version and move to workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15339"
      },
      {
        "id": "bf9bc00b032a18d2dbcfcfcfb7a76a562f350c9e",
        "date": "2023-10-25T10:34:55Z",
        "message": "refactor(IDX-3017) sync strum version and move to workspace."
      },
      {
        "id": "db7cd6c94cd1bf1041aadbd71fc2d70c18ef08fb",
        "date": "2023-10-24T09:38:02Z",
        "message": "Merge branch 'rumenov/tokioworkspace' into 'master'\n\nbuild: use the tokio version from the workspace\n\n \n\nSee merge request dfinity-lab/public/ic!15595"
      },
      {
        "id": "706bbafa89e8ddbace94958ac6e1d08d95ea4412",
        "date": "2023-10-23T08:45:35Z",
        "message": "Merge branch 'inactive-neuron-v2-daniel-wong' into 'master'\n\nfeat: NNS1-2597: Define \"inactive\" Neuron using only the current time.\n\nMore precisely, a Neuron is inactive iff ALL of the following conditions are met:\n\n  1. Unfunded: I.e. (cached_stake - fees + staked_maturity) + maturity == 0 . (All arithmetic is saturating.)\n  2. Dissolved as of <= 2 weeks ago.\n  3. Not a member of the Neuron's Fund\n\nUnlike before, the only auxiliary information needed to evaluate this (specifically, condition 2) is the current time. This greatly simplifies the implementation.\n\nThe only \"additional\" function parameter in this design is on Neuron::is_inactive. This does not result in a \"viral\" effect where other functions in the call hierarchy suddenly require additional arguments. There is no virality because NeuronStore can pass the time from its own internal clock, and is the only direct caller of is_inactive. \n\nSee merge request dfinity-lab/public/ic!15158"
      },
      {
        "id": "30ed4c66b80d6c1807a1cd1766560a8ec832c004",
        "date": "2023-10-11T11:09:19Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Sync-cfg-if-version-in-bazel-to-Cargo-toml' into 'master'\n\nchore(IDX-3017) Sync cfg-if version in bazel to Cargo.toml\n\n \n\nSee merge request dfinity-lab/public/ic!15336"
      },
      {
        "id": "24e8a09aee6fe28da53204b82700d1686522f28e",
        "date": "2023-10-11T11:09:19Z",
        "message": "chore(IDX-3017) Sync cfg-if version in bazel to Cargo.toml"
      },
      {
        "id": "5ded0044e8da8807ce8393d557ec0a07f8d0a445",
        "date": "2023-10-11T09:51:14Z",
        "message": "chore(IDX-3017) Update simple_asn1 and move it to the workspace."
      },
      {
        "id": "fa513d3e94908cfe97eac9ce90aa5cba2a24da40",
        "date": "2023-10-10T08:49:29Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Update-nix-crate-and-move-it-to-workspace-' into 'master'\n\nchore(IDX-3017): Update nix crate and move it to workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15270"
      },
      {
        "id": "7c0b3ba46455f6b30a13a962dbc38893928a6eee",
        "date": "2023-10-10T08:49:28Z",
        "message": "chore(IDX-3017): Update nix crate and move it to workspace."
      },
      {
        "id": "b3f3106177cc59e8a3ee1512681eaf56a45e8f8c",
        "date": "2023-10-09T12:35:15Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Automatically-regenerate-bazel-cargo-lock-files-if-required-' into 'master'\n\nchore(IDX-3017): Automatically regenerate bazel cargo lock files if required.\n\nTested: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15273 \n\nSee merge request dfinity-lab/public/ic!15215"
      },
      {
        "id": "9f05fdbda3af595fc7d06e1dac691b8d861dbe42",
        "date": "2023-10-09T12:35:14Z",
        "message": "chore(IDX-3017): Automatically regenerate bazel cargo lock files if required."
      },
      {
        "id": "bf2bf930a90dd7482b564fa4f2e79a41b09dab72",
        "date": "2023-10-06T13:54:33Z",
        "message": "fix: Make candid test always working."
      },
      {
        "id": "38a0f84980a76b3bc49c7d27bafa3349af8ac28c",
        "date": "2023-10-06T13:01:28Z",
        "message": "Merge branch 'levsha/refactor-improve-failure-propagation-and-simplify-candid-test-' into 'master'\n\nrefactor: improve failure propagation and simplify candid test.\n\n \n\nSee merge request dfinity-lab/public/ic!15257"
      },
      {
        "id": "9b195df07fd44b17985c83dff21b2430eb7474d5",
        "date": "2023-10-06T10:47:18Z",
        "message": "Merge branch 'levsha/chore-make-icos_deploy-working-with-ic-version-that-is-stable-by-default-' into 'master'\n\nchore: make icos_deploy working with ic-version that is stable by default.\n\ndev images are build with stable fixed ic version now to make everything\ncacheable. icos_deploy can't work with them. Therefore this change will\ntrigger old behavior for ic-os: building all images with the version\nthat always changes. \n\nSee merge request dfinity-lab/public/ic!15237"
      },
      {
        "id": "1257897c883a00135d71727a3ed50771f99bf4cd",
        "date": "2023-10-06T10:47:17Z",
        "message": "chore: make icos_deploy working with ic-version that is stable by default."
      },
      {
        "id": "d1d69e6ed000543dcd3d9ad03141ced8294a3ee6",
        "date": "2023-10-06T10:04:43Z",
        "message": "refactor: improve failure propagation and simplify candid test."
      },
      {
        "id": "47abeebdd970529b4da9a8c61fc50b4e16dc80d0",
        "date": "2023-10-05T09:16:06Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-Update-base64-and-put-it-into-workspace-' into 'master'\n\nrefactor: [IDX-3017] Update base64 and put it into workspace.\n\nSome Cargo.toml files point to this version already.\nBrining all the code to the same version will simplify switch to use Cargo.toml as a source of truth. \n\nSee merge request dfinity-lab/public/ic!15170"
      },
      {
        "id": "70226d30e400cf83b450a28b9fef1e7513477eb7",
        "date": "2023-10-05T09:16:06Z",
        "message": "refactor: [IDX-3017] Update base64 and put it into workspace."
      },
      {
        "id": "60172c6c36d3b045fe9331b8490d3cc715b7f60a",
        "date": "2023-10-03T14:32:30Z",
        "message": "Merge branch 'levsha/-IC-1490-refactor-bump-prometheus-crate-version-and-use-workspace-' into 'master'\n\n[IC-1490] refactor: bump prometheus crate version and use workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15160"
      },
      {
        "id": "0e2ed516f48e9a74a247b7a7a4e07d2e814019b1",
        "date": "2023-10-03T14:32:28Z",
        "message": "[IC-1490] refactor: bump prometheus crate version and use workspace."
      },
      {
        "id": "ea13a11a64f4339b46af819f3956b1e7e1ad0aa1",
        "date": "2023-10-03T11:29:38Z",
        "message": "Merge branch 'levsha/-IC-1490-Syncronize-version-of-criterion-' into 'master'\n\n[IC-1490] Syncronize version of criterion.\n\nThis is required to switch to use Cargo.toml as source of truth. \n\nSee merge request dfinity-lab/public/ic!15157"
      },
      {
        "id": "519b3ff44e4c50bcf38c714a7dea34e26bd47291",
        "date": "2023-10-03T11:29:38Z",
        "message": "[IC-1490] Syncronize version of criterion."
      },
      {
        "id": "9ea236c3d0adc0f192564c2ee3acaf0c3289e8a8",
        "date": "2023-10-03T08:11:09Z",
        "message": "[IC-1490] Update and synchronise hex-literal version."
      },
      {
        "id": "eee6e8ef2c6725f335e583b94c8abe82af36d85a",
        "date": "2023-10-02T08:20:09Z",
        "message": "Revert \"Merge branch 'levsha/Limit-bazel-jobs-in-master-pipeline-' into 'master'\""
      },
      {
        "id": "30f90d1ed5e0dc1fb5cfd231edb2198395fe2c5c",
        "date": "2023-09-29T18:59:39Z",
        "message": "Merge branch 'levsha/-IDX-2651-Drop-unused-dependency-from-consensus-subnet_splitting_test_colocate' into 'master'\n\n[IDX-2651] Drop unused dependency from consensus:subnet_splitting_test_colocate\n\nDepending on prod image url triggers the test to always run as prod\nimage url changes for every commit.\nThe test doesn't actually use prod image.\n\nTested: https://dash.zh1-idx1.dfinity.network/invocation/f24f2976-0307-4b4f-baf1-630c23545027 \n\nSee merge request dfinity-lab/public/ic!15113"
      },
      {
        "id": "34a3752ae524bab6ddc2a9f4d6b62375b8f6d660",
        "date": "2023-09-29T18:59:38Z",
        "message": "[IDX-2651] Drop unused dependency from consensus:subnet_splitting_test_colocate"
      },
      {
        "id": "85ac609d91d62eb71c2e3a2e7f712043d3769c24",
        "date": "2023-09-29T15:07:02Z",
        "message": "Merge branch 'levsha/-IC-1490-Sync-version-for-more-crates-' into 'master'\n\n[IC-1490] Sync version for more crates.\n\nSet the version to be the same in Cargo.toml and\nbazel/external_crates.bzl (the later is used as the correct value).\nThis change is required preparation step to switch to use Cargo.toml as\nsource of truth. \n\nSee merge request dfinity-lab/public/ic!15099"
      },
      {
        "id": "7fd80d16efe0eb9669cc66bba0ef9cfb9bfe52da",
        "date": "2023-09-29T15:07:00Z",
        "message": "[IC-1490] Sync version for more crates."
      },
      {
        "id": "f97754c957579b64e105ac5e7cbc44235d9c3878",
        "date": "2023-09-29T14:55:53Z",
        "message": "Merge branch 'levsha/-IDX-2651-Drop-unused-dependency-on-prod-image-from-orchestrator-tests-' into 'master'\n\n[IDX-2651] Drop unused dependency on prod image from orchestrator tests.\n\nOrchestrator tests don't use the prod image anymore and don't need it to\nbe uploaded to S3: they use dev images from bazel cache.\nKeeping it in dependencies triggers tests to always run because prod\nimage always changes.\n\nTested:\nhttps://dash.zh1-idx1.dfinity.network/invocation/b3ec486c-8cfc-404a-ae4a-5d4615236d7a \n\nSee merge request dfinity-lab/public/ic!15108"
      },
      {
        "id": "c9843c016b4e1e6f448eb4e04851e056521e4c4a",
        "date": "2023-09-29T14:55:53Z",
        "message": "[IDX-2651] Drop unused dependency on prod image from orchestrator tests."
      },
      {
        "id": "963cefa207358df5009543a4e6806667c23a92d9",
        "date": "2023-09-29T07:37:29Z",
        "message": "[IC-1490] Set ssh2 crate version the same in cargo as in bazel."
      },
      {
        "id": "1eb316c14c62bec0d65fb08f079c393886260c6d",
        "date": "2023-09-28T19:13:52Z",
        "message": "Merge branch 'rjb/fix-bn-tests-code-owners' into 'master'\n\nAdd BN Team as owner of custom domains system tests\n\n \n\nSee merge request dfinity-lab/public/ic!15072"
      },
      {
        "id": "9120114f4a8d55ede9aa6f9edb8d5f204356b44e",
        "date": "2023-09-27T14:58:52Z",
        "message": "Merge branch 'levsha/Limit-bazel-jobs-in-master-pipeline-' into 'master'\n\n[hotfix] Limit bazel jobs in master pipeline.\n\nOtherwise it may cause overloading Farm when runs during daily hours. \n\nSee merge request dfinity-lab/public/ic!15039"
      },
      {
        "id": "bdb80dcec604629c511325eb116c3fa788b57d73",
        "date": "2023-09-27T14:58:51Z",
        "message": "[hotfix] Limit bazel jobs in master pipeline."
      },
      {
        "id": "729f65d789a3e37919764965b9f16f389e4f8bcd",
        "date": "2023-09-27T13:59:51Z",
        "message": "Merge branch 'tim/compress-2' into 'master'\n\nfeat: [NET-1463] compress state sync chunks\n\n* Use zstd to compress the state sync chunks.\n* Add metric to collect compression ratio\n\nWhen running the large state sync test the compression was \\>10 probably because we expand the canister state with zeros. If possible I would like to run a state sync with the NNS mainnet data and see what compression we get there.\n\nExperiments on NNS mainnet state showed that state can be compressed to 40% of its orginal size by using zstd with default settings. \n\nSee merge request dfinity-lab/public/ic!14940"
      },
      {
        "id": "7a0165e32643d78eab7e9c717709174c697cc881",
        "date": "2023-09-27T13:59:46Z",
        "message": "Merge branch 'levsha/Mark-scalability-test-as-flaky-' into 'master'\n\nMark scalability test as flaky.\n\nIt operates with Farm and this is not always stable. \n\nSee merge request dfinity-lab/public/ic!15028"
      },
      {
        "id": "f932e8d206739aef70e679cdf720144463232375",
        "date": "2023-09-27T13:59:45Z",
        "message": "Mark scalability test as flaky."
      },
      {
        "id": "46bd5ac6123ada281283d9f1e16ac00f9d736e26",
        "date": "2023-09-27T13:46:45Z",
        "message": "Merge branch 'exc-249' into 'master'\n\nchore: EXC-249: Observe metric for stop canister request\n\nThis MR adds logic to observe the duration metric for stop canister requests. \n\nIt also refactors the code by transforming the `process_stopping_canisters` function into a method of `ExecutionEnvironment. \n\nSee merge request dfinity-lab/public/ic!14999"
      },
      {
        "id": "61cdd55df6bdefdfc859b2234e30b901ef2691a9",
        "date": "2023-09-27T12:49:21Z",
        "message": "Merge branch 'levsha/-IDX-2949-Use-boundary-api-guestos-from-CAS-instead-of-S3-' into 'master'\n\n[IDX-2949] Use boundary-api guestos from CAS instead of S3.\n\nS3 URL always changes as it has git sha in the path. This causes tests\nthat use is to always re-run\n(/rs/tests/boundary_nodes:api_boundary_node_integration_test for\nexample).\nCAS url is stable - it only changes when content changes.\n\nThis will also decrease S3 traffic and will allow top stop uploading\nartifacts to S3 in the future. \n\nSee merge request dfinity-lab/public/ic!15031"
      },
      {
        "id": "d26c8c94e5dc2b8e6d2e132de3913dbce1d65efc",
        "date": "2023-09-27T12:49:20Z",
        "message": "[IDX-2949] Use boundary-api guestos from CAS instead of S3."
      },
      {
        "id": "19418f3c462f49edb8704ef8e26817ca04a8b17c",
        "date": "2023-09-26T19:34:12Z",
        "message": "Merge branch 'levsha/-IDX-2651-dev-images-to-always-use-fixed-version-' into 'master'\n\n[IDX-2651] dev images to always use fixed version.\n\nAll tests work properly with the fixed ic version now. Therefore we can\nstop building two versions of the dev image and just use fixed version in the\nmain dev image. \n\nSee merge request dfinity-lab/public/ic!14998"
      },
      {
        "id": "04648bab123528c3a83faa4e586f8d797b838aa5",
        "date": "2023-09-26T19:34:12Z",
        "message": "[IDX-2651] dev images to always use fixed version."
      },
      {
        "id": "1c2b7f4006beed5d997ac3c2ed78dba0be0496dd",
        "date": "2023-09-26T17:05:36Z",
        "message": "Merge branch 'levsha/-IDX-3016-Limit-BEP-references-artifacts-upload-' into 'master'\n\n[IDX-3016] Limit BEP-references artifacts upload.\n\nIt may help with errors like this:\n```\nWARNING: Uploading BEP referenced local file ...\n``` \n\nSee merge request dfinity-lab/public/ic!15013"
      },
      {
        "id": "37ea36fd5c3ffda8d4f26fb74e9f41c181febd5e",
        "date": "2023-09-26T17:05:34Z",
        "message": "[IDX-3016] Limit BEP-references artifacts upload."
      },
      {
        "id": "dcff06eaca8139ca0b59bd64db9ab558ffe46968",
        "date": "2023-09-26T16:10:23Z",
        "message": "Merge branch 'levsha/-IDX-2651-Let-bazel-figure-out-number-of-jobs-automatically-' into 'master'\n\n[IDX-2651] Let bazel figure out number of jobs automatically.\n\nJobs are reasonably stable now - chances are we have resource\nrequirements properly set for resources-intensive actions now. We also\nmainly use the cluster for CI now that is not much used for anything\nelse.\nTherefore it should be safe now to let bazel figure out number of jobs\nautomatically baces on number of CPUs - the logic it already contains. \n\nSee merge request dfinity-lab/public/ic!15004"
      },
      {
        "id": "b36254ae039ca53c3853923ac263c1bce37fdf71",
        "date": "2023-09-26T16:10:22Z",
        "message": "[IDX-2651] Let bazel figure out number of jobs automatically."
      },
      {
        "id": "8e4238cf2a0e6fb2345f6c11a65d6f9097f70f23",
        "date": "2023-09-26T10:12:23Z",
        "message": "Update rules_rust to 0.27.0"
      },
      {
        "id": "f4e5c18b49e742129c45af8587480e92bff4de29",
        "date": "2023-09-25T08:22:10Z",
        "message": "Merge branch 'levsha/-IDX-2949-Adjust-compare-ignore-digest-field-' into 'master'\n\n[IDX-2949] Adjust compare: ignore digest field.\n\nThe field seems to be present when results are from cache, but we want\nto only compare inputs and outputs, not was it from the cache or not. \n\nSee merge request dfinity-lab/public/ic!14957"
      },
      {
        "id": "baf8682e42baf35c4fbd019709853289670ec775",
        "date": "2023-09-25T08:22:09Z",
        "message": "[IDX-2949] Adjust compare: ignore digest field."
      },
      {
        "id": "59dd24c7cc30a36719bea3514cf1c70a4f92b5a1",
        "date": "2023-09-25T07:48:54Z",
        "message": "Merge branch 'rumenov/bytesprf' into 'master'\n\nrefactor: use the workspace for prost-build and bytes crate version\n\n \n\nSee merge request dfinity-lab/public/ic!14964"
      },
      {
        "id": "b3b8770ee6a4a9f24ba0a7fa9b16fa1f2f711e05",
        "date": "2023-09-22T14:26:20Z",
        "message": "Update rules_python to the latest version."
      },
      {
        "id": "52e95f6b646269dc3d440a696a30e2eb7bd3b976",
        "date": "2023-09-22T12:09:41Z",
        "message": "Merge branch 'levsha/-IDX-2651-Never-try-to-upload-artifacts-containing-fake-IC-version-' into 'master'\n\n[IDX-2651] Never try to upload artifacts containing fake IC version.\n\n \n\nSee merge request dfinity-lab/public/ic!14928"
      },
      {
        "id": "e9b9450ab781f0a6431347ac5b65a33d4e632bc3",
        "date": "2023-09-22T12:09:40Z",
        "message": "[IDX-2651] Never try to upload artifacts containing fake IC version."
      },
      {
        "id": "64ca887dddd9a5445fc909fd2dccd042bc19910f",
        "date": "2023-09-22T08:09:00Z",
        "message": "Merge branch 'rumenov/prostdde' into 'master'\n\nchore: use the global workspace for deriving the prost version\n\n \n\nSee merge request dfinity-lab/public/ic!14937"
      },
      {
        "id": "4ec40bd0ee1276bb26051d55d1011ab9b1403348",
        "date": "2023-09-20T15:35:24Z",
        "message": "Fix typo."
      },
      {
        "id": "c033197f4fa52e7f229c3341d27a9ee55a27520a",
        "date": "2023-09-20T08:03:11Z",
        "message": "Keep service-worker node version in sync."
      },
      {
        "id": "e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797",
        "date": "2023-09-19T20:13:20Z",
        "message": "Merge branch 'query-stats-aggregation-2' into 'master'\n\nAggregate query stats into canister state\n\n \n\nSee merge request dfinity-lab/public/ic!14821"
      },
      {
        "id": "19ffef8cabc7c1a52849d3b6b2ee7b8c1918a2b9",
        "date": "2023-09-19T16:43:15Z",
        "message": "Fix boundary-node-service-worker."
      },
      {
        "id": "f3492ac042e69ad0100778f2f8bb9f9b31e8bde8",
        "date": "2023-09-19T08:17:54Z",
        "message": "Merge branch 'ulan/run-763-2' into 'master'\n\nRUN-763: [hotfix] Fix a test failure introduced in 8fc94d\n\nThis adjusts the test expectation after `8fc94d`. \n\nSee merge request dfinity-lab/public/ic!14863"
      },
      {
        "id": "b1ccbbb8feef08c14afb6082b7d1f27016a33257",
        "date": "2023-09-18T07:29:21Z",
        "message": "Merge branch 'marko-coverage-override-afterscript' into 'master'\n\nfix(false alerts): disable after script for coverage CI job\n\nOverriding due to [false alerts](https://dfinity.slack.com/archives/CL7Q2RXUM/p1694787061961829) from Honeycomb. \n\nSee merge request dfinity-lab/public/ic!14842"
      },
      {
        "id": "178e16782358bcfe11eb0c6cf33f9578cc4fa07f",
        "date": "2023-09-15T07:07:38Z",
        "message": "Merge branch 'levsha/-IDX-2651-Reset-timeout-to-moderate-5-minutes-for-rosetta_test-' into 'master'\n\n[IDX-2651] Reset timeout to moderate (5 minutes) for rosetta_test.\n\nDefault timeout for system tests is \"long\" that is set to 30 minutes in\nour config now.\nIt is not required for this test: when it finishes successfully it\nalways finished within 3 minutes. It only takes much longer when fails:\n![Screenshot_2023-09-14_at_17.31.16](/uploads/373c193ab155d4c30c81fbf0a29b8aeb/Screenshot_2023-09-14_at_17.31.16.png)\nIn this case it is just better to fail fast and retry. \n\nSee merge request dfinity-lab/public/ic!14807"
      },
      {
        "id": "916206485fde9bb8990cd9ce0d3da49e83c721ff",
        "date": "2023-09-15T07:07:37Z",
        "message": "[IDX-2651] Reset timeout to moderate (5 minutes) for rosetta_test."
      },
      {
        "id": "600697f431a5f99bfb1a8ce975bfbc3aea9cd959",
        "date": "2023-09-13T14:55:30Z",
        "message": "[IDX-2651] Decrease CPU reservations for spec_compliance_* to 4."
      },
      {
        "id": "e5d92c129ecad97cf2aa4c170a1c799b0e881fce",
        "date": "2023-09-13T11:17:01Z",
        "message": "Merge branch 'levsha/-IDX-2651-Allow-bazel-to-run-up-to-64-jobs-' into 'master'\n\n[IDX-2651] Allow bazel to run up to 64 jobs.\n\nDashboard shows that 32 jobs is often limiting factor now:\n![Screenshot_2023-09-13_at_12.47.22](/uploads/3d491cdef23cfbe40799d53b189d3e86/Screenshot_2023-09-13_at_12.47.22.png) \n\nSee merge request dfinity-lab/public/ic!14636"
      },
      {
        "id": "503c5666e322aa393bdbcfb9cec8718720346240",
        "date": "2023-09-13T11:17:01Z",
        "message": "[IDX-2651] Allow bazel to run up to 64 jobs."
      },
      {
        "id": "8c028b9729e94fe6951c35fd5fdd648ea6897df4",
        "date": "2023-09-12T08:19:26Z",
        "message": "Merge branch 'alic/exhaustive_codeowners' into 'master'\n\nci: Set code owners for exhaustive serialization testing framework\n\nThe `ExhaustiveSet` test suite is owned by the consensus team, and used to check our serialization code for errors. \n\nSee merge request dfinity-lab/public/ic!14723"
      },
      {
        "id": "c74ce7317761e540d722d01fa6c26a046707f372",
        "date": "2023-09-09T05:37:53Z",
        "message": "Merge branch 'eero/upload-proxy' into 'master'\n\nUse generic upload proxy URL\n\n \n\nSee merge request dfinity-lab/public/ic!14702"
      },
      {
        "id": "987884ef66cb4e57dcb8e33737708928b2ab1d88",
        "date": "2023-09-08T20:33:15Z",
        "message": "Merge branch 'levsha/Update-gazelle-and-go-toolchains-' into 'master'\n\nUpdate gazelle, go and buildifier toolchains.\n\nMade using instructions from https://github.com/bazelbuild/bazel-gazelle#id11 and https://github.com/keith/buildifier-prebuilt/releases/tag/6.3.3 \n\nSee merge request dfinity-lab/public/ic!14530"
      },
      {
        "id": "68c57d1242a18a790908ee572963ea344a3cbbf6",
        "date": "2023-09-08T20:33:13Z",
        "message": "Update gazelle, go and buildifier toolchains."
      },
      {
        "id": "a0c108394784a89e18a1eeab28d15f27d8cd7a9a",
        "date": "2023-09-08T06:30:27Z",
        "message": "Merge branch 'rumenov/tkrup' into 'master'\n\nupgrade tokio to the 1.32.x LTS release\n\nhttps://github.com/tokio-rs/tokio#bug-patching-policy \n\nSee merge request dfinity-lab/public/ic!14673"
      },
      {
        "id": "b5592e74a14e0ac26153bdb4ad9dab74b434cd3f",
        "date": "2023-09-06T17:06:33Z",
        "message": "Merge branch 'levsha/-IDX-2949-Mark-all-but-the-last-rules-as-manual-in-macro-' into 'master'\n\n[IDX-2949] Mark all but the last rules as manual in macro.\n\nMacros are evaluated on the very first loading phase: https://bazel.build/extending/concepts\nBecause of this commands like `bazel build ...` requst all intermediate\ntargets in the macro, even that we most likely need the last one only.\nTherefore bazel has to build or fetch all intermediate targets even\nthough it might have the last target already in the cache. \n\nSee merge request dfinity-lab/public/ic!14615"
      },
      {
        "id": "f02cb4bd490765bd37c6b96e787a6870dd1ebe0b",
        "date": "2023-09-06T17:06:32Z",
        "message": "[IDX-2949] Mark all but the last rules as manual in macro."
      },
      {
        "id": "1135fe61b7cebbc41700909500ef125379d7b88d",
        "date": "2023-09-06T14:39:33Z",
        "message": "Merge branch 'levsha/-IDX-2949-lock-haskel-dependencies-' into 'master'\n\n[IDX-2949] lock haskel dependencies.\n\nHaving them unlocked causes CI to rebuild and re-run haskel-based tests\ntoo often.\nhttps://rules-haskell.readthedocs.io/en/latest/haskell-use-cases.html#pinning \n\nSee merge request dfinity-lab/public/ic!14625"
      },
      {
        "id": "3bee851e2e6f12fe1dd8b5c075a2354c4435af3b",
        "date": "2023-09-06T14:39:31Z",
        "message": "[IDX-2949] lock haskel dependencies."
      },
      {
        "id": "f6d4621254ff3043933a4cd9906d3551ff19ff82",
        "date": "2023-09-06T10:10:43Z",
        "message": "Merge branch 'levsha/Compress-bazel-artifacts-on-client-side-' into 'master'\n\nCompress bazel artifacts on client side.\n\nThey are compressed already before storing in the cache, but compression\nis done on the cache server side.\nCompressing them on the client side won't increase overall load (as they\nare compressed anyway already) but will improve upload speed. \n\nSee merge request dfinity-lab/public/ic!13015"
      },
      {
        "id": "83b4f79497241982bdc39956c57c50d65c2588d2",
        "date": "2023-09-06T10:10:43Z",
        "message": "Compress bazel artifacts on client side."
      },
      {
        "id": "0000c93a82883a98db63af4259f7937a662a3199",
        "date": "2023-09-06T08:05:12Z",
        "message": "Merge branch 'levsha/Fix-dfx-repository-rule-on-Mac-OS-' into 'master'\n\nFix dfx repository rule on Mac OS.\n\n \n\nSee merge request dfinity-lab/public/ic!14598"
      },
      {
        "id": "d56e70865ef985666fbddc1aed855cb8cc6f3d87",
        "date": "2023-09-06T07:58:47Z",
        "message": "Merge branch 'levsha/Fix-buf-checksums-for-Mac-OS-' into 'master'\n\nFix buf checksums for Mac OS.\n\n \n\nSee merge request dfinity-lab/public/ic!14609"
      },
      {
        "id": "ce1f1fb9ba865e74c2b3b6d91b39e7ca689043e0",
        "date": "2023-09-06T05:50:56Z",
        "message": "Fix buf checksums for Mac OS."
      },
      {
        "id": "8389403462ecd3dd370dd568002a05089e41f71e",
        "date": "2023-09-05T16:04:06Z",
        "message": "Fix dfx repository rule on Mac OS."
      },
      {
        "id": "b70209ce96d2ff3d3485eaf724ba3246b4f3d340",
        "date": "2023-08-25T14:09:18Z",
        "message": "Merge branch 'basvandijk/fix-ownership-of-system-tests' into 'master'\n\nchore: fix ownership of system-tests (missing trailing slashes)\n\n \n\nSee merge request dfinity-lab/public/ic!14398"
      },
      {
        "id": "528ce5b3d67332070f4f58d4933fc151fc2a84e9",
        "date": "2023-08-24T09:03:37Z",
        "message": "Merge branch 'levsha/-IDX-2949-drop-hash_and_upload_-aggregating-targets-' into 'master'\n\n[IDX-2949] drop hash_and_upload_* aggregating targets.\n\nThey were introduced as a quick and dirty mitigations to bypass\nvisibility restrictions, but visibility restrictions should not be\nbypassed: having proper visibility will allow us to ensure that\nunreasonable dependencies will not be introduced (for example no one\nwill be able to depend on a prod ic-os image - prod ic-os image changes\non every commit and therefore targets that depend on a prod image can't\nbe cached). \n\nSee merge request dfinity-lab/public/ic!13731"
      },
      {
        "id": "478f72ce664a74819b3c47d690ae544770387139",
        "date": "2023-08-24T09:03:36Z",
        "message": "[IDX-2949] drop hash_and_upload_* aggregating targets."
      },
      {
        "id": "ccb3031882a8f1dc7f8cb44e2073c9145ee0c862",
        "date": "2023-08-23T07:46:13Z",
        "message": "Merge branch 'tmu/bump-webpki' into 'master'\n\nbump rustls-webpki\n\n \n\nSee merge request dfinity-lab/public/ic!14334"
      },
      {
        "id": "d89e2cb006ddf83fbc0899e1dd6680b838707d21",
        "date": "2023-08-21T08:44:48Z",
        "message": "Merge branch 'levsha/Update-bazel-to-6-3-2' into 'master'\n\nUpdate bazel to 6.3.2\n\n \n\nSee merge request dfinity-lab/public/ic!14268"
      },
      {
        "id": "86517c9a1a1cfccc3a99890d24aff75f6f640fc0",
        "date": "2023-08-21T08:44:47Z",
        "message": "Update bazel to 6.3.2"
      },
      {
        "id": "49d84d1dc63d1b3222802fea8f7a45e356c24018",
        "date": "2023-08-18T10:53:37Z",
        "message": "Merge branch 'dbloom/icx-proxy-logs' into 'master'\n\nfeat: improve `icx-proxy` logs\n\nEmit more logs to make debugging `icx-proxy` easier. \n\nSee merge request dfinity-lab/public/ic!14107"
      },
      {
        "id": "0b1aeb5af3a76f42543287f2fc450efedc263574",
        "date": "2023-08-17T12:13:14Z",
        "message": "Revert REGISTRY_AUTH_FILE"
      },
      {
        "id": "b66493c90798e9ed8738c12ff0c6cbffc9c54cbe",
        "date": "2023-08-17T05:53:14Z",
        "message": "Merge branch 'levsha/Roll-back-docker-bin-login-tell-podman-to-store-creds-in-the-same-file-instead-' into 'master'\n\nRoll back docker-bin login, tell podman to store creds in the same file instead.\n\n \n\nSee merge request dfinity-lab/public/ic!14204"
      },
      {
        "id": "7f25ca5c0c95da2707540a1a0f0fd0aa0bd96ff7",
        "date": "2023-08-17T05:53:13Z",
        "message": "Roll back docker-bin login, tell podman to store creds in the same file instead."
      },
      {
        "id": "67eae3be248a5a9981a8f144a8a0087a28068b0d",
        "date": "2023-08-16T14:09:31Z",
        "message": "[hotfix] Explicitly log in using docker in addition to podman."
      },
      {
        "id": "066ccd7237a71683c5ebfa782bb98ed0819b3c39",
        "date": "2023-08-15T11:10:22Z",
        "message": "Merge branch 'levsha/Update-bb-cli-to-the-latest-patch-release-5-0-21' into 'master'\n\nUpdate bb cli to the latest patch release: 5.0.21\n\n \n\nSee merge request dfinity-lab/public/ic!14159"
      },
      {
        "id": "acb1e96dc4e097a8e264486d2334517bf35e3ff3",
        "date": "2023-08-15T11:10:21Z",
        "message": "Update bb cli to the latest patch release: 5.0.21"
      },
      {
        "id": "2437a10555c5248bd1a2a810c4a81191ed6c0c00",
        "date": "2023-08-15T11:10:13Z",
        "message": "Merge branch 'move-api-boundary-to-boundary' into 'master'\n\nRefactor(BOUN-848) move code from api_boundary_nodes  to boundary_nodes\n\nFollowing the `system-tests` code organization convention `//rs/tests/<team-owner>/`, I'm moving the code from `/rs/tests/api_boundary_node` to `/rs/tests/boundary_node` and keep a single `BUILD.bazel` file. \n\nSee merge request dfinity-lab/public/ic!14160"
      }
    ],
    "email": "mykola.dzham@dfinity.org",
    "pullRequests": [
      {
        "id": 1588441302,
        "number": 142,
        "title": "use cargo toml files as source of truth ",
        "created_at": "2023-11-06T11:48:38Z",
        "closed_at": null
      }
    ],
    "pr_count": 1,
    "commit_count": 142,
    "IssuesRaised": [
      {
        "id": 1978958800,
        "number": 142,
        "title": "use cargo toml files as source of truth ",
        "created_at": "2023-11-06T11:48:38Z",
        "closed_at": null
      }
    ],
    "issue_count": 1,
    "merges": 73,
    "fixes": 10,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "710edd1c7ff12d8f6cc8c289e513e8921480e702",
        "date": "2023-11-23T00:01:30Z",
        "message": "chore(IDX-3044): use more specific glob"
      },
      {
        "id": "d0732934cd35e84b4be269dc5f0cb506b65abccb",
        "date": "2023-11-22T09:54:00Z",
        "message": "IDX-3044: Revert Temporary ignore genesis-token-canister-wasm.gz"
      },
      {
        "id": "ec2ff805b0ff7ab176db901d781a227784f86b69",
        "date": "2023-11-21T15:55:26Z",
        "message": "chore(IDX-3044): do not install python dependencies in build-ic job"
      },
      {
        "id": "2befdee3e518c0fb33b76a63ed252c7690df3f73",
        "date": "2023-11-20T22:24:55Z",
        "message": "Draft: chore(IDX-3044) Temporary ignore genesis-token-canister.wasm.gz"
      },
      {
        "id": "9c961d64f33c7b4952776d887f7d3bd165dbbc80",
        "date": "2023-11-20T10:15:04Z",
        "message": "hotfix: temporary disable one_proposal_neurons_fund_swap_participation_test"
      },
      {
        "id": "66b0fca3a31519c7f9e02900590173692b69df93",
        "date": "2023-11-16T15:25:54Z",
        "message": "chore: update rules_python to 0.26.0"
      },
      {
        "id": "2b612b324ab442574ef6748f783cfe21982fc459",
        "date": "2023-11-16T10:11:50Z",
        "message": "chore: update bb cli to 5.0.25"
      },
      {
        "id": "c5dbfa3d2510f67b5e9b2b370f4c7a249f3f55fc",
        "date": "2023-11-15T16:57:30Z",
        "message": "chore: Update bazel to 6.4.0"
      },
      {
        "id": "b861cf9fdd55e85de3ee18d495bcec2aeb7c042d",
        "date": "2023-11-08T08:48:53Z",
        "message": "Chore: Update bindgen."
      },
      {
        "id": "81d315d9c3f884874953c64e37b08c49e4758982",
        "date": "2023-11-07T17:38:08Z",
        "message": "chore: update rocksdb."
      },
      {
        "id": "cedb91805ac81dc87216af2fa93561c7b07cd6ff",
        "date": "2023-11-03T11:20:05Z",
        "message": "chore(IDX-3017): Update indoc and sync the version."
      },
      {
        "id": "b968ee6288f5cc8d5c063daca77d32c9f657e08d",
        "date": "2023-11-02T16:15:40Z",
        "message": "refactor(IDX-3017): sync version of build-info and move to the workspace."
      },
      {
        "id": "7731f1e5f029f632ef6f84cabcd244ad24c5301f",
        "date": "2023-11-02T13:40:35Z",
        "message": "chore(IDX-3017): Sync the version of static_assertions."
      },
      {
        "id": "279d179ab6f591426fbe8396e0439db1e45e8ac5",
        "date": "2023-11-02T11:36:18Z",
        "message": "chore(IDX-3017): Sync pprof version with external_crates.bzl"
      },
      {
        "id": "86665139f1fe71d2e9f636f655d98dea6557b687",
        "date": "2023-11-02T08:47:08Z",
        "message": "refactor(IDX-3017): update syn and move to the workspace."
      },
      {
        "id": "32d95f033441238e77014fb912d0a08da85fee17",
        "date": "2023-11-01T18:18:13Z",
        "message": "refactor(IDX-3017): Update clap and move to the workspace."
      },
      {
        "id": "91690b15a222a2f9ee5c964f38a5b97261af4be0",
        "date": "2023-11-01T15:42:31Z",
        "message": "chore(IDX-3017) sync indoc version."
      },
      {
        "id": "e2ef23b32d7bd69717e80c8b04eae83f23c39087",
        "date": "2023-11-01T11:39:10Z",
        "message": "chore(IDX-3017): sync the version of libsecp256k1 between Cargo.toml and bazel"
      },
      {
        "id": "ba8c8af498873ec2bd4f284f0fad43402a839eb1",
        "date": "2023-11-01T10:05:32Z",
        "message": "chore(IDX-3017): Sync version of bit-vec."
      },
      {
        "id": "119693ae434ac179eadf05d9a26b392816f9ae19",
        "date": "2023-11-01T09:54:22Z",
        "message": "refactor: simplify conditional logic."
      },
      {
        "id": "c098ffa431621d4b75a03184cd71ec0737568631",
        "date": "2023-10-31T11:10:42Z",
        "message": "chore(IDX-3017) Sync the version of derive_more."
      },
      {
        "id": "ab8783a919e1353fdb740d99f56e7f6c1115bf46",
        "date": "2023-10-30T18:11:26Z",
        "message": "refactor(IDX-3017): move serde to the workspace."
      },
      {
        "id": "5a9abf0bce375857c22a5d23cac5857719c39d8b",
        "date": "2023-10-27T12:45:14Z",
        "message": "refactor(IDX-3017) update pretty_assertions and move to the workspace."
      },
      {
        "id": "9844e2b7eef032bdfbabee02db5622973cfdd550",
        "date": "2023-10-27T08:41:16Z",
        "message": "refactor(IDX-3017): Update itertools and move to workspace."
      },
      {
        "id": "9913e450b650b05e9244abf9893e2ce432af7ff7",
        "date": "2023-10-26T17:08:24Z",
        "message": "fix: also automatically rebuild lock files for fuzzing."
      },
      {
        "id": "bf9bc00b032a18d2dbcfcfcfb7a76a562f350c9e",
        "date": "2023-10-25T10:34:55Z",
        "message": "refactor(IDX-3017) sync strum version and move to workspace."
      },
      {
        "id": "24e8a09aee6fe28da53204b82700d1686522f28e",
        "date": "2023-10-11T11:09:19Z",
        "message": "chore(IDX-3017) Sync cfg-if version in bazel to Cargo.toml"
      },
      {
        "id": "5ded0044e8da8807ce8393d557ec0a07f8d0a445",
        "date": "2023-10-11T09:51:14Z",
        "message": "chore(IDX-3017) Update simple_asn1 and move it to the workspace."
      },
      {
        "id": "7c0b3ba46455f6b30a13a962dbc38893928a6eee",
        "date": "2023-10-10T08:49:28Z",
        "message": "chore(IDX-3017): Update nix crate and move it to workspace."
      },
      {
        "id": "9f05fdbda3af595fc7d06e1dac691b8d861dbe42",
        "date": "2023-10-09T12:35:14Z",
        "message": "chore(IDX-3017): Automatically regenerate bazel cargo lock files if required."
      },
      {
        "id": "bf2bf930a90dd7482b564fa4f2e79a41b09dab72",
        "date": "2023-10-06T13:54:33Z",
        "message": "fix: Make candid test always working."
      },
      {
        "id": "1257897c883a00135d71727a3ed50771f99bf4cd",
        "date": "2023-10-06T10:47:17Z",
        "message": "chore: make icos_deploy working with ic-version that is stable by default."
      },
      {
        "id": "d1d69e6ed000543dcd3d9ad03141ced8294a3ee6",
        "date": "2023-10-06T10:04:43Z",
        "message": "refactor: improve failure propagation and simplify candid test."
      },
      {
        "id": "70226d30e400cf83b450a28b9fef1e7513477eb7",
        "date": "2023-10-05T09:16:06Z",
        "message": "refactor: [IDX-3017] Update base64 and put it into workspace."
      },
      {
        "id": "0e2ed516f48e9a74a247b7a7a4e07d2e814019b1",
        "date": "2023-10-03T14:32:28Z",
        "message": "[IC-1490] refactor: bump prometheus crate version and use workspace."
      },
      {
        "id": "519b3ff44e4c50bcf38c714a7dea34e26bd47291",
        "date": "2023-10-03T11:29:38Z",
        "message": "[IC-1490] Syncronize version of criterion."
      },
      {
        "id": "9ea236c3d0adc0f192564c2ee3acaf0c3289e8a8",
        "date": "2023-10-03T08:11:09Z",
        "message": "[IC-1490] Update and synchronise hex-literal version."
      },
      {
        "id": "34a3752ae524bab6ddc2a9f4d6b62375b8f6d660",
        "date": "2023-09-29T18:59:38Z",
        "message": "[IDX-2651] Drop unused dependency from consensus:subnet_splitting_test_colocate"
      },
      {
        "id": "7fd80d16efe0eb9669cc66bba0ef9cfb9bfe52da",
        "date": "2023-09-29T15:07:00Z",
        "message": "[IC-1490] Sync version for more crates."
      },
      {
        "id": "c9843c016b4e1e6f448eb4e04851e056521e4c4a",
        "date": "2023-09-29T14:55:53Z",
        "message": "[IDX-2651] Drop unused dependency on prod image from orchestrator tests."
      },
      {
        "id": "963cefa207358df5009543a4e6806667c23a92d9",
        "date": "2023-09-29T07:37:29Z",
        "message": "[IC-1490] Set ssh2 crate version the same in cargo as in bazel."
      },
      {
        "id": "bdb80dcec604629c511325eb116c3fa788b57d73",
        "date": "2023-09-27T14:58:51Z",
        "message": "[hotfix] Limit bazel jobs in master pipeline."
      },
      {
        "id": "f932e8d206739aef70e679cdf720144463232375",
        "date": "2023-09-27T13:59:45Z",
        "message": "Mark scalability test as flaky."
      },
      {
        "id": "d26c8c94e5dc2b8e6d2e132de3913dbce1d65efc",
        "date": "2023-09-27T12:49:20Z",
        "message": "[IDX-2949] Use boundary-api guestos from CAS instead of S3."
      },
      {
        "id": "04648bab123528c3a83faa4e586f8d797b838aa5",
        "date": "2023-09-26T19:34:12Z",
        "message": "[IDX-2651] dev images to always use fixed version."
      },
      {
        "id": "37ea36fd5c3ffda8d4f26fb74e9f41c181febd5e",
        "date": "2023-09-26T17:05:34Z",
        "message": "[IDX-3016] Limit BEP-references artifacts upload."
      },
      {
        "id": "b36254ae039ca53c3853923ac263c1bce37fdf71",
        "date": "2023-09-26T16:10:22Z",
        "message": "[IDX-2651] Let bazel figure out number of jobs automatically."
      },
      {
        "id": "8e4238cf2a0e6fb2345f6c11a65d6f9097f70f23",
        "date": "2023-09-26T10:12:23Z",
        "message": "Update rules_rust to 0.27.0"
      },
      {
        "id": "baf8682e42baf35c4fbd019709853289670ec775",
        "date": "2023-09-25T08:22:09Z",
        "message": "[IDX-2949] Adjust compare: ignore digest field."
      },
      {
        "id": "b3b8770ee6a4a9f24ba0a7fa9b16fa1f2f711e05",
        "date": "2023-09-22T14:26:20Z",
        "message": "Update rules_python to the latest version."
      },
      {
        "id": "e9b9450ab781f0a6431347ac5b65a33d4e632bc3",
        "date": "2023-09-22T12:09:40Z",
        "message": "[IDX-2651] Never try to upload artifacts containing fake IC version."
      },
      {
        "id": "4ec40bd0ee1276bb26051d55d1011ab9b1403348",
        "date": "2023-09-20T15:35:24Z",
        "message": "Fix typo."
      },
      {
        "id": "c033197f4fa52e7f229c3341d27a9ee55a27520a",
        "date": "2023-09-20T08:03:11Z",
        "message": "Keep service-worker node version in sync."
      },
      {
        "id": "19ffef8cabc7c1a52849d3b6b2ee7b8c1918a2b9",
        "date": "2023-09-19T16:43:15Z",
        "message": "Fix boundary-node-service-worker."
      },
      {
        "id": "916206485fde9bb8990cd9ce0d3da49e83c721ff",
        "date": "2023-09-15T07:07:37Z",
        "message": "[IDX-2651] Reset timeout to moderate (5 minutes) for rosetta_test."
      },
      {
        "id": "600697f431a5f99bfb1a8ce975bfbc3aea9cd959",
        "date": "2023-09-13T14:55:30Z",
        "message": "[IDX-2651] Decrease CPU reservations for spec_compliance_* to 4."
      },
      {
        "id": "503c5666e322aa393bdbcfb9cec8718720346240",
        "date": "2023-09-13T11:17:01Z",
        "message": "[IDX-2651] Allow bazel to run up to 64 jobs."
      },
      {
        "id": "68c57d1242a18a790908ee572963ea344a3cbbf6",
        "date": "2023-09-08T20:33:13Z",
        "message": "Update gazelle, go and buildifier toolchains."
      },
      {
        "id": "f02cb4bd490765bd37c6b96e787a6870dd1ebe0b",
        "date": "2023-09-06T17:06:32Z",
        "message": "[IDX-2949] Mark all but the last rules as manual in macro."
      },
      {
        "id": "3bee851e2e6f12fe1dd8b5c075a2354c4435af3b",
        "date": "2023-09-06T14:39:31Z",
        "message": "[IDX-2949] lock haskel dependencies."
      },
      {
        "id": "83b4f79497241982bdc39956c57c50d65c2588d2",
        "date": "2023-09-06T10:10:43Z",
        "message": "Compress bazel artifacts on client side."
      },
      {
        "id": "ce1f1fb9ba865e74c2b3b6d91b39e7ca689043e0",
        "date": "2023-09-06T05:50:56Z",
        "message": "Fix buf checksums for Mac OS."
      },
      {
        "id": "8389403462ecd3dd370dd568002a05089e41f71e",
        "date": "2023-09-05T16:04:06Z",
        "message": "Fix dfx repository rule on Mac OS."
      },
      {
        "id": "478f72ce664a74819b3c47d690ae544770387139",
        "date": "2023-08-24T09:03:36Z",
        "message": "[IDX-2949] drop hash_and_upload_* aggregating targets."
      },
      {
        "id": "86517c9a1a1cfccc3a99890d24aff75f6f640fc0",
        "date": "2023-08-21T08:44:47Z",
        "message": "Update bazel to 6.3.2"
      },
      {
        "id": "0b1aeb5af3a76f42543287f2fc450efedc263574",
        "date": "2023-08-17T12:13:14Z",
        "message": "Revert REGISTRY_AUTH_FILE"
      },
      {
        "id": "7f25ca5c0c95da2707540a1a0f0fd0aa0bd96ff7",
        "date": "2023-08-17T05:53:13Z",
        "message": "Roll back docker-bin login, tell podman to store creds in the same file instead."
      },
      {
        "id": "67eae3be248a5a9981a8f144a8a0087a28068b0d",
        "date": "2023-08-16T14:09:31Z",
        "message": "[hotfix] Explicitly log in using docker in addition to podman."
      },
      {
        "id": "acb1e96dc4e097a8e264486d2334517bf35e3ff3",
        "date": "2023-08-15T11:10:21Z",
        "message": "Update bb cli to the latest patch release: 5.0.21"
      }
    ],
    "line_additions": 4062,
    "line_deletions": 4494,
    "lines_effected_total": 8556,
    "rel_comm_add": 32,
    "rel_comm_del": 31,
    "rel_comm_total": 39
  },
  {
    "login": "roman-kashitsyn",
    "id": 847968,
    "totalContributions": 754,
    "github": "https://github.com/roman-kashitsyn",
    "commits": [
      {
        "id": "e029d6ccdb4b837cbaf60d6e108b0c20074ef560",
        "date": "2023-11-15T21:59:06Z",
        "message": "Merge branch 'roman-cketh-block-response-estimate' into 'master'\n\nfix(cketh): increase the block size estimate\n\nThis change bumps the eth_getBlockByNumber response size estimate to\n12KiB because most of the recent blocks are above the 6KiB limit. \n\nSee merge request dfinity-lab/public/ic!16129"
      },
      {
        "id": "557dd68dbaeec9df4b4b7ac2654339a181fe6924",
        "date": "2023-11-15T21:59:06Z",
        "message": "fix(cketh): increase the block size estimate"
      },
      {
        "id": "36db9de20a6f5c401b4a03a7b4d5f3513131d5fd",
        "date": "2023-11-14T22:15:28Z",
        "message": "Merge branch 'roman-cketh-retry-metrics' into 'master'\n\nfeat(cketh): expose metrics for HTTP call retry counts\n\nThis change introduces a new metric that tracks the number of times the\nminter retries each ETH RPC call. \n\nSee merge request dfinity-lab/public/ic!16071"
      },
      {
        "id": "36d9617892a3ea23ec93dbf143bdf9bf1a8c7bf3",
        "date": "2023-11-14T22:15:28Z",
        "message": "feat(cketh): expose metrics for HTTP call retry counts"
      },
      {
        "id": "c8f69037bd92a89c96d7635ac66ef7a44921b922",
        "date": "2023-11-14T12:03:06Z",
        "message": "Merge branch 'roman-cketh-event-count-metric' into 'master'\n\nfeat(cketh): add a metric for the total event count\n\nThis change adds a metric reporting the total number of events in the\nckETH minter event log. \n\nSee merge request dfinity-lab/public/ic!16027"
      },
      {
        "id": "c7c3962b57ebf475d579e02b06b3b0ff711c6f8b",
        "date": "2023-11-14T12:03:05Z",
        "message": "feat(cketh): add a metric for the total event count"
      },
      {
        "id": "cafb50154233ca5d97c4d17811e2c32ce1e8ded7",
        "date": "2023-11-13T11:24:11Z",
        "message": "Merge branch 'roman-cketh-upgrade-event-count' into 'master'\n\nchore(cketh): display the event count on upgrade\n\nThis change updates the minter's upgrade log entry to include not only\nthe instructions consumed but also the event number. This will allow us\nto compute the average cost of replaying an event. \n\nSee merge request dfinity-lab/public/ic!16038"
      },
      {
        "id": "db41b83f53a3df6180edc7a5536b3cf8f7c79bf9",
        "date": "2023-11-13T11:24:09Z",
        "message": "chore(cketh): display the event count on upgrade"
      },
      {
        "id": "73c4c33a568ecf82725fb8d1279e103db1a47077",
        "date": "2023-11-10T16:53:08Z",
        "message": "Merge branch 'roman-cketh-withdrawal-time' into 'master'\n\nfeat(cketh): track ETH withdrawal time\n\nWith this change, the minter will record when it accepts each ETH withdrawal request.\nThis way, the minter can track the age of each withdrawal request and expose a corresponding metric. \n\nSee merge request dfinity-lab/public/ic!15996"
      },
      {
        "id": "9fb09474258d7056701f07b322310856a0fad575",
        "date": "2023-11-10T16:53:07Z",
        "message": "feat(cketh): track ETH withdrawal time"
      },
      {
        "id": "69de95457c6995ae3dbdaafd7fd26b8745c8b1fc",
        "date": "2023-11-07T18:46:03Z",
        "message": "Merge branch 'roman-cketh-move-transactions' into 'master'\n\nrefactor(cketh): move the transactions module under state\n\nThis change turns the transactions module a submodule of the state\nmodule and limits the visibility of the EthTransactions struct fields\naccordingly. \n\nSee merge request dfinity-lab/public/ic!15940"
      },
      {
        "id": "c4612f3cc8a86c7c9fa1cb650ecee108ab49becc",
        "date": "2023-11-07T18:46:03Z",
        "message": "refactor(cketh): move the transactions module under state"
      },
      {
        "id": "b9c075f51c743b1c8fe197a17b535cdeac4226d4",
        "date": "2023-10-27T10:07:39Z",
        "message": "Merge branch 'roman-cketh-event-replay' into 'master'\n\nfeat(cketh): upgrade by replaying events\n\nThis change implements a new minter upgrade procedure that replays the\nevent log in post_upgrade to get to the latest state.\n\nCloses FI-939. \n\nCloses FI-939\n\nSee merge request dfinity-lab/public/ic!15416"
      },
      {
        "id": "219c60a1a13a70fc9e628d740d9ead446b3e7e6c",
        "date": "2023-10-27T10:07:39Z",
        "message": "feat(cketh): upgrade by replaying events"
      },
      {
        "id": "b6dc6ee78968966ca26b9ef543b504d5247479df",
        "date": "2023-10-26T11:10:21Z",
        "message": "Merge branch 'roman-ledger-u128' into 'master'\n\nfix(icrc1-ledger): block encoding for large integers\n\nThis change fixes encoding/decoding of CBOR blocks in the ICRC-1 ledger\nimplementation. Currently, the decoding fails for values in range\nu64::MAX + 1..u128::MAX.\n\nThis change:\n\n 1. Add tests exposing the issue.\n 2. Fixes the CBOR encoding issues and works around serde bugs.\n 3. Improves handling of Nats and Ints in Cbor <-> GenericValue\n    conversions. \n\nSee merge request dfinity-lab/public/ic!15622"
      },
      {
        "id": "c414b2cc69d2d539d3581eefaf54365e00f312f3",
        "date": "2023-10-26T11:10:20Z",
        "message": "fix(icrc1-ledger): block encoding for large integers"
      },
      {
        "id": "7800937551a2905555c2f185becf863b8684bf03",
        "date": "2023-10-24T15:36:18Z",
        "message": "Merge branch 'roman-cketh-ledger-metrics' into 'master'\n\nfix(icrc1-ledger): fix metrics panic for u256 tokens\n\nThis change fixes the panic in the ICRC-1 leger metrics if the token\npool size exceeds u128::MAX. \n\nSee merge request dfinity-lab/public/ic!15604"
      },
      {
        "id": "5e13ca983a83dcb51cdf41fc5393d5fd0f543108",
        "date": "2023-10-24T15:36:18Z",
        "message": "fix(icrc1-ledger): fix metrics panic for u256 tokens"
      },
      {
        "id": "f25a795147845c72479b606b81cfda3c0656822b",
        "date": "2023-10-19T15:17:49Z",
        "message": "Merge branch 'roman-utils-ensure' into 'master'\n\nchore: add the 'ensure' utility package\n\nThis change factors `ensure` utility macros from ckbtc source code into a\nseparate package so that other packages could use the macros.\n\nScope: FI-939 \n\nSee merge request dfinity-lab/public/ic!15509"
      },
      {
        "id": "49781ba9b64ad947c9fd529a30b68c35a22a49de",
        "date": "2023-10-19T15:17:49Z",
        "message": "chore: add the 'ensure' utility package"
      },
      {
        "id": "863ca074daef3afae0379d7a9958cd073bc19e2b",
        "date": "2023-10-17T09:44:26Z",
        "message": "Merge branch 'roman-cketh-withdrawal-caller' into 'master'\n\nfeat(cketh): record the initiator of a withdrawal request\n\nThis change introduces new fields to the EthWithdrawalRequest to record\nthe initiator of the withdrawal (and the corresponding subaccount).\n\nWe need this for reimbursement of failed ETH withdrawal transactions.\n\nRelated to FI-939 and FI-940. \n\nSee merge request dfinity-lab/public/ic!15401"
      },
      {
        "id": "8012f6498de4afb53190aee5d81bb8fdb6650f75",
        "date": "2023-10-17T09:44:26Z",
        "message": "feat(cketh): record the initiator of a withdrawal request"
      },
      {
        "id": "330cceebd5085ce9c3e784a838cdb87dc8130432",
        "date": "2023-10-16T09:10:00Z",
        "message": "Merge branch 'roman-cketh-event-create-tx' into 'master'\n\nfeat(cketh): events for the normal withdrawal flow [override-didc-check]\n\nThis change introduces event handling for the normal ETH withdrawal flow: accepting the request, creating, signing, sending, replacing, and finalizing a transaction. \n\nSee merge request dfinity-lab/public/ic!15221"
      },
      {
        "id": "9c1157fb3606a56064d73458d01f9dac4c45be06",
        "date": "2023-10-16T09:10:00Z",
        "message": "feat(cketh): events for the normal withdrawal flow [override-didc-check]"
      },
      {
        "id": "f784eb2b67d7c4f93371faeb247c5a587c6501cc",
        "date": "2023-10-05T21:25:31Z",
        "message": "Merge branch 'roman-cketh-units' into 'master'\n\nchore(cketh): use proper units for gas and fees\n\nThis change introduces proper type-level units for gas and fee values. \n\nSee merge request dfinity-lab/public/ic!15233"
      },
      {
        "id": "30b59b0359197a560f00b220198eec6b602dc62a",
        "date": "2023-10-05T21:25:31Z",
        "message": "chore(cketh): use proper units for gas and fees"
      },
      {
        "id": "9d9ed885f55985f9aaa9efc5760146e3003ee18b",
        "date": "2023-10-05T21:12:13Z",
        "message": "Merge branch 'gdemay/FI-832-fix-response-body-pattern' into 'master'\n\nfix(cketh): fix match pattern in case response body is too big\n\n(FI-832) \n\nSee merge request dfinity-lab/public/ic!15246"
      },
      {
        "id": "227ef450f8df8ee1ec23a00a3ea5cb61448140a3",
        "date": "2023-10-03T15:41:33Z",
        "message": "Merge branch 'roman-cketh-events-endpoint' into 'master'\n\nfeat(cketh): endpoint for minter events\n\nThis change adds a new endpoint to the minter that fetches events from\nthe minter's audit log.\n\nAdvances FI-939. \n\nSee merge request dfinity-lab/public/ic!15063"
      },
      {
        "id": "d9a2377771c07527680e85640deeb2f7069a6ad2",
        "date": "2023-10-03T15:41:33Z",
        "message": "feat(cketh): endpoint for minter events"
      },
      {
        "id": "f706213a5322ab1ef8d1e573a992529cf37825bd",
        "date": "2023-09-29T15:15:25Z",
        "message": "Merge branch 'roman-cketh-event-roundtrip' into 'master'\n\nfix(cketh): fix u256 minicbor encoding\n\nThis change fixes a bug in u256 cbor encoding and adds a round-trip test\nensuring that event encoding is correct. \n\nSee merge request dfinity-lab/public/ic!15088"
      },
      {
        "id": "9fb40537484e9fd4d575e0b6d16cb164afab8b07",
        "date": "2023-09-29T15:15:25Z",
        "message": "fix(cketh): fix u256 minicbor encoding"
      },
      {
        "id": "b0ebaf358d86efe0dbb79a9ea43c3147e9e23843",
        "date": "2023-09-27T16:57:16Z",
        "message": "Merge branch 'roman-less-chronic-pain' into 'master'\n\nchore: remove chrono from tls validation deps\n\nWe don't seem to need this dependency, and its presence breaks bumping\nthe chrono version. \n\nSee merge request dfinity-lab/public/ic!15043"
      },
      {
        "id": "78c0b8ba320bf7aeae0604d8dba293129566bfb8",
        "date": "2023-09-27T16:57:16Z",
        "message": "chore: remove chrono from tls validation deps"
      },
      {
        "id": "f9afd81cb8e00d6cd8f442f3f13bb016af2bac4b",
        "date": "2023-09-25T13:30:15Z",
        "message": "Merge branch 'roman-cketh-deposit-events' into 'master'\n\nfeat(cketh): audit events for ETH deposits\n\nThis change introduces stable structures maintaining a persistent log of state modifications.\n\nThis change only adds audit to state transitions related to ETH deposits because the withdrawal path is still in flux.\n\nThere are no tests and Candid API yet; these will follow in the next change.\n\nAdvances FI-939. \n\nSee merge request dfinity-lab/public/ic!14914"
      },
      {
        "id": "f99658335f342cf22f39f3656ff88f95311dffbb",
        "date": "2023-09-25T13:30:15Z",
        "message": "feat(cketh): audit events for ETH deposits"
      },
      {
        "id": "abac636d8a281a1e7600d876aaed10f7ce7e5040",
        "date": "2023-09-15T14:35:02Z",
        "message": "Merge branch 'roman-cketh-auditlog' into 'master'\n\nfeat(cketh): add audit log events\n\nThis change introduces the Event type representing ckETH minter state transitions and implements CBOR encoding for them using the minicbor library. \n\nSee merge request dfinity-lab/public/ic!14739"
      },
      {
        "id": "c8a52884f88a5ed6b284e3dfdc1cdf68a87e9330",
        "date": "2023-09-15T14:35:02Z",
        "message": "feat(cketh): add audit log events"
      },
      {
        "id": "b762e365f3d18f95b7699e2139009f633d1c8e6e",
        "date": "2023-09-07T19:02:28Z",
        "message": "Merge branch 'roman-cketh-closure-test-js' into 'master'\n\nchore(cketh): add a test for js principal converter\n\nThis change introduces a dependency on rules_closure bazel plugin to\ntest standalone JS code. \n\nSee merge request dfinity-lab/public/ic!14662"
      },
      {
        "id": "f280494eba73e91c558958fa5966b93499c03b5c",
        "date": "2023-09-07T19:02:27Z",
        "message": "chore(cketh): add a test for js principal converter"
      },
      {
        "id": "32bbcabca13b2b76da513427132db5bfbb579b90",
        "date": "2023-09-05T14:10:42Z",
        "message": "Merge branch 'roman-cketh-principal-conv' into 'master'\n\nfeat(cketh): add principal conversion to the dashboard\n\nThis change adds a widget that converts principal textual encoding\nto 32-byte hex strings suitable for ckETH deposits. \n\nSee merge request dfinity-lab/public/ic!14539"
      },
      {
        "id": "4a10c20ef5e6d785a8fc52ac5c68f9dd4afefd05",
        "date": "2023-09-05T14:10:42Z",
        "message": "feat(cketh): add principal conversion to the dashboard"
      },
      {
        "id": "cfb6ea3d18d36234a37e533eb835f1f3b66ef3e9",
        "date": "2023-08-31T10:16:26Z",
        "message": "fix(cketh): compute upgrade instruction count correctly"
      },
      {
        "id": "fbb8a68c377b7255857bddad2667b413bf6e48b3",
        "date": "2023-08-31T09:41:14Z",
        "message": "Merge branch 'roman-cketh-dashboard-2' into 'master'\n\nfeat(cketh): improve the HTML dashboard [override-didc-check]\n\nOverview:\n* Add more details about the minted events.\n* Add separators when displaying large numeric values.\n* Sort deposits by their mint index, descending.\n* Display rejected deposits.\n* Display the events table only if there are events.\n* Remove the `dump_state_for_debugging` endpoint because the dashboard replaced it. \n\nSee merge request dfinity-lab/public/ic!14476"
      },
      {
        "id": "466f9dfd976d4d00d6e16cf7d6f2454abb45f0d3",
        "date": "2023-08-31T09:41:14Z",
        "message": "feat(cketh): improve the HTML dashboard [override-didc-check]"
      },
      {
        "id": "18a555ea0648171f011e3a69baa876816cda177a",
        "date": "2023-08-30T15:37:20Z",
        "message": "Merge branch 'roman-cketh-init-pubkey' into 'master'\n\nfix(cketh): init pubkey on deploy\n\nThis change ensures that the ckETH minter initializes its public key on\nfirst deployment. This way, the minter address becomes visible on the\ndashboard even if there are no withdrawals yet. \n\nSee merge request dfinity-lab/public/ic!14482"
      },
      {
        "id": "02e72f974aeacfec5bd6e629654988cee198ce1a",
        "date": "2023-08-30T15:37:20Z",
        "message": "fix(cketh): init pubkey on deploy"
      },
      {
        "id": "e64ffb8e9f5c10daf14e5dcd1a39aea9f53559f6",
        "date": "2023-08-28T17:48:16Z",
        "message": "Merge branch 'roman-cketh-dashboard' into 'master'\n\nfeat(cketh): add an HTML dashboard\n\nThis change introduces a new /dashboard HTTP endpoint to the ckETH\nminter for debugging purposes. \n\nSee merge request dfinity-lab/public/ic!14422"
      },
      {
        "id": "c74dfe965cc3de82c8c03cc4814f383658fe57ff",
        "date": "2023-08-28T17:48:16Z",
        "message": "feat(cketh): add an HTML dashboard"
      },
      {
        "id": "e4dbcde1fd4290ab03dd36aaf49fde25ab8d4ce9",
        "date": "2023-08-25T11:45:44Z",
        "message": "feat(cketh): print all logs to debug stream"
      },
      {
        "id": "b8496e9a08ec9233522c32a4b74086009fcfb145",
        "date": "2023-08-24T11:48:48Z",
        "message": "Merge branch 'roman-mint-cketh' into 'master'\n\nfeat(cketh): mint ckETH on the ledger\n\nThis change hooks minting ckETH tokens on the ledger to the ETH log processing logic.\n\nNotable changes:\n\n1. The `ReceivedEthEvent` moved from `endpoints` to `eth_logs`; its fields have more precise types now.\n2. We identify deposits with \"event sources\" (txhash + log index) instead of simply a transaction hash. Rationale: A single Ethereum transaction can have multiple deposits if they go through another smart contract.\n3. There is a new \"task queue\" for mint events. The minter spawns a minting task when new deposits arrive.\n4. Init args require the ledger canister_id now.\n\nCloses FI-868. \n\nCloses FI-868\n\nSee merge request dfinity-lab/public/ic!14181"
      },
      {
        "id": "7259200055f79607a28d067ff42a8cb889d69256",
        "date": "2023-08-24T11:48:48Z",
        "message": "feat(cketh): mint ckETH on the ledger"
      },
      {
        "id": "a643b0cc34e43c87b89ca0c261bc6131b89ddb6f",
        "date": "2023-08-23T08:50:39Z",
        "message": "Merge branch 'roman-cketh-obsolete' into 'master'\n\nchore(cketh): remove obsolete endpoints [override-didc-check]\n\nThis change removes obsolete ckETH endpoints: display_logs and\neip_2930_transaction_price. \n\nSee merge request dfinity-lab/public/ic!14335"
      },
      {
        "id": "4cd4b6e8bc3a3bd6d7df85f08b514694b62824a1",
        "date": "2023-08-23T08:50:38Z",
        "message": "chore(cketh): remove obsolete endpoints [override-didc-check]"
      },
      {
        "id": "add6c223394d83a415dec81b04861dedc460545a",
        "date": "2023-08-22T14:47:08Z",
        "message": "Merge branch 'roman-cketh-http-resp' into 'master'\n\nfeat(cketh): adaptive HTTP response sizes in the minter\n\nThis change optimizes the handling of HTTP outcall responses in ckETH minter. Notable changes:\n\n* We define the expected payload size for each response type.\n* The eth_rpc::call function attempts to increase the response size if the response size limit is reached.\n* The HTTP cleanup query call applies payload transformation to ensure that the body is deterministic even if the field order differs across providers.\n\nCloses FI-891. \n\nCloses FI-891\n\nSee merge request dfinity-lab/public/ic!14245"
      },
      {
        "id": "8edcfbe31d054be7cc9e0512cb208b746d3bc1c4",
        "date": "2023-08-22T14:47:08Z",
        "message": "feat(cketh): adaptive HTTP response sizes in the minter"
      },
      {
        "id": "6ee1ba08157b72596729ca57d7ba420b5d9c1477",
        "date": "2023-08-16T21:18:01Z",
        "message": "Merge branch 'roman-p2h' into 'master'\n\nfeat(cketh): add a binary to encode principals as ETH bytes32\n\nThis change introduces a binary converting a principal to a bytes32\ntypes to facilitate ETH -> ckETH conversions. \n\nSee merge request dfinity-lab/public/ic!14196"
      },
      {
        "id": "2fa8f78a1dd5eb941d512789f033e9d326c09289",
        "date": "2023-08-16T21:18:00Z",
        "message": "feat(cketh): add a binary to encode principals as ETH bytes32"
      },
      {
        "id": "8b07e532f158d6c3463d18d7d0caafab34b6f232",
        "date": "2023-08-11T08:53:18Z",
        "message": "Merge branch 'roman-cketh-tx-test' into 'master'\n\nchore(cketh): add a test for signed tx encoding\n\nThis change adds a test verifying that cketh custom signed transaction encoding\nagrees with the ethers-core package. \n\nSee merge request dfinity-lab/public/ic!14102"
      },
      {
        "id": "dab3ed462b83fa75e5c35fce9a5f99dd463e96d5",
        "date": "2023-08-11T08:53:16Z",
        "message": "chore(cketh): add a test for signed tx encoding"
      },
      {
        "id": "4715d40cbf08330b608f0deb52c973e42c63cf17",
        "date": "2023-08-09T09:01:04Z",
        "message": "Merge branch 'shuo/state_machine_tests_registry' into 'master'\n\nfix(state_machine_test): initialize node keys in the registry\n\nThe state_machine_test library displays warnings of missing node keys.\nThis change adds node key initialization to the state machine registry setup procedure to address the issue. \n\nSee merge request dfinity-lab/public/ic!14029"
      },
      {
        "id": "5dd33f4a09bc7f193cc0e9c42eea5df32855c527",
        "date": "2023-08-07T18:25:47Z",
        "message": "Merge branch 'roman-cketh-minter-metrics' into 'master'\n\nfeat(cketh): add basic metrics for the minter canister\n\nThis change introduces a few metrics for the ckETH minter canister. \n\nSee merge request dfinity-lab/public/ic!14004"
      },
      {
        "id": "2c77ef36f830c493cc5088af47bf98fb58f358c9",
        "date": "2023-08-07T18:25:47Z",
        "message": "feat(cketh): add basic metrics for the minter canister"
      },
      {
        "id": "20705508438f943691d0beaa30e4bd6bc38f39f8",
        "date": "2023-08-04T14:58:12Z",
        "message": "Merge branch 'maciej-icrc2-index' into 'master'\n\nchore(FI-872): handle approve operations in the icrc index\n\n \n\nSee merge request dfinity-lab/public/ic!13972"
      },
      {
        "id": "c2760cbec14443ac31fbae68a730da345dbd06f7",
        "date": "2023-08-04T11:56:42Z",
        "message": "Merge branch 'roman-cketh-ledger' into 'master'\n\nfeat(cketh): experimental: add sepolia cketh ledger deployment details\n\nThis change updates the cketh sepolia testnet deployment information. \n\nSee merge request dfinity-lab/public/ic!13962"
      },
      {
        "id": "ffa8cb85ed7dcb627d00ebe6dae0134bae7c68f2",
        "date": "2023-08-04T11:56:41Z",
        "message": "feat(cketh): experimental: add sepolia cketh ledger deployment details"
      },
      {
        "id": "0eca83dcea4c146eaf6feceb9b86e0fd12db3d49",
        "date": "2023-08-03T15:01:07Z",
        "message": "Merge branch 'roman-u256-ledger' into 'master'\n\nfeat(icrc1): add ledger supporting u256 tokens\n\nOutline of the change:\n\n- [x] Build two versions of the archive, ledger, and index-ng canister:\n      with 64-bit tokens and 256-bit tokens.\n      The \"u256-tokens\" feature controls the token size.\n- [x] Parameterize the test suites to run on both versions of the\n      canister suites.\n- [x] Publish the new canister versions on CI. \n\nSee merge request dfinity-lab/public/ic!13934"
      },
      {
        "id": "4ac20da6e49e009de84b15a93a008ffe7afe6225",
        "date": "2023-08-03T15:01:07Z",
        "message": "feat(icrc1): add ledger supporting u256 tokens"
      },
      {
        "id": "2ac0fe91cd737977bf039c55502a31b363884c69",
        "date": "2023-08-03T11:21:29Z",
        "message": "Merge branch 'roman-cert-state-reader' into 'master'\n\nfeat(http_endpoint): enable absence proofs\n\nOutline of the change:\n\n- [x] Introduce a new interface for reading certified states: the\n      CertifiedStateReader. This API allows the caller to inspect the\n      replicated state before requesting a certified read on the same\n      state. This change is necessary to ensure the HTTP endpoint\n      checks are consistent with the certified state.\n- [x] Request absence proofs in the HTTP handler instead of returning\n      errors.\n- [x] Remove the spec test exclusions.\n\nCloses MR-249. \n\nCloses MR-249\n\nSee merge request dfinity-lab/public/ic!13886"
      },
      {
        "id": "7376e8c9584f8761e52bcdb51faadc2b7045f9f1",
        "date": "2023-08-03T11:21:28Z",
        "message": "feat(http_endpoint): enable absence proofs"
      }
    ],
    "email": "roman.kashitsyn@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 69,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 35,
    "fixes": 6,
    "feats": 20,
    "non_merge_commits": [
      {
        "id": "557dd68dbaeec9df4b4b7ac2654339a181fe6924",
        "date": "2023-11-15T21:59:06Z",
        "message": "fix(cketh): increase the block size estimate"
      },
      {
        "id": "36d9617892a3ea23ec93dbf143bdf9bf1a8c7bf3",
        "date": "2023-11-14T22:15:28Z",
        "message": "feat(cketh): expose metrics for HTTP call retry counts"
      },
      {
        "id": "c7c3962b57ebf475d579e02b06b3b0ff711c6f8b",
        "date": "2023-11-14T12:03:05Z",
        "message": "feat(cketh): add a metric for the total event count"
      },
      {
        "id": "db41b83f53a3df6180edc7a5536b3cf8f7c79bf9",
        "date": "2023-11-13T11:24:09Z",
        "message": "chore(cketh): display the event count on upgrade"
      },
      {
        "id": "9fb09474258d7056701f07b322310856a0fad575",
        "date": "2023-11-10T16:53:07Z",
        "message": "feat(cketh): track ETH withdrawal time"
      },
      {
        "id": "c4612f3cc8a86c7c9fa1cb650ecee108ab49becc",
        "date": "2023-11-07T18:46:03Z",
        "message": "refactor(cketh): move the transactions module under state"
      },
      {
        "id": "219c60a1a13a70fc9e628d740d9ead446b3e7e6c",
        "date": "2023-10-27T10:07:39Z",
        "message": "feat(cketh): upgrade by replaying events"
      },
      {
        "id": "c414b2cc69d2d539d3581eefaf54365e00f312f3",
        "date": "2023-10-26T11:10:20Z",
        "message": "fix(icrc1-ledger): block encoding for large integers"
      },
      {
        "id": "5e13ca983a83dcb51cdf41fc5393d5fd0f543108",
        "date": "2023-10-24T15:36:18Z",
        "message": "fix(icrc1-ledger): fix metrics panic for u256 tokens"
      },
      {
        "id": "49781ba9b64ad947c9fd529a30b68c35a22a49de",
        "date": "2023-10-19T15:17:49Z",
        "message": "chore: add the 'ensure' utility package"
      },
      {
        "id": "8012f6498de4afb53190aee5d81bb8fdb6650f75",
        "date": "2023-10-17T09:44:26Z",
        "message": "feat(cketh): record the initiator of a withdrawal request"
      },
      {
        "id": "9c1157fb3606a56064d73458d01f9dac4c45be06",
        "date": "2023-10-16T09:10:00Z",
        "message": "feat(cketh): events for the normal withdrawal flow [override-didc-check]"
      },
      {
        "id": "30b59b0359197a560f00b220198eec6b602dc62a",
        "date": "2023-10-05T21:25:31Z",
        "message": "chore(cketh): use proper units for gas and fees"
      },
      {
        "id": "d9a2377771c07527680e85640deeb2f7069a6ad2",
        "date": "2023-10-03T15:41:33Z",
        "message": "feat(cketh): endpoint for minter events"
      },
      {
        "id": "9fb40537484e9fd4d575e0b6d16cb164afab8b07",
        "date": "2023-09-29T15:15:25Z",
        "message": "fix(cketh): fix u256 minicbor encoding"
      },
      {
        "id": "78c0b8ba320bf7aeae0604d8dba293129566bfb8",
        "date": "2023-09-27T16:57:16Z",
        "message": "chore: remove chrono from tls validation deps"
      },
      {
        "id": "f99658335f342cf22f39f3656ff88f95311dffbb",
        "date": "2023-09-25T13:30:15Z",
        "message": "feat(cketh): audit events for ETH deposits"
      },
      {
        "id": "c8a52884f88a5ed6b284e3dfdc1cdf68a87e9330",
        "date": "2023-09-15T14:35:02Z",
        "message": "feat(cketh): add audit log events"
      },
      {
        "id": "f280494eba73e91c558958fa5966b93499c03b5c",
        "date": "2023-09-07T19:02:27Z",
        "message": "chore(cketh): add a test for js principal converter"
      },
      {
        "id": "4a10c20ef5e6d785a8fc52ac5c68f9dd4afefd05",
        "date": "2023-09-05T14:10:42Z",
        "message": "feat(cketh): add principal conversion to the dashboard"
      },
      {
        "id": "cfb6ea3d18d36234a37e533eb835f1f3b66ef3e9",
        "date": "2023-08-31T10:16:26Z",
        "message": "fix(cketh): compute upgrade instruction count correctly"
      },
      {
        "id": "466f9dfd976d4d00d6e16cf7d6f2454abb45f0d3",
        "date": "2023-08-31T09:41:14Z",
        "message": "feat(cketh): improve the HTML dashboard [override-didc-check]"
      },
      {
        "id": "02e72f974aeacfec5bd6e629654988cee198ce1a",
        "date": "2023-08-30T15:37:20Z",
        "message": "fix(cketh): init pubkey on deploy"
      },
      {
        "id": "c74dfe965cc3de82c8c03cc4814f383658fe57ff",
        "date": "2023-08-28T17:48:16Z",
        "message": "feat(cketh): add an HTML dashboard"
      },
      {
        "id": "e4dbcde1fd4290ab03dd36aaf49fde25ab8d4ce9",
        "date": "2023-08-25T11:45:44Z",
        "message": "feat(cketh): print all logs to debug stream"
      },
      {
        "id": "7259200055f79607a28d067ff42a8cb889d69256",
        "date": "2023-08-24T11:48:48Z",
        "message": "feat(cketh): mint ckETH on the ledger"
      },
      {
        "id": "4cd4b6e8bc3a3bd6d7df85f08b514694b62824a1",
        "date": "2023-08-23T08:50:38Z",
        "message": "chore(cketh): remove obsolete endpoints [override-didc-check]"
      },
      {
        "id": "8edcfbe31d054be7cc9e0512cb208b746d3bc1c4",
        "date": "2023-08-22T14:47:08Z",
        "message": "feat(cketh): adaptive HTTP response sizes in the minter"
      },
      {
        "id": "2fa8f78a1dd5eb941d512789f033e9d326c09289",
        "date": "2023-08-16T21:18:00Z",
        "message": "feat(cketh): add a binary to encode principals as ETH bytes32"
      },
      {
        "id": "dab3ed462b83fa75e5c35fce9a5f99dd463e96d5",
        "date": "2023-08-11T08:53:16Z",
        "message": "chore(cketh): add a test for signed tx encoding"
      },
      {
        "id": "2c77ef36f830c493cc5088af47bf98fb58f358c9",
        "date": "2023-08-07T18:25:47Z",
        "message": "feat(cketh): add basic metrics for the minter canister"
      },
      {
        "id": "ffa8cb85ed7dcb627d00ebe6dae0134bae7c68f2",
        "date": "2023-08-04T11:56:41Z",
        "message": "feat(cketh): experimental: add sepolia cketh ledger deployment details"
      },
      {
        "id": "4ac20da6e49e009de84b15a93a008ffe7afe6225",
        "date": "2023-08-03T15:01:07Z",
        "message": "feat(icrc1): add ledger supporting u256 tokens"
      },
      {
        "id": "7376e8c9584f8761e52bcdb51faadc2b7045f9f1",
        "date": "2023-08-03T11:21:28Z",
        "message": "feat(http_endpoint): enable absence proofs"
      }
    ],
    "line_additions": 5942,
    "line_deletions": 1834,
    "lines_effected_total": 7776,
    "rel_comm_add": 25,
    "rel_comm_del": 16,
    "rel_comm_total": 27
  },
  {
    "login": "marko-k0",
    "id": 10345875,
    "totalContributions": 616,
    "github": "https://github.com/marko-k0",
    "commits": [
      {
        "id": "b1b39fe682288839d59bbe53ef720c978a7b3729",
        "date": "2023-11-22T15:16:07Z",
        "message": "chore(tnet): tolerate CI failure [hotfix]"
      },
      {
        "id": "4728d0e06953933da87fd74e1d60f96b48e66ff5",
        "date": "2023-11-22T11:55:29Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-22-1000' into 'master'\n\nUpdating container base images refs [2023-11-22-1000]\n\n \n\nSee merge request dfinity-lab/public/ic!16262"
      },
      {
        "id": "57f0e39e3834bc61db265f9f58ef70382564158a",
        "date": "2023-11-22T09:54:00Z",
        "message": "Merge branch 'revert-e7bfe85e' into 'master'\n\nIDX-3044: Revert Temporary ignore genesis-token-canister-wasm.gz\n\nRevert \"Merge branch 'levsha/chore-IDX-3044-Temporary-ignore-genesis-token-canister-wasm-gz' into 'master'\"\nNew rust has probably fixed it.\n\nThis reverts merge request !16228 \n\nSee merge request dfinity-lab/public/ic!16253"
      },
      {
        "id": "fed1c4bfb197b85805d180dbf30467fc3a273bc3",
        "date": "2023-11-22T09:30:06Z",
        "message": "Merge branch 'marko-hotfix-ic-version-fix' into 'master'\n\nfix(ic version): use it for hotifx branch\n\nHotfix branches require the real git version. \n\nSee merge request dfinity-lab/public/ic!16260"
      },
      {
        "id": "8723dc3080ebbd5d0ae1d8f11545d6ba1df43d3e",
        "date": "2023-11-22T08:26:52Z",
        "message": "fix(ic version): use it for hotifx branch"
      },
      {
        "id": "12f2e88f95b01f9b6eff6c6dd5f39adc0b5188bf",
        "date": "2023-11-21T11:56:27Z",
        "message": "Merge branch 'marko-tag-tnet-test-to-ch' into 'master'\n\nchore(tnet): tag to ch cluster\n\nSetting `tnet-test` to run in **CH** as CI runner requires connectivity to nodes. Adding `TNET_` prefix to vars that are picked from env. \n\nSee merge request dfinity-lab/public/ic!16233"
      },
      {
        "id": "60afe54f52efe65f71e2f7a1d808bd72a0d75fce",
        "date": "2023-11-21T11:56:27Z",
        "message": "chore(tnet): tag to ch cluster"
      },
      {
        "id": "9edc91acf83772c231a358a55161121d9f58a0ff",
        "date": "2023-11-21T09:28:50Z",
        "message": "Merge branch 'marko-tnet-upload' into 'master'\n\nrefactor(tnet): providing upload api\n\n \n\nSee merge request dfinity-lab/public/ic!16218"
      },
      {
        "id": "8ad7082761584082dd32e496f61c068f507f40b2",
        "date": "2023-11-21T09:28:50Z",
        "message": "refactor(tnet): providing upload api"
      },
      {
        "id": "27e659078632e1ae892475826c4a41c847e70b13",
        "date": "2023-11-21T09:23:03Z",
        "message": "Merge branch 'marko-fix-rosetta-api-push' into 'master'\n\nDraft: fix(rosseta-release): docker auth\n\n \n\nSee merge request dfinity-lab/public/ic!16221"
      },
      {
        "id": "1bff0bba8a6505084cfe1f73314763529c2b188a",
        "date": "2023-11-21T09:23:03Z",
        "message": "Draft: fix(rosseta-release): docker auth"
      },
      {
        "id": "adbb22678fc7f221ef8d254a30dc2dd89c6b4ae3",
        "date": "2023-11-20T17:46:49Z",
        "message": "Merge branch 'remove-python-requirements-from-shasum' into 'master'\n\nchore(IDX): remove requirements from checksum\n\n \n\nSee merge request dfinity-lab/public/ic!16070"
      },
      {
        "id": "4a39b9c6460f62a64001e5ed8df31d3db78b6d55",
        "date": "2023-11-16T15:25:27Z",
        "message": "Merge branch 'marko-add-vim-and-clippy' into 'master'\n\nfeat(container-run): add vim and cargo clippy\n\n \n\nSee merge request dfinity-lab/public/ic!16143"
      },
      {
        "id": "9c1d3177bc0a95836ef0cc8d58445cdd8483b60d",
        "date": "2023-11-16T15:25:27Z",
        "message": "feat(container-run): add vim and cargo clippy"
      },
      {
        "id": "4a894550777bca7a60a78ee1d5e8ed704914c167",
        "date": "2023-11-16T06:25:48Z",
        "message": "Merge branch 'eero/remove-old-test' into 'master'\n\nRemove old HostOS upgrade test\n\n \n\nSee merge request dfinity-lab/public/ic!16133"
      },
      {
        "id": "377f36ac9eb9c6153c1fd589c956eb9e2aedf768",
        "date": "2023-11-15T16:57:41Z",
        "message": "Merge branch 'testnets-start-stop' into 'master'\n\nfeat(k8s-testnet): start/stop vms\n\n \n\nSee merge request dfinity-lab/public/ic!16109"
      },
      {
        "id": "4bf5d067f8c71033924ed59df975990ee17c918f",
        "date": "2023-11-15T14:44:01Z",
        "message": "Merge branch 'marko-tnet-no-init' into 'master'\n\nchore(tnet): extending no init\n\n* renaming `--init-nns` to `--init` and extending it so no config images are generated and created VMs must not be started\n* adding image_url() function\n* making some attributes public \n\nSee merge request dfinity-lab/public/ic!16068"
      },
      {
        "id": "74ccc4d0869591a497cb7529ae6dbd7993e20c0a",
        "date": "2023-11-15T14:43:58Z",
        "message": "chore(tnet): extending no init"
      },
      {
        "id": "285204121acdac83c600ee2e26074604fe0af858",
        "date": "2023-11-14T17:41:10Z",
        "message": "Merge branch 'marko-update-kubic-apt' into 'master'\n\nfix(container): kubic apt repo\n\n \n\nSee merge request dfinity-lab/public/ic!16082"
      },
      {
        "id": "0a50fab6847dd408c486f57b8897d58205193795",
        "date": "2023-11-14T17:41:09Z",
        "message": "fix(container): kubic apt repo"
      },
      {
        "id": "f7fd070fdd27d6bd4d4d209e962b5061ea9920ec",
        "date": "2023-11-14T16:01:09Z",
        "message": "Merge branch 'marko-bn-srv-worker-apt' into 'master'\n\nfix(service-worker): remove apt install\n\nRemoving un-needed apt packages. \n\nSee merge request dfinity-lab/public/ic!16078"
      },
      {
        "id": "fd21bfd478563c1c2a0afbbf7d5d6d01645cd2a7",
        "date": "2023-11-14T16:01:09Z",
        "message": "fix(service-worker): remove apt install"
      },
      {
        "id": "5616d21b8ebfb80c0a1760ba534df8cb48a8563c",
        "date": "2023-11-13T18:45:46Z",
        "message": "Merge branch 'IDX-3034-tnet-ttl' into 'master'\n\nfeat(k8s-testnet): implement terminate-time\n\n \n\nSee merge request dfinity-lab/public/ic!16045"
      },
      {
        "id": "5a11f1474df069a0da0aeea6855c32afd9812ed0",
        "date": "2023-11-13T17:28:38Z",
        "message": "Merge branch 'vsekar/fix_export_prefix' into 'master'\n\nfix(fuzzing): Add option to filter `canister_` prefix from export names\n\nCorresponding wasm-smith [change](https://github.com/dfinity/wasm-tools/commit/4d402ea9ff1d17cfe3d2ef4654428ac326c94475) \n\nSee merge request dfinity-lab/public/ic!16021"
      },
      {
        "id": "a69ebffbec33cfd1154a2484963c41f74b09b431",
        "date": "2023-11-13T17:22:17Z",
        "message": "Merge branch 'remove-cargo-audit' into 'master'\n\nchore(IDX): remove cargo-audit\n\n \n\nSee merge request dfinity-lab/public/ic!16049"
      },
      {
        "id": "a88e89feac243b4abf3f19440329a8d9b4f969fb",
        "date": "2023-11-13T10:17:25Z",
        "message": "Merge branch 'marko-optional-tnet-init' into 'master'\n\nchore(tnet): don't init nns by default\n\nFor system tests, driver's logic will be used. \n\nSee merge request dfinity-lab/public/ic!16034"
      },
      {
        "id": "d451acc7a0b3d83b20b708f73ffa341f28bed671",
        "date": "2023-11-13T10:17:25Z",
        "message": "chore(tnet): don't init nns by default"
      },
      {
        "id": "cecffcfbd8f9f3db5ea407af6f07ee42c2b3ff6e",
        "date": "2023-11-09T12:50:14Z",
        "message": "Merge branch 'marko-bazel-test-macos' into 'master'\n\nchore(bazel): bazel test on macos\n\nRun subset of tests on macos. \n\nSee merge request dfinity-lab/public/ic!15979"
      },
      {
        "id": "7778913ff3dc2e576f63a2b51537f090e34fa5c2",
        "date": "2023-11-09T12:50:13Z",
        "message": "chore(bazel): bazel test on macos"
      },
      {
        "id": "4ed0b214c61f3f29d116f6ab2f900a54f5a1b458",
        "date": "2023-11-08T11:15:23Z",
        "message": "Merge branch 'move-base-image-build-off-legacy' into 'master'\n\nRefactor: move base image build off legacy image\n\n \n\nSee merge request dfinity-lab/public/ic!15959"
      },
      {
        "id": "533789fc2bd70076436d4b57defbf6355b78fb0d",
        "date": "2023-11-08T08:48:54Z",
        "message": "Merge branch 'levsha/Chore-Update-bindgen-' into 'master'\n\nChore: Update bindgen.\n\nUse the version that is already in the lock file (as dependency of\nanother crate) so we will have the single version of bindgen only. \n\nSee merge request dfinity-lab/public/ic!15949"
      },
      {
        "id": "44efff4bc0cdfff90b8d89d85bb6676ddd01e7e4",
        "date": "2023-11-07T18:01:39Z",
        "message": "Merge branch 'basvandijk/install_xrc_mock' into 'master'\n\nchore: support testing the upgrade of the cycles-minting canister on the ic_mainnet_nns_recovery testnet\n\nThis allows testing the upgrade of the `cycles-minting` canister by installing the XRC mock canister and bringing the tools `didc` and `xxd` into scope. \n\nSee merge request dfinity-lab/public/ic!15912"
      },
      {
        "id": "7f23ab123070af8088a97828b08b2e3d50b232cd",
        "date": "2023-11-07T17:38:10Z",
        "message": "Merge branch 'levsha/chore-update-rocksdb-' into 'master'\n\nchore: update rocksdb.\n\nThis will also update librocksdb-sys as dependency and therefore should\nfix builds on MacOS with the new clang/llvm: https://github.com/rust-rocksdb/rust-rocksdb/issues/768 \n\nSee merge request dfinity-lab/public/ic!15943"
      },
      {
        "id": "f858fabeb5e26a5292ebccb2a63d124e1d35d9fb",
        "date": "2023-11-06T15:16:54Z",
        "message": "Merge branch 'igornovg/icbn-new-cache' into 'master'\n\nfeat(BOUN-944 BOUN-932): switch to new caching library, fix some bugs\n\n* `stretto` crate seems to suck and consume 7GB+ of memory on canary under prod load with nothing in the cache (memory leak or fragmentation). Switch to `moka` crate which I tested in canary and it works nicely, memory usage is less than 700MB on average\n* Don't cache non-2xx responses (maybe we should cache 4xx too, not sure, to be discussed)\n* Generate two metric gauges with cache stats (number of items in cache and the total size in bytes)\n* Improve cache tests a bit\n* As a side hustle fix the problem with not logging responses with an empty body - this fixes e.g. 202 responses to `call` and things like this \n\nSee merge request dfinity-lab/public/ic!15899"
      },
      {
        "id": "700836dfe419531aa81bc7ee9370e175a3590a06",
        "date": "2023-11-06T10:11:50Z",
        "message": "Merge branch 'move-build-base-images-off-legacy-job' into 'master'\n\nMove build base images off legacy job\n\n \n\nSee merge request dfinity-lab/public/ic!15892"
      },
      {
        "id": "fc7b1361ce53da1fb9c94aa5cd3b52046200086f",
        "date": "2023-11-02T08:47:09Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-update-syn-and-move-to-the-workspace-' into 'master'\n\nrefactor(IDX-3017): update syn and move to the workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15843"
      },
      {
        "id": "ece1e1baa8dc4f847b63ada3f4b636c706414c95",
        "date": "2023-11-01T20:31:05Z",
        "message": "refactor(IDX-3017): move chrono to the workspace"
      },
      {
        "id": "dc31fca234aeda2f506bd0ca8ad5796574711fb0",
        "date": "2023-11-01T18:18:15Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-Update-clap-and-move-to-the-workspace-' into 'master'\n\nrefactor(IDX-3017): Update clap and move to the workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15831"
      },
      {
        "id": "d2f33b93a6f8d0b9bc02ad5c1ee6ae6be27a3cad",
        "date": "2023-11-01T15:42:31Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-sync-indoc-version-' into 'master'\n\nchore(IDX-3017) sync indoc version.\n\n \n\nSee merge request dfinity-lab/public/ic!15821"
      },
      {
        "id": "eed3219f1e5095195b09af6132732790165cba56",
        "date": "2023-11-01T13:44:36Z",
        "message": "Merge branch 'arshavir/fix-sns-cli-2' into 'master'\n\nchore(SNS-CLI): Matched Funding / Publish `sns-test-feature`\n\nThis MR adds a rule for publishing `sns-test-feature` (internal name `sns--test_feature`) to the CDN.\n\nThis is needed because SNS-CLI depends on the NNS Governance crate, so in a testing environment one cannot always use the production SNS-CLI version to deploy an SNS that is supposed to have some unreleased features. \n\nSee merge request dfinity-lab/public/ic!15818"
      },
      {
        "id": "ceb2af4aca3005be0af700dca0aeb8bfb5896107",
        "date": "2023-11-01T11:07:00Z",
        "message": "Merge branch 'marko-check-bins-for-libssl' into 'master'\n\nchore(libssl): verify bins for libssl\n\n \n\nSee merge request dfinity-lab/public/ic!15810"
      },
      {
        "id": "9ec54d1a8bc44d843f8066b2e365262a806409f3",
        "date": "2023-11-01T11:07:00Z",
        "message": "chore(libssl): verify bins for libssl"
      },
      {
        "id": "04a86b8a1c5912f1622989c926c02c2681ea5954",
        "date": "2023-10-31T10:56:35Z",
        "message": "Merge branch 'IDX-3024-cloudflare-r2-tag' into 'master'\n\nchore(IDX-3024): publish to r2 on tag only\n\nPublish to R2 only on `release-*` tag as [requested](https://dfinity.slack.com/archives/C01DB8MQ5M1/p1698740911025259?thread_ts=1698685731.601509&cid=C01DB8MQ5M1).\n\nScope of IDX-3024 \n\nCloses IDX-3024\n\nSee merge request dfinity-lab/public/ic!15781"
      },
      {
        "id": "a8ba613945ae610c4b0a3ed1536fbfcb6439d51e",
        "date": "2023-10-31T10:56:35Z",
        "message": "chore(IDX-3024): publish to r2 on tag only"
      },
      {
        "id": "4c89e7af3177a25c50eae4816e915d953981c275",
        "date": "2023-10-30T14:55:16Z",
        "message": "Merge branch 'marko-clean-old-k8s-tools' into 'master'\n\nchore(tnet): tnet/tools/k8s cleanup\n\nIs replaced by `rs/tests/k8s`. \n\nSee merge request dfinity-lab/public/ic!15749"
      },
      {
        "id": "7740aad8194fafc14e10d9cfce8d2deb8a3c0a0e",
        "date": "2023-10-30T13:49:32Z",
        "message": "Merge branch 'chmllr/sleep-longer-when-waiting-for-recovery-cup' into 'master'\n\ntest(consensus): sleep longer when waiting for the recovery cup\n\nIncrease the waiting timeout from 10 to 15 seconds, when a recovery CUP was not discovered on the subnet. \n\nSee merge request dfinity-lab/public/ic!15747"
      },
      {
        "id": "af8b1f7194f602b4e289f876527df0107fc37292",
        "date": "2023-10-30T12:44:39Z",
        "message": "chore(tnet): tnet/tools/k8s cleanup"
      },
      {
        "id": "e3bb211720412a775572fd21dae665eeb64626b9",
        "date": "2023-10-30T12:39:15Z",
        "message": "Merge branch 'chmllr/improve-unstuck-test' into 'master'\n\ntest(consensus):  fix the test by checking all nodes for hash mismatches\n\nThe current test checks exactly one node for the expected log, but then tries to execute a script on all nodes. But since some of them might be slightly behind, the script fails occasionally. In this MR we first make sure all nodes reached the expected state. \n\nSee merge request dfinity-lab/public/ic!15744"
      },
      {
        "id": "bac9eb1c7431fe18cb66563c7fb7cb1f1859aafe",
        "date": "2023-10-27T15:44:57Z",
        "message": "Merge branch 'replace-merge-base-candid-check' into 'master'\n\nFix: replace merge base with target branch HEAD sha for candid checks\n\n \n\nSee merge request dfinity-lab/public/ic!15726"
      },
      {
        "id": "e38aafe4fa1f7f7c2dce2ae3a96ac771f4023372",
        "date": "2023-10-27T11:30:03Z",
        "message": "Merge branch 'revert-afee4a82' into 'master'\n\nRevert \"Merge branch 'alic/fix-upgrade-test' into 'master'\"\n\nThis reverts merge request !15563 \n\nSee merge request dfinity-lab/public/ic!15722"
      },
      {
        "id": "e21359fbd1b910ec7da4c5c9871b80d982ccae19",
        "date": "2023-10-27T11:30:03Z",
        "message": "Revert \"Merge branch 'alic/fix-upgrade-test' into 'master'\""
      },
      {
        "id": "7b849ecbeb40635d4fde298c555ca6565a525de8",
        "date": "2023-10-27T11:13:00Z",
        "message": "Merge branch 'igornovg/icbn-headers-add' into 'master'\n\nfeat(BOUN-935): ic-boundary: add routing reply headers\n\nTo make `nginx` able to log the routing decision made by `ic-boundary` - return the following in the reply headers:\n\n* `x-ic-subnet-id`\n* `x-ic-node-id`\n* `x-ic-subnet-type`\n\nAlso some micro changes:\n\n* Switch to a different `SubnetType` that can do strings\n* Move `postprocess_response` to a proper place in the food chain \n\nSee merge request dfinity-lab/public/ic!15701"
      },
      {
        "id": "3de7d881ab36e01a513be074d6934d9820b5dc74",
        "date": "2023-10-27T08:41:16Z",
        "message": "Merge branch 'levsha/update-itertools' into 'master'\n\nrefactor(IDX-3017): Update itertools and move to workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15645"
      },
      {
        "id": "bce3e84dcb5a0eccfe570a1a4a93bf11aefc7684",
        "date": "2023-10-26T17:25:39Z",
        "message": "Merge branch 'IDX-3024-cloudflare-r2' into 'master'\n\nchore(IDX-3024): redundant artifact store\n\nPush artifacts on release branches to Cloudflare's R2.\n\nCloses IDX-3024 \n\nCloses IDX-3024\n\nSee merge request dfinity-lab/public/ic!15599"
      },
      {
        "id": "9410daf8508494b84c1019dc48b9b05b840c4829",
        "date": "2023-10-26T17:25:38Z",
        "message": "chore(IDX-3024): redundant artifact store"
      },
      {
        "id": "855972c0ca8c6ac3913e781e96cb964a47a425ba",
        "date": "2023-10-25T12:36:53Z",
        "message": "Merge branch 'marko-templating-fix' into 'master'\n\nfix(tnetctl): dv templating\n\n \n\nSee merge request dfinity-lab/public/ic!15638"
      },
      {
        "id": "8af83d7f32aa6fbdb2912f99cbf2f6da9cb0e2cb",
        "date": "2023-10-25T12:36:53Z",
        "message": "fix(tnetctl): dv templating"
      },
      {
        "id": "5c176f760e05d3824f7c51439c3d78ea7fd8ec7a",
        "date": "2023-10-25T10:29:22Z",
        "message": "Merge branch 'fix-build-container-filesystem' into 'master'\n\nfix: IDX replace file reference with target\n\nCI jobs have been failing with `import configargparse ModuleNotFoundError: No module named 'configargparse'` - it appears it's because the file was directly passed in instead of the target. I am not sure if this is the correct fix, but CI passed and we can try this. Otherwise roll back this change and the other one. \n\nSee merge request dfinity-lab/public/ic!15629"
      },
      {
        "id": "cc98a89880b92354b37c29e196365b6a040313ff",
        "date": "2023-10-24T21:30:01Z",
        "message": "Merge branch 'IDX-2887-k8s-tnet' into 'master'\n\nchore(IDX-2887): k8s tnet lib & cli\n\nInitial code providing library and CLI for creating testnet on K8s. CI job `tnet-test` will initially be ran as scheduled CI job. Further optimization changes will come in the near future.\n\nScope of IDX-2887 \n\nSee merge request dfinity-lab/public/ic!15428"
      },
      {
        "id": "5731123b921adf5a20b019d40572f47f1a61ccdd",
        "date": "2023-10-24T21:30:01Z",
        "message": "chore(IDX-2887): k8s tnet lib & cli"
      },
      {
        "id": "3b551fa153726dde15a554754e6a4da9ce26ddb3",
        "date": "2023-10-24T18:23:30Z",
        "message": "fix(python): pkgs deps"
      },
      {
        "id": "d3a004e018931348b5a6dd7adea437a50d99a4a1",
        "date": "2023-10-20T09:23:47Z",
        "message": "Merge branch 'eero/orchestrator-bug' into 'master'\n\nAvoid a div by zero during upgrades\n\n \n\nSee merge request dfinity-lab/public/ic!15523"
      },
      {
        "id": "eacfcecac228d1cf34944338254306455ac4765d",
        "date": "2023-10-18T10:04:06Z",
        "message": "Merge branch 'IDX-2542-non-determinism' into 'master'\n\nRemove 'ignore list' for build determinism check\n\nTwo binaries are not produced anymore:\n- `prod-test-driver`\n- `system-test`\n\nRemaining binaries seem to be build reproducible:\n- `panics.wasm`\n- `ic-rosetta-api`\n- `sns-test-dapp-canister`\n\nIf that is sporadically not the case, we put them back in ignore list (and analyze the diff with `diffoscope`).\n\nCloses IDX-2542 \n\nCloses IDX-2542\n\nSee merge request dfinity-lab/public/ic!12816"
      },
      {
        "id": "b63c54dc31629c71c3b4a185f84f935018c64152",
        "date": "2023-10-18T10:04:05Z",
        "message": "Remove 'ignore list' for build determinism check"
      },
      {
        "id": "1b6f7612ed99491b512eab650ade575cdcc9b48d",
        "date": "2023-10-18T08:02:20Z",
        "message": "Merge branch 'move-check-bins-linux-off-of-legacy-image' into 'master'\n\nmove check-bins-linux off legacy image\n\nMakes no difference. \n\nSee merge request dfinity-lab/public/ic!15422"
      },
      {
        "id": "441d86c5ecb626ab993835a8c89ad1b789ef2313",
        "date": "2023-10-13T15:45:09Z",
        "message": "Merge branch 'franzstefan-CRP-2244-remove-openssl-from-httpbin-rs' into 'master'\n\nrefactor(crypto): CRP-2244: remove OpenSSL from httpbin-rs\n\nRemoves OpenSSL from the `httpbin-rs` crate. \n\nSee merge request dfinity-lab/public/ic!15383"
      },
      {
        "id": "8c1a676e3a357039b45f3fcedc26c2e7f8b3d223",
        "date": "2023-10-11T20:12:42Z",
        "message": "Merge branch 'jack/upgrade-bip32-crate' into 'master'\n\nchore(crypto): Upgrade bip32 crate to 0.5.0\n\nThis avoids pulling an older version of k256 into the build, due to a dependency in the older version of bip32. \n\nSee merge request dfinity-lab/public/ic!15345"
      },
      {
        "id": "1c12a3c2ad33b769bd89beed6fdb5cb7c9c5ac69",
        "date": "2023-10-11T09:54:58Z",
        "message": "Merge branch 'revert-11f1b78e' into 'master'\n\nRevert \"Merge branch 'marko-unpin-benchmarks' into 'master'\"\n\nThis reverts merge request !15308 for [reasons of sensitivity of benchmarks](https://dfinity.slack.com/archives/CH07MRJQ7/p1697013855734509). \n\nSee merge request dfinity-lab/public/ic!15331"
      },
      {
        "id": "057aeea6c17a8091195f3a3457ffab940b669fb6",
        "date": "2023-10-11T09:54:58Z",
        "message": "Revert \"Merge branch 'marko-unpin-benchmarks' into 'master'\""
      },
      {
        "id": "5a488ff0c56d7cb1343d7beb165779d9ce729bb7",
        "date": "2023-10-11T09:51:15Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-Update-simple_asn1-and-move-it-to-the-workspace-' into 'master'\n\nchore(IDX-3017) Update simple_asn1 and move it to the workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15329"
      },
      {
        "id": "11f1b78e54d0e49b76fca9f047111f392d7922a7",
        "date": "2023-10-10T10:23:26Z",
        "message": "Merge branch 'marko-unpin-benchmarks' into 'master'\n\nchore(rust-benchmarks): unpin from fr1-spm15 (rust-benchmarks)\n\nMachine `fr1-spm15` will be used for new K8s cluster (with `fr1-spm05` and `fr1-dll10`). \n\nSee merge request dfinity-lab/public/ic!15308"
      },
      {
        "id": "590c2ee66fc42cef495741f2fa6c0e25896c0929",
        "date": "2023-10-10T10:23:26Z",
        "message": "chore(rust-benchmarks): unpin from fr1-spm15 (rust-benchmarks)"
      },
      {
        "id": "d7785ab60a2828a753a2e6d5a1f9588eb18c3209",
        "date": "2023-09-26T13:25:16Z",
        "message": "Merge branch 'marko-add-git-lfs' into 'master'\n\nfix(container): add git-lfs\n\n`bazel build //<some-target>` can yield:\n```bash\ngit-lfs filter-process: 1: git-lfs: not found\nfatal: the remote end hung up unexpectedly\n``` \n\nSee merge request dfinity-lab/public/ic!14952"
      },
      {
        "id": "cea4e03ce952f7bd032dbc0e607e9bc20e148be5",
        "date": "2023-09-26T13:25:16Z",
        "message": "fix(container): add git-lfs"
      },
      {
        "id": "66dc5f7a0cccc572841c330656e1e358fb10484c",
        "date": "2023-09-26T10:12:25Z",
        "message": "Merge branch 'levsha/Update-rules-rust-to-0-27-0' into 'master'\n\nUpdate rules_rust to 0.27.0\n\n \n\nSee merge request dfinity-lab/public/ic!14997"
      },
      {
        "id": "661fee5c457cbfb1053b7013745ed4cf1531fcde",
        "date": "2023-09-25T12:15:13Z",
        "message": "Merge branch 'marko-delete-prod-nightly-pipeline' into 'master'\n\nfix(prod-nightly-pipeline): removing empty child pipeline\n\nThere is nothing left in `prod-nightly-pipeline`. Bazel has killed it for good.\n\nThe last test `ingress-manager-proptests-nightly` was removed in https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14918. \n\nSee merge request dfinity-lab/public/ic!14974"
      },
      {
        "id": "db11b705f04de29f2c691f2550c9986bf67fd781",
        "date": "2023-09-25T12:15:12Z",
        "message": "fix(prod-nightly-pipeline): removing empty child pipeline"
      },
      {
        "id": "fe291c1f11932219c829ff3fc12a6c74df70ca09",
        "date": "2023-09-22T14:26:22Z",
        "message": "Merge branch 'levsha/Update-rules_python-to-the-latest-version-' into 'master'\n\nUpdate rules_python to the latest version.\n\nThe version contains fix for\nhttps://github.com/bazelbuild/rules_python/issues/1261 that we also\nobserve from time to time: https://dash.sf1-idx1.dfinity.network/invocation/8093f9cb-633f-4c6f-a9d4-a8f899dd47bc \n\nSee merge request dfinity-lab/public/ic!14948"
      },
      {
        "id": "44241870f0e5e8616a9d10712507ffabf77c3722",
        "date": "2023-09-20T14:34:32Z",
        "message": "Merge branch 'idx-3007-security-incident' into 'master'\n\nchore(IDX-3007): security incident CI adjustment\n\nTreat `hotfix-.+-rc--.+` branch the same as `rc--.+` branch with exception of slack notifications.\n\nComparison:\n- [RC pipeline](https://gitlab.com/dfinity-lab/public/ic/-/pipelines/1007734992)\n- [Security incident pipeline](https://gitlab.com/dfinity-lab/public/ic/-/pipelines/1010922426) \n\nSee merge request dfinity-lab/public/ic!14894"
      },
      {
        "id": "e784919ae6ee6e222fac5ea64e901716e2611fea",
        "date": "2023-09-20T14:34:32Z",
        "message": "chore(IDX-3007): security incident CI adjustment"
      },
      {
        "id": "20d02e56443febf5dfa256e408732f46462d77e5",
        "date": "2023-09-20T08:03:11Z",
        "message": "Merge branch 'levsha/Keep-service-worker-node-version-in-sync-' into 'master'\n\nKeep service-worker node version in sync.\n\n \n\nSee merge request dfinity-lab/public/ic!14882"
      },
      {
        "id": "0012e1a0c4e48c74c3eedfdca0ebe06f0dfcd9d1",
        "date": "2023-09-18T13:37:46Z",
        "message": "Merge branch 'marko-fix-release-revision' into 'master'\n\nfix(release): release on GITHUB_SHA\n\nUsing `testnet/mainnet_revisions.json` was wrong. \n\nSee merge request dfinity-lab/public/ic!14853"
      },
      {
        "id": "b704372624a5abeb7fc8a883a1191dc1c24c25a9",
        "date": "2023-09-18T13:37:45Z",
        "message": "fix(release): release on GITHUB_SHA"
      },
      {
        "id": "80cdc9938babade131faefe9ee4f7ee4db17eeb9",
        "date": "2023-09-18T08:45:43Z",
        "message": "Merge branch 'marko-temporary-ignore-did-curl' into 'master'\n\nfix(release): tolerate failure of curling did file\n\nRelease of revision in `testnet/mainnet_revisions.json` has to include `did` files. Now it doesn't. \n\nSee merge request dfinity-lab/public/ic!14843"
      },
      {
        "id": "833b98538613a1ae403dd51eeb881cf71ac222f6",
        "date": "2023-09-18T08:45:43Z",
        "message": "fix(release): tolerate failure of curling did file"
      },
      {
        "id": "341aae571e7a8027d787926902ac8f36c2a36ab8",
        "date": "2023-09-18T07:29:20Z",
        "message": "fix(false alerts): disable after script for coverage CI job"
      },
      {
        "id": "ea66978aa1932b30e015f2da739d84f5f3ae731e",
        "date": "2023-09-14T09:53:38Z",
        "message": "Merge branch 'IDX-2603-bazel-test-coverage' into 'master'\n\nchore(IDX-2603): generate test coverage\n\nInitial test coverage job ~ execute `bazel coverage` for targets that don't depend on any canister codebase ([no instrumentation supported](https://github.com/rust-lang/rust/issues/81684)) on scheduled CI pipeline and manually on MR pipelines. Report is accessible via CI job's artifacts ~ [example](https://dfinity-lab.gitlab.io/-/public/ic/-/jobs/5036171285/artifacts/cov_html/index.html).\n\nIgnoring the failure of tests for now. Will be addressed separately.\n> Coverage reports are also produced if tests fail, though note that this does not extend to the failed tests - only passing tests are reported.\n\nCloses IDX-2603 \n\nCloses IDX-2603\n\nSee merge request dfinity-lab/public/ic!14633"
      },
      {
        "id": "7bd60932c336039a6960786910438c70a58d0609",
        "date": "2023-09-14T09:53:37Z",
        "message": "chore(IDX-2603): generate test coverage"
      },
      {
        "id": "dddd3bccdf50c53fd31e391bd087362178b1304e",
        "date": "2023-09-13T14:14:22Z",
        "message": "Merge branch 'idx-2988-include-did-files' into 'master'\n\nchore(IDX-2988): include did files in release\n\nInclude publishing `did` files of canisters and include them in the GitHub's release tarball. \n\nSee merge request dfinity-lab/public/ic!14750"
      },
      {
        "id": "7a94c3384bd058bc8e7b2e3fbf2e63cb333c5696",
        "date": "2023-09-13T14:14:21Z",
        "message": "chore(IDX-2988): include did files in release"
      },
      {
        "id": "747ec08410e3c5152dd040ab198b04d75611afb9",
        "date": "2023-09-01T08:38:32Z",
        "message": "Merge branch 'eero/prep-whitelist' into 'master'\n\nFix firewall prefix whitelisting from prep\n\n \n\nSee merge request dfinity-lab/public/ic!14527"
      },
      {
        "id": "ae55f8e0f8c23059852aad3ee08c13b9e0ba8fa6",
        "date": "2023-08-31T17:53:32Z",
        "message": "fix(build reproducibility): infogetty and prestorecon"
      },
      {
        "id": "0554dbd458e9abbc2c59660be2502bbc4a6121b1",
        "date": "2023-08-31T10:17:21Z",
        "message": "Merge branch 'tmu/bump-webpki' into 'master'\n\nbump webpki\n\n \n\nSee merge request dfinity-lab/public/ic!14504"
      },
      {
        "id": "19d9d55ecc4741aa1e8ff2f3c539648990b45956",
        "date": "2023-08-30T16:04:51Z",
        "message": "Merge branch 'alex/fix-curl-in-criterion-benches' into 'master'\n\nfix(benchmarks): fix curl arguments for uploading criterion benchmarks to elasticsearch\n\n \n\nSee merge request dfinity-lab/public/ic!14487"
      },
      {
        "id": "e6534002dfb2ec84b70830735928616cc8d6a82f",
        "date": "2023-08-30T08:26:48Z",
        "message": "Merge branch 'marko-binary-header-sections' into 'master'\n\nfix(build reproducibility): strip some bin header sections\n\n \n\nSee merge request dfinity-lab/public/ic!14462"
      },
      {
        "id": "48fff6cdd931da07bd71c57bdc9e4cd9796b999c",
        "date": "2023-08-30T08:26:47Z",
        "message": "fix(build reproducibility): strip some bin header sections"
      },
      {
        "id": "070c51073bf2e8b4395557d07be8523d2d7c4301",
        "date": "2023-08-29T18:08:34Z",
        "message": "Merge branch 'sat-base-img-add-filebeat' into 'master'\n\nchore(Node): Add Filebeat to the base IC-OS image\n\nThis will be used for testnets only, not for the mainnet. \n\nSee merge request dfinity-lab/public/ic!14455"
      },
      {
        "id": "60bce1db32f56a19337da715575b2235cbc3ba41",
        "date": "2023-08-16T14:34:02Z",
        "message": "Merge branch 'IDX-2974-release-tools' into 'master'\n\nCollect and release tool drun\n\nTool `drun` is used for benchmarking canisters in other repos. Adding it as release artifact on [request](https://dfinity.slack.com/archives/CL7Q2RXUM/p1691399981980959).\n\nCloses IDX-2974 \n\nCloses IDX-2974\n\nSee merge request dfinity-lab/public/ic!14161"
      },
      {
        "id": "3268d53fcac7aca4775f6d06f7534bc808636b41",
        "date": "2023-08-16T14:34:01Z",
        "message": "Collect and release tool drun"
      },
      {
        "id": "0d281557f1f1100e67103e8d222525ac6f43bcc8",
        "date": "2023-08-16T14:09:31Z",
        "message": "Merge branch 'levsha/Explicitly-log-in-using-docker-in-addition-to-podman-' into 'master'\n\n[hotfix] Explicitly log in using docker in addition to podman.\n\nThat should generate docker config that can be then used by\ncontainer_pull in bazel. \n\nSee merge request dfinity-lab/public/ic!14198"
      },
      {
        "id": "75d5f2cf31346aebbfa95bd77dedbf58fe35af51",
        "date": "2023-08-15T16:48:06Z",
        "message": "Merge branch 'marko-ci-typo-fix' into 'master'\n\nfix(ci): setting correct CI job name\n\n \n\nSee merge request dfinity-lab/public/ic!14176"
      },
      {
        "id": "8f3fedeef9842c158aca667f07e2c8a98e5307ab",
        "date": "2023-08-15T16:48:06Z",
        "message": "fix(ci): setting correct CI job name"
      },
      {
        "id": "1d3420e146fe1288bf092b11821d18ee51002640",
        "date": "2023-08-09T17:09:43Z",
        "message": "Revert \"test(consensus): enable caching of consensus tests\"\n\nThis reverts commit d55367c669741aaf081bf0ca030800ce2954f24d."
      },
      {
        "id": "d48dfc043aa4b8b5ea7302bdeb424ef2dcbd8890",
        "date": "2023-08-09T09:01:10Z",
        "message": "Merge branch 'update-buf-bazel' into 'master'\n\nchore(bazel): Update `buf` version from `1.16.0` to `1.25.1`\n\n \n\nSee merge request dfinity-lab/public/ic!14036"
      },
      {
        "id": "0c059f2c73b6bdbd79c8d814d30a469c92ec8799",
        "date": "2023-08-09T07:51:33Z",
        "message": "Merge branch 'marko-bazel-clean' into 'master'\n\nchore(bazel): bazel clean in after_script\n\nClean up at the end to prevent:  \n![image](/uploads/5e0f84a2cc75164964061436f22f9020/image.png) \n\nSee merge request dfinity-lab/public/ic!14025"
      },
      {
        "id": "06e9c6462d53523812d244b55d123c92164ba33a",
        "date": "2023-08-09T07:51:32Z",
        "message": "chore(bazel): bazel clean in after_script"
      },
      {
        "id": "4a1347d15eabe3e61f506b6996046cbca03b1124",
        "date": "2023-08-08T17:57:11Z",
        "message": "Merge branch 'nathan/enable-response-verification-v2' into 'master'\n\nfix(service-worker,icx-proxy): re-enable response verification v2\n\nre #TT-271 \n\nSee merge request dfinity-lab/public/ic!13957"
      },
      {
        "id": "62d8983bf809e8927a3a3f215012dc4e05799208",
        "date": "2023-08-07T14:33:00Z",
        "message": "Merge branch 'rumenov/prometheus-parse' into 'master'\n\nchore: NET-1492 remove the prometheus-parse dep\n\n \n\nSee merge request dfinity-lab/public/ic!13997"
      },
      {
        "id": "b297d07f55caf16f559cbe3371980fa3cdd66129",
        "date": "2023-08-03T20:54:41Z",
        "message": "Revert \"Merge branch '@anchpop/override-buf' into 'master'\"\n\nThis reverts merge request !13905"
      },
      {
        "id": "fe2ed291d2390e88c2c1f3a122d0072221aecde5",
        "date": "2023-08-02T12:42:09Z",
        "message": "Merge branch 'nathan/remove-redundant-node-version' into 'master'\n\nrefactor: remove redundant nodejs version\n\n \n\nSee merge request dfinity-lab/public/ic!13837"
      }
    ],
    "email": "marko.kosmerl@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 110,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 75,
    "fixes": 15,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "b1b39fe682288839d59bbe53ef720c978a7b3729",
        "date": "2023-11-22T15:16:07Z",
        "message": "chore(tnet): tolerate CI failure [hotfix]"
      },
      {
        "id": "8723dc3080ebbd5d0ae1d8f11545d6ba1df43d3e",
        "date": "2023-11-22T08:26:52Z",
        "message": "fix(ic version): use it for hotifx branch"
      },
      {
        "id": "60afe54f52efe65f71e2f7a1d808bd72a0d75fce",
        "date": "2023-11-21T11:56:27Z",
        "message": "chore(tnet): tag to ch cluster"
      },
      {
        "id": "8ad7082761584082dd32e496f61c068f507f40b2",
        "date": "2023-11-21T09:28:50Z",
        "message": "refactor(tnet): providing upload api"
      },
      {
        "id": "1bff0bba8a6505084cfe1f73314763529c2b188a",
        "date": "2023-11-21T09:23:03Z",
        "message": "Draft: fix(rosseta-release): docker auth"
      },
      {
        "id": "9c1d3177bc0a95836ef0cc8d58445cdd8483b60d",
        "date": "2023-11-16T15:25:27Z",
        "message": "feat(container-run): add vim and cargo clippy"
      },
      {
        "id": "74ccc4d0869591a497cb7529ae6dbd7993e20c0a",
        "date": "2023-11-15T14:43:58Z",
        "message": "chore(tnet): extending no init"
      },
      {
        "id": "0a50fab6847dd408c486f57b8897d58205193795",
        "date": "2023-11-14T17:41:09Z",
        "message": "fix(container): kubic apt repo"
      },
      {
        "id": "fd21bfd478563c1c2a0afbbf7d5d6d01645cd2a7",
        "date": "2023-11-14T16:01:09Z",
        "message": "fix(service-worker): remove apt install"
      },
      {
        "id": "d451acc7a0b3d83b20b708f73ffa341f28bed671",
        "date": "2023-11-13T10:17:25Z",
        "message": "chore(tnet): don't init nns by default"
      },
      {
        "id": "7778913ff3dc2e576f63a2b51537f090e34fa5c2",
        "date": "2023-11-09T12:50:13Z",
        "message": "chore(bazel): bazel test on macos"
      },
      {
        "id": "ece1e1baa8dc4f847b63ada3f4b636c706414c95",
        "date": "2023-11-01T20:31:05Z",
        "message": "refactor(IDX-3017): move chrono to the workspace"
      },
      {
        "id": "9ec54d1a8bc44d843f8066b2e365262a806409f3",
        "date": "2023-11-01T11:07:00Z",
        "message": "chore(libssl): verify bins for libssl"
      },
      {
        "id": "a8ba613945ae610c4b0a3ed1536fbfcb6439d51e",
        "date": "2023-10-31T10:56:35Z",
        "message": "chore(IDX-3024): publish to r2 on tag only"
      },
      {
        "id": "af8b1f7194f602b4e289f876527df0107fc37292",
        "date": "2023-10-30T12:44:39Z",
        "message": "chore(tnet): tnet/tools/k8s cleanup"
      },
      {
        "id": "9410daf8508494b84c1019dc48b9b05b840c4829",
        "date": "2023-10-26T17:25:38Z",
        "message": "chore(IDX-3024): redundant artifact store"
      },
      {
        "id": "8af83d7f32aa6fbdb2912f99cbf2f6da9cb0e2cb",
        "date": "2023-10-25T12:36:53Z",
        "message": "fix(tnetctl): dv templating"
      },
      {
        "id": "5731123b921adf5a20b019d40572f47f1a61ccdd",
        "date": "2023-10-24T21:30:01Z",
        "message": "chore(IDX-2887): k8s tnet lib & cli"
      },
      {
        "id": "3b551fa153726dde15a554754e6a4da9ce26ddb3",
        "date": "2023-10-24T18:23:30Z",
        "message": "fix(python): pkgs deps"
      },
      {
        "id": "b63c54dc31629c71c3b4a185f84f935018c64152",
        "date": "2023-10-18T10:04:05Z",
        "message": "Remove 'ignore list' for build determinism check"
      },
      {
        "id": "590c2ee66fc42cef495741f2fa6c0e25896c0929",
        "date": "2023-10-10T10:23:26Z",
        "message": "chore(rust-benchmarks): unpin from fr1-spm15 (rust-benchmarks)"
      },
      {
        "id": "cea4e03ce952f7bd032dbc0e607e9bc20e148be5",
        "date": "2023-09-26T13:25:16Z",
        "message": "fix(container): add git-lfs"
      },
      {
        "id": "db11b705f04de29f2c691f2550c9986bf67fd781",
        "date": "2023-09-25T12:15:12Z",
        "message": "fix(prod-nightly-pipeline): removing empty child pipeline"
      },
      {
        "id": "e784919ae6ee6e222fac5ea64e901716e2611fea",
        "date": "2023-09-20T14:34:32Z",
        "message": "chore(IDX-3007): security incident CI adjustment"
      },
      {
        "id": "b704372624a5abeb7fc8a883a1191dc1c24c25a9",
        "date": "2023-09-18T13:37:45Z",
        "message": "fix(release): release on GITHUB_SHA"
      },
      {
        "id": "833b98538613a1ae403dd51eeb881cf71ac222f6",
        "date": "2023-09-18T08:45:43Z",
        "message": "fix(release): tolerate failure of curling did file"
      },
      {
        "id": "341aae571e7a8027d787926902ac8f36c2a36ab8",
        "date": "2023-09-18T07:29:20Z",
        "message": "fix(false alerts): disable after script for coverage CI job"
      },
      {
        "id": "7bd60932c336039a6960786910438c70a58d0609",
        "date": "2023-09-14T09:53:37Z",
        "message": "chore(IDX-2603): generate test coverage"
      },
      {
        "id": "7a94c3384bd058bc8e7b2e3fbf2e63cb333c5696",
        "date": "2023-09-13T14:14:21Z",
        "message": "chore(IDX-2988): include did files in release"
      },
      {
        "id": "ae55f8e0f8c23059852aad3ee08c13b9e0ba8fa6",
        "date": "2023-08-31T17:53:32Z",
        "message": "fix(build reproducibility): infogetty and prestorecon"
      },
      {
        "id": "48fff6cdd931da07bd71c57bdc9e4cd9796b999c",
        "date": "2023-08-30T08:26:47Z",
        "message": "fix(build reproducibility): strip some bin header sections"
      },
      {
        "id": "3268d53fcac7aca4775f6d06f7534bc808636b41",
        "date": "2023-08-16T14:34:01Z",
        "message": "Collect and release tool drun"
      },
      {
        "id": "8f3fedeef9842c158aca667f07e2c8a98e5307ab",
        "date": "2023-08-15T16:48:06Z",
        "message": "fix(ci): setting correct CI job name"
      },
      {
        "id": "1d3420e146fe1288bf092b11821d18ee51002640",
        "date": "2023-08-09T17:09:43Z",
        "message": "Revert \"test(consensus): enable caching of consensus tests\"\n\nThis reverts commit d55367c669741aaf081bf0ca030800ce2954f24d."
      },
      {
        "id": "06e9c6462d53523812d244b55d123c92164ba33a",
        "date": "2023-08-09T07:51:32Z",
        "message": "chore(bazel): bazel clean in after_script"
      }
    ],
    "line_additions": 10550,
    "line_deletions": 1750,
    "lines_effected_total": 12300,
    "rel_comm_add": 19,
    "rel_comm_del": 18,
    "rel_comm_total": 22
  },
  {
    "login": "ulan",
    "id": 294429,
    "totalContributions": 580,
    "github": "https://github.com/ulan",
    "commits": [
      {
        "id": "c44e02cecac8e984773a6d49411af279f7cf622e",
        "date": "2023-11-23T10:10:18Z",
        "message": "Merge branch 'ulan/run-816' into 'master'\n\nRUN-816: Implement uploading the IC config to a canister in `fees_and_limits`\n\nThis adds the following to the `fees_and_limits` binary:\n- New command line arguments: replica version, canister id, and the\n  private key file.\n- Uploading of the JSON config to the given canister id using the given\n  principal.\n\nNote that previously the replica version was implicitly derived from the\ncurrent git commit. This has been replaced with explicit passing\nof the replica version in order to give more control to the user\nand to simplify future CI integration. \n\nSee merge request dfinity-lab/public/ic!16270"
      },
      {
        "id": "1f38c3627e2c11aa5fdcffaa6e3ef7bdfecbdce8",
        "date": "2023-11-23T10:10:17Z",
        "message": "RUN-816: Implement uploading the IC config to a canister in `fees_and_limits`"
      },
      {
        "id": "2575e537678f8680967b56d22927a4f889e03877",
        "date": "2023-11-21T08:59:43Z",
        "message": "Merge branch 'ulan/run-561-a' into 'master'\n\nRUN-561: Increase guard region size for Wasm memory\n\nThis doubles the size of the prologue and epilogue guard regions\nfrom 4GB each to 8GB each to make it more robust.\n\nThe performance overhead is negligible. \n\nSee merge request dfinity-lab/public/ic!16182"
      },
      {
        "id": "96ed61405f08d6ef08b3dd0f17414bb4f65bc9ab",
        "date": "2023-11-21T08:59:42Z",
        "message": "RUN-561: Increase guard region size for Wasm memory"
      },
      {
        "id": "b0ec37fd8dd2126ee8f17ad74c5508dbb512d24f",
        "date": "2023-11-15T12:14:11Z",
        "message": "Merge branch 'ulan/run-840' into 'master'\n\nRUN-840: Explicitly configure Wasm features of Wasmtime\n\nThis makes sure that we don't rely on default values of Wasmtime\nconfig to enable/disable Wasm features.\n\nAnother change is to collect all settings in one place instead of\nhaving multiple functions for them.\n\nDrive-by fix: use `wasmtime_validation_config()` embedder spec tests. \n\nSee merge request dfinity-lab/public/ic!16072"
      },
      {
        "id": "dd7a4b65ac2876684dfbf8799f19dc523bcec821",
        "date": "2023-11-15T12:14:11Z",
        "message": "RUN-840: Explicitly configure Wasm features of Wasmtime"
      },
      {
        "id": "b7a7b22d8b5063c5773d73b9ad870a185834ec4a",
        "date": "2023-11-15T10:39:28Z",
        "message": "Merge branch 'ulan/run-839' into 'master'\n\nRUN-839: Upgrade `wasmtime` to version 14.0.4\n\nRelease notes:\n- https://github.com/bytecodealliance/wasmtime/blob/main/RELEASES.md#1404\n\nChanges:\n- https://github.com/bytecodealliance/wasmtime/compare/release-13.0.0...release-14.0.0\n\nThe embedder spec tests are adjusted for the change in `wasmtime::Val`:\n```\n-    V128(u128),\n+    V128(V128),\n``` \n\nSee merge request dfinity-lab/public/ic!16092"
      },
      {
        "id": "c95faed4518cf836b1e4fcbaa142af132886b0d1",
        "date": "2023-11-15T10:39:27Z",
        "message": "RUN-839: Upgrade `wasmtime` to version 14.0.4"
      },
      {
        "id": "3b76961a25a42036a1bbe2ea23962ce139ae0c57",
        "date": "2023-11-08T17:19:18Z",
        "message": "Merge branch 'ulan/run-838' into 'master'\n\nRUN-838: Unify wasmtime validation and execution configs\n\nThis MR refactors wasmtime config setup such that the execution\nconfig includes the validation config. The motivation is to\nensure that these configs don't get out of sync.\n\nThis MR fixes a wasmtime crash on MacOS due to the inconsistent\n`macos_use_mach_ports` parameter:\n\n```\nthread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `true`,\n right: `false`: cannot configure two different methods of signal handling in the same process'\n``` \n\nSee merge request dfinity-lab/public/ic!15972"
      },
      {
        "id": "cfe459906fe7e548dd03e1e130a3061fbc989413",
        "date": "2023-11-08T17:19:18Z",
        "message": "RUN-838: Unify wasmtime validation and execution configs"
      },
      {
        "id": "db296cc9edfc64309a721c30c43c082dbd64e730",
        "date": "2023-10-31T16:56:15Z",
        "message": "RUN-819: Upgrade `wasmtime` to version 13.0.1"
      },
      {
        "id": "c7ed3f9d6782b487119e32a7f7b9765af0c81938",
        "date": "2023-10-27T17:20:37Z",
        "message": "Merge branch 'ulan/run-819-serde' into 'master'\n\nRUN-819: Upgrade `serde`\n\nThis upgrades `serde`, which also requires a new version of\n`icrc1-test-suite` that doesn't pin `serde`:\nhttps://github.com/dfinity/ICRC-1/commit/6eda22d0dc882b347a945647902f2d844a404c7f\n\nThis also bumps the size limit of `governance-canister_test.wasm`,\nwhich became larger with the new `serde`. \n\nSee merge request dfinity-lab/public/ic!15731"
      },
      {
        "id": "97642eed7eab28f0d691b7ef592531efdd3cccf3",
        "date": "2023-10-27T17:20:37Z",
        "message": "RUN-819: Upgrade `serde`"
      },
      {
        "id": "cc46b63f7f200b169c10f2a3a4a9e40f852cba30",
        "date": "2023-10-05T09:18:05Z",
        "message": "Merge branch 'ulan/follow-1188' into 'master'\n\nFOLLOW-1188: Add a regression test for message memory\n\nThis follows up MR 14162 and adds a test that checks that the message\nmemory of the subnet is properly updated for canisters with memory\nallocation. \n\nSee merge request dfinity-lab/public/ic!15201"
      },
      {
        "id": "0f254823732eed03763d10f77d6334f6ba730550",
        "date": "2023-10-05T09:18:02Z",
        "message": "FOLLOW-1188: Add a regression test for message memory"
      },
      {
        "id": "781c8263482d6a7cd063a734401668667517cef3",
        "date": "2023-09-19T19:08:08Z",
        "message": "Merge branch 'ulan/mr-394' into 'master'\n\nMR-394, RUN-765: Increase the subnet storage capacity to 700GiB\n\n \n\nSee merge request dfinity-lab/public/ic!14762"
      },
      {
        "id": "c956d64697756cc3673d8852a7fd3fc86c6db043",
        "date": "2023-09-19T19:08:07Z",
        "message": "MR-394, RUN-765: Increase the subnet storage capacity to 700GiB"
      },
      {
        "id": "59d47659635b661e23cacc503a93c110d84b590d",
        "date": "2023-09-19T08:17:54Z",
        "message": "RUN-763: [hotfix] Fix a test failure introduced in 8fc94d"
      },
      {
        "id": "8fc94dc270572eb7fc76e27d2e9de8cec7e425eb",
        "date": "2023-09-18T18:31:02Z",
        "message": "Merge branch 'ulan/run-763' into 'master'\n\nRUN-763: Initialize the reserved balance limit to a default value\n\nThis MR adds a new config parameter to `CyclesAccountManagerConfig` that\nspecifies the default reserved balance limit.\n\nUsing that config parameter the MR initializes the reserved balance limit of\n- the existing canisters: this is done in the first execution round after\n  the replica upgrade.\n- the newly created canisters: this is done by modifying the input canister\n  settings argument of the `create_canister` call if its reserved balance\n  limit is not set. \n\nSee merge request dfinity-lab/public/ic!14752"
      },
      {
        "id": "ea4de32a5096fdc4c774cc919d92aa6f41257713",
        "date": "2023-09-18T18:31:02Z",
        "message": "RUN-763: Initialize the reserved balance limit to a default value"
      },
      {
        "id": "c482a8ff5b4ec4ab8e41309c1460ccd767fc1cff",
        "date": "2023-09-18T16:24:45Z",
        "message": "Merge branch 'ulan/run-752-1' into 'master'\n\nRUN-752: Add reserved balance limit to DefinitiveCanisterSettingsArgs\n\nThis is a follow-up of MR 14596 that added the reserved balance\nlimit to canister settings. That MR missed `DefinitiveCanisterSettingsArgs`,\nwhich is exposed via the canister settings.\n\nThanks to @eric.swanson for pointing this out. \n\nSee merge request dfinity-lab/public/ic!14832"
      },
      {
        "id": "ded25a8c927c0d57dfd682573704a8b882fa71ea",
        "date": "2023-09-18T16:24:45Z",
        "message": "RUN-752: Add reserved balance limit to DefinitiveCanisterSettingsArgs"
      },
      {
        "id": "712910487fe14924cb80622af47b31210cab95bc",
        "date": "2023-09-18T14:21:29Z",
        "message": "Merge branch 'ulan/run-773' into 'master'\n\nRUN-773: Fix resource reservation in memory allocation\n\nThis MR fixes a bug in the resource reservation mechanism, which is not enabled in production.\n\nThe bug happens in the scenario when memory allocation fails due to\ninsufficient available memory after the cycles have been already reserved.\nThe fix is to perform the available memory check before attempting to\nreserve cycles to ensure that all subsequent state changes succeed. \n\nSee merge request dfinity-lab/public/ic!14825"
      },
      {
        "id": "2527240f81e9a142373d0630859da48dd83a9bbf",
        "date": "2023-09-18T14:21:28Z",
        "message": "RUN-773: Fix resource reservation in memory allocation"
      },
      {
        "id": "fae60b4a46522a5d9cc9599643b51319aa8186ba",
        "date": "2023-09-15T17:21:48Z",
        "message": "Merge branch 'ulan/run-766' into 'master'\n\nRUN-766: Make calculations in resource reservation precise\n\nThis removes the over-approximation in resource reservation and makes\nall calculations precise based on the feedback and ideas from\n@roel.storms and @robin.kunzler.\n\nOn the high level, the MR replaces calculation of the integral\nfunction from computing the area of a rectangle to computing\nthe area of a triangle while taking the threshold parameter\ninto account. \n\nSee merge request dfinity-lab/public/ic!14772"
      },
      {
        "id": "f147f5616f396787db152cf44d1e88d66ac7643e",
        "date": "2023-09-15T17:21:48Z",
        "message": "RUN-766: Make calculations in resource reservation precise"
      },
      {
        "id": "31fd7396a0cd7110949969fe47fa2391469d207b",
        "date": "2023-09-12T13:08:05Z",
        "message": "Merge branch 'ulan/run-753-1' into 'master'\n\nRUN-753: Add the reserved balance to canister status result\n\nThis MR add the reserved balance of a canister to the\n`CanisterStatusResultV2` type of the IC management canister.\n\nThe name of the new field is `reserved_cycles` to be\nconsistent with the existing `cycles` field. \n\nSee merge request dfinity-lab/public/ic!14601"
      },
      {
        "id": "cfefba9b0f49a3e2d724785708332eeb3720e8a3",
        "date": "2023-09-12T13:08:04Z",
        "message": "RUN-753: Add the reserved balance to canister status result"
      },
      {
        "id": "172e3f58141f0254bee79a8efa884764d75cf6b2",
        "date": "2023-09-11T14:01:03Z",
        "message": "Merge branch 'ulan/run-752-3' into 'master'\n\nRUN-752: Add the reserved balance limit to the canister settings\n\nThis adds a new `reserved_cycles_limit` field to the\n`CanisterSettingsArgs` type of the IC management canister.\nThe goal is to allow a controller of a canister to\nset the reserved balance limit of the canister.\n\nAs a drive-by fix this also replaces some existing usages\nof the raw constructor of `CanisterSettingsArgs` with calls\nto the builder. \n\nSee merge request dfinity-lab/public/ic!14596"
      },
      {
        "id": "dc0d89f752c31cf3b3d8ec5df14f2610746f3228",
        "date": "2023-09-11T14:01:02Z",
        "message": "RUN-752: Add the reserved balance limit to the canister settings"
      },
      {
        "id": "d86df0fc8b2bb5a95c4f327197899868331a2d6c",
        "date": "2023-09-11T10:14:12Z",
        "message": "Merge branch 'ulan/run-752-2' into 'master'\n\nRUN-752: Use the reserved balance limit\n\nThis MR updates the resource allocation code to actually make use\nof the new `reserved_balance_limit` field of the canister.\n\nChanges:\n- Introduce new error messages.\n- Propagate `reserved_balance_limit` to canister manager\n  and Wasm execution. \n\nSee merge request dfinity-lab/public/ic!14563"
      },
      {
        "id": "764b001268a292e7580dfa92527416ab1b2184f8",
        "date": "2023-09-11T10:14:12Z",
        "message": "RUN-752: Use the reserved balance limit"
      },
      {
        "id": "183369ac11e659a551e2d826d8713b6b273e11c7",
        "date": "2023-09-08T11:58:31Z",
        "message": "Merge branch 'ulan/run-757' into 'master'\n\nRUN-757: Add a metric for total reserved balances\n\nThis MR introduces `scheduler_canister_reserved_balance_cycles_total`\nsimilar to the existing `scheduler_canister_balance_cycles_total`.\n\nThe metric is recorded in exactly the same way as the existing metric. \n\nSee merge request dfinity-lab/public/ic!14602"
      },
      {
        "id": "390f9670051bc853222e4d9dd0e1d1e513e427ce",
        "date": "2023-09-08T11:58:31Z",
        "message": "RUN-757: Add a metric for total reserved balances"
      },
      {
        "id": "909a0ba408f956e18c7c67562543447994e5c248",
        "date": "2023-09-07T16:56:43Z",
        "message": "Merge branch 'ulan/run-752' into 'master'\n\nRUN-752: Add a reserved balance limit field to canister state\n\nThis MR a new optional field that stores the user-specified upper\nlimit on the existing `reserved_balance`.\n\nThe new field is not used and will be used in subsequent MRs. \n\nSee merge request dfinity-lab/public/ic!14545"
      },
      {
        "id": "4d93466e5d2b462f7238801d73c5c44bf27f0a93",
        "date": "2023-09-07T16:56:42Z",
        "message": "RUN-752: Add a reserved balance limit field to canister state"
      },
      {
        "id": "90be6aad08d266f0f186217eef6cb8f1f6157955",
        "date": "2023-09-07T15:12:04Z",
        "message": "Merge branch 'ulan/run-744' into 'master'\n\nRUN-744: Scale resource saturation based on the number of execution threads\n\nCurrently subnet message and regular message execution uses\nthe global resource saturation computed for the entire subnet.\n\nThis doesn't take into account execution threads that are running\nin parallel and may be reserving resources. A proper way to handle\nit is to scale resource saturation for each thread. This scaling\nhas to be done both for subnet messages and regular messages in\norder to keep consistent programming model (even though execution\nof subnet messages is single-threaded at the moment). \n\nSee merge request dfinity-lab/public/ic!14538"
      },
      {
        "id": "8dc2409c9f726e2b0517159e5e55cb5fc41cb3ff",
        "date": "2023-09-07T15:12:03Z",
        "message": "RUN-744: Scale resource saturation based on the number of execution threads"
      },
      {
        "id": "c2adb4af4eb1cbeb5ba74e7dfc386f4823ce0cbe",
        "date": "2023-09-07T07:45:52Z",
        "message": "Merge branch 'ulan/run-721' into 'master'\n\nRUN-721: Implement reservation mechanism in Wasm execution\n\nThe reservation mechanism is disabled by default, so this MR has no impact\non production.\n\nThis MR adds a new field in `SystemStateChanges` that keeps track of changes\nin the `reserved_balance`. The `allocate_execution_memory()` function is\nmodified to update the new field based on the allocated bytes.\n\nAt the of execution, the replica code applies changes to the main and reserved\nbalances of the canister based on the newly added field in `SystemStateChanges`. \n\nSee merge request dfinity-lab/public/ic!14324"
      },
      {
        "id": "48bde3e6e3d9802020006161eb6b59ebc8245e67",
        "date": "2023-09-07T07:45:51Z",
        "message": "RUN-721: Implement reservation mechanism in Wasm execution"
      },
      {
        "id": "2809226ee45b6b4adc55c9d2522375a1145da44b",
        "date": "2023-09-01T09:13:50Z",
        "message": "Merge branch 'ulan/run-720' into 'master'\n\nRUN-720: Implement reservation in `create_canister` and `update_settings`\n\nThe reservation mechanism is disabled by default, so this MR has no impact\non production.\n\nThis MR implements the reservation mechanism in places that update memory\nallocation settings of a canister in `create_canister()` and `update_settings()`\nendpoints of the management canister. \n\nSee merge request dfinity-lab/public/ic!14019"
      },
      {
        "id": "740a191967859284f9195b5972a90ead4a84a3fa",
        "date": "2023-09-01T09:13:46Z",
        "message": "RUN-720: Implement reservation in `create_canister` and `update_settings`"
      },
      {
        "id": "b548aa7c9a0fce34c8469900b6e802eeb0169f4e",
        "date": "2023-08-31T12:12:47Z",
        "message": "Merge branch 'ulan/run-719' into 'master'\n\nRUN-719: Implement reservation mechanism in `install_code`\n\nThe reservation mechanism is disabled by default, so this MR has no impact\non production.\n\nThe MR adds a step at the end of `install_code` execution that performs\nreservation based on allocated and deallocated bytes. \n\nSee merge request dfinity-lab/public/ic!13978"
      },
      {
        "id": "31da3314ad6c2b9b03a61fe3c0219068655af131",
        "date": "2023-08-31T12:12:47Z",
        "message": "RUN-719: Implement reservation mechanism in `install_code`"
      },
      {
        "id": "167fca667aebd2ebdb76fa7ab34325dddc72b20c",
        "date": "2023-08-25T16:40:42Z",
        "message": "Merge branch 'ulan/run-715' into 'master'\n\nRUN-715: Generalize resource usage, threshold, and capacity into `ResourceSaturation`\n\nThis MR generalizes the existing subnet threshold and capacity\nexecution parameters into a struct called `ResourceSaturation`.\n\nBesides the threshold and capacity fields, the new struct also\nhas the usage field. It captures the notion of how much a\nresource such as compute or storage is being used.\n\nThis MR is pure refactoring and doesn't affect production.\nSubsequent MRs will start using the new struct. \n\nSee merge request dfinity-lab/public/ic!13952"
      },
      {
        "id": "4900863e8d7572c4699294349a624f48a6210cb5",
        "date": "2023-08-25T16:40:42Z",
        "message": "RUN-715: Generalize resource usage, threshold, and capacity into `ResourceSaturation`"
      },
      {
        "id": "224577756c80c767554c531de1e7f2838dbb7525",
        "date": "2023-08-18T14:08:27Z",
        "message": "Merge branch 'ulan/run-731' into 'master'\n\nRUN-731: Unify stable memory grow checks\n\nThis MR replaces the existing `prepare_for_stable*_grow()` with\nthe existing `try_grow_stable_memory()` function that is used\nin the Wasm-native stable memory implementation. \n\nSee merge request dfinity-lab/public/ic!14241"
      },
      {
        "id": "3ecb928d48184ea14d1048ab0beed831a66ef13c",
        "date": "2023-08-18T14:08:27Z",
        "message": "RUN-731: Unify stable memory grow checks"
      },
      {
        "id": "306968e2f190fec8849b56db38715e2a17533f55",
        "date": "2023-08-17T15:24:29Z",
        "message": "Merge branch 'ulan/run-729' into 'master'\n\nRUN-729: Remove deallocation of execution memory\n\nThis refactors `stable_grow` and `stable64_grow` operations to\navoid undoing memory allocation. It is done by reordering some\nchecks such that the stable memory size is updated only once\nall checks succeed.\n\nThe motivation for this refactoring is to simplify upcoming\nchanges in memory allocation that don't have simple \"undo\"\ncounterparts. \n\nSee merge request dfinity-lab/public/ic!14171"
      },
      {
        "id": "74dd6a18b7719fb6b0b825c9a6d04adc97b82234",
        "date": "2023-08-17T15:24:29Z",
        "message": "RUN-729: Remove deallocation of execution memory"
      },
      {
        "id": "ddd24813942e43d60b532e70bdca57ebecbf2809",
        "date": "2023-08-16T17:32:51Z",
        "message": "Merge branch 'ulan/message-memory' into 'master'\n\nRUN-730: Decouple checks for execution and message memory\n\nThis MR splits `allocate_memory()` and `deallocate_memory()` into pairs of\n- `allocate_execution_memory()` and `deallocate_execution_memory()`,\n- `allocate_message_memory()` and `deallocate_message_memory()`.\n\nAdditionally, the MR removes the redundant deallocation of memory\nin `take_execution_result()` that is no longer needed because\nsubnet available memory is updated by the replica based on the\noutput of Wasm execution (allocated_bytes, allocated_message_bytes). \n\nThis allows to simplify logic all functions because handling of\nexecution and message memory differs substantially.\n\nA subsequent MR will remove `deallocate_execution_memory()` because\nit is possible to allocate execution memory after proper checks without\nthe need to undo the allocation. \n\nSee merge request dfinity-lab/public/ic!14162"
      },
      {
        "id": "d1196e124d7aabf8514260b8928efbf6e50e7c1f",
        "date": "2023-08-16T17:32:49Z",
        "message": "RUN-730: Decouple checks for execution and message memory"
      },
      {
        "id": "9d106b8064863f58a80567ac42c79c06efb942b2",
        "date": "2023-08-16T02:54:17Z",
        "message": "feat: RUN-681: New Wasm Instrumentation Part 3"
      },
      {
        "id": "f93214d2ff4030b36f253bbb0d7fe06347ba6862",
        "date": "2023-08-11T08:45:10Z",
        "message": "Merge branch 'ulan/apply_balance_changes' into 'master'\n\nFOLLOW-1187: Fix the `apply_balance_changes()` function\n\nThis fixes a bug in the function that may cause incorrect bookkeeping\nof consumed cycles due to saturating arithmetic operations. \n\nSee merge request dfinity-lab/public/ic!14059"
      },
      {
        "id": "f962dd1f3770d5acc9787a2fc50851721ad4c3e7",
        "date": "2023-08-11T08:45:05Z",
        "message": "FOLLOW-1187: Fix the `apply_balance_changes()` function"
      },
      {
        "id": "90fe99fd6756750cde5f92d87ffb68e8b861db77",
        "date": "2023-08-03T16:37:57Z",
        "message": "Merge branch 'ulan/run-718' into 'master'\n\nRUN-718: Add a `scaling_factor` field to `SubnetAvailableMemory`\n\nCurrently the subnet available memory is divided evenly between\nexecution threads in order to enforce the subnet limit\ndeterministically.\n\nThis MR adds a new `scaling_factor` field to `SubnetAvailableMemory`.\nThe field keeps track of the division factor such that an execution\nthread can estimate the global available memory from the per-thread\navailable memory.\n\nUsing this new field, the MR fixes the subnet memory reservation by\nscaling it consistently with the subnet available memory. \n\nSee merge request dfinity-lab/public/ic!13927"
      },
      {
        "id": "d9eedb38caefc305fd9e2ef63e67ea6e183d9603",
        "date": "2023-08-03T16:37:57Z",
        "message": "RUN-718: Add a `scaling_factor` field to `SubnetAvailableMemory`"
      },
      {
        "id": "a16a9b58554768ece0eadfb5f6396b126c84d18c",
        "date": "2023-08-02T13:32:25Z",
        "message": "Merge branch 'ulan/subnet-config-owners' into 'master'\n\nMake the execution and runtime teams owners of subnet_config.rs\n\nThe file contains config parameters related to execution and runtime. \n\nSee merge request dfinity-lab/public/ic!13916"
      },
      {
        "id": "70b51d9980f8b1ba07adf1024e1da0f62916fdb5",
        "date": "2023-08-02T13:32:25Z",
        "message": "Make the execution and runtime teams owners of subnet_config.rs"
      },
      {
        "id": "bbd27bdfb6a150bc611fc40d9d49b958f0b5d178",
        "date": "2023-08-02T10:47:18Z",
        "message": "Merge branch 'ulan/run-717' into 'master'\n\nRUN-717: Increase `install_code` limit on verified application subnets.\n\nThis MR increases the `install_code` instruction limit from 200B\nto 300B instructions on verified application subnets.\n\nA similar change will follow in the future on application subnets. \n\nSee merge request dfinity-lab/public/ic!13915"
      },
      {
        "id": "1ab3a2046e09048bf651610ec20b4f68af57b275",
        "date": "2023-08-02T10:47:17Z",
        "message": "RUN-717: Increase `install_code` limit on verified application subnets."
      }
    ],
    "email": "ulan.degenbaev@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 61,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 29,
    "fixes": 3,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "1f38c3627e2c11aa5fdcffaa6e3ef7bdfecbdce8",
        "date": "2023-11-23T10:10:17Z",
        "message": "RUN-816: Implement uploading the IC config to a canister in `fees_and_limits`"
      },
      {
        "id": "96ed61405f08d6ef08b3dd0f17414bb4f65bc9ab",
        "date": "2023-11-21T08:59:42Z",
        "message": "RUN-561: Increase guard region size for Wasm memory"
      },
      {
        "id": "dd7a4b65ac2876684dfbf8799f19dc523bcec821",
        "date": "2023-11-15T12:14:11Z",
        "message": "RUN-840: Explicitly configure Wasm features of Wasmtime"
      },
      {
        "id": "c95faed4518cf836b1e4fcbaa142af132886b0d1",
        "date": "2023-11-15T10:39:27Z",
        "message": "RUN-839: Upgrade `wasmtime` to version 14.0.4"
      },
      {
        "id": "cfe459906fe7e548dd03e1e130a3061fbc989413",
        "date": "2023-11-08T17:19:18Z",
        "message": "RUN-838: Unify wasmtime validation and execution configs"
      },
      {
        "id": "db296cc9edfc64309a721c30c43c082dbd64e730",
        "date": "2023-10-31T16:56:15Z",
        "message": "RUN-819: Upgrade `wasmtime` to version 13.0.1"
      },
      {
        "id": "97642eed7eab28f0d691b7ef592531efdd3cccf3",
        "date": "2023-10-27T17:20:37Z",
        "message": "RUN-819: Upgrade `serde`"
      },
      {
        "id": "0f254823732eed03763d10f77d6334f6ba730550",
        "date": "2023-10-05T09:18:02Z",
        "message": "FOLLOW-1188: Add a regression test for message memory"
      },
      {
        "id": "c956d64697756cc3673d8852a7fd3fc86c6db043",
        "date": "2023-09-19T19:08:07Z",
        "message": "MR-394, RUN-765: Increase the subnet storage capacity to 700GiB"
      },
      {
        "id": "59d47659635b661e23cacc503a93c110d84b590d",
        "date": "2023-09-19T08:17:54Z",
        "message": "RUN-763: [hotfix] Fix a test failure introduced in 8fc94d"
      },
      {
        "id": "ea4de32a5096fdc4c774cc919d92aa6f41257713",
        "date": "2023-09-18T18:31:02Z",
        "message": "RUN-763: Initialize the reserved balance limit to a default value"
      },
      {
        "id": "ded25a8c927c0d57dfd682573704a8b882fa71ea",
        "date": "2023-09-18T16:24:45Z",
        "message": "RUN-752: Add reserved balance limit to DefinitiveCanisterSettingsArgs"
      },
      {
        "id": "2527240f81e9a142373d0630859da48dd83a9bbf",
        "date": "2023-09-18T14:21:28Z",
        "message": "RUN-773: Fix resource reservation in memory allocation"
      },
      {
        "id": "f147f5616f396787db152cf44d1e88d66ac7643e",
        "date": "2023-09-15T17:21:48Z",
        "message": "RUN-766: Make calculations in resource reservation precise"
      },
      {
        "id": "cfefba9b0f49a3e2d724785708332eeb3720e8a3",
        "date": "2023-09-12T13:08:04Z",
        "message": "RUN-753: Add the reserved balance to canister status result"
      },
      {
        "id": "dc0d89f752c31cf3b3d8ec5df14f2610746f3228",
        "date": "2023-09-11T14:01:02Z",
        "message": "RUN-752: Add the reserved balance limit to the canister settings"
      },
      {
        "id": "764b001268a292e7580dfa92527416ab1b2184f8",
        "date": "2023-09-11T10:14:12Z",
        "message": "RUN-752: Use the reserved balance limit"
      },
      {
        "id": "390f9670051bc853222e4d9dd0e1d1e513e427ce",
        "date": "2023-09-08T11:58:31Z",
        "message": "RUN-757: Add a metric for total reserved balances"
      },
      {
        "id": "4d93466e5d2b462f7238801d73c5c44bf27f0a93",
        "date": "2023-09-07T16:56:42Z",
        "message": "RUN-752: Add a reserved balance limit field to canister state"
      },
      {
        "id": "8dc2409c9f726e2b0517159e5e55cb5fc41cb3ff",
        "date": "2023-09-07T15:12:03Z",
        "message": "RUN-744: Scale resource saturation based on the number of execution threads"
      },
      {
        "id": "48bde3e6e3d9802020006161eb6b59ebc8245e67",
        "date": "2023-09-07T07:45:51Z",
        "message": "RUN-721: Implement reservation mechanism in Wasm execution"
      },
      {
        "id": "740a191967859284f9195b5972a90ead4a84a3fa",
        "date": "2023-09-01T09:13:46Z",
        "message": "RUN-720: Implement reservation in `create_canister` and `update_settings`"
      },
      {
        "id": "31da3314ad6c2b9b03a61fe3c0219068655af131",
        "date": "2023-08-31T12:12:47Z",
        "message": "RUN-719: Implement reservation mechanism in `install_code`"
      },
      {
        "id": "4900863e8d7572c4699294349a624f48a6210cb5",
        "date": "2023-08-25T16:40:42Z",
        "message": "RUN-715: Generalize resource usage, threshold, and capacity into `ResourceSaturation`"
      },
      {
        "id": "3ecb928d48184ea14d1048ab0beed831a66ef13c",
        "date": "2023-08-18T14:08:27Z",
        "message": "RUN-731: Unify stable memory grow checks"
      },
      {
        "id": "74dd6a18b7719fb6b0b825c9a6d04adc97b82234",
        "date": "2023-08-17T15:24:29Z",
        "message": "RUN-729: Remove deallocation of execution memory"
      },
      {
        "id": "d1196e124d7aabf8514260b8928efbf6e50e7c1f",
        "date": "2023-08-16T17:32:49Z",
        "message": "RUN-730: Decouple checks for execution and message memory"
      },
      {
        "id": "9d106b8064863f58a80567ac42c79c06efb942b2",
        "date": "2023-08-16T02:54:17Z",
        "message": "feat: RUN-681: New Wasm Instrumentation Part 3"
      },
      {
        "id": "f962dd1f3770d5acc9787a2fc50851721ad4c3e7",
        "date": "2023-08-11T08:45:05Z",
        "message": "FOLLOW-1187: Fix the `apply_balance_changes()` function"
      },
      {
        "id": "d9eedb38caefc305fd9e2ef63e67ea6e183d9603",
        "date": "2023-08-03T16:37:57Z",
        "message": "RUN-718: Add a `scaling_factor` field to `SubnetAvailableMemory`"
      },
      {
        "id": "70b51d9980f8b1ba07adf1024e1da0f62916fdb5",
        "date": "2023-08-02T13:32:25Z",
        "message": "Make the execution and runtime teams owners of subnet_config.rs"
      },
      {
        "id": "1ab3a2046e09048bf651610ec20b4f68af57b275",
        "date": "2023-08-02T10:47:17Z",
        "message": "RUN-717: Increase `install_code` limit on verified application subnets."
      }
    ],
    "line_additions": 8120,
    "line_deletions": 4367,
    "lines_effected_total": 12487,
    "rel_comm_add": 27,
    "rel_comm_del": 19,
    "rel_comm_total": 28
  },
  {
    "login": "tthebst",
    "id": 44725942,
    "totalContributions": 476,
    "github": "https://github.com/tthebst",
    "commits": [
      {
        "id": "2bc3ec0a0d9b73acbe63ad955425cd09a9f3df90",
        "date": "2023-11-23T12:51:29Z",
        "message": "Merge branch 'tim/set-user-agent-fallback' into 'master'\n\nfix(https_outcalls_adapter): Set default User-Agent header if not set by user\n\nSome API require the `User-Agent` header to be set and reject requests without one set. Often this response is non-deterministc and results in a `Consensus could not be reached` error which is hard to debug. By setting the `User-Agent` header to `ic/1.0`  by default (headers set explicitly by users take precedence) this is avoided. \n\nSee merge request dfinity-lab/public/ic!16172"
      },
      {
        "id": "636bdc2c543c362fec025460f0e2c67868d97a74",
        "date": "2023-11-23T12:51:29Z",
        "message": "fix(https_outcalls_adapter): Set default User-Agent header if not set by user"
      },
      {
        "id": "22f8395577c9c9a76f84f4788c796b1a21c0ea76",
        "date": "2023-11-23T10:39:34Z",
        "message": "Merge branch 'tim/move-encoding' into 'master'\n\nfix(consensus_manager): move rpc response encoding into blocking thread\n\nP2P does not have any control over type complexitiy so we should encode any response data in a blocking thread.\n\nAlso moves the request decoding into the blocking thread because the less encoding/decoding done in async the better. \n\nSee merge request dfinity-lab/public/ic!16220"
      },
      {
        "id": "4330a6cc55dba9998f816c97a2c06c3aa038f343",
        "date": "2023-11-23T10:39:34Z",
        "message": "fix(consensus_manager): move rpc response encoding into blocking thread"
      },
      {
        "id": "fd098fa04f5712fea2a5fff678addcc9c48922bb",
        "date": "2023-11-23T09:35:23Z",
        "message": "Merge branch 'tim/proto-encode-infallible' into 'master'\n\nchore(protobuf): Make proxy encoder infallible\n\nProtobuf serialization can only fail if the allocated buffer is not large enough. This can be guaranteed by using `Vec::with_capacity(encoded.len())` which is what the convenience method `encode_to_vec` in `prost::Message` does. This MR makes `proxy_encode` infallible by using that function. \n\nSee merge request dfinity-lab/public/ic!16274"
      },
      {
        "id": "1ba6258aa8f7377f01665c9cf61961ada25dad78",
        "date": "2023-11-23T09:35:23Z",
        "message": "chore(protobuf): Make proxy encoder infallible"
      },
      {
        "id": "3ff21195bd3dcc20afd077204dc37860521f6721",
        "date": "2023-11-23T08:20:02Z",
        "message": "Merge branch 'tim/more-unir' into 'master'\n\ntest(consensus_manager): Add unit test for same id advert update\n\n \n\nSee merge request dfinity-lab/public/ic!16187"
      },
      {
        "id": "c717451d5c75ed2994a0c37a087999519592b657",
        "date": "2023-11-23T08:20:02Z",
        "message": "test(consensus_manager): Add unit test for same id advert update"
      },
      {
        "id": "30c2c0be17cebdfe99e1fee98c4625a8b7596a7d",
        "date": "2023-11-21T17:48:16Z",
        "message": "Merge branch 'tim/bump-rust174' into 'master'\n\nchore: bump rust to 1.74\n\nMissed the 1.74 release by one day... \n\nSee merge request dfinity-lab/public/ic!16249"
      },
      {
        "id": "ac92ac4bbf17e1a9806df683efd39854da7d9db1",
        "date": "2023-11-21T17:48:16Z",
        "message": "chore: bump rust to 1.74"
      },
      {
        "id": "fd8aae90f1170870de27ecf729f4b7f719d955f7",
        "date": "2023-11-16T20:51:42Z",
        "message": "Merge branch 'tim/consensus-manager-unit-test-recv' into 'master'\n\ntest(consensus_manager): Receive side unit tests\n\nAdds various unit test to receive side of the consensus manager.\n\nCloses: \n\n* NET-1579\n* NET-1580\n* NET-1584\n* NET-1586\n* NET-1587\n* NET-1588\n* NET-1583 \n\nSee merge request dfinity-lab/public/ic!16004"
      },
      {
        "id": "287a7f041a4f5c4a65f1956060458b0896880724",
        "date": "2023-11-16T20:51:41Z",
        "message": "test(consensus_manager): Receive side unit tests"
      },
      {
        "id": "f5e4a8ed8c91fc50cabdb10f877bcea7587f7613",
        "date": "2023-11-16T20:27:21Z",
        "message": "Merge branch 'tim/bump-rust173' into 'master'\n\nchore: bump rust to 1.73\n\nprepare for async traits \n\nSee merge request dfinity-lab/public/ic!16081"
      },
      {
        "id": "5ae303770f1e3fb1ad26ddee98554bbcc770f429",
        "date": "2023-11-16T20:27:20Z",
        "message": "chore: bump rust to 1.73"
      },
      {
        "id": "6f30c9f7dcadaf0a428baec74940dc57fa577bd9",
        "date": "2023-11-15T18:55:15Z",
        "message": "Merge branch 'tim/quic-data-metrics' into 'master'\n\nchore(quic_transport): Add per handler bandwidth metrics\n\n* Add data metrics to quic transport which collects bandwidth usage by client.\n* Add duration metrics push / rpc calls per handler\n* Add dashboards for new metrics \n\nSee merge request dfinity-lab/public/ic!16036"
      },
      {
        "id": "2345815b8a3028c0c76eed820f8c42eeaeaba2c9",
        "date": "2023-11-15T18:55:15Z",
        "message": "chore(quic_transport): Add per handler bandwidth metrics"
      },
      {
        "id": "a1daa750701930d165eb11352310c1dec0f308c6",
        "date": "2023-11-15T14:08:00Z",
        "message": "Merge branch 'tim/remove-deleted_by_peer' into 'master'\n\nfix(consenus_manager): remove deleted by peer download stop\n\nCurrently we have a future that resolves if the peer from which we download removes the advert. This optimisation is not needed because this peer would respond with NO_CONTENT and the benefit is marginal.\n\nAlso refectors the download loop by replacing the `select` with a sequential order. \n\nSee merge request dfinity-lab/public/ic!16023"
      },
      {
        "id": "09d9f75c10e1c078ee9966348968db00ca2fa340",
        "date": "2023-11-15T14:08:00Z",
        "message": "fix(consenus_manager): remove deleted by peer download stop"
      },
      {
        "id": "abbc5528b71c847196d47c3241fa9c6b1f59ddba",
        "date": "2023-11-15T10:13:56Z",
        "message": "Merge branch 'tim/enable-final' into 'master'\n\nfeat(IC-1437): Enable QUIC state sync\n\n \n\nSee merge request dfinity-lab/public/ic!16084"
      },
      {
        "id": "08bf5b926057bef70e255b662052d1a20cae21c2",
        "date": "2023-11-15T10:13:56Z",
        "message": "feat(IC-1437): Enable QUIC state sync"
      },
      {
        "id": "14b6d5049a35e8378c81e69f20ea35d1f1cb3020",
        "date": "2023-11-14T13:19:17Z",
        "message": "Merge branch 'tim/consensus-manager-invariants' into 'master'\n\ntest(consensus_manager): Add invariant debug asserts\n\n* Restructures the consenus manager such that each select arm calls a `handle` function. This allows for testing it with a state machine approach.\n* Adds invariants to the manager that must be true at all times.\n* Removes wrong invariant when removing node from download node set. \n\nSee merge request dfinity-lab/public/ic!16025"
      },
      {
        "id": "1addd134c7eb36441c15709ee3ede3ed7a758576",
        "date": "2023-11-14T13:19:17Z",
        "message": "test(consensus_manager): Add invariant debug asserts"
      },
      {
        "id": "751b2a0cf904934b4afb62b1457f6bf4f0a20275",
        "date": "2023-11-10T16:21:58Z",
        "message": "Merge branch 'tim/remove-select-loops' into 'master'\n\nfix(consensus_manager): gracefully exit if peer sender is dropped\n\nClosed channels indicate shutting down. In that case we should gracefully exit the task. \n\nSee merge request dfinity-lab/public/ic!15970"
      },
      {
        "id": "781a97beda1186864f1c61c153e90d224d6f81a7",
        "date": "2023-11-10T16:21:58Z",
        "message": "fix(consensus_manager): gracefully exit if peer sender is dropped"
      },
      {
        "id": "9f70cc11e871b4edb44d952e983c4acfc16eebea",
        "date": "2023-11-10T12:31:52Z",
        "message": "Merge branch 'tim/state-sync-metrics1' into 'master'\n\nchore(state_sync_manager): Add total size metrics to ongoing state sync metrics\n\nCurrently it is hard to tell from metrics how many bytes of a state sync actually went through p2p. This MR adds metrics two metrics. One for the wire bytes that actually got transferred and a second one for the decompressed size which corresponds to the bytes requested by message routing. \n\nSee merge request dfinity-lab/public/ic!16012"
      },
      {
        "id": "30b50a65af234700c81e5a0ed1aaf8c8e731b53a",
        "date": "2023-11-10T12:31:51Z",
        "message": "chore(state_sync_manager): Add total size metrics to ongoing state sync metrics"
      },
      {
        "id": "b5cf21eb589ff8eb2d1640e30d025864f9384dc4",
        "date": "2023-11-07T17:29:37Z",
        "message": "Merge branch 'tim/consensus-manager-unit-test-send' into 'master'\n\ntest(conensus_manager): send side unit test\n\nAdds unit tests to send side of consenus manager:\n\n* Test that there in no limit on slot manager\n* Commit Id is incremented\n* Initial valdidated pool is broadcasted. \n\nSee merge request dfinity-lab/public/ic!15877"
      },
      {
        "id": "e17e9817270277a6fe2376f3e912b245d462f6df",
        "date": "2023-11-07T17:29:36Z",
        "message": "test(conensus_manager): send side unit test"
      },
      {
        "id": "42e1deb04bd48db5af3c6bda0060f5dcabbec008",
        "date": "2023-11-03T13:36:26Z",
        "message": "Merge branch 'tim/transport-router-metrics' into 'master'\n\nchore: add handler specific metrics to transport\n\nAdds two metrics to the transport router and updates the dashboard:\n\n1. Total requests by handler (uri path)\n2. Add handler execution duration metric. \n\nSee merge request dfinity-lab/public/ic!15719"
      },
      {
        "id": "9191646f7f6874681079657a4c8618a66366b37c",
        "date": "2023-11-03T13:36:26Z",
        "message": "chore: add handler specific metrics to transport"
      },
      {
        "id": "270924aad4447187ae6300205ce6e4f368403b4e",
        "date": "2023-11-03T09:06:29Z",
        "message": "Merge branch 'tim/consensus-manager-test' into 'master'\n\ntest(consensus_manager): Add testing boilerplate\n\nAdds boilerplate test for turmoil transport test. This test p2p add the artifact manager level. \n\nSee merge request dfinity-lab/public/ic!15775"
      },
      {
        "id": "3b81791c7a91d06a37491484411f0bb8b9635698",
        "date": "2023-11-03T09:06:28Z",
        "message": "test(consensus_manager): Add testing boilerplate"
      },
      {
        "id": "25b42af3f5350599c7a3dbff5cc48f9ed8af1568",
        "date": "2023-11-01T10:41:58Z",
        "message": "Merge branch 'tim/implement-get-all' into 'master'\n\nfix: implement get_all_validated_by_filter for all clients\n\nIn the future each client has p2p instance that is generic. On startup each instance calls `get_all_validated_by_filter` to populate itself. Since the component is generic it should work for all clients. \n\nSee merge request dfinity-lab/public/ic!15682"
      },
      {
        "id": "d1694781b4c667f2432cabc92c992bff9ab84329",
        "date": "2023-11-01T10:41:58Z",
        "message": "fix: implement get_all_validated_by_filter for all clients"
      },
      {
        "id": "1a9c6bc5988fbb69d9f39548d3ce0188fb384460",
        "date": "2023-10-30T13:17:41Z",
        "message": "test: mark transport tests as flaky."
      },
      {
        "id": "b48aa61d9cdacbca6ecdf9c6278aa5664c2cae5c",
        "date": "2023-10-30T10:25:50Z",
        "message": "Merge branch 'tim/consensus-manager-metrics' into 'master'\n\nfix(consensus_manager): redo consensus manager metrics and add dashboard\n\nGroups the metric by subcomponent and adds a dashboard for system tests. \n\nSee merge request dfinity-lab/public/ic!15654"
      },
      {
        "id": "cb826e872d7ac7d42c57864e3d7c26ff9034b22e",
        "date": "2023-10-30T10:25:50Z",
        "message": "fix(consensus_manager): redo consensus manager metrics and add dashboard"
      },
      {
        "id": "d71613ced53dd21176cc5363b97892770595a56f",
        "date": "2023-10-25T18:32:21Z",
        "message": "Merge branch 'tim/transport-fixxxx' into 'master'\n\nfix(transport): Don't hold peer state lock across TLS handshake\n\nIn the worst case we hold the write lock on the peer for 30s (TLS timeout). It is possible that p2p has not received the peer down event yet (because we spawn the connect task before sending the peer down event) and it might try to send sth to the reconnecting peer (doing a blocking_read) which can block the p2p thread. \n\nSee merge request dfinity-lab/public/ic!15496"
      },
      {
        "id": "d2fbd51c47a1a77b8e7b1309f077f96cbe92085b",
        "date": "2023-10-25T18:32:21Z",
        "message": "fix(transport): Don't hold peer state lock across TLS handshake"
      },
      {
        "id": "b7d90993916ba57319ac2e9d43862582e89f0147",
        "date": "2023-10-23T14:26:41Z",
        "message": "feat(state_sync_manager): prefer peers with fewer outstanding chunk requests"
      },
      {
        "id": "7fbf35224d74eda1ff21ddec1b121dd2b58144be",
        "date": "2023-09-27T13:59:51Z",
        "message": "feat: [NET-1463] compress state sync chunks"
      },
      {
        "id": "1bc4f182e642d9323f5a8eaf3ae15f07f3d7d6cb",
        "date": "2023-09-20T17:35:46Z",
        "message": "Merge branch 'tim/quic-fix-2' into 'master'\n\nfix: Don't return cancelled tasks in joinmap\n\nCurrently `join_next` in our `JoinMap` type will return tasks as \\`Ok\\` for replaced tasks. This can cause issue in downstream users because they don't expect this. If a task is replaced the result can be ignored. \n\nSee merge request dfinity-lab/public/ic!14898"
      },
      {
        "id": "8029d28faeb83a62011d870755d7d0ec702ff3f3",
        "date": "2023-09-20T17:35:46Z",
        "message": "fix: Don't return cancelled tasks in joinmap"
      },
      {
        "id": "da97e4757dc3746fe513e233ffcf22547948e911",
        "date": "2023-09-13T19:39:00Z",
        "message": "Merge branch 'tim/cond-compile' into 'master'\n\nfix(quic_transport): only set udp buffer size on linux\n\nIt was reported from the SDK team that the error message caused log pollution for dfx. \n\nThis MR only sets the buffer on linux and reduces the log level to info instead of error. It also adds a log to print the buffers sizes such that the used buffer size can be verified with logs. \n\nSee merge request dfinity-lab/public/ic!14736"
      },
      {
        "id": "62bc28cbde3bcb07559724dfe184474c30760ad5",
        "date": "2023-09-13T19:39:00Z",
        "message": "fix(quic_transport): only set udp buffer size on linux"
      },
      {
        "id": "5e4c50982465db3e826bff3d9ea3848dc44e7a7a",
        "date": "2023-09-13T15:53:29Z",
        "message": "feat: [NET-1538] Implement send side of consensus P2P"
      },
      {
        "id": "224b3dfb3802f5d5fd298111200a63189bc81956",
        "date": "2023-09-08T09:42:09Z",
        "message": "Merge branch 'tim/apool' into 'master'\n\nfeat(artifact_manager): [NET-1531] Propagate purged artifact to advert sender\n\nFor the work on bounded data structres artifact pool deletions need to propagated to p2p.r \n\nSee merge request dfinity-lab/public/ic!14631"
      },
      {
        "id": "ff73efb512e679070d65373e879f315d3df96909",
        "date": "2023-09-08T09:42:09Z",
        "message": "feat(artifact_manager): [NET-1531] Propagate purged artifact to advert sender"
      },
      {
        "id": "23df5d00abb56a35f64d9819c5ac129f33f65811",
        "date": "2023-09-08T07:50:59Z",
        "message": "Merge branch 'tim/conn-id' into 'master'\n\nfeat(quic_transport): [NET-1523] export connection id\n\nExtends transport \\`peers\\` api to return a tuple of `NodeID, ConnId`  and also attaches the connection Id to each incoming request. The connection id is mononically increasing (not persisted across restarts). \n\nSee merge request dfinity-lab/public/ic!14332"
      },
      {
        "id": "95753359f02283dfcf12bfad06449b17fda94a2c",
        "date": "2023-09-08T07:50:56Z",
        "message": "feat(quic_transport): [NET-1523] export connection id"
      },
      {
        "id": "32b4eb95666e25d9f1b61d09864b9d98de394d49",
        "date": "2023-09-07T16:59:35Z",
        "message": "Merge branch 'tim/manager-testss' into 'master'\n\ntest(state_sync_manger): Add end-to-end state sync abortion test\n\nAdds end to end test scenario where nodes get removed from state sync for various reasons.\n\nUnfortunatly mockall does not provide a fallibe function to check if all expectations are met. Therefore we just advance time and afterwards verify the mocks don't panic when checking the exepecations (with \\`checkpoint()\\`) \n\nSee merge request dfinity-lab/public/ic!14420"
      },
      {
        "id": "6038d1176096fb9c3ce63f9dc6768b6bfced3dcc",
        "date": "2023-09-07T16:59:33Z",
        "message": "test(state_sync_manger): Add end-to-end state sync abortion test"
      },
      {
        "id": "db7bcd6198adec379240c7abec085ca52be63920",
        "date": "2023-09-07T12:28:47Z",
        "message": "Merge branch 'tim/blockin-statesyncmanger' into 'master'\n\nfix(state_sync_manager): Move available state into spawn_blocking\n\nThe first production state sync on a large state subnet has shown some issues in the metrics. On large state subnets during state sync it can happen that the write lock on the state is hold for minutes.\n\n* `available_state` takes a read lock an can therefore block the state sync manager event loop for minutes. This changes moves the call to \\`available_states\\` into \\`spawn_blocking\\` to not block the tokio executor. It also spawns the sending the adverts on a separate task instead of doing it in the select arm. This avoids blocking the manager event loop.\n* Metrics show that \\`handle_downloaded_chunk_result\\` can also take minutes (maybe needs to preallocate 100GB). This blocks the ongoing state sync manager event loop which in itself is fine. The blocked ongoing event loop should not have effects on the state sync manager event loop and therefore \\`try_send\\` is preferred instead of \\`send\\`. Using async send would block the state sync manager event loop if the channel is full. (this may be debatable) \n\nSee merge request dfinity-lab/public/ic!14637"
      },
      {
        "id": "79381d4dcaceaaf997e572170f15c3ed707b1aba",
        "date": "2023-09-07T12:28:46Z",
        "message": "fix(state_sync_manager): Move available state into spawn_blocking"
      },
      {
        "id": "da4d94c24a23349d97e7581a7d4d8ab12c00cbda",
        "date": "2023-09-06T11:47:09Z",
        "message": "Merge branch 'tim/fff' into 'master'\n\nfix: Use http node record entry for p2p\n\nThe `p2p_flow_endpoints` is corrupted and has missing values. With this change p2p does not rely on `p2p_flow_endpoints` anymore and the node record field can be deprecated in the future.\n\n(it is not yet fully decided to take this approach) \n\nSee merge request dfinity-lab/public/ic!14572"
      },
      {
        "id": "bb12010ad2968fbfea125a447c8ae2da4b4ace23",
        "date": "2023-09-06T11:47:09Z",
        "message": "fix: Use http node record entry for p2p"
      },
      {
        "id": "6794b713e04a981adb2c46b9dfc5395bd0c03c60",
        "date": "2023-09-04T14:02:45Z",
        "message": "Merge branch 'tim/fix-consensus-perf-test' into 'master'\n\nfix: manual consensus perfomance tests\n\n* Add counter canister as runtime dependency\n* Only do \\`block_on\\` when necessary since test driver sometimes spawns internal runtime causing a panic \n\nSee merge request dfinity-lab/public/ic!14546"
      },
      {
        "id": "0109b620cb0150a3f9c98250e11f327e709ff5fe",
        "date": "2023-09-04T14:02:45Z",
        "message": "fix: manual consensus perfomance tests"
      },
      {
        "id": "5b2fd6ec5d23bcb3f871483af1c9f821ad5c5073",
        "date": "2023-08-30T11:00:51Z",
        "message": "Merge branch 'tim/enable-state-sync' into 'master'\n\nfeat(state_sync_manager): Add flag to enable new state sync\n\nAdds a flag that allows for enabling the new state sync. With this there is only a one line diff to the RC when enabling the new state sync \n\nSee merge request dfinity-lab/public/ic!14442"
      },
      {
        "id": "f434dcfc4e7e869595931024d2fb53bdc37fdd2d",
        "date": "2023-08-30T11:00:51Z",
        "message": "feat(state_sync_manager): Add flag to enable new state sync"
      },
      {
        "id": "bee11130a9914b3d05c3d93ab10c7181d00b6850",
        "date": "2023-08-30T08:51:44Z",
        "message": "Merge branch 'tim/state-sync-cosmetic' into 'master'\n\nfix(state_sync_manger): [NET-1461] Adjust parallel downloads\n\nExperiments showed that using 10 parallel chunks download allows for download bandwidth of 1Gbit/s+ which is enough.\n\nAlso prepends protocol name for state sync handler. \n\nSee merge request dfinity-lab/public/ic!14463"
      },
      {
        "id": "074bf38c985f38069367f985f01463325a209363",
        "date": "2023-08-30T08:51:43Z",
        "message": "fix(state_sync_manger): [NET-1461] Adjust parallel downloads"
      },
      {
        "id": "5bc30e1c66dc91c4f51c66896a97f10bb121106f",
        "date": "2023-08-29T18:09:44Z",
        "message": "Merge branch 'tim/fix-quic-sdk' into 'master'\n\nfix(quic_transport): print error on failed buffer resizing instead of panicing\n\nPanicing on buffer resizing may cause issues in dfx since it depends on local user OS setting (failure on MacOS reported).\n\nThis MR changes makes setting the buffer sizes fallible and printing an error message. \n\nSee merge request dfinity-lab/public/ic!14447"
      },
      {
        "id": "2fc031adc56403f0be7d1337ccf1529b74981467",
        "date": "2023-08-29T18:09:44Z",
        "message": "fix(quic_transport): print error on failed buffer resizing instead of panicing"
      },
      {
        "id": "cf273f8369dd290203c235cb58200cbeeada18df",
        "date": "2023-08-29T11:31:51Z",
        "message": "Merge branch 'tim/state-sync-manager-dashboard' into 'master'\n\ntest(state_sync_manager): [NET-1505] Add dashboard\n\nAdds state sync manager dashboard for system tests \n\nSee merge request dfinity-lab/public/ic!14441"
      },
      {
        "id": "a2abdc890fe46be6ccade568a71df41dde6de0d9",
        "date": "2023-08-29T11:31:49Z",
        "message": "test(state_sync_manager): [NET-1505] Add dashboard"
      },
      {
        "id": "2f9686d00de12d8e1fb1688dd07f24fb0e065af1",
        "date": "2023-08-25T11:00:18Z",
        "message": "Merge branch 'tim/transport-bench' into 'master'\n\ntest(quic_transport): Add criterion benchmark\n\nAdds criterion benchmark for the quic transport. Measures rps and throughput for `rpc` , `push` and `peers`\n\n`bazel run //rs/p2p/quic_transport:quic_transport_bench` \n\nSee merge request dfinity-lab/public/ic!14356"
      },
      {
        "id": "4c3b03f23cc2f31533c637b0938eca1bd8438aea",
        "date": "2023-08-25T11:00:17Z",
        "message": "test(quic_transport): Add criterion benchmark"
      },
      {
        "id": "6e38791ee92acd2d8332cdb29127832943d942a8",
        "date": "2023-08-24T13:47:36Z",
        "message": "Merge branch 'tim/sdfdsfsdf' into 'master'\n\nfix(quic_transport): remove the heartbeat from the conn mananger\n\nRemoving the heartbeat should be safe because if a connection get's closed it will result in an closed connection event.\n\nIn the MR, also close the quinn endpoint before calling wait_idle. \n\nSee merge request dfinity-lab/public/ic!14338"
      },
      {
        "id": "681fc8f955412ac7b519e043d3e57aa1f0d8c751",
        "date": "2023-08-24T13:47:35Z",
        "message": "fix(quic_transport): remove the heartbeat from the conn mananger"
      },
      {
        "id": "03a6d4c1d68b7321db97c6883ff57e8089ff75cf",
        "date": "2023-08-23T12:25:39Z",
        "message": "Merge branch 'tim/enable-quic' into 'master'\n\nfeat: [NET-1429] enable quic transport\n\nThis is the first step in the rollout of IC-1517 which introduces a reimplementation of the state sync protocol with quic. \n\nRollout:\n- (this MR) Enable quic on all subnets. Replicas will start to maintain idle quic connections with each other. The correct working of the connection management is crucial and with rolling out quic first we can confirm connectivity between replicas. \n- Enable new state sync based on quic only on a subset of the subnet\n- Enable new state sync everywhere \n\nSee merge request dfinity-lab/public/ic!14251"
      },
      {
        "id": "c91458a89552314ee728c737f259437e67bcb88f",
        "date": "2023-08-23T12:25:39Z",
        "message": "feat: [NET-1429] enable quic transport"
      },
      {
        "id": "9e8a4a5d83bac668a60ede3fb872136bf00514ce",
        "date": "2023-08-22T08:50:18Z",
        "message": "Merge branch 'tim/cleanup-quic' into 'master'\n\nfix(quic_tranport): Remove high cardinality metrics\n\n- Removes high cardinality metrics\n- Use actual length of gruezi handshake\n- Use 1000 bidi stream limit instead of 10000\n- Use 1000 uni stream limit instead of default 100 \n\nSee merge request dfinity-lab/public/ic!14297"
      },
      {
        "id": "a8598b4f6a733245682b3b79a0966b3b85f3655d",
        "date": "2023-08-22T08:50:17Z",
        "message": "fix(quic_tranport): Remove high cardinality metrics"
      },
      {
        "id": "7b0a6b32519aada63cb05925d7459f209b7d04f5",
        "date": "2023-08-22T08:48:18Z",
        "message": "Merge branch 'tim/quic-serialize-test' into 'master'\n\nfix(quic_transport): Make wire message serialization fallible\n\nThe default bincode configuration allows for unlimited size and is infallible. With [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14276) we limited the size in the bincode configuaraion making serialization fallible.\n\nAlso adds a test that verifies that sending very large messages fails. \n\nSee merge request dfinity-lab/public/ic!14305"
      },
      {
        "id": "bac18e6e7745683fa727537f30d167c0e177573a",
        "date": "2023-08-22T08:48:17Z",
        "message": "fix(quic_transport): Make wire message serialization fallible"
      },
      {
        "id": "0b8c0980cc6ff4e7343881713ff643e9cf4b5ec1",
        "date": "2023-08-22T07:22:23Z",
        "message": "Merge branch 'tim/add-dashboards' into 'master'\n\ntest(quic_transport): Add quic transport dashboards to system tests\n\nAdds dashboards for two components of ic-15-17 \n\nSee merge request dfinity-lab/public/ic!14291"
      },
      {
        "id": "58e34ca78ff0507d392c92ffe2d2df77d8664f71",
        "date": "2023-08-22T07:22:23Z",
        "message": "test(quic_transport): Add quic transport dashboards to system tests"
      },
      {
        "id": "d01dd94e306a8e0109c0fc74d62cd483684e1281",
        "date": "2023-08-21T14:51:20Z",
        "message": "Merge branch 'tim/remove-encoding' into 'master'\n\nfix: remove quic stream framing\n\n- Removes framing used on quic streams. Replaces it with just one bincod encoded message\n- Limit how much is read from stream with `read_to_end`\n- Remove headers from message. Currently they are not used. We can add them again when we need them.\n- I will replace tests in this [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14265/diffs) with some integration test \n\nSee merge request dfinity-lab/public/ic!14276"
      },
      {
        "id": "8c5650af4d965ad3d8d38e322110de7187fe6515",
        "date": "2023-08-21T14:51:20Z",
        "message": "fix: remove quic stream framing"
      },
      {
        "id": "b190596c13e378a5cdb4ce3364b02fa2bef68cfd",
        "date": "2023-08-16T18:55:47Z",
        "message": "Merge branch 'tim/quic-metrics2' into 'master'\n\nfeat: Add more quic metrics\n\nAdds following metrics:\n\n- Counter for `push` and `rpc` calls\n- Counter for errors in connnection handle\n- Gauge for number of connections stored in peer map \n\nSee merge request dfinity-lab/public/ic!14193"
      },
      {
        "id": "b1a7d2db61c4a6b9abc1c68306d7a083de33b9cb",
        "date": "2023-08-16T18:55:45Z",
        "message": "feat: Add more quic metrics"
      },
      {
        "id": "0518b9ddfd5714c4d4f1b504d08600f984a85d22",
        "date": "2023-08-16T15:07:45Z",
        "message": "Merge branch 'tim/state-sync-turmoil2' into 'master'\n\ntest: state sync manger advert ping pong with quic\n\nUse quic transport with turmoil in state sync test to have end to end test. With turmoil we have the ability to test edge cases in the manger.\n\n- Moves some non quic tests specific utilities to `test_utils`\n- Adds simple state sync manager ping pong test with turmoil\n- Adds test with where `available` adverts returns multiple adverts\n- Moves state sync mocks to `test_utils` (they should probably be a separate crate at some point) such that they can be used in integration tests. \n\nSee merge request dfinity-lab/public/ic!13926"
      },
      {
        "id": "3afd032bc795406bbe0fbb4a841b48ec3cd25b5a",
        "date": "2023-08-16T15:07:44Z",
        "message": "test: state sync manger advert ping pong with quic"
      },
      {
        "id": "205fc8bb8c82238f0a750e7e0464da864c8b3d39",
        "date": "2023-08-03T09:26:06Z",
        "message": "Merge branch 'tim/return-all-states' into 'master'\n\nfix: Advertise all available states\n\nProblem:\nThere exist edge cases where advertising the latest state is not enough. In some cases it is necessary to sync the second newest state to produce a CUP for the next state.\n\nSolution:\nSend an advert for all states available to a peer. This makes sure that other peers will at some point know about all states a peer has. Since peers only fetch the state of the lastest CUP ordering does not matter.\n\n\nFollow-up:\nAdd test that checks the ordering. \n\nSee merge request dfinity-lab/public/ic!13895"
      },
      {
        "id": "b281d01221344dc66c05d61b3ab71331dd06a455",
        "date": "2023-08-03T09:26:06Z",
        "message": "fix: Advertise all available states"
      },
      {
        "id": "017c3599ca2110c18c8d720359bc3a6217c608a6",
        "date": "2023-08-01T13:10:40Z",
        "message": "Merge branch 'tim/udp-kernel-buffer' into 'master'\n\nfeat: [NET-1504] Set udp socket kernel buffer for quic transport\n\nIncreasing the kernel buffer from the default (212_992B) increases performance signifigantly in experiments.\n\n\nAlso includes bump to the `socket2` crate. \n\nSee merge request dfinity-lab/public/ic!13873"
      },
      {
        "id": "a2bf74e7ab1d56b774208a4e59a292f93767c688",
        "date": "2023-08-01T13:10:39Z",
        "message": "feat: [NET-1504] Set udp socket kernel buffer for quic transport"
      }
    ],
    "email": "tim.gretler@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 88,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 42,
    "fixes": 19,
    "feats": 10,
    "non_merge_commits": [
      {
        "id": "636bdc2c543c362fec025460f0e2c67868d97a74",
        "date": "2023-11-23T12:51:29Z",
        "message": "fix(https_outcalls_adapter): Set default User-Agent header if not set by user"
      },
      {
        "id": "4330a6cc55dba9998f816c97a2c06c3aa038f343",
        "date": "2023-11-23T10:39:34Z",
        "message": "fix(consensus_manager): move rpc response encoding into blocking thread"
      },
      {
        "id": "1ba6258aa8f7377f01665c9cf61961ada25dad78",
        "date": "2023-11-23T09:35:23Z",
        "message": "chore(protobuf): Make proxy encoder infallible"
      },
      {
        "id": "c717451d5c75ed2994a0c37a087999519592b657",
        "date": "2023-11-23T08:20:02Z",
        "message": "test(consensus_manager): Add unit test for same id advert update"
      },
      {
        "id": "ac92ac4bbf17e1a9806df683efd39854da7d9db1",
        "date": "2023-11-21T17:48:16Z",
        "message": "chore: bump rust to 1.74"
      },
      {
        "id": "287a7f041a4f5c4a65f1956060458b0896880724",
        "date": "2023-11-16T20:51:41Z",
        "message": "test(consensus_manager): Receive side unit tests"
      },
      {
        "id": "5ae303770f1e3fb1ad26ddee98554bbcc770f429",
        "date": "2023-11-16T20:27:20Z",
        "message": "chore: bump rust to 1.73"
      },
      {
        "id": "2345815b8a3028c0c76eed820f8c42eeaeaba2c9",
        "date": "2023-11-15T18:55:15Z",
        "message": "chore(quic_transport): Add per handler bandwidth metrics"
      },
      {
        "id": "09d9f75c10e1c078ee9966348968db00ca2fa340",
        "date": "2023-11-15T14:08:00Z",
        "message": "fix(consenus_manager): remove deleted by peer download stop"
      },
      {
        "id": "08bf5b926057bef70e255b662052d1a20cae21c2",
        "date": "2023-11-15T10:13:56Z",
        "message": "feat(IC-1437): Enable QUIC state sync"
      },
      {
        "id": "1addd134c7eb36441c15709ee3ede3ed7a758576",
        "date": "2023-11-14T13:19:17Z",
        "message": "test(consensus_manager): Add invariant debug asserts"
      },
      {
        "id": "781a97beda1186864f1c61c153e90d224d6f81a7",
        "date": "2023-11-10T16:21:58Z",
        "message": "fix(consensus_manager): gracefully exit if peer sender is dropped"
      },
      {
        "id": "30b50a65af234700c81e5a0ed1aaf8c8e731b53a",
        "date": "2023-11-10T12:31:51Z",
        "message": "chore(state_sync_manager): Add total size metrics to ongoing state sync metrics"
      },
      {
        "id": "e17e9817270277a6fe2376f3e912b245d462f6df",
        "date": "2023-11-07T17:29:36Z",
        "message": "test(conensus_manager): send side unit test"
      },
      {
        "id": "9191646f7f6874681079657a4c8618a66366b37c",
        "date": "2023-11-03T13:36:26Z",
        "message": "chore: add handler specific metrics to transport"
      },
      {
        "id": "3b81791c7a91d06a37491484411f0bb8b9635698",
        "date": "2023-11-03T09:06:28Z",
        "message": "test(consensus_manager): Add testing boilerplate"
      },
      {
        "id": "d1694781b4c667f2432cabc92c992bff9ab84329",
        "date": "2023-11-01T10:41:58Z",
        "message": "fix: implement get_all_validated_by_filter for all clients"
      },
      {
        "id": "1a9c6bc5988fbb69d9f39548d3ce0188fb384460",
        "date": "2023-10-30T13:17:41Z",
        "message": "test: mark transport tests as flaky."
      },
      {
        "id": "cb826e872d7ac7d42c57864e3d7c26ff9034b22e",
        "date": "2023-10-30T10:25:50Z",
        "message": "fix(consensus_manager): redo consensus manager metrics and add dashboard"
      },
      {
        "id": "d2fbd51c47a1a77b8e7b1309f077f96cbe92085b",
        "date": "2023-10-25T18:32:21Z",
        "message": "fix(transport): Don't hold peer state lock across TLS handshake"
      },
      {
        "id": "b7d90993916ba57319ac2e9d43862582e89f0147",
        "date": "2023-10-23T14:26:41Z",
        "message": "feat(state_sync_manager): prefer peers with fewer outstanding chunk requests"
      },
      {
        "id": "7fbf35224d74eda1ff21ddec1b121dd2b58144be",
        "date": "2023-09-27T13:59:51Z",
        "message": "feat: [NET-1463] compress state sync chunks"
      },
      {
        "id": "8029d28faeb83a62011d870755d7d0ec702ff3f3",
        "date": "2023-09-20T17:35:46Z",
        "message": "fix: Don't return cancelled tasks in joinmap"
      },
      {
        "id": "62bc28cbde3bcb07559724dfe184474c30760ad5",
        "date": "2023-09-13T19:39:00Z",
        "message": "fix(quic_transport): only set udp buffer size on linux"
      },
      {
        "id": "5e4c50982465db3e826bff3d9ea3848dc44e7a7a",
        "date": "2023-09-13T15:53:29Z",
        "message": "feat: [NET-1538] Implement send side of consensus P2P"
      },
      {
        "id": "ff73efb512e679070d65373e879f315d3df96909",
        "date": "2023-09-08T09:42:09Z",
        "message": "feat(artifact_manager): [NET-1531] Propagate purged artifact to advert sender"
      },
      {
        "id": "95753359f02283dfcf12bfad06449b17fda94a2c",
        "date": "2023-09-08T07:50:56Z",
        "message": "feat(quic_transport): [NET-1523] export connection id"
      },
      {
        "id": "6038d1176096fb9c3ce63f9dc6768b6bfced3dcc",
        "date": "2023-09-07T16:59:33Z",
        "message": "test(state_sync_manger): Add end-to-end state sync abortion test"
      },
      {
        "id": "79381d4dcaceaaf997e572170f15c3ed707b1aba",
        "date": "2023-09-07T12:28:46Z",
        "message": "fix(state_sync_manager): Move available state into spawn_blocking"
      },
      {
        "id": "bb12010ad2968fbfea125a447c8ae2da4b4ace23",
        "date": "2023-09-06T11:47:09Z",
        "message": "fix: Use http node record entry for p2p"
      },
      {
        "id": "0109b620cb0150a3f9c98250e11f327e709ff5fe",
        "date": "2023-09-04T14:02:45Z",
        "message": "fix: manual consensus perfomance tests"
      },
      {
        "id": "f434dcfc4e7e869595931024d2fb53bdc37fdd2d",
        "date": "2023-08-30T11:00:51Z",
        "message": "feat(state_sync_manager): Add flag to enable new state sync"
      },
      {
        "id": "074bf38c985f38069367f985f01463325a209363",
        "date": "2023-08-30T08:51:43Z",
        "message": "fix(state_sync_manger): [NET-1461] Adjust parallel downloads"
      },
      {
        "id": "2fc031adc56403f0be7d1337ccf1529b74981467",
        "date": "2023-08-29T18:09:44Z",
        "message": "fix(quic_transport): print error on failed buffer resizing instead of panicing"
      },
      {
        "id": "a2abdc890fe46be6ccade568a71df41dde6de0d9",
        "date": "2023-08-29T11:31:49Z",
        "message": "test(state_sync_manager): [NET-1505] Add dashboard"
      },
      {
        "id": "4c3b03f23cc2f31533c637b0938eca1bd8438aea",
        "date": "2023-08-25T11:00:17Z",
        "message": "test(quic_transport): Add criterion benchmark"
      },
      {
        "id": "681fc8f955412ac7b519e043d3e57aa1f0d8c751",
        "date": "2023-08-24T13:47:35Z",
        "message": "fix(quic_transport): remove the heartbeat from the conn mananger"
      },
      {
        "id": "c91458a89552314ee728c737f259437e67bcb88f",
        "date": "2023-08-23T12:25:39Z",
        "message": "feat: [NET-1429] enable quic transport"
      },
      {
        "id": "a8598b4f6a733245682b3b79a0966b3b85f3655d",
        "date": "2023-08-22T08:50:17Z",
        "message": "fix(quic_tranport): Remove high cardinality metrics"
      },
      {
        "id": "bac18e6e7745683fa727537f30d167c0e177573a",
        "date": "2023-08-22T08:48:17Z",
        "message": "fix(quic_transport): Make wire message serialization fallible"
      },
      {
        "id": "58e34ca78ff0507d392c92ffe2d2df77d8664f71",
        "date": "2023-08-22T07:22:23Z",
        "message": "test(quic_transport): Add quic transport dashboards to system tests"
      },
      {
        "id": "8c5650af4d965ad3d8d38e322110de7187fe6515",
        "date": "2023-08-21T14:51:20Z",
        "message": "fix: remove quic stream framing"
      },
      {
        "id": "b1a7d2db61c4a6b9abc1c68306d7a083de33b9cb",
        "date": "2023-08-16T18:55:45Z",
        "message": "feat: Add more quic metrics"
      },
      {
        "id": "3afd032bc795406bbe0fbb4a841b48ec3cd25b5a",
        "date": "2023-08-16T15:07:44Z",
        "message": "test: state sync manger advert ping pong with quic"
      },
      {
        "id": "b281d01221344dc66c05d61b3ab71331dd06a455",
        "date": "2023-08-03T09:26:06Z",
        "message": "fix: Advertise all available states"
      },
      {
        "id": "a2bf74e7ab1d56b774208a4e59a292f93767c688",
        "date": "2023-08-01T13:10:39Z",
        "message": "feat: [NET-1504] Set udp socket kernel buffer for quic transport"
      }
    ],
    "line_additions": 15618,
    "line_deletions": 3033,
    "lines_effected_total": 18651,
    "rel_comm_add": 38,
    "rel_comm_del": 27,
    "rel_comm_total": 40
  },
  {
    "login": "aterga",
    "id": 886924,
    "totalContributions": 468,
    "github": "https://github.com/aterga",
    "commits": [
      {
        "id": "09c3000df0a54c470994ceb5bc33bd8457b02fe7",
        "date": "2023-11-23T13:38:24Z",
        "message": "Merge branch 'basvandijk/fix-test-sns-canister-upgrades.sh' into 'master'\n\nfix: test-sns-canister-upgrades.sh: increase swap amount\n\n \n\nSee merge request dfinity-lab/public/ic!16288"
      },
      {
        "id": "afd06c2f7509aca025bd13dad6c29e55c383d116",
        "date": "2023-11-20T13:13:12Z",
        "message": "Merge branch 'arshavir/fix-one_proposal_neurons_fund_swap_participation_test-3' into 'master'\n\ntest(NF): Fix and re-enable `one_proposal_neurons_fund_swap_participation_test`\n\nThis MR fixes (and reenables on hourly) the priorly broken `one_proposal_neurons_fund_swap_participation_test` system test by increasing `SNS_SALE_PARAM_MAX_PARTICIPANT_ICP_E8S` from 150K ICP to 250K ICP. \n\nSee merge request dfinity-lab/public/ic!16208"
      },
      {
        "id": "b55ec443902a0e870e4b9da2b8a529ab2bc9b1be",
        "date": "2023-11-20T13:13:12Z",
        "message": "test(NF): Fix and re-enable `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "830800a3e8d4eb02ac8745b3fc0d7892699b33da",
        "date": "2023-11-20T12:43:22Z",
        "message": "Merge branch 'arshavir/improve-nf-refunds' into 'master'\n\nchore(NF): Improve error reporting in `NeuronsFundSnapshot::diff`\n\nThis MR improves error handling in `NeuronsFundSnapshot::diff` by collecting errors from all neuron portions, rather than stopping at the first error. Additionally, some unit tests are added. \n\nSee merge request dfinity-lab/public/ic!16189"
      },
      {
        "id": "4471390d44d5e3f5d75adf818fff0227d9d7f499",
        "date": "2023-11-20T12:43:22Z",
        "message": "chore(NF): Improve error reporting in `NeuronsFundSnapshot::diff`"
      },
      {
        "id": "9adc144df9b83eaeefa306320797fdff0237b93b",
        "date": "2023-11-18T00:22:29Z",
        "message": "chore(SNS): Fix `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "7ba7879599d3788be44f82862286022be4a0054f",
        "date": "2023-11-17T15:30:02Z",
        "message": "Merge branch 'basvandijk/fix-nns-governance-warning-message' into 'master'\n\nfix: nns: governance: remove newlines from warning log message\n\nBefore this commit our log was spammed with the following incomplete warning messages:\n\n```\nNov 17 13:23:22 hodrf-sf36l-zfwhp-etaku-svsb6-hut5g-4tsfm-56jeh-rj7gv-lbpuh-lqe orchestrator[2730]: 2023-11-17 13:23:20.801459857 UTC: [Canister rrkah-fqaaa-aaaaa-aaaaq-cai] [Governance] WARNING: Neuron Some(\n```\nWith no lines following that would complete the message. So it seems our canister logger only logs the first line of a message.\n\nWith this commit we see the whole message:\n\n```\nNov 17 14:04:42 hodrf-sf36l-zfwhp-etaku-svsb6-hut5g-4tsfm-56jeh-rj7gv-lbpuh-lqe orchestrator[2730]: 2023-11-17 14:04:39.713870888 UTC: [Canister rrkah-fqaaa-aaaaa-aaaaq-cai] [Governance] WARNING: Neuron Some(NeuronId { id: 2347217038740912802 }) is dissolved, but it is not known when that happened. Thus, by default, dissolved_at_timestamp_seconds is set to None.\n``` \n\nSee merge request dfinity-lab/public/ic!16181"
      },
      {
        "id": "107b109bd9c54ef5eb21d4fd7eef6b48e66acf73",
        "date": "2023-11-17T15:13:01Z",
        "message": "Merge branch 'arshavir/NNS1-2658' into 'master'\n\ntest(NNS1-2658): Re-enable `one_proposal_neurons_fund_swap_participation_test`\n\nThis MR re-enables the `one_proposal_neurons_fund_swap_participation_test` system test on hourly and nightly pipelines.\n\nCloses NNS1-2658 \n\nCloses NNS1-2658\n\nSee merge request dfinity-lab/public/ic!15984"
      },
      {
        "id": "a9137c8ae4eabaa7eb2ddd8b92dc62f883aaee9b",
        "date": "2023-11-17T15:13:00Z",
        "message": "test(NNS1-2658): Re-enable `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "644fc3c1407413e4a6eab2b2b0203c273b2723c7",
        "date": "2023-11-17T11:56:17Z",
        "message": "Merge branch 'arshavir/improve-git-commit-extrction-for-sns-release-testing' into 'master'\n\nchore(SNS): Improve Git commit ID extraction for SNS release testing with NNS Governance built from working tree\n\nThis MR improves Git commit ID extraction for SNS release testing with NNS Governance built from working tree.\n\nWhen the NNS Governance canister is upgraded to the working tree version (a.k.a. tip of the branch), then it's `git_commit_id` field in the wasm module metadata is full of zeros: `00...0`.\n\nThus, the `canister_git_version` function in testnet/tools/nns-tools/lib/canisters.sh cannot infer the Git commit ID correctly based on this information. In such cases, it seems appropriate to read the the Git commit ID from the local Git branch, which this MR is trying to automate. \n\nSee merge request dfinity-lab/public/ic!15755"
      },
      {
        "id": "6cfecd6541d5812c7cf2692895bc45909d1fe183",
        "date": "2023-11-17T11:56:17Z",
        "message": "chore(SNS): Improve Git commit ID extraction for SNS release testing with NNS Governance built from working tree"
      },
      {
        "id": "678cf3e46f49feba694663c6235c6d4ece72ef62",
        "date": "2023-11-16T22:45:30Z",
        "message": "chore(NF): Reintroduce generic binary search in `Interval::find`"
      },
      {
        "id": "5963da7b8d03143a4204538e86e9bfe658d538c4",
        "date": "2023-11-16T19:42:57Z",
        "message": "Merge branch 'arshavir/fix-polynomial-functions' into 'master'\n\nfix(SNS): Handle the special case in which Matched Funding was requested but the Neurons' Fund does not have any maturity\n\nThis MR adds a handler for the special case in which Matched Funding was requested but the Neurons' Fund does not have any maturity. Additionally, polynomial function tests are improved. \n\nSee merge request dfinity-lab/public/ic!16097"
      },
      {
        "id": "d67ddf7f1f8427d0df632aa9d3937c7a0c89c581",
        "date": "2023-11-16T19:42:57Z",
        "message": "fix(SNS): Handle the special case in which Matched Funding was requested but the Neurons' Fund does not have any maturity"
      },
      {
        "id": "8ee79de4aad8ab6148daf0259a2fa3cd90f098ae",
        "date": "2023-11-16T11:04:24Z",
        "message": "Merge branch 'arshavir/improve-nfplot-audit' into 'master'\n\nfeat(nfplot): Improve consistency checks in `nfplot --audit`\n\nThis MR improves the auditing capabilities of `nfplot` by adding various consistency checks that rely only on the public APIs of NNS Governance, SNS Governance, and SNS Swap.\n\nExample: \n\n```\nbazel run //rs/nervous_system/neurons_fund/nfplot -- http://localhost:8080 bw4dl-smaaa-aaaaa-qaacq-cai --audit\n...\n✅ Number of Neurons' Fund neurons whose maturity was initially reserved (5) >= number of Neurons' Fund neurons who actually participated in the swap (5).\n✅ Number of Neurons' Fund neurons whose maturity was initially reserved (5) >= number of Neurons' Fund neurons who have been refunded (5).\n✅ initial_amount_icp_e8s (299700299700) == final_amount_icp_e8s (299700299700) + refunded_amount_icp_e8s (0).\n✅ initial_amount_icp_e8s (2997002997) == final_amount_icp_e8s (2997002997) + refunded_amount_icp_e8s (0).\n✅ initial_amount_icp_e8s (1000000000000) == final_amount_icp_e8s (1000000000000) + refunded_amount_icp_e8s (0).\n✅ initial_amount_icp_e8s (29970029970) == final_amount_icp_e8s (29970029970) + refunded_amount_icp_e8s (0).\n✅ initial_amount_icp_e8s (1000000000000) == final_amount_icp_e8s (1000000000000) + refunded_amount_icp_e8s (0).\n✅ 15 SNS neurons created for 5 Neurons' Fund participants (3 SNS neurons per basket)\n✅ Participation amount of 2997002997 ICP e8s results in 1464343242 SNS token e8s (error = 0.0000000037203250843418525163% = 0.0544783289529907175 SNS e8s)\n✅ Participation amount of 29970029970 ICP e8s results in 14643432420 SNS token e8s (error = 0.0000000037203250843418525163% = 0.544783289529907175 SNS e8s)\n✅ Participation amount of 299700299700 ICP e8s results in 146434324205 SNS token e8s (error = 0.0000000003058250842009762188% = 0.44783289529907175 SNS e8s)\n✅ Participation amount of 1000000000000 ICP e8s results in 488602528432 SNS token e8s (error = 0.0000000001363490602238979123% = 0.66620495574723560 SNS e8s)\n✅ Participation amount of 1000000000000 ICP e8s results in 488602528432 SNS token e8s (error = 0.0000000001363490602238979123% = 0.66620495574723560 SNS e8s)\n``` \n\nSee merge request dfinity-lab/public/ic!16095"
      },
      {
        "id": "5c91ca09faff0ca81b688d2537014d5c3924d724",
        "date": "2023-11-16T11:04:24Z",
        "message": "feat(nfplot): Improve consistency checks in `nfplot --audit`"
      },
      {
        "id": "c630d67f6c8f510a9a952b23191933ab40e7e7c6",
        "date": "2023-11-15T00:17:12Z",
        "message": "Merge branch 'arshavir/update-nns-tools-after-release-testing' into 'master'\n\nchore(SNS): Support Matched Funding in testnet/tools/nns-tools\n\nThis MR improves that support of the new Matched Funding feature in testnet/tools/nns-tools. \n\nSee merge request dfinity-lab/public/ic!16046"
      },
      {
        "id": "21c2a6152ffd1523e3b6f0e7677913222cd9bf3c",
        "date": "2023-11-15T00:17:12Z",
        "message": "chore(SNS): Support Matched Funding in testnet/tools/nns-tools"
      },
      {
        "id": "39eb0aa82a7d8fbb79f0584735f2861b77c26f02",
        "date": "2023-11-10T18:09:56Z",
        "message": "Merge branch 'arshavir/NNS1-2570-5' into 'master'\n\nfeat(NNS1-2570): Matched Funding / Neurons' Fund participation monitoring tool\n\nThis MR prototypes a tool for Neurons' Fund participation monitoring during SNS decentralization swaps.\n\nExample \n\n```\nbazel run //rs/nns/governance:nfplot -- https://ic0.app 6eexo-lqaaa-aaaaq-aaawa-cai\n--- Hot or Not Neurons' Fund Participation (in ICP) ---\n⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⠤⠤⠤⠤⠔⠒⠒⠒⠒⠒⠒⠒⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀ 333000.0\n⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡠⠤⠤⠒⠒⠊⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠤⠒⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠔⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢀⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠂⠀⠀⠀⠀⠀⠀⢀⣀⠤⠔⠁⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠁⠈⠀⠁⠈⠉⠉⠉⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁⠈⠀⠁ 0.0\n0.0                                                                               666000.0\n```\n\nAdditionally, auditing the Neurons' Fund participation is possible via the following command:\n\n```\nbazel run //rs/nns/governance:nfplot -- https://ic0.app 6eexo-lqaaa-aaaaq-aaawa-cai --audit\n```\n\nCloses NNS1-2570 \n\nCloses NNS1-2570\n\nSee merge request dfinity-lab/public/ic!15738"
      },
      {
        "id": "ef5d49735f1b7121ed0d77810b29ba3d76bbab2c",
        "date": "2023-11-10T18:09:56Z",
        "message": "feat(NNS1-2570): Matched Funding / Neurons' Fund participation monitoring tool"
      },
      {
        "id": "be1f999262229a6b6c300dc9f34a9ec2264f5117",
        "date": "2023-11-10T16:10:40Z",
        "message": "Merge branch 'arshavir/enable-matched-funding-for-real' into 'master'\n\nfeat(SNS): Matched Funding / Enable the Matched Funding feature\n\nThis MR enables the Matched Funding feature by setting the compile-time feature flag `IS_MATCHED_FUNDING_ENABLED` to `true`.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16016) | \n\nSee merge request dfinity-lab/public/ic!16010"
      },
      {
        "id": "9ade77dd16f21943b0119e5bdbda8b7496bc5ba4",
        "date": "2023-11-10T16:10:40Z",
        "message": "feat(SNS): Matched Funding / Enable the Matched Funding feature"
      },
      {
        "id": "c32bad8063a7ce4a9e3b19318e092e124333de43",
        "date": "2023-11-10T14:41:18Z",
        "message": "Merge branch 'arshavir/NNS1-2592' into 'master'\n\nfeat(NNS1-2592): Matched Funding / Support `neurons_fund_participation` and deprecate `neurons_fund_investment` in ic-admin\n\nthis MR updated the ic-admin tool to support the new `neurons_fund_participation` field, while removing the outdated `neurons_fund_investment` field.\n\nAdditionally, `minimum_direct_participation_icp` and `maximum_direct_participation_icp` are now replacing `manimum_swap_icp`, `maximum_swap_icp`, resp.\n\nCloses NNS1-2592 \n\nCloses NNS1-2592\n\nSee merge request dfinity-lab/public/ic!16016"
      },
      {
        "id": "84496ea876fcf567e57e2906f1623085e9747bf6",
        "date": "2023-11-10T14:41:18Z",
        "message": "feat(NNS1-2592): Matched Funding / Support `neurons_fund_participation` and deprecate `neurons_fund_investment` in ic-admin"
      },
      {
        "id": "5a904f94ee08895c8533081a45f579192deca2c5",
        "date": "2023-11-09T23:19:15Z",
        "message": "Merge branch 'arshavir/enable-matched-funding' into 'master'\n\nfeat(NNS): Matched Funding / Ensure tests pass regardless of whether `IS_MATCHED_FUNDING_ENABLED`\n\nThis MR ensures NNS Governance tests pass regardless of whether `IS_MATCHED_FUNDING_ENABLED`.\n\n| [Next MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16010) > \n\nSee merge request dfinity-lab/public/ic!16007"
      },
      {
        "id": "1bbb44e4e0396675e2ccf64eadf6b85dbfafb914",
        "date": "2023-11-09T23:19:14Z",
        "message": "feat(NNS): Matched Funding / Ensure tests pass regardless of whether `IS_MATCHED_FUNDING_ENABLED`"
      },
      {
        "id": "5c620622a53326e9f188ff5cddd2c9ac6d65861c",
        "date": "2023-11-09T19:21:12Z",
        "message": "Merge branch 'arshavir/NNS1-2591-2' into 'master'\n\nfeat(NNS1-2591): Matched Funding / Compute `NeuronsFundParticipationConstraints`\n\nThis MR implements the remaining algorithm from rs/nns/governance/src/neurons_fund.rs that provides `NeuronsFundParticipationConstraints`, a structure used by the Swap canister to lookup Neurons' Fund participation in real time.\n\nCloses NNS1-2591 \n\nCloses NNS1-2591\n\nSee merge request dfinity-lab/public/ic!15884"
      },
      {
        "id": "d18ac0890818393df294cbfa8348cbec75309bc6",
        "date": "2023-11-09T19:21:12Z",
        "message": "feat(NNS1-2591): Matched Funding / Compute `NeuronsFundParticipationConstraints`"
      },
      {
        "id": "d66d42bc25d26952da4dae4437ed85c66c8833c6",
        "date": "2023-11-09T18:57:08Z",
        "message": "Merge branch 'arshavir/cap-swaps-nf-participation-estimate' into 'master'\n\nfeat(Swap): Matched Funding / Cap `neurons_fund_participation_icp_e8s` estimation at `max_neurons_fund_participation_icp_e8s`\n\nThis MR caps the value of `neurons_fund_participation_icp_e8s` estimated during `refresh_buyer_token_e8s` at `max_neurons_fund_participation_icp_e8s`. This mitigates a potentially confusing situation for the end users, in which the Swap's best\n`neurons_fund_participation_icp_e8s` estimate for whatever reason exceeds the amount allocated by the Neurons' Fund before the swap started. \n\nSee merge request dfinity-lab/public/ic!16003"
      },
      {
        "id": "a82db2e421f3ed03a400c66b169d601cba5fc743",
        "date": "2023-11-09T18:57:08Z",
        "message": "feat(Swap): Matched Funding / Cap `neurons_fund_participation_icp_e8s` estimation at `max_neurons_fund_participation_icp_e8s`"
      },
      {
        "id": "ec140b74dc4fef2f4bee3fad936e315380fa5af3",
        "date": "2023-11-08T20:25:22Z",
        "message": "Merge branch 'arshavir/NNS1-2558' into 'master'\n\nfeat(NNS1-2558): Matched Funding / Add unit tests for `refresh_buyer_token_e8s` to check Neurons' Fund participation\n\nThis MR adds unit tests for `refresh_buyer_token_e8s` to check Neurons' Fund participation.\n\nCloses NNS1-2558 \n\nCloses NNS1-2558\n\nSee merge request dfinity-lab/public/ic!15980"
      },
      {
        "id": "7fc3072e447b4a1b94976a6ccdca93934fdf890b",
        "date": "2023-11-08T20:25:22Z",
        "message": "feat(NNS1-2558): Matched Funding / Add unit tests for `refresh_buyer_token_e8s` to check Neurons' Fund participation"
      },
      {
        "id": "ae85c99ef682265f6afebe285e6d51826ba35ca4",
        "date": "2023-11-08T09:36:13Z",
        "message": "Merge branch 'arshavir/deprecate-neurons_fund_investment_icp' into 'master'\n\nchore(SNS): Matched Funding / Disallow `neurons_fund_investment_icp` when Matched Funding is used\n\nThis MR disallows the `neurons_fund_investment_icp` field in sns_init.yaml when Matched Funding is used.\n\nThis is an important UX aspect that allows avoiding confusion for the end users, who would otherwise be able to see e.g.\n\n```\nneurons_fund_investment_icp : 0 tokens\nneurons_fund_participation : true\n```\n\nin the proposal configuration, which we want to avoid.\n\n(Note that the default frontend hides all `null`ed proposal payload fields.)\n\nAdditionally, this MR fixes a bug due to which when Matched Funding is enabled, not requiring it may lead to incorrect validation logic in `do_create_service_nervous_system`. \n\nSee merge request dfinity-lab/public/ic!15948"
      },
      {
        "id": "5d6ac9033f4fa4456ee80be51112808d27abe770",
        "date": "2023-11-08T09:36:12Z",
        "message": "chore(SNS): Matched Funding / Disallow `neurons_fund_investment_icp` when Matched Funding is used"
      },
      {
        "id": "d467518d23411c651cd3d2bb16f5c373728d3e47",
        "date": "2023-11-08T00:28:55Z",
        "message": "Merge branch 'arshavir/fix-sns-cli-validation' into 'master'\n\nfix(SNS): Fix SNS CLI's `init-config-file validate` sub-command\n\nThis MR fixes the SNS CLI's `init-config-file validate` sub-command by reusing the new `generate_sns_init_payload` function that supports the old ad the new formats. \n\nSee merge request dfinity-lab/public/ic!15955"
      },
      {
        "id": "3c194fe9e33501f4d787bef37c3d6a2cd171e453",
        "date": "2023-11-08T00:28:55Z",
        "message": "fix(SNS): Fix SNS CLI's `init-config-file validate` sub-command"
      },
      {
        "id": "8c9dc5bc268a09fc389640608833efd6228a01f0",
        "date": "2023-11-07T00:53:37Z",
        "message": "Merge branch 'arshavir/NNS1-2620-2' into 'master'\n\nchore(SNS): Matched Funding / Reuse validation code for `SnsInitPayload.neurons_fund_participation_constraints` in SNS init\n\nThis MR reuses some of the validation code for the `SnsInitPayload.neurons_fund_participation_constraints` field in the SNS init crate.\n\nAdditionally, we now validate that `min_direct_participation_threshold_icp_e8s` is between `(min|max)_direct_participation_icp_e8s` (exclusive). (If a user violates this, they are almost certainly making a mistake, so we disallow it, even though it is most likely possible to safely execute precisely what they specified.)\n\nPreviously some of the validation was essentially defined twice, once in SNS init and once in ic_sns_swap/neurons_fund. \n\nSee merge request dfinity-lab/public/ic!15882"
      },
      {
        "id": "b6e53dccd977f7a71c67f6f2bff2043dc8f28631",
        "date": "2023-11-07T00:53:35Z",
        "message": "chore(SNS): Matched Funding / Reuse validation code for `SnsInitPayload.neurons_fund_participation_constraints` in SNS init"
      },
      {
        "id": "3b68f7556225759a786108e16f907067aae1ec71",
        "date": "2023-11-06T23:54:55Z",
        "message": "Merge branch 'arshavir/fix-max_neurons_fund_participation_icp_e8s-2' into 'master'\n\nfix(NNS): Matched Funding / Assign `max_neurons_fund_participation_icp_e8s` to a more precise value\n\nCurrently, the `max_neurons_fund_participation_icp_e8s` field in SwapInit is assigned to the upper bound that is meant to indicate the maximum participation amount without considering the actual composition of neurons in the Neuron's Fund.\n\nWith this MR, we make use of the recently added `allocated_neurons_fund_participation_icp_e8s` field to assign a more precise value to `max_neurons_fund_participation_icp_e8s`.\n\nNote that the field names are sane, as from the p.o.v. of the NNS Governance, the notion of maximum differs from that in the SNS Swap, from whose perspective the maximum is just one single value that, however, should be practically realizable. So in the NNS Governance, we have `max_neurons_fund_swap_participation_icp_e8s`, which is different from the field discussed in this MR, `max_neurons_fund_participation_icp_e8s` of the Swap.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15917) | \n\nSee merge request dfinity-lab/public/ic!15919"
      },
      {
        "id": "6d70fb0300361de67d09bcef1ce7d9d89823445b",
        "date": "2023-11-06T23:54:55Z",
        "message": "fix(NNS): Matched Funding / Assign `max_neurons_fund_participation_icp_e8s` to a more precise value"
      },
      {
        "id": "f526a18dad6d076ee37ef865678f5ccb88e22c3b",
        "date": "2023-11-06T23:09:29Z",
        "message": "Merge branch 'arshavir/fix-max_neurons_fund_swap_participation_icp_e8s' into 'master'\n\nfeat(NNS): Matched Funding / Add field `allocated_neurons_fund_participation_icp_e8s` to `NeuronsFundParticipation`\n\nThis MR adds the field `allocated_neurons_fund_participation_icp_e8s` to `NeuronsFundParticipation`.\n\nThe endpoint has been requested by frontend developers to display the most-accurate information to the end users.\n\n| [Next MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15919) > \n\nSee merge request dfinity-lab/public/ic!15917"
      },
      {
        "id": "5cc298a9dd35d2ea6fe78a696c8201962ec2f414",
        "date": "2023-11-06T23:09:29Z",
        "message": "feat(NNS): Matched Funding / Add field `allocated_neurons_fund_participation_icp_e8s` to `NeuronsFundParticipation`"
      },
      {
        "id": "b501a71346fa465cb5d7817c895295150979c180",
        "date": "2023-11-04T16:34:59Z",
        "message": "Merge branch 'arshavir/neurons-fund-inspect' into 'master'\n\nfeat(NNS): Matched Funding / Add NNS Governance endpoint `get_neurons_fund_audit_info` [override-didc-check]\n\nThis MR addresses a suggestion from a security review of the NNS Governance's new implementation of the Neurons' Fund, a.k.a. Matched Funding.\n\nConcretely, we add a query `get_neurons_fund_audit_info` to the NNS Governance canister, enabling users to audit the decisions made by the Neurons' Fund.\n\nThe `[override-didc-check]` tag is needed due to a renaming from `get_neurons_fund_participation_data` into `get_neurons_fund_audit_info` which is safe, as there are currently no clients who use any any these endpoints. \n\nSee merge request dfinity-lab/public/ic!15854"
      },
      {
        "id": "86284fbc6c566c640c226b9423e8f0a57fdc0203",
        "date": "2023-11-04T16:34:58Z",
        "message": "feat(NNS): Matched Funding / Add NNS Governance endpoint `get_neurons_fund_audit_info` [override-didc-check]"
      },
      {
        "id": "773cea57a3c7629b669f024e9de4ffa062199f5e",
        "date": "2023-11-03T23:48:50Z",
        "message": "Merge branch 'arshavir/NNS1-2619-2' into 'master'\n\nfeat(NNS1-2619): Matched Funding / Adjust Neurons' Fund participation thresholds and add tests for `PolynomialMatchingFunction`\n\nThis MR adjusts the Neurons' Fund participation thresholds, exactly matching the current design, and adds tests for `PolynomialMatchingFunction`.\n\nCloses NNS1-2619 \n\nCloses NNS1-2619\n\nSee merge request dfinity-lab/public/ic!15874"
      },
      {
        "id": "f9544013029c517f37e105e37e3dc4d849f829d4",
        "date": "2023-11-03T23:48:50Z",
        "message": "feat(NNS1-2619): Matched Funding / Adjust Neurons' Fund participation thresholds and add tests for `PolynomialMatchingFunction`"
      },
      {
        "id": "f6595d2565348e6aed389c69353a15f4cec31573",
        "date": "2023-11-02T15:45:28Z",
        "message": "fix(SNS): Matched Funding / Ensure Swap's `can_commit` depends only on direct participation amount"
      },
      {
        "id": "cd7e718cc86d41db6808d312e05ec4e128b499fc",
        "date": "2023-11-01T13:44:36Z",
        "message": "chore(SNS-CLI): Matched Funding / Publish `sns-test-feature`"
      },
      {
        "id": "71ca84b1c5a843be1a59ad84074deab6a461072e",
        "date": "2023-11-01T11:20:57Z",
        "message": "Merge branch 'arshavir/fix-sns-cli' into 'master'\n\nchore(SNS-CLI): Matched Funding / Fix leftover issue in SNS-CLI\n\nThis MR fixes a bug in SNS CLI due to which the `neurons_fund_participation` field was not being propagated to `SnsInitPayload`. \n\nSee merge request dfinity-lab/public/ic!15811"
      },
      {
        "id": "ab735a0282909bac90d092a5f8b6a01fc105f491",
        "date": "2023-11-01T11:20:57Z",
        "message": "chore(SNS-CLI): Matched Funding / Fix leftover issue in SNS-CLI"
      },
      {
        "id": "c886b75fa75e3e12c681ff8213e1a6dda9ef66fb",
        "date": "2023-10-31T23:57:45Z",
        "message": "Merge branch 'arshavir/NNS1-2570-4' into 'master'\n\nfeat(NNS1-2570): Matched Funding / Update `Swap.neurons_fund_participation_icp_e8s` in `refresh_buyer_token_e8s`\n\nThis MR implements real-time updating of the `neurons_fund_participation_icp_e8s` field as a function of `direct_participation_icp_e8s`. The update is triggered in `refresh_buyer_tokens`.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15700) |\n\nCloses NNS1-2570 \n\nCloses NNS1-2570\n\nSee merge request dfinity-lab/public/ic!15736"
      },
      {
        "id": "b979e5bebca89e8bb5822b7bd0f3b657b8b10e89",
        "date": "2023-10-31T23:57:39Z",
        "message": "feat(NNS1-2570): Matched Funding / Update `Swap.neurons_fund_participation_icp_e8s` in `refresh_buyer_token_e8s`"
      },
      {
        "id": "64060e6a91446ed41be3e1fdfc0abae997d83d86",
        "date": "2023-10-31T22:03:30Z",
        "message": "Merge branch 'arshavir/NNS1-2570-3' into 'master'\n\nchore(NNS1-2570): Matched Funding / Refactor Neurons' Fund\n\nThis MR refactors the Neurons' Fund to make it available from NNS Governance and SNS Swap.\n\nMain changes:\n* Split module `neurons_fund.rs` in Governance into three crates:\n   * `rs/nervous_system/neurons_fund` — contains common definitions, e.g., the NF matching function implementation.\n   * `rs/sns/swap/src/neurons_fund.rs` — contains code for validating stable Swap structures into NF-related types (e.g., `NeuronsFundParticipationConstraints`).\n   * `rs/nns/governance/src/neurons_fund.rs` — contains implementation of concrete NF operations (like draw and refund) and code for validating stable Governance structures into NF-related types (e.g., `NeuronsFundParticipation`).\n* Renamed `trait FromRepr` as `trait DeserializableFunction`.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15663) | [Next MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15736) > \n\nSee merge request dfinity-lab/public/ic!15700"
      },
      {
        "id": "ac3520d6edb7ebbfedb734c7bd0013b584771264",
        "date": "2023-10-31T22:03:29Z",
        "message": "chore(NNS1-2570): Matched Funding / Refactor Neurons' Fund"
      },
      {
        "id": "b0389c358362f59231f5b3b2076f60573d03abf0",
        "date": "2023-10-31T17:37:25Z",
        "message": "chore(NNS1-2555): Matched Funding / Implement security review suggestions for NNS Governance's Neurons' Fund documentation"
      },
      {
        "id": "b2553df125b8cb02605356738f03e9455aea3c9a",
        "date": "2023-10-31T17:26:49Z",
        "message": "Merge branch 'arshavir/fix-legacy-sns-fields-init' into 'master'\n\nchore(SNS): Improve descriptiveness of errors in `Swap::Init::mk_open_sns_request`\n\nThis MR improves descriptiveness of errors in `Swap::Init::mk_open_sns_request`. \n\nSee merge request dfinity-lab/public/ic!15772"
      },
      {
        "id": "7cb38a9097624b4859159f017b830baa10b17cf7",
        "date": "2023-10-31T17:26:49Z",
        "message": "chore(SNS): Improve descriptiveness of errors in `Swap::Init::mk_open_sns_request`"
      },
      {
        "id": "fd685c4f7bf05c1279bd300798b476a7dd733cfa",
        "date": "2023-10-31T13:32:07Z",
        "message": "Merge branch 'arshavir/adjust-sns-release-testing-setup' into 'master'\n\nchore(SNS): Adjust SNS release testing setup\n\nThis MR contains a few small fixes to enable SNS release testing. \n\nSee merge request dfinity-lab/public/ic!15773"
      },
      {
        "id": "752f801ae1312129bf63854a908b883ef497e204",
        "date": "2023-10-31T13:32:07Z",
        "message": "chore(SNS): Adjust SNS release testing setup"
      },
      {
        "id": "15a48a2437c65a7e6040288db5295f3bd0ea430f",
        "date": "2023-10-30T22:50:11Z",
        "message": "Merge branch 'arshavir.ter.gabrielyan-master-patch-35001' into 'master'\n\nchore(SNS): Update sns_publish_log.txt\n\nThis MR adds the latest SNS canister publish proposals to sns_publish_log.txt\n\nLinks to proposals:\n* https://dashboard.internetcomputer.org/proposal/125349\n* https://dashboard.internetcomputer.org/proposal/125351 \n\nSee merge request dfinity-lab/public/ic!15767"
      },
      {
        "id": "241b0a1b90f8e912785a9d0b92c9435b1f5b8646",
        "date": "2023-10-30T22:50:11Z",
        "message": "chore(SNS): Update sns_publish_log.txt"
      },
      {
        "id": "31662b21a3813f1bd3a9caef4cacc18be3612dc0",
        "date": "2023-10-30T22:10:06Z",
        "message": "Merge branch 'arshavir/NNS1-2638' into 'master'\n\nchore(NNS1-2638): Matched Funding / Ensure swap success criterium is based only on direct participation\n\nThis MR ensures that the success criterium for SNS swaps is based only on direct participation counts.\n\nSnsInitPayload validation now checks that if `neurons_fund_participation : Option<bool>` is set to true, `neurons_fund_participation_constraints` are present (in post-execution).\n\nMinor: avoid unneeded casts from `usize` to `u32`.\n\nCloses NNS1-2638 \n\nCloses NNS1-2638\n\nSee merge request dfinity-lab/public/ic!15737"
      },
      {
        "id": "ffacc906e0c2d767360236132a1e87c83be108c8",
        "date": "2023-10-30T22:10:06Z",
        "message": "chore(NNS1-2638): Matched Funding / Ensure swap success criterium is based only on direct participation"
      },
      {
        "id": "0e3627318286b063495df60f345b78ff0742e0bf",
        "date": "2023-10-30T14:02:33Z",
        "message": "Merge branch 'arshavir.ter.gabrielyan-master-patch-11627' into 'master'\n\nchore(SNS): Update SNS README.md\n\nThis SNS replaces the deprecated term \"sale\" with swap and fixes some broken links in SNS README.md. \n\nSee merge request dfinity-lab/public/ic!15751"
      },
      {
        "id": "d3232b289b6e738fcd0e1ac1e1f8bdff2c4a0f5b",
        "date": "2023-10-30T14:02:30Z",
        "message": "chore(SNS): Update SNS README.md"
      },
      {
        "id": "9c4d943eaf1f2903c41fd116f70fe8789c6b2343",
        "date": "2023-10-27T15:39:14Z",
        "message": "Merge branch 'NNS1-2636-p2' into 'master'\n\nfeat(sns): Matched Funding / Allow for Swap to call `settle_neruons_fund_participation`\n\nThings to review:\n\n1. The integration between NNS Gov and Swap has been extended to include `settle_neurons_fund_participation`\n2. There is new conditional logic in finalization that will trigger either call settle_cf or settle_nf. The final state of either call should allow finalization to continue.\n3. The processing of the response from NNS governance into swap state\n4. New types in FinalizeSwapResponse to indicate which subtask was completed\n\nCloses NNS1-2636 \n\nCloses NNS1-2636\n\nSee merge request dfinity-lab/public/ic!15624"
      },
      {
        "id": "25b7544aacc95ad0fab2af884d26776c25b1e235",
        "date": "2023-10-26T08:33:19Z",
        "message": "Merge branch 'arshavir/NNS1-2570-2' into 'master'\n\nfeat(NNS1-2570): Matched Funding / Add field `ideal_matched_participation_function` to `NeuronsFundParticipationConstraints` in Swap Init\n\nThis MR prepares the Swap canister for being able to apply the Neurons' Fund matched participation function.\n\nThe first novelty is that the `NeuronsFundParticipationConstraints` structure now has a field `ideal_matched_participation_function` that allows synchronizing the matched participation function even across canister upgrades.\n\nThe second novelty is a refactoring in `rs/nns/governance/src/neurons_fund.rs` that makes use of the new field during `NeuronsFundParticipationConstraints` validation. \n\nSee merge request dfinity-lab/public/ic!15663"
      },
      {
        "id": "2298a95ec08ad7f0b2ebee70ef0a3e96fe4462b8",
        "date": "2023-10-26T08:33:19Z",
        "message": "feat(NNS1-2570): Matched Funding / Add field `ideal_matched_participation_function` to `NeuronsFundParticipationConstraints` in Swap Init"
      },
      {
        "id": "40752fa918d7277f8fb574183a0fce211db0f934",
        "date": "2023-10-25T20:34:54Z",
        "message": "Merge branch 'arshavir/swap-init-validation-verbose-errors' into 'master'\n\nchore(SNS): Improve error descriptiveness for Swap canister's legacy vs. 1-proposal field validation\n\nThis MR improves the error verbosity for the Swap canister's legacy vs. 1-proposal field validation. \n\nSee merge request dfinity-lab/public/ic!15648"
      },
      {
        "id": "dc94c674321500435b7dc0cabb66bcba94449add",
        "date": "2023-10-25T20:34:52Z",
        "message": "chore(SNS): Improve error descriptiveness for Swap canister's legacy vs. 1-proposal field validation"
      },
      {
        "id": "2ea2ad8f18cce17030eb3f1fe988565432b9984d",
        "date": "2023-10-25T06:31:34Z",
        "message": "Merge branch 'arshavir/NNS1-2620' into 'master'\n\nfeat(NNS1-2620): Matched Funding / Encode the polynomial S-curve\n\nThis MR implements the polynomial S-curve, as per the Matched Funding motion proposal.\n\nCloses NNS1-2620\n\nCloses NNS1-2608 \n\nCloses NNS1-2620 and NNS1-2608\n\nSee merge request dfinity-lab/public/ic!15441"
      },
      {
        "id": "92625bdc9d0e82b148a0a7a61b58bc70c48ce143",
        "date": "2023-10-25T06:31:33Z",
        "message": "feat(NNS1-2620): Matched Funding / Encode the polynomial S-curve"
      },
      {
        "id": "46701ccf475f0c512951eea308cddaaf1153356f",
        "date": "2023-10-24T13:46:35Z",
        "message": "Merge branch 'arshavir/bump-nns-gov-wasm-size' into 'master'\n\nchore(NNS): Bump `CANISTERS_MAX_SIZE_E5_BYTES` for `governance-canister.wasm` to `30_000` bytes\n\nThis MR bumps the maximum size for the mainnet version of the NNS Governance canister wasm to `30_000` bytes, making it consistent with the current maximum size of the test version of the same canister. \n\nSee merge request dfinity-lab/public/ic!15601"
      },
      {
        "id": "e71a51167fef03b9f12e12eb1d3e89b0259ca978",
        "date": "2023-10-24T13:46:35Z",
        "message": "chore(NNS): Bump `CANISTERS_MAX_SIZE_E5_BYTES` for `governance-canister.wasm` to `30_000` bytes"
      },
      {
        "id": "9a417b19141e32384247871ae20c413e93819124",
        "date": "2023-10-23T09:54:12Z",
        "message": "Merge branch 'jason/fix-disable-neuron-copy-validator' into 'master'\n\nchore: Disable neuron copy validator before copying inactive neuron is turned on\n\n \n\nSee merge request dfinity-lab/public/ic!15555"
      },
      {
        "id": "696d81d240044b580b78917eb30f7ee37a15e95c",
        "date": "2023-10-19T21:41:06Z",
        "message": "Merge branch 'arshavir/report-defects-verbosely' into 'master'\n\nfeat(SNS): Make Swap params validation errors more verbose\n\nThis MR makes Swap params validation errors more verbose. \n\nSee merge request dfinity-lab/public/ic!15497"
      },
      {
        "id": "f9dc9410d88e9047ead059d3d4b9c47fc499a512",
        "date": "2023-10-19T21:41:04Z",
        "message": "feat(SNS): Make Swap params validation errors more verbose"
      },
      {
        "id": "a29a026a36bc96bad2bccaccb480356a3b43fb04",
        "date": "2023-10-18T17:13:26Z",
        "message": "Merge branch 'arshavir/reenable-legacy-sns-flow-in-tests' into 'master'\n\nchore(NNS): Toggle `IS_UPDATE_ALLOWED_PRINCIPALS_ENABLED`\n\nThis MR reenables the legacy SNS flow in tests while disabling it on mainnet. \n\nSee merge request dfinity-lab/public/ic!15464"
      },
      {
        "id": "6155e523a6b1c9a115aa80845eb5c39c9ef7903e",
        "date": "2023-10-18T17:13:25Z",
        "message": "chore(NNS): Toggle `IS_UPDATE_ALLOWED_PRINCIPALS_ENABLED`"
      },
      {
        "id": "0c4c386a4f585d293e7977d99a393cdc0b68f5f2",
        "date": "2023-10-17T18:44:41Z",
        "message": "Merge branch 'arshavir/NNS1-2640' into 'master'\n\nfeat(NNS1-2640): Matched Funding / Limit swap duration to 14 days\n\nThis MR limits the maximum duration of an SNS swap to 14 days, as per Matched Funding requirements.\n\nCloses NNS1-2640 \n\nCloses NNS1-2640\n\nSee merge request dfinity-lab/public/ic!15424"
      },
      {
        "id": "16373ac00c14de77609efe50402cd4dcec93ae5e",
        "date": "2023-10-17T18:44:39Z",
        "message": "feat(NNS1-2640): Matched Funding / Limit swap duration to 14 days"
      },
      {
        "id": "dee90d01dfaddcaf31de2b4528db61fe453b53cd",
        "date": "2023-10-17T18:04:27Z",
        "message": "Merge branch 'arshavir/NNS1-2569' into 'master'\n\nfeat(NNS1-2569): Matched Funding / Add `Swap.init.neurons_fund_participation`\n\nThis MR adds a new Boolean field `neurons_fund_participation` to the Swap Init structure. This field will be used as the source of truth for whether Neurons' Fund participation is requested for this given SNS Swap, for the canister itself as well as its clients. \n\nSee merge request dfinity-lab/public/ic!15417"
      },
      {
        "id": "6b1d06566c80ccfd467d72d43428ef898a87f85b",
        "date": "2023-10-17T18:04:27Z",
        "message": "feat(NNS1-2569): Matched Funding / Add `Swap.init.neurons_fund_participation`"
      },
      {
        "id": "21022dfaa55c3acb3a7f9c05dd3802e18c728ac9",
        "date": "2023-10-17T13:19:36Z",
        "message": "Merge branch 'arshavir/NNS1-2555-5' into 'master'\n\nfeat(NNS1-2555): Matched Funding / Apply `NeuronsFundParticipation` in NNS Governance (before and after the swap begins) [override-didc-check]\n\nThis MR lays down the ground work for how the NNS Governance will use the new `NeuronsFundParticipation` type for computing Neurons' Fund snapshots (sets of eligible neurons).\n\nThe reason why `[override-didc-check]` is needed:\n\n```\n     type ProposalData = record {\n    -  neurons_fund_participation : opt NeuronsFundParticipation;\n    +  neurons_fund_data : opt NeuronsFundData;\n       ...\n    }\n```\n\nthis is safe, as there are currently no clients that were depending on `neurons_fund_participation`.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14968) | \n\nSee merge request dfinity-lab/public/ic!15172"
      },
      {
        "id": "658b3c05260b4da33b8bcae406139bf9ff1e20b5",
        "date": "2023-10-17T13:19:36Z",
        "message": "feat(NNS1-2555): Matched Funding / Apply `NeuronsFundParticipation` in NNS Governance (before and after the swap begins) [override-didc-check]"
      },
      {
        "id": "e7b01b8d964f997bb3e2d2a5c211ab5ebe77acc8",
        "date": "2023-10-17T12:01:59Z",
        "message": "Merge branch 'arshavir/disable-legacy-sns-system-tests' into 'master'\n\nchore(SNS): Disable system tests that rely on the legacy SNS flow\n\nThis MR disables the system tests that rely on the legacy SNS flow. \n\nSee merge request dfinity-lab/public/ic!15419"
      },
      {
        "id": "d87435843e13e6a3866d0c6effed397aacaec2ad",
        "date": "2023-10-17T12:01:58Z",
        "message": "chore(SNS): Disable system tests that rely on the legacy SNS flow"
      },
      {
        "id": "6e806bc8c3fdc45eaaf5fcf93009fec774d6ae07",
        "date": "2023-10-17T10:29:22Z",
        "message": "Merge branch 'arshavir/disable-fixed-nf-funding-system-tests' into 'master'\n\nchore(SNS): Disable SNS system tests that rely on fixed Neurons' Fund participation\n\nThis MR disables SNS system tests that rely on fixed Neurons' Fund funding. \n\nSee merge request dfinity-lab/public/ic!15420"
      },
      {
        "id": "fca335903c8da9f5e344f336d880d1e83aca0855",
        "date": "2023-10-17T10:29:22Z",
        "message": "chore(SNS): Disable SNS system tests that rely on fixed Neurons' Fund participation"
      },
      {
        "id": "210b894cd527c32409f16d3409383aa827d46c9a",
        "date": "2023-10-16T16:54:34Z",
        "message": "Merge branch 'arshavir/NNS1-2630' into 'master'\n\nfeat(NNS1-2630): Matched Funding / Implement a generic inverse function for computing `NeuronsFundParticipationConstraints`\n\nThis MR provides a default implementation for `InvertibleFunction.invert`. \n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15114) |\n\nCloses NNS1-2630 \n\nCloses NNS1-2630\n\nSee merge request dfinity-lab/public/ic!15132"
      },
      {
        "id": "63d321d0f93339d96510ae5c63318be2295a19dc",
        "date": "2023-10-16T16:54:34Z",
        "message": "feat(NNS1-2630): Matched Funding / Implement a generic inverse function for computing `NeuronsFundParticipationConstraints`"
      },
      {
        "id": "c7664b4829807a96ecf6a7fb97610f22b20b0911",
        "date": "2023-10-03T22:17:29Z",
        "message": "Merge branch 'arshavir/NNS1-2633-3' into 'master'\n\ntest(NNS1-2633): Matched Funding / Add fixtures tests for `settle_neurons_fund_participation`\n\nThis MR adds some fixtures tests for the new `settle_neurons_fund_participation` NNS Governance function.\n\nThese are analogous to the previously existing fixture tests for `settle_community_fund_participation`.\n\nNote that we omit the scenarios with `open_sns_token_swap_proposal` as it's being deprecated.\n\n< [The MR that implements validation for `SettleNeuronsFundParticipationRequest`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14968) |\n\nCloses NNS1-2633 \n\nCloses NNS1-2633\n\nSee merge request dfinity-lab/public/ic!15154"
      },
      {
        "id": "47ad2b3f4effd66d54731c41f9102755a1975e1e",
        "date": "2023-10-03T22:17:28Z",
        "message": "test(NNS1-2633): Matched Funding / Add fixtures tests for `settle_neurons_fund_participation`"
      },
      {
        "id": "a2fa41e79ac42cf67eec7a96dda0a3f9f4871754",
        "date": "2023-10-03T17:11:58Z",
        "message": "Merge branch 'arshavir/NNS1-2633-2' into 'master'\n\ntest(NNS1-2633): Matched Funding / Add `settle_neurons_fund_participation_request_tests`\n\nThis MR adds some unit tests to `settle_neurons_fund_participation_request_tests` for the new `SettleNeuronsFundParticipationRequest` type in the NNS Governance.\n\n< [The MR that implements validation for `SettleNeuronsFundParticipationRequest`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14968) | \n\nSee merge request dfinity-lab/public/ic!15147"
      },
      {
        "id": "42ada5a4bcd88dfce30dc6017f987eb999c099f9",
        "date": "2023-10-03T17:11:57Z",
        "message": "test(NNS1-2633): Matched Funding / Add `settle_neurons_fund_participation_request_tests`"
      },
      {
        "id": "ea817ff9feeade06d13e0a4ecc07b4281c77ca16",
        "date": "2023-10-03T14:41:37Z",
        "message": "Merge branch 'arshavir/NNS1-2633' into 'master'\n\ntest(NNS1-2633): Matched Funding / Add `test_cant_interleave_calls_to_settle_neurons_fund`\n\nThis MR adds a test `test_cant_interleave_calls_to_settle_neurons_fund` for the new `settle_neurons_fund_participation` NNS function.\n\nThe tests is an adaptation of an old test `test_cant_interleave_calls_to_settle_community_fund`.\n\n< [The MR that implements `settle_neurons_fund_participation`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14968) | \n\nSee merge request dfinity-lab/public/ic!15146"
      },
      {
        "id": "32623e34e8445820df3f21a2113359b15d0d4c9f",
        "date": "2023-10-03T14:41:36Z",
        "message": "test(NNS1-2633): Matched Funding / Add `test_cant_interleave_calls_to_settle_neurons_fund`"
      },
      {
        "id": "0686f2505f3c5f5808e85b017572ba7b2132e5d9",
        "date": "2023-10-03T14:32:20Z",
        "message": "Merge branch 'arshavir/NNS1-2555-4' into 'master'\n\nfeat(NNS1-2555): Matched Funding / Begin implementing changes in NNS Governance\n\nThis MR adds a few new concepts for the Matched Funding implementation:\n\n* `NeuronsFundSwapParticipation` - information for deciding how the Neurons' Fund should participate in an SNS Swap.\n* `NeuronsFundSnapshot` - collection of Neurons' Fund neurons.\n* `apply_neurons_fund_snapshot` the one and only mutable operation for implementing the participation of the Neurons' Fund in an SNS Swap.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15027) | \n\nSee merge request dfinity-lab/public/ic!15044"
      },
      {
        "id": "81464aed12152226535ec7a8145e69e7ff5d9440",
        "date": "2023-10-03T14:32:20Z",
        "message": "feat(NNS1-2555): Matched Funding / Begin implementing changes in NNS Governance"
      },
      {
        "id": "94f88cd5d48ec4bc365b596560090b560b997baf",
        "date": "2023-10-03T12:20:27Z",
        "message": "Merge branch 'arshavir/NNS1-2596-5' into 'master'\n\nfeat(NNS1-2596): Matched Funding / Implementation of `settle_neurons_fund_participation` in NNS Governance\n\nThis MR implements `settle_neurons_fund_participation` in NNS Governance, mainly by reusing the code from the old function settle_community_fund_participation.\n\n* Some simplification are now possible due to removing the legacy flow and more consistent APIs.\n* This function should not be used in production until the legacy SNS flow is disabled.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14962) |\n\nTests:\n\n* | [`test_cant_interleave_calls_to_settle_neurons_fund`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15146) >\n* | [`settle_neurons_fund_participation_request_tests`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15147) >\n* | [Fixture tests for `settle_neurons_fund_participation`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15154) >\n\nCloses NNS1-2617 \n\nCloses NNS1-2617\n\nSee merge request dfinity-lab/public/ic!14968"
      },
      {
        "id": "097af6cd2d6151ba08a3020d8126dc247cb3ac01",
        "date": "2023-10-03T12:20:27Z",
        "message": "feat(NNS1-2596): Matched Funding / Implementation of `settle_neurons_fund_participation` in NNS Governance"
      },
      {
        "id": "6d40df5c4ad70453349c4faf3ae476c36fe6ae8d",
        "date": "2023-09-30T15:44:42Z",
        "message": "Merge branch 'arshavir/NNS1-2619' into 'master'\n\nfeat(NNS1-2620): Matched Funding / Use `rust_decimal::Decimal` in rs/nns/governance/src/neurons_fund.rs\n\nThis MR introduces `rust_decimal::Decimal` to `rs/nns/governance/src/neurons_fund.rs`, which previously used `f64`.\n\nContext: Fixed point computations are more suitable in financial applications (compared with floating point), as they provide better control over rounding errors). \n\nSee merge request dfinity-lab/public/ic!15114"
      },
      {
        "id": "d7e1d12bdf9da05a1115f46d209343631210b22d",
        "date": "2023-09-30T15:44:42Z",
        "message": "feat(NNS1-2620): Matched Funding / Use `rust_decimal::Decimal` in rs/nns/governance/src/neurons_fund.rs"
      },
      {
        "id": "7b4d1092cae5bd082768b4259d062e29b7421419",
        "date": "2023-09-29T21:55:53Z",
        "message": "Merge branch 'arshavir/NNS1-2625' into 'master'\n\nfeat(NNS1-2625): Matched Funding / Add new field `neurons_fund_participation` to `ProposalData`\n\nThis MR adds a new field `neurons_fund_participation` to `ProposalData` in governance.proto\n\nThe objective is two-fold:\n\n1. We need to support NNS Governance upgrades during ongoing SNS swaps, so the matching function needs to be saved / restored at CSNS proposal execution time.\n2. We want to soon deprecate the old `cf_participants` field (`neurons_fund_participation` will be the one and only structure for maintaining swap-specific data needed in the computation of Neurons' Fund participation).\n\nThe chosen serialized representation of the matching function is plane string. The main reason for this is that there are currently no clients that need to be able to deserialize (only the NNS Governance itself), so it does not pay off to have any more complexity on the Protobuf level. At the same time, a string representation allows for a high degree of flexibility when it comes to deciding which parameters of the matching function need to be serialized. A possible implementation for the serializer will contain a JSON object with a small number of function parameters that are likely to be adjusted in the near future. \n\nSee merge request dfinity-lab/public/ic!15106"
      },
      {
        "id": "e3c50528de89e7bf148b97b40be388f76c22644f",
        "date": "2023-09-29T21:55:53Z",
        "message": "feat(NNS1-2625): Matched Funding / Add new field `neurons_fund_participation` to `ProposalData`"
      },
      {
        "id": "cceeebaae6c322790d0b618e1f42a6db70f77896",
        "date": "2023-09-29T13:50:39Z",
        "message": "Merge branch 'arshavir/NNS1-2555-2' into 'master'\n\nchore(NNS1-2555): Matched Funding / Refactor `MatchedParticipationFunction`\n\nThis MR improves the `MatchedParticipationFunction` API recently added to rs/nns/governance/src/neurons_fund.rs.\n\nChanges:\n* Added new types `ValidatedNeuronsFundParticipationConstraints` and `ValidatedLinearScalingCoefficient` to hold validated data.\n* Changed `MatchedParticipationFunction`'s methods to have slightly more abstract signatures to allow for future code reuse.\n\nNotes:\n* Validation logic for types `LinearScalingCoefficient`, `NeuronsFundParticipationConstraints` is taken almost as-is from rs/sns/init/src/lib.rs. Eventually, the code will be de-duplicated by using the functions from `neurons_fund.rs` in SNS Init.\n* More complete test case coverage for the validators will be added as part of NNS1-2558.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14986) | [Next MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15027) > \n\nSee merge request dfinity-lab/public/ic!15015"
      },
      {
        "id": "2ba6dbea7a6d11a8faf96ce27f5d95177f662017",
        "date": "2023-09-29T13:50:38Z",
        "message": "chore(NNS1-2555): Matched Funding / Refactor `MatchedParticipationFunction`"
      },
      {
        "id": "efe7c935a8d8761b45e1fe17abe04209b6fa2446",
        "date": "2023-09-28T17:14:25Z",
        "message": "Merge branch 'arshavir/initialize-cached-fields' into 'master'\n\nfeat(NNS1-2556): Matched Funding / Initialize cached fields in `Swap.try_open_after_delay`\n\nThis MR adds a call to `update_participation_amounts` from `Swap.try_open_after_delay` to ensure that the cached fields are initialized at the beginning of a swap. \n\nSee merge request dfinity-lab/public/ic!15077"
      },
      {
        "id": "32ad71bf4221758e02de685c15eaf65f07402072",
        "date": "2023-09-28T17:14:03Z",
        "message": "feat(NNS1-2556): Matched Funding / Initialize cached fields in `Swap.try_open_after_delay`"
      },
      {
        "id": "4d342e02f4446f58735a39c8dcf3107f886d10f3",
        "date": "2023-09-28T15:52:37Z",
        "message": "Merge branch 'arshavir/NNS1-2596-3' into 'master'\n\nfeat(NNS1-2596): Matched Funding / add new NNS Governance function `settle_neurons_fund_participation` [override-didc-check]\n\nThis MR adds a new function `settle_neurons_fund_participation` to the NNS Governance canister.\n\nThis is a preparatory step towards deprecating the old function `settle_community_fund_participation`, which will be needed for the Matched Funding feature.\n\nWhy there's `[override-didc-check]` in the title: The Candid files are not backward-compatible due to the change of error types in `SettleNeuronsFundParticipationResponse.result` (from a custom error to `GovernanceError`).\n\nNext MRs in this series:\n* | [Add a client to call `settle_neurons_fund_participation` from Swap](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14965) >\n* | [Implement `settle_neurons_fund_participation`](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14968) > \n\nSee merge request dfinity-lab/public/ic!14962"
      },
      {
        "id": "b3f5d4d6b4df2e367320c728e3466ce9956b1a37",
        "date": "2023-09-28T15:52:36Z",
        "message": "feat(NNS1-2596): Matched Funding / add new NNS Governance function `settle_neurons_fund_participation` [override-didc-check]"
      },
      {
        "id": "05fc868cc408306e72f171d8b9a7c408ad490b18",
        "date": "2023-09-26T18:40:19Z",
        "message": "Merge branch 'arshavir/NNS1-2555' into 'master'\n\nfeat(NNS1-2555): Matched Funding / add new type `MatchedParticipationFunction`\n\nThis MR adds `rs/nns/governance/src/neurons_fund.rs`, a sub-module file for the Neurons' Fund-related functions used by both NNS Governance and SNS Swap.\n\nCurrently, the only useful type there is `MatchedParticipationFunction`, which provides an efficient and precise way to get from (1) `NeuronsFundParticipationConstraints` and (2) `direct_participation_icp_e8s` to NF’s effective participation amount. \n\nSee merge request dfinity-lab/public/ic!14986"
      },
      {
        "id": "201dace54eeef2e8dc6e4c837a964c7166609b10",
        "date": "2023-09-26T18:40:19Z",
        "message": "feat(NNS1-2555): Matched Funding / add new type `MatchedParticipationFunction`"
      },
      {
        "id": "909ed0aa45d39cbb6051d32e003547a94ab8ca3d",
        "date": "2023-09-22T14:06:56Z",
        "message": "Merge branch 'arshavir/fix-one_proposal_neurons_fund_swap_participation_test' into 'master'\n\nfix: correct expected ICP participation amounts in `one_proposal_neurons_fund_swap_participation_test`\n\nThis MR attempts to fix the expected ICP participation amounts in `one_proposal_neurons_fund_swap_participation_test`.\n\nNote that the proper solution would be not to hard code the expected amounts but to calculate them based on the submitted workload. That should bo covered by NNS1-2612. \n\nSee merge request dfinity-lab/public/ic!14945"
      },
      {
        "id": "dff2dc07125ae1f8e6784bddd52fa63fd03eb8ec",
        "date": "2023-09-22T14:06:55Z",
        "message": "fix: correct expected ICP participation amounts in `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "41aae0f203995dc79ba3b736404bad851731ec51",
        "date": "2023-09-21T21:42:07Z",
        "message": "Merge branch 'arshavir/NNS1-2556' into 'master'\n\nfeat(NNS1-2556): Matched Funding / Add `{direct,neurons_fund}_participation_icp_e8s` to `GetDerivedStateResponse`\n\nThis MR adds `direct_participation_icp_e8s` and `neurons_fund_participation_icp_e8s` to `GetDerivedStateResponse`.\n\nAdditionally, the computation of these values is optimized s.t. they are computed only once per participation, not once per query.\n\nCloses NNS1-2556 \n\nCloses NNS1-2556\n\nSee merge request dfinity-lab/public/ic!14911"
      },
      {
        "id": "68e4092b14e71f226ca46e92f288231ccf67022a",
        "date": "2023-09-21T21:42:05Z",
        "message": "feat(NNS1-2556): Matched Funding / Add `{direct,neurons_fund}_participation_icp_e8s` to `GetDerivedStateResponse`"
      },
      {
        "id": "f3e8532e860e3137e567764b9b72f8b05a8b7058",
        "date": "2023-09-21T21:35:10Z",
        "message": "Merge branch 'arshavir/NNS1-2553-6' into 'master'\n\nfeat(NNS1-2594): Matched Funding / Add compile time feature flag and validation for `SnsInitPayload.neurons_fund_participation_constraints`\n\nThis MR adds a compile time feature flag for the Matched Funding feature and implements the validation logic for `SnsInitPayload.neurons_fund_participation_constraints`.\n\nNote that the validation may be changed slightly as we converge to a more concrete list of requirements for the Matched Funding feature. But the main validation logic will remain. Testing the validators will be covered in NNS1-2558.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14815) |\n\nCloses NNS1-2553 \n\nCloses NNS1-2553\n\nSee merge request dfinity-lab/public/ic!14840"
      },
      {
        "id": "4592945ed1f43cd2fb1cfc80f4cdd973b4e9bf94",
        "date": "2023-09-21T21:35:07Z",
        "message": "feat(NNS1-2594): Matched Funding / Add compile time feature flag and validation for `SnsInitPayload.neurons_fund_participation_constraints`"
      },
      {
        "id": "a208848cdceb9cd74bcb8e84f4f0982429e17172",
        "date": "2023-09-18T21:56:23Z",
        "message": "Merge branch 'arshavir/NNS1-2553-5' into 'master'\n\nfeat(NNS1-2553) Matched Funding / Add `neurons_fund_participation_constraints` to `ExecutedCreateServiceNervousSystemProposal`\n\nThis MR adds `neurons_fund_participation_constraints` to `ExecutedCreateServiceNervousSystemProposal`. Note that a field with the same name and type has been previously added to `SnsInitPayload`.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14815) |\n\nCloses NNS1-2553 \n\nCloses NNS1-2553\n\nSee merge request dfinity-lab/public/ic!14831"
      },
      {
        "id": "21e7cf37c95ec23bccf1998914f6bbc2e546ef9a",
        "date": "2023-09-18T21:56:23Z",
        "message": "feat(NNS1-2553) Matched Funding / Add `neurons_fund_participation_constraints` to `ExecutedCreateServiceNervousSystemProposal`"
      },
      {
        "id": "3ba42e2e115cbf1c9376c65d61f43ec6acb0fcb1",
        "date": "2023-09-18T11:30:46Z",
        "message": "Merge branch 'arshavir/NNS1-2553-4' into 'master'\n\nfeat(NNS1-2593): Matched Funding / Add `neurons_fund_participation_constraints` to `SnsInitPayload` [override-didc-check]\n\nThis MR adds `neurons_fund_participation_constraints` to `SnsInitPayload`.\n\nNote on compatibility. The reason why the compatibility checkers are failing: We replaced some double fields in an message with some analogous integers fields. It is safe to disable these checks on this MR as the messages are not used yet.\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14764) | \n\nNext MRs in this series:\n* | [Add `neurons_fund_participation_constraints` to ExecutedCreateServiceNervousSystemProposal](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14831) >\n* | [Match Funding feature flag and SnsInitPayload validation](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14840) >\n\nCloses NNS1-2593 \n\nCloses NNS1-2593\n\nSee merge request dfinity-lab/public/ic!14815"
      },
      {
        "id": "8abe5f41e0ff221a1165669ef8b6be90d6574b3e",
        "date": "2023-09-18T11:30:45Z",
        "message": "feat(NNS1-2593): Matched Funding / Add `neurons_fund_participation_constraints` to `SnsInitPayload` [override-didc-check]"
      },
      {
        "id": "ec42189e96bf55bfaccb98697cfb0b189c6d1005",
        "date": "2023-09-15T16:15:23Z",
        "message": "Merge branch 'arshavir/NNS1-2554' into 'master'\n\nfeat(NNS1-2554): Refactor `refresh_buyer_token_e8s`\n\nThis MR attempts to improve the implementation of `refresh_buyer_token_e8s` by making the code clearer. This is a preparatory step for the upcoming Matched Funding feature.\n\nThis MR should not require any special upgrade paths.\n\nCloses NNS1-2554 \n\nCloses NNS1-2554\n\nSee merge request dfinity-lab/public/ic!14685"
      },
      {
        "id": "30e42eca092937626d9526267be77e5117d3c139",
        "date": "2023-09-15T16:15:20Z",
        "message": "feat(NNS1-2554): Refactor `refresh_buyer_token_e8s`"
      },
      {
        "id": "43ab9e5c6786f6b4734e9af7b6c7a79e762c1f25",
        "date": "2023-09-13T15:42:43Z",
        "message": "Merge branch 'arshavir/NNS1-2553-3' into 'master'\n\nfeat(NNS1-2553): Matched Funding / Add new field `neurons_fund_participation_constraints` to `SwapInit`\n\nThis MR adds a new field `neurons_fund_participation_constraints` to the SNS Swap canister's Init payload.\n\nThis new data will be used for the Matched Funding feature. Concretely, the NNS governance will set the Neurons' Fund participation constraints, while the Swap canister will use them to compute the current amount of participation from the Neurons' Fund (as a function of direct participation).\n\n< [Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14753) |\n\nCloses NNS1-2553, NNS1-2557 \n\nCloses NNS1-2553\n\nSee merge request dfinity-lab/public/ic!14764"
      },
      {
        "id": "61908062978e240385e020842b6d4e1da4c36644",
        "date": "2023-09-13T15:42:41Z",
        "message": "feat(NNS1-2553): Matched Funding / Add new field `neurons_fund_participation_constraints` to `SwapInit`"
      },
      {
        "id": "099a34428fa0dd0f64331dfff9916a6a02e12080",
        "date": "2023-09-13T09:33:39Z",
        "message": "Allow for ICP testnets to live up to 24 hours"
      },
      {
        "id": "d2331ec4b3c60f408b876427d7238ec15fb16ad5",
        "date": "2023-09-12T22:16:04Z",
        "message": "Merge branch 'arshavir/NNS1-2553-2' into 'master'\n\nfeat(NNS1-2553): Match Funding / Add new field `Committed.total_neurons_fund_contribution_e8s`\n\nThis MR adds two new fields: `total_direct_contribution_e8s` and `total_neurons_fund_contribution_e8s` to `message Committed`, so that the NNS Governance canister can be aware and perform the ultimate calculation for the Neurons' Fund swap participation.\n\nThese fields are set by SNS Swap.\n\nNote that having both of these fields adds redundancy, as in theory the NNS Governance could compute `total_neurons_fund_contribution_e8s` from `total_direct_contribution_e8s`. However, since the SNS Swap needs to serve these values to clients, it is good to have them both in the same structure (e.g., to implement additional checks for Swap's calculations).\n\n[Previous MR in this series](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14751) \n\nSee merge request dfinity-lab/public/ic!14753"
      },
      {
        "id": "6a28dd323d0476e39487946d5e15c170f3c3857e",
        "date": "2023-09-12T22:16:04Z",
        "message": "feat(NNS1-2553): Match Funding / Add new field `Committed.total_neurons_fund_contribution_e8s`"
      },
      {
        "id": "2d481df8ff5e37c01a15ed2a3bc768097caf08ab",
        "date": "2023-09-12T20:14:18Z",
        "message": "feat(NNS1-2553): Match Funding / Add new field `Swap.current_neurons_fund_contribution_e8s`"
      },
      {
        "id": "56cc98a22ae9697028c9c1dbd86bea789d280be0",
        "date": "2023-08-30T10:54:43Z",
        "message": "Merge branch 'arshavir/remove-extra-check' into 'master'\n\nchore: Remove extraneous checks in Swap heartbeat\n\nThis MR simplifies the code in the `heartbeat` function of the SNS Swap canister by removing some extraneous checks.\n\nCloses NNS1-2369 \n\nCloses NNS1-2369\n\nSee merge request dfinity-lab/public/ic!14464"
      },
      {
        "id": "4eabd5794af5c81347ceb5e16aff71ed1d03bf23",
        "date": "2023-08-30T10:54:43Z",
        "message": "chore: Remove extraneous checks in Swap heartbeat"
      },
      {
        "id": "7ba07a2cccaeb40e0a9ebead32ca46be13e61404",
        "date": "2023-08-24T15:14:31Z",
        "message": "Merge branch 'arshavir/NNS1-2369-3' into 'master'\n\nchore: Rename `SALE_NEURON_MEMO_RANGE` to `NEURON_BASKET_MEMO_RANGE`\n\nThis MR addresses a concern from a ToB review in which the following has been stated:\n\n> The constant SALE_NEURON_MEMO_RANGE_END is not used by the swap canister.\n\nThis is not the case, as the SNS Swap relies on the SNS init crate to validate the init payload structures, including the neuron configurations with momos. The SNS init crate does use (what used to be called) `SALE_NEURON_MEMO_RANGE_START` and `SALE_NEURON_MEMO_RANGE_END` for the two reasons that are mentioned in the comment:\n\n* to choose the memos of neurons in the neuron basket\n* to enforce that other memos (e.g. for Airdrop neurons) do not conflict with the neuron basket memos\n\nThe effect of the MR is thus purely cosmetic, i.e.: \n1. rename the constants, avoiding the obsolete term \"sale\".\n2. refer to the concept of neuron baskets in the comments as well as the constant names. \n\nSee merge request dfinity-lab/public/ic!14320"
      },
      {
        "id": "2c6298eb5fbb1c144c3a5b5405bd02f8b4e7a761",
        "date": "2023-08-24T15:14:30Z",
        "message": "chore: Rename `SALE_NEURON_MEMO_RANGE` to `NEURON_BASKET_MEMO_RANGE`"
      },
      {
        "id": "1a62f7ae8828cfc1212760d9a207a5c832f3fce2",
        "date": "2023-08-24T14:49:59Z",
        "message": "Merge branch 'arshavir/NNS1-2378' into 'master'\n\nfeat: Add script to upgrade replica and NNS from mainnet versions to custom Git SHA\n\nThis MR adds a script to upgrade replica and NNS from mainnet versions to custom Git SHA\n\nCloses NNS1-2378 \n\nCloses NNS1-2378\n\nSee merge request dfinity-lab/public/ic!14068"
      },
      {
        "id": "4fad983bb505b05ffffa7f7741d116e4884942f2",
        "date": "2023-08-24T14:49:58Z",
        "message": "feat: Add script to upgrade replica and NNS from mainnet versions to custom Git SHA"
      },
      {
        "id": "022467c260525cc20592b822a27da56ca31c35d5",
        "date": "2023-08-24T14:07:19Z",
        "message": "Merge branch 'arshavir/NNS1-2369-2' into 'master'\n\nchore: Update comment for FIRST_PRINCIPAL_BYTES\n\nThis MR addresses the following minor issue from a ToB review:\n\n>  The inequality in the comment describing the constant FIRST_PRINCIPAL_BYTES is reversed and should be fixed.\n\n```rust\n/// The principal with all bytes set to zero. The main property\n/// of this principal is that for any principal p != FIRST_PRINCIPAL_BYTES\n/// then p.as_slice() < FIRST_PRINCIPAL_BYTES.as_slice().\npub const FIRST_PRINCIPAL_BYTES: [u8; PrincipalId::MAX_LENGTH_IN_BYTES] =\n    [0; PrincipalId::MAX_LENGTH_IN_BYTES];\n``` \n\nSee merge request dfinity-lab/public/ic!14295"
      },
      {
        "id": "d6d3c37862698db8f553a4da473f5e090e754e8a",
        "date": "2023-08-24T14:07:18Z",
        "message": "chore: Update comment for FIRST_PRINCIPAL_BYTES"
      },
      {
        "id": "3159489913d7bd00b4558d9fb791859b2860971f",
        "date": "2023-08-24T14:05:23Z",
        "message": "Merge branch 'arshavir/NNS1-2369-5' into 'master'\n\nchore: Avoid using `as` when casting from larger to smaller integer types\n\nThis MR addresses a concern from a ToB review:\n\n> The `Governance::check_neuron_population_can_grow` method (in `sns/governance/src/governance.rs`) uses as to cast from `u64` to `usize` (which is 32 bits on 32-bit targets like `wasm32-unknown-unknown`). This should be avoided since this can cause truncation issues if the developer is not careful. \n\nSee merge request dfinity-lab/public/ic!14348"
      },
      {
        "id": "eb8788424e7ec13556269a69ffff22f454062e8f",
        "date": "2023-08-24T14:05:21Z",
        "message": "chore: Avoid using `as` when casting from larger to smaller integer types"
      },
      {
        "id": "c120143af8c73ea609926317a25bc54ca54f11fa",
        "date": "2023-08-22T14:58:45Z",
        "message": "Merge branch 'arshavir/NNS1-2369' into 'master'\n\nchore: Update unit used in log message in SNS Swap\n\nThis MR addresses the following minor issue from a ToB review:\n\n> The following log message claims that the neuron age is given as seconds, but in fact, the number is given in nanoseconds.\n\n```rust\nlog!( INFO,\n    \"Purging {} open tickets because they are older than {} seconds\n        (number of open tickets: {})\",\n    to_purge.len(),\n    max_age_in_nanoseconds,\n    tickets.borrow().len(),\n);\n``` \n\nSee merge request dfinity-lab/public/ic!14287"
      },
      {
        "id": "49f09f95484f71058242f74f0bf11892e68ddc26",
        "date": "2023-08-22T14:58:45Z",
        "message": "chore: Update unit used in log message in SNS Swap"
      },
      {
        "id": "6648d98143fa8360ab4249002cbbd53914c42bab",
        "date": "2023-08-10T18:16:02Z",
        "message": "Merge branch 'arshavir/NNS1-1793-3' into 'master'\n\nfeat(NNS1-1793): Add neuron maturity-related metrics to NNS governance\n\nAdd new metrics to the Governance canister https_request method for total maturity and staked maturity , similarly to how we do for staked ICP (e.g., governance_total_supply_icp, governance_dissolving_neurons_e8s_bucket, governance_not_dissolving_neurons_e8s_bucket).\n\nCloses NNS1-1793 \n\nCloses NNS1-1793\n\nSee merge request dfinity-lab/public/ic!14085"
      },
      {
        "id": "4fca267f4b79587c39218126a434fa75d92a962a",
        "date": "2023-08-10T18:16:01Z",
        "message": "feat(NNS1-1793): Add neuron maturity-related metrics to NNS governance"
      },
      {
        "id": "3c15ba563eedf8b70086e5ed7e17e1b20e1955dc",
        "date": "2023-08-10T18:13:09Z",
        "message": "Merge branch 'arshavir/NNS1-2368' into 'master'\n\nchore(TOB-DFSNSR-5): The NNS governance canister should not warn about zero missing neurons\n\nThe NNS governance canister should not warn about zero missing neurons if a token swap fails.\n\nCloses NNS1-2368 \n\nCloses NNS1-2368\n\nSee merge request dfinity-lab/public/ic!14088"
      },
      {
        "id": "49e1fea3094521e2273f3d7e4c5dff0976e6cda6",
        "date": "2023-08-10T18:13:08Z",
        "message": "chore(TOB-DFSNSR-5): The NNS governance canister should not warn about zero missing neurons"
      },
      {
        "id": "726b1529fd34a47fcf0627a72301d62a282c788d",
        "date": "2023-08-07T13:53:11Z",
        "message": "Merge branch 'arshavir/fix-proposal-validation' into 'master'\n\nDisable OpenSnsTokenSwap proposals in NNS governance\n\nThis MR disables `OpenSnsTokenSwap` proposals in NNS governance. This is a temporary measure to address the bug due to which multiple proposals of this type could be simultaneously open.\n\nIf someone will try to submit an `OpenSnsTokenSwap` proposal, the response will be:\n\n```\nError(GovernanceError { error_type: Unavailable, error_message: \"OpenSnsTokenSwap proposals are temporary unavailable.\" })\n``` \n\nSee merge request dfinity-lab/public/ic!13987"
      },
      {
        "id": "815622913e45ef3f01733624481f63af58f20b49",
        "date": "2023-08-07T13:53:11Z",
        "message": "Disable OpenSnsTokenSwap proposals in NNS governance"
      }
    ],
    "email": "arshavir.ter.gabrielyan@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 149,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 73,
    "fixes": 10,
    "feats": 37,
    "non_merge_commits": [
      {
        "id": "b55ec443902a0e870e4b9da2b8a529ab2bc9b1be",
        "date": "2023-11-20T13:13:12Z",
        "message": "test(NF): Fix and re-enable `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "4471390d44d5e3f5d75adf818fff0227d9d7f499",
        "date": "2023-11-20T12:43:22Z",
        "message": "chore(NF): Improve error reporting in `NeuronsFundSnapshot::diff`"
      },
      {
        "id": "9adc144df9b83eaeefa306320797fdff0237b93b",
        "date": "2023-11-18T00:22:29Z",
        "message": "chore(SNS): Fix `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "a9137c8ae4eabaa7eb2ddd8b92dc62f883aaee9b",
        "date": "2023-11-17T15:13:00Z",
        "message": "test(NNS1-2658): Re-enable `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "6cfecd6541d5812c7cf2692895bc45909d1fe183",
        "date": "2023-11-17T11:56:17Z",
        "message": "chore(SNS): Improve Git commit ID extraction for SNS release testing with NNS Governance built from working tree"
      },
      {
        "id": "678cf3e46f49feba694663c6235c6d4ece72ef62",
        "date": "2023-11-16T22:45:30Z",
        "message": "chore(NF): Reintroduce generic binary search in `Interval::find`"
      },
      {
        "id": "d67ddf7f1f8427d0df632aa9d3937c7a0c89c581",
        "date": "2023-11-16T19:42:57Z",
        "message": "fix(SNS): Handle the special case in which Matched Funding was requested but the Neurons' Fund does not have any maturity"
      },
      {
        "id": "5c91ca09faff0ca81b688d2537014d5c3924d724",
        "date": "2023-11-16T11:04:24Z",
        "message": "feat(nfplot): Improve consistency checks in `nfplot --audit`"
      },
      {
        "id": "21c2a6152ffd1523e3b6f0e7677913222cd9bf3c",
        "date": "2023-11-15T00:17:12Z",
        "message": "chore(SNS): Support Matched Funding in testnet/tools/nns-tools"
      },
      {
        "id": "ef5d49735f1b7121ed0d77810b29ba3d76bbab2c",
        "date": "2023-11-10T18:09:56Z",
        "message": "feat(NNS1-2570): Matched Funding / Neurons' Fund participation monitoring tool"
      },
      {
        "id": "9ade77dd16f21943b0119e5bdbda8b7496bc5ba4",
        "date": "2023-11-10T16:10:40Z",
        "message": "feat(SNS): Matched Funding / Enable the Matched Funding feature"
      },
      {
        "id": "84496ea876fcf567e57e2906f1623085e9747bf6",
        "date": "2023-11-10T14:41:18Z",
        "message": "feat(NNS1-2592): Matched Funding / Support `neurons_fund_participation` and deprecate `neurons_fund_investment` in ic-admin"
      },
      {
        "id": "1bbb44e4e0396675e2ccf64eadf6b85dbfafb914",
        "date": "2023-11-09T23:19:14Z",
        "message": "feat(NNS): Matched Funding / Ensure tests pass regardless of whether `IS_MATCHED_FUNDING_ENABLED`"
      },
      {
        "id": "d18ac0890818393df294cbfa8348cbec75309bc6",
        "date": "2023-11-09T19:21:12Z",
        "message": "feat(NNS1-2591): Matched Funding / Compute `NeuronsFundParticipationConstraints`"
      },
      {
        "id": "a82db2e421f3ed03a400c66b169d601cba5fc743",
        "date": "2023-11-09T18:57:08Z",
        "message": "feat(Swap): Matched Funding / Cap `neurons_fund_participation_icp_e8s` estimation at `max_neurons_fund_participation_icp_e8s`"
      },
      {
        "id": "7fc3072e447b4a1b94976a6ccdca93934fdf890b",
        "date": "2023-11-08T20:25:22Z",
        "message": "feat(NNS1-2558): Matched Funding / Add unit tests for `refresh_buyer_token_e8s` to check Neurons' Fund participation"
      },
      {
        "id": "5d6ac9033f4fa4456ee80be51112808d27abe770",
        "date": "2023-11-08T09:36:12Z",
        "message": "chore(SNS): Matched Funding / Disallow `neurons_fund_investment_icp` when Matched Funding is used"
      },
      {
        "id": "3c194fe9e33501f4d787bef37c3d6a2cd171e453",
        "date": "2023-11-08T00:28:55Z",
        "message": "fix(SNS): Fix SNS CLI's `init-config-file validate` sub-command"
      },
      {
        "id": "b6e53dccd977f7a71c67f6f2bff2043dc8f28631",
        "date": "2023-11-07T00:53:35Z",
        "message": "chore(SNS): Matched Funding / Reuse validation code for `SnsInitPayload.neurons_fund_participation_constraints` in SNS init"
      },
      {
        "id": "6d70fb0300361de67d09bcef1ce7d9d89823445b",
        "date": "2023-11-06T23:54:55Z",
        "message": "fix(NNS): Matched Funding / Assign `max_neurons_fund_participation_icp_e8s` to a more precise value"
      },
      {
        "id": "5cc298a9dd35d2ea6fe78a696c8201962ec2f414",
        "date": "2023-11-06T23:09:29Z",
        "message": "feat(NNS): Matched Funding / Add field `allocated_neurons_fund_participation_icp_e8s` to `NeuronsFundParticipation`"
      },
      {
        "id": "86284fbc6c566c640c226b9423e8f0a57fdc0203",
        "date": "2023-11-04T16:34:58Z",
        "message": "feat(NNS): Matched Funding / Add NNS Governance endpoint `get_neurons_fund_audit_info` [override-didc-check]"
      },
      {
        "id": "f9544013029c517f37e105e37e3dc4d849f829d4",
        "date": "2023-11-03T23:48:50Z",
        "message": "feat(NNS1-2619): Matched Funding / Adjust Neurons' Fund participation thresholds and add tests for `PolynomialMatchingFunction`"
      },
      {
        "id": "f6595d2565348e6aed389c69353a15f4cec31573",
        "date": "2023-11-02T15:45:28Z",
        "message": "fix(SNS): Matched Funding / Ensure Swap's `can_commit` depends only on direct participation amount"
      },
      {
        "id": "cd7e718cc86d41db6808d312e05ec4e128b499fc",
        "date": "2023-11-01T13:44:36Z",
        "message": "chore(SNS-CLI): Matched Funding / Publish `sns-test-feature`"
      },
      {
        "id": "ab735a0282909bac90d092a5f8b6a01fc105f491",
        "date": "2023-11-01T11:20:57Z",
        "message": "chore(SNS-CLI): Matched Funding / Fix leftover issue in SNS-CLI"
      },
      {
        "id": "b979e5bebca89e8bb5822b7bd0f3b657b8b10e89",
        "date": "2023-10-31T23:57:39Z",
        "message": "feat(NNS1-2570): Matched Funding / Update `Swap.neurons_fund_participation_icp_e8s` in `refresh_buyer_token_e8s`"
      },
      {
        "id": "ac3520d6edb7ebbfedb734c7bd0013b584771264",
        "date": "2023-10-31T22:03:29Z",
        "message": "chore(NNS1-2570): Matched Funding / Refactor Neurons' Fund"
      },
      {
        "id": "b0389c358362f59231f5b3b2076f60573d03abf0",
        "date": "2023-10-31T17:37:25Z",
        "message": "chore(NNS1-2555): Matched Funding / Implement security review suggestions for NNS Governance's Neurons' Fund documentation"
      },
      {
        "id": "7cb38a9097624b4859159f017b830baa10b17cf7",
        "date": "2023-10-31T17:26:49Z",
        "message": "chore(SNS): Improve descriptiveness of errors in `Swap::Init::mk_open_sns_request`"
      },
      {
        "id": "752f801ae1312129bf63854a908b883ef497e204",
        "date": "2023-10-31T13:32:07Z",
        "message": "chore(SNS): Adjust SNS release testing setup"
      },
      {
        "id": "241b0a1b90f8e912785a9d0b92c9435b1f5b8646",
        "date": "2023-10-30T22:50:11Z",
        "message": "chore(SNS): Update sns_publish_log.txt"
      },
      {
        "id": "ffacc906e0c2d767360236132a1e87c83be108c8",
        "date": "2023-10-30T22:10:06Z",
        "message": "chore(NNS1-2638): Matched Funding / Ensure swap success criterium is based only on direct participation"
      },
      {
        "id": "d3232b289b6e738fcd0e1ac1e1f8bdff2c4a0f5b",
        "date": "2023-10-30T14:02:30Z",
        "message": "chore(SNS): Update SNS README.md"
      },
      {
        "id": "2298a95ec08ad7f0b2ebee70ef0a3e96fe4462b8",
        "date": "2023-10-26T08:33:19Z",
        "message": "feat(NNS1-2570): Matched Funding / Add field `ideal_matched_participation_function` to `NeuronsFundParticipationConstraints` in Swap Init"
      },
      {
        "id": "dc94c674321500435b7dc0cabb66bcba94449add",
        "date": "2023-10-25T20:34:52Z",
        "message": "chore(SNS): Improve error descriptiveness for Swap canister's legacy vs. 1-proposal field validation"
      },
      {
        "id": "92625bdc9d0e82b148a0a7a61b58bc70c48ce143",
        "date": "2023-10-25T06:31:33Z",
        "message": "feat(NNS1-2620): Matched Funding / Encode the polynomial S-curve"
      },
      {
        "id": "e71a51167fef03b9f12e12eb1d3e89b0259ca978",
        "date": "2023-10-24T13:46:35Z",
        "message": "chore(NNS): Bump `CANISTERS_MAX_SIZE_E5_BYTES` for `governance-canister.wasm` to `30_000` bytes"
      },
      {
        "id": "f9dc9410d88e9047ead059d3d4b9c47fc499a512",
        "date": "2023-10-19T21:41:04Z",
        "message": "feat(SNS): Make Swap params validation errors more verbose"
      },
      {
        "id": "6155e523a6b1c9a115aa80845eb5c39c9ef7903e",
        "date": "2023-10-18T17:13:25Z",
        "message": "chore(NNS): Toggle `IS_UPDATE_ALLOWED_PRINCIPALS_ENABLED`"
      },
      {
        "id": "16373ac00c14de77609efe50402cd4dcec93ae5e",
        "date": "2023-10-17T18:44:39Z",
        "message": "feat(NNS1-2640): Matched Funding / Limit swap duration to 14 days"
      },
      {
        "id": "6b1d06566c80ccfd467d72d43428ef898a87f85b",
        "date": "2023-10-17T18:04:27Z",
        "message": "feat(NNS1-2569): Matched Funding / Add `Swap.init.neurons_fund_participation`"
      },
      {
        "id": "658b3c05260b4da33b8bcae406139bf9ff1e20b5",
        "date": "2023-10-17T13:19:36Z",
        "message": "feat(NNS1-2555): Matched Funding / Apply `NeuronsFundParticipation` in NNS Governance (before and after the swap begins) [override-didc-check]"
      },
      {
        "id": "d87435843e13e6a3866d0c6effed397aacaec2ad",
        "date": "2023-10-17T12:01:58Z",
        "message": "chore(SNS): Disable system tests that rely on the legacy SNS flow"
      },
      {
        "id": "fca335903c8da9f5e344f336d880d1e83aca0855",
        "date": "2023-10-17T10:29:22Z",
        "message": "chore(SNS): Disable SNS system tests that rely on fixed Neurons' Fund participation"
      },
      {
        "id": "63d321d0f93339d96510ae5c63318be2295a19dc",
        "date": "2023-10-16T16:54:34Z",
        "message": "feat(NNS1-2630): Matched Funding / Implement a generic inverse function for computing `NeuronsFundParticipationConstraints`"
      },
      {
        "id": "47ad2b3f4effd66d54731c41f9102755a1975e1e",
        "date": "2023-10-03T22:17:28Z",
        "message": "test(NNS1-2633): Matched Funding / Add fixtures tests for `settle_neurons_fund_participation`"
      },
      {
        "id": "42ada5a4bcd88dfce30dc6017f987eb999c099f9",
        "date": "2023-10-03T17:11:57Z",
        "message": "test(NNS1-2633): Matched Funding / Add `settle_neurons_fund_participation_request_tests`"
      },
      {
        "id": "32623e34e8445820df3f21a2113359b15d0d4c9f",
        "date": "2023-10-03T14:41:36Z",
        "message": "test(NNS1-2633): Matched Funding / Add `test_cant_interleave_calls_to_settle_neurons_fund`"
      },
      {
        "id": "81464aed12152226535ec7a8145e69e7ff5d9440",
        "date": "2023-10-03T14:32:20Z",
        "message": "feat(NNS1-2555): Matched Funding / Begin implementing changes in NNS Governance"
      },
      {
        "id": "097af6cd2d6151ba08a3020d8126dc247cb3ac01",
        "date": "2023-10-03T12:20:27Z",
        "message": "feat(NNS1-2596): Matched Funding / Implementation of `settle_neurons_fund_participation` in NNS Governance"
      },
      {
        "id": "d7e1d12bdf9da05a1115f46d209343631210b22d",
        "date": "2023-09-30T15:44:42Z",
        "message": "feat(NNS1-2620): Matched Funding / Use `rust_decimal::Decimal` in rs/nns/governance/src/neurons_fund.rs"
      },
      {
        "id": "e3c50528de89e7bf148b97b40be388f76c22644f",
        "date": "2023-09-29T21:55:53Z",
        "message": "feat(NNS1-2625): Matched Funding / Add new field `neurons_fund_participation` to `ProposalData`"
      },
      {
        "id": "2ba6dbea7a6d11a8faf96ce27f5d95177f662017",
        "date": "2023-09-29T13:50:38Z",
        "message": "chore(NNS1-2555): Matched Funding / Refactor `MatchedParticipationFunction`"
      },
      {
        "id": "32ad71bf4221758e02de685c15eaf65f07402072",
        "date": "2023-09-28T17:14:03Z",
        "message": "feat(NNS1-2556): Matched Funding / Initialize cached fields in `Swap.try_open_after_delay`"
      },
      {
        "id": "b3f5d4d6b4df2e367320c728e3466ce9956b1a37",
        "date": "2023-09-28T15:52:36Z",
        "message": "feat(NNS1-2596): Matched Funding / add new NNS Governance function `settle_neurons_fund_participation` [override-didc-check]"
      },
      {
        "id": "201dace54eeef2e8dc6e4c837a964c7166609b10",
        "date": "2023-09-26T18:40:19Z",
        "message": "feat(NNS1-2555): Matched Funding / add new type `MatchedParticipationFunction`"
      },
      {
        "id": "dff2dc07125ae1f8e6784bddd52fa63fd03eb8ec",
        "date": "2023-09-22T14:06:55Z",
        "message": "fix: correct expected ICP participation amounts in `one_proposal_neurons_fund_swap_participation_test`"
      },
      {
        "id": "68e4092b14e71f226ca46e92f288231ccf67022a",
        "date": "2023-09-21T21:42:05Z",
        "message": "feat(NNS1-2556): Matched Funding / Add `{direct,neurons_fund}_participation_icp_e8s` to `GetDerivedStateResponse`"
      },
      {
        "id": "4592945ed1f43cd2fb1cfc80f4cdd973b4e9bf94",
        "date": "2023-09-21T21:35:07Z",
        "message": "feat(NNS1-2594): Matched Funding / Add compile time feature flag and validation for `SnsInitPayload.neurons_fund_participation_constraints`"
      },
      {
        "id": "21e7cf37c95ec23bccf1998914f6bbc2e546ef9a",
        "date": "2023-09-18T21:56:23Z",
        "message": "feat(NNS1-2553) Matched Funding / Add `neurons_fund_participation_constraints` to `ExecutedCreateServiceNervousSystemProposal`"
      },
      {
        "id": "8abe5f41e0ff221a1165669ef8b6be90d6574b3e",
        "date": "2023-09-18T11:30:45Z",
        "message": "feat(NNS1-2593): Matched Funding / Add `neurons_fund_participation_constraints` to `SnsInitPayload` [override-didc-check]"
      },
      {
        "id": "30e42eca092937626d9526267be77e5117d3c139",
        "date": "2023-09-15T16:15:20Z",
        "message": "feat(NNS1-2554): Refactor `refresh_buyer_token_e8s`"
      },
      {
        "id": "61908062978e240385e020842b6d4e1da4c36644",
        "date": "2023-09-13T15:42:41Z",
        "message": "feat(NNS1-2553): Matched Funding / Add new field `neurons_fund_participation_constraints` to `SwapInit`"
      },
      {
        "id": "099a34428fa0dd0f64331dfff9916a6a02e12080",
        "date": "2023-09-13T09:33:39Z",
        "message": "Allow for ICP testnets to live up to 24 hours"
      },
      {
        "id": "6a28dd323d0476e39487946d5e15c170f3c3857e",
        "date": "2023-09-12T22:16:04Z",
        "message": "feat(NNS1-2553): Match Funding / Add new field `Committed.total_neurons_fund_contribution_e8s`"
      },
      {
        "id": "2d481df8ff5e37c01a15ed2a3bc768097caf08ab",
        "date": "2023-09-12T20:14:18Z",
        "message": "feat(NNS1-2553): Match Funding / Add new field `Swap.current_neurons_fund_contribution_e8s`"
      },
      {
        "id": "4eabd5794af5c81347ceb5e16aff71ed1d03bf23",
        "date": "2023-08-30T10:54:43Z",
        "message": "chore: Remove extraneous checks in Swap heartbeat"
      },
      {
        "id": "2c6298eb5fbb1c144c3a5b5405bd02f8b4e7a761",
        "date": "2023-08-24T15:14:30Z",
        "message": "chore: Rename `SALE_NEURON_MEMO_RANGE` to `NEURON_BASKET_MEMO_RANGE`"
      },
      {
        "id": "4fad983bb505b05ffffa7f7741d116e4884942f2",
        "date": "2023-08-24T14:49:58Z",
        "message": "feat: Add script to upgrade replica and NNS from mainnet versions to custom Git SHA"
      },
      {
        "id": "d6d3c37862698db8f553a4da473f5e090e754e8a",
        "date": "2023-08-24T14:07:18Z",
        "message": "chore: Update comment for FIRST_PRINCIPAL_BYTES"
      },
      {
        "id": "eb8788424e7ec13556269a69ffff22f454062e8f",
        "date": "2023-08-24T14:05:21Z",
        "message": "chore: Avoid using `as` when casting from larger to smaller integer types"
      },
      {
        "id": "49f09f95484f71058242f74f0bf11892e68ddc26",
        "date": "2023-08-22T14:58:45Z",
        "message": "chore: Update unit used in log message in SNS Swap"
      },
      {
        "id": "4fca267f4b79587c39218126a434fa75d92a962a",
        "date": "2023-08-10T18:16:01Z",
        "message": "feat(NNS1-1793): Add neuron maturity-related metrics to NNS governance"
      },
      {
        "id": "49e1fea3094521e2273f3d7e4c5dff0976e6cda6",
        "date": "2023-08-10T18:13:08Z",
        "message": "chore(TOB-DFSNSR-5): The NNS governance canister should not warn about zero missing neurons"
      },
      {
        "id": "815622913e45ef3f01733624481f63af58f20b49",
        "date": "2023-08-07T13:53:11Z",
        "message": "Disable OpenSnsTokenSwap proposals in NNS governance"
      }
    ],
    "line_additions": 18177,
    "line_deletions": 7083,
    "lines_effected_total": 25260,
    "rel_comm_add": 58,
    "rel_comm_del": 43,
    "rel_comm_total": 63
  },
  {
    "login": "nikolay-komarevskiy",
    "id": 90605504,
    "totalContributions": 445,
    "github": "https://github.com/nikolay-komarevskiy",
    "commits": [
      {
        "id": "0c1abf91123b0fcb0b60f997283f504b81890928",
        "date": "2023-11-23T09:58:52Z",
        "message": "Merge branch 'BOUN-933-add-api-boundary-node-registry-helpers' into 'master'\n\n(BOUN-933) Add ApiBoundaryNodeRegistry trait\n\nObjective: introduce reusable components for interacting with `ApiBoundaryNode` registry records. \n\nSee merge request dfinity-lab/public/ic!16278"
      },
      {
        "id": "aa754376b4f0a7b1bd87f9081698aa461ad799e8",
        "date": "2023-11-23T09:58:52Z",
        "message": "(BOUN-933) Add ApiBoundaryNodeRegistry trait"
      },
      {
        "id": "5815865e9e99744e29703dddcc1fa878c656511b",
        "date": "2023-11-22T13:29:09Z",
        "message": "Merge branch 'fix-set-counters-on-caniserts-sequentially' into 'master'\n\nset counters on canisters sequentially in test\n\n- Perform canister calls sequentially. This should decrease the probability of `connection closed before message completed`. As only one connection will be used.\n- Separate `agent.update().call_and_wait()` into two parts (`call` and `wait`). Each part is retried individually on failure. Retrying on a whole `call_and_wait()`, if only `wait` part fails results in repeating `call` part and hence canister double increment.\n- Use `retry_async` with `timeout/backoff` instead of retrying on `max_attempts`. \n\nSee merge request dfinity-lab/public/ic!16259"
      },
      {
        "id": "2042f6837dcad3aa867b5dc57e61f6473b06a9a7",
        "date": "2023-11-22T13:29:09Z",
        "message": "set counters on canisters sequentially in test"
      },
      {
        "id": "39f75e55103cff72e26c480799d3aa0886c3a23a",
        "date": "2023-11-20T09:21:26Z",
        "message": "Merge branch 'add-retries-boundary-node-test' into 'master'\n\nintroduce retries for canister calls in BN test\n\nThis should de-flake `canister_routing_test()`, which often encounters `HttpError(Http Error: status 500 Internal Server Error, connection closed before message completed)`. The cause of the error is still unknown though. \n\nSee merge request dfinity-lab/public/ic!16159"
      },
      {
        "id": "fe8ff70f1642bb83a05b2d744dd85899ca0edf00",
        "date": "2023-11-20T09:21:25Z",
        "message": "introduce retries for canister calls in BN test"
      },
      {
        "id": "a75257652d49af06c66bdd469f70678aa20b7bd5",
        "date": "2023-11-17T05:25:21Z",
        "message": "(BOUN-959) Bump up the ic-agent version"
      },
      {
        "id": "aecdfd4fd1de6966fc5b214ce5f2556ba622e6d7",
        "date": "2023-11-14T22:59:19Z",
        "message": "feat(BOUN-833): deploy ic-boundary"
      },
      {
        "id": "718e60bd864b20cf7808e8dce7bfaf8d5668ffb7",
        "date": "2023-11-14T08:26:55Z",
        "message": "Merge branch 'BOUN-930-icx-proxy-bind-to-ipv6' into 'master'\n\n(BOUN-930) icx-proxy bind to ipv6 and ipv4\n\n \n\nSee merge request dfinity-lab/public/ic!16006"
      },
      {
        "id": "1d349fba12c76c5ba6592db4f027950ba6c4ca56",
        "date": "2023-11-14T08:26:54Z",
        "message": "(BOUN-930) icx-proxy bind to ipv6 and ipv4"
      },
      {
        "id": "50646eca8374609e558047ebdee6452364bae757",
        "date": "2023-11-08T11:15:48Z",
        "message": "Merge branch 'ic-boundary-bind-to-ipv4-and-ipv6' into 'master'\n\nic-boundary server binds to ipv4 and ipv6\n\nThis will make `ic-boundary` server bind to both `ipv4` and `ipv6` addresses, instead of just `ipv4`.\n\nTested that now both work:\n```\napi-boundary-node$ curl -I 'http://[ipv6]:4444/api/v2/status'\napi-boundary-node$ curl -I http://ipv4:4444/api/v2/status\n``` \n\nSee merge request dfinity-lab/public/ic!15961"
      },
      {
        "id": "ddd6829ea8c6961cbf5cb4bdedba2033ac0b96f9",
        "date": "2023-11-08T11:15:46Z",
        "message": "ic-boundary server binds to ipv4 and ipv6"
      },
      {
        "id": "5507cac121adce3d119c0a7bec31eb46ac28f16a",
        "date": "2023-11-03T08:37:49Z",
        "message": "Merge branch 'BOUN-940-incorporate-api-bn-discowery-lib' into 'master'\n\n(BOUN-940) add API node discovery library to system-test\n\n \n\nSee merge request dfinity-lab/public/ic!15862"
      },
      {
        "id": "976769b29f5423476d633373cdff34eb95f07c35",
        "date": "2023-11-03T08:37:48Z",
        "message": "(BOUN-940) add API node discovery library to system-test"
      },
      {
        "id": "f28a2859f6e8645e16dcbacc638a1c43b9c7555c",
        "date": "2023-10-31T16:48:29Z",
        "message": "Merge branch 'BOUN-927-poc-api-discovery-library' into 'master'\n\n(BOUN-927) POC API Discovery Library\n\n \n\nSee merge request dfinity-lab/public/ic!15671"
      },
      {
        "id": "5e750ebef5b71283fab56c3e1168c1ceae6700df",
        "date": "2023-10-31T16:48:28Z",
        "message": "(BOUN-927) POC API Discovery Library"
      },
      {
        "id": "27ea53514798b661318b0f5f05f76a6fc8e089d9",
        "date": "2023-10-26T08:06:48Z",
        "message": "Merge branch 'BOUN-865-add-prod-bn-performance-test' into 'master'\n\n(BOUN-865) add mainnet BN performance test\n\n \n\nSee merge request dfinity-lab/public/ic!14775"
      },
      {
        "id": "7e61e2efec51533d413ec59c0e5141b797900354",
        "date": "2023-10-26T08:06:47Z",
        "message": "(BOUN-865) add mainnet BN performance test"
      },
      {
        "id": "191a0823043fad01f99762615da6a6e5fe620cc3",
        "date": "2023-10-24T07:17:49Z",
        "message": "(BOUN-928) Add API BN decentralization test"
      },
      {
        "id": "9fe2698316c8bf0312964db6e3eb6b06f5ae1d73",
        "date": "2023-10-20T13:02:40Z",
        "message": "Merge branch 'igornovg/nginx-health' into 'master'\n\nfeat(BOUN-918): nginx: add /health endpoint\n\nProxy `/health` to `/api/v2/status` \n\nSee merge request dfinity-lab/public/ic!15531"
      },
      {
        "id": "0c7e0014f3b648c1f93e5ecda7f5147f96178add",
        "date": "2023-10-19T13:44:03Z",
        "message": "Merge branch 'fix-typo' into 'master'\n\nFix typo in metrics\n\n \n\nSee merge request dfinity-lab/public/ic!15499"
      },
      {
        "id": "022e5eb38772edd2893f86be230a4127a1b8f98e",
        "date": "2023-10-19T13:44:02Z",
        "message": "Fix typo in metrics"
      },
      {
        "id": "d0b145884602b34bdc2006066b7c9922387a02c9",
        "date": "2023-10-19T07:20:04Z",
        "message": "Merge branch 'BOUN-916-extend-ic-admin-get-api-boundary-nodes' into 'master'\n\n(BOUN-916) Add GetApiBoundaryNodes subcommand\n\nVerified on the Farm testnets. Added two unassigned nodes to the `ApiBoundaryNode` via proposal.\n\nAfterwards, one can get the list of the api-nodes ids:\n```\nubuntu@devenv-container /ic % bazel run //rs/registry/admin:ic-admin -- --nns-url \"http://[2a0b:21c0:4003:2:5086:1ff:fe2f:84f3]:8080\" get-api-boundary-nodes\n\n[\n  \"32qsn-idhau-6vxo5-3l627-4pf2f-yifme-ljn6y-4fsxs-cpan3-6kfss-nae\",\n  \"aobd2-7ru2h-ebwiv-siawy-teeug-3uuks-2bcmn-2tpvq-3vh3l-jjj5u-7qe\"\n]\n```\n\nand check individual record by id:\n```\nubuntu@devenv-container /ic % bazel run //rs/registry/admin:ic-admin -- --nns-url \"http://[2a0b:21c0:4003:2:5086:1ff:fe2f:84f3]:8080\" get-api-boundary-node aobd2-7ru2h-ebwiv-siawy-teeug-3uuks-2bcmn-2tpvq-3vh3l-jjj5u-7qe\n\n\nFetching the most recent value for key: api_boundary_node_aobd2-7ru2h-ebwiv-siawy-teeug-3uuks-2bcmn-2tpvq-3vh3l-jjj5u-7qe\nMost recent version is 3. Value:\nApiBoundaryNodeRecord { version: \"0000000000000000000000000000000000000000\", domain: \"example2.com\" }\n``` \n\nSee merge request dfinity-lab/public/ic!15452"
      },
      {
        "id": "ec444c916a4e08e4998ed0336f84555a19c6f557",
        "date": "2023-10-19T07:20:04Z",
        "message": "(BOUN-916) Add GetApiBoundaryNodes subcommand"
      },
      {
        "id": "0e0bd798715740e0da39350ef311fff573b03b1b",
        "date": "2023-10-13T15:50:52Z",
        "message": "Merge branch 'skip-flaky-ic-boundary-test' into 'master'\n\nDisable flaky ic-boundary cache test\n\n \n\nSee merge request dfinity-lab/public/ic!15388"
      },
      {
        "id": "ed12b4181c760780932471f1af2f64b4d3248aad",
        "date": "2023-10-13T15:50:52Z",
        "message": "Disable flaky ic-boundary cache test"
      },
      {
        "id": "43353424da8de492898c8522116ccd30d1cc01e1",
        "date": "2023-10-10T15:21:54Z",
        "message": "Merge branch 'igornovg/fix-uuid' into 'master'\n\nfix(BOUN-894): accept any uuid\n\nmake ic-boundary accept any properly formatted uuid, not only v4 \n\nSee merge request dfinity-lab/public/ic!15314"
      },
      {
        "id": "99dbf854157d72c825483a49240f8e72ce556515",
        "date": "2023-10-09T13:28:09Z",
        "message": "Merge branch 'boundary-guestos-add-canister-routing-test' into 'master'\n\nBoundary GuestOs add canister-routing test\n\nThis is the same test that we have for API Boundary GuestOs. We should have it for Boundary GuestOs too. \n\nSee merge request dfinity-lab/public/ic!15287"
      },
      {
        "id": "aa3174ee2f23360289476af1524b774b0733d211",
        "date": "2023-10-09T13:28:08Z",
        "message": "Boundary GuestOs add canister-routing test"
      },
      {
        "id": "6e8c1a9e7545ba571280691965999bba9332df1a",
        "date": "2023-10-09T13:19:57Z",
        "message": "Merge branch 'ic-boundary-add-request-id-verification' into 'master'\n\n(BOUN-894) add x-request-id header verification in ic-boundary\n\nIncoming requests to the `ic-boundary` are now processed with the following policy.\n\n**case:**\n- no `x-request-id` in the header => middleware generates a header with a random uuid\n- `x-request-id` header contains an invalid or empty uuid => `MalformedRequest` error\n- `x-request-id` header contains a valid uuid => uuid is accepted and not overwritten by the middleware\n\nI fixed the uuid check to version 4, as this version is generated by the Rust `MakeRequestUuid`.\nHowever, I suppose we'll need to tweak this in `nginx`, as it seem to generate version 6 by default. \n\nSee merge request dfinity-lab/public/ic!15275"
      },
      {
        "id": "a7e0879d8aa295c9d44fd3f9933ac2523de768bd",
        "date": "2023-10-09T13:19:56Z",
        "message": "(BOUN-894) add x-request-id header verification in ic-boundary"
      },
      {
        "id": "0133e0b31a7ff6457488b17cec35d0f05773e8cb",
        "date": "2023-09-12T12:37:44Z",
        "message": "Merge branch 'fix-assertion-performance-test' into 'master'\n\nfix assertion in performance test\n\n \n\nSee merge request dfinity-lab/public/ic!14735"
      },
      {
        "id": "0b1277667530703765e769c94a3a5cfd15a57328",
        "date": "2023-09-12T12:37:44Z",
        "message": "fix assertion in performance test"
      },
      {
        "id": "a513e34e7eaa018aa401ffe980d619ee49c89601",
        "date": "2023-09-11T08:42:17Z",
        "message": "Merge branch 'BOUN-874-add-clientside-assertions' into 'master'\n\n(BOUN-874) add client-side assertions to performance BN test\n\n \n\nSee merge request dfinity-lab/public/ic!14708"
      },
      {
        "id": "da13416f1879471cca86e73c0395349939a088d7",
        "date": "2023-09-11T08:42:16Z",
        "message": "(BOUN-874) add client-side assertions to performance BN test"
      },
      {
        "id": "4ceb8e37f8192c7be0aa37ae17ce451ad8b57523",
        "date": "2023-09-09T05:19:56Z",
        "message": "(BOUN-875) update boundary-node Grafana dashboard"
      },
      {
        "id": "91fd74f865e71385914e2bc64c723f0a31de67e7",
        "date": "2023-09-08T08:09:59Z",
        "message": "Merge branch 'adapt-boundary-node-dashboard' into 'master'\n\nAdapt Grafana dashboard for the Boundary-Node\n\nNames in Prometheus metrics of the `ic-boundary` were modified, we need to adapt dashboard accordingly.\nNow there are two metrics: `ic_boundary_http_request_in_total`, `ic_boundary_http_request_out_total` \n\nSee merge request dfinity-lab/public/ic!14678"
      },
      {
        "id": "6aded28aab015f56bc3baabd6dc26d11ac794130",
        "date": "2023-09-08T08:09:58Z",
        "message": "Adapt Grafana dashboard for the Boundary-Node"
      },
      {
        "id": "ba1a28d95ef36ac5bd1d297694bbdefca4a8d063",
        "date": "2023-09-07T13:11:48Z",
        "message": "Merge branch 'BOUN-860-fix-setup-vector-and-vector' into 'master'\n\n(BOUN-860) Fix vector-setup and vector in the boundary-guestos for test env\n\n[setup-vector.sh](https://sourcegraph.com/github.com/dfinity/ic/-/blob/ic-os/boundary-guestos/rootfs/opt/ic/bin/setup-vector.sh) now starts/finishes successfully:\n```sh\nadmin@boundary-node-1:~$ systemctl status setup-vector | cat\n● setup-vector.service - Set variable files (i.e. ELASTICSEARCH_URL) for vector\n     Loaded: loaded (/etc/systemd/system/setup-vector.service; static; vendor preset: enabled)\n     Active: active (exited) since Mon 2023-09-04 09:31:28 UTC; 2min 40s ago\n    Process: 614 ExecStart=/opt/ic/bin/setup-vector.sh (code=exited, status=0/SUCCESS)\n   Main PID: 614 (code=exited, status=0/SUCCESS)\n```\n`clickhouse_nginx_access.healthcheck` is disabled in Vector service. Service starts, but with errors:\n```sh\nadmin@boundary-node-1:~$ systemctl status vector | cat\n● vector.service - Vector\n     Loaded: loaded (/etc/systemd/system/vector.service; enabled; vendor preset: enabled)\n     Active: active (running) since Wed 2023-09-06 17:02:39 UTC; 5min ago\n   Main PID: 708 (vector)\n      Tasks: 9 (limit: 28808)\n     Memory: 61.6M\n     CGroup: /system.slice/vector.service\n             ├─708 /usr/bin/vector --config /etc/vector/vector.toml\n             ├─806 journalctl --follow --all --show-cursor --output=json --boot --since=2000-01-01\n             └─807 journalctl --follow --all --show-cursor --output=json --boot --since=2000-01-01\n\nSep 06 17:05:07 boundary-node-1 vector[708]: 2023-09-06T17:05:07.370860Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}:http: vector::internal_events::http_client: HTTP error. error=error trying to connect: tcp connect error: Connection refused (os error 111) error_type=\"request_failed\" stage=\"processing\"\nSep 06 17:05:07 boundary-node-1 vector[708]: 2023-09-06T17:05:07.370937Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}: vector::sinks::util::retries: Retrying after error. error=Failed to make HTTP(S) request: error trying to connect: tcp connect error: Connection refused (os error 111)\nSep 06 17:05:11 boundary-node-1 vector[708]: 2023-09-06T17:05:11.371594Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}:http: vector::internal_events::http_client: HTTP error. error=error trying to connect: tcp connect error: Connection refused (os error 111) error_type=\"request_failed\" stage=\"processing\"\nSep 06 17:05:11 boundary-node-1 vector[708]: 2023-09-06T17:05:11.371680Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}: vector::sinks::util::retries: Retrying after error. error=Failed to make HTTP(S) request: error trying to connect: tcp connect error: Connection refused (os error 111)\nSep 06 17:05:17 boundary-node-1 vector[708]: 2023-09-06T17:05:17.373158Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}:http: vector::internal_events::http_client: HTTP error. error=error trying to connect: tcp connect error: Connection refused (os error 111) error_type=\"request_failed\" stage=\"processing\"\nSep 06 17:05:17 boundary-node-1 vector[708]: 2023-09-06T17:05:17.373223Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}: vector::sinks::util::retries: Retrying after error. error=Failed to make HTTP(S) request: error trying to connect: tcp connect error: Connection refused (os error 111)\nSep 06 17:05:27 boundary-node-1 vector[708]: 2023-09-06T17:05:27.375409Z  WARN sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}:http: vector::internal_events::http_client: HTTP error. error=error trying to connect: tcp connect error: Connection refused (os error 111) error_type=\"request_failed\" stage=\"processing\"\nSep 06 17:05:27 boundary-node-1 vector[708]: 2023-09-06T17:05:27.375497Z ERROR sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}: vector::sinks::util::retries: Retries exhausted; dropping the request. error=Failed to make HTTP(S) request: error trying to connect: tcp connect error: Connection refused (os error 111)\nSep 06 17:05:27 boundary-node-1 vector[708]: 2023-09-06T17:05:27.375525Z ERROR sink{component_kind=\"sink\" component_id=clickhouse_nginx_access component_type=clickhouse component_name=clickhouse_nginx_access}:request{request_id=2}: vector::sinks::util::sink: Request failed. error=Failed to make HTTP(S) request: error trying to connect: tcp connect error: Connection refused (os error 111)\nSep 06 17:05:44 boundary-node-1 vector[708]: 2023-09-06T17:05:44.266680Z  WARN sink{component_kind=\"sink\" component_id=prometheus_exporter_nginx component_type=prometheus_exporter component_name=prometheus_exporter_nginx}: vector::internal_events::prometheus: Request to prometheus server complete. status_code=404 Not Found\n```\nand `nginx` metrics can now be observed via http://[bn_ipv6]:9316/metrics:\n```\n# HELP nginx_error_total error_total\n# TYPE nginx_error_total counter\n...\nnginx_request_total{hostname=\"boundary-node-1\",ic_http_request=\"0\",ic_node_id=\"v45y2-clnya-ouzm5-foloa-z72gs-kydft-i75zv-ig2l6-lhhxk-fencg-xae\",ic_request_type=\"N/A\",ic_subnet_id=\"3kggm-rg4rg-rrbnj-bylyc-5wdmt-r4m5c-h2smp-6etef-ftmei-t23ty-lae\",is_bot=\"0\",request_method=\"OPTIONS\",status=\"204\",traffic_segment=\"external\",upstream_cache_status=\"\",upstream_status=\"0\"} 3\n``` \n\nSee merge request dfinity-lab/public/ic!14554"
      },
      {
        "id": "05a475dbae492ef332864ce23b839e106981ce3a",
        "date": "2023-09-07T13:11:48Z",
        "message": "(BOUN-860) Fix vector-setup and vector in the boundary-guestos for test env"
      },
      {
        "id": "cf01ab7f53196c7372aeb2b16f1377754918cc0d",
        "date": "2023-09-06T15:57:54Z",
        "message": "Merge branch 'BOUN-863-increase-openfiles-limit-boundary-guestos' into 'master'\n\nIncrease the max number of open files for all systemd services\n\nWe should apply the [same changes as for the api-boundary-guestos](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14582) to handle high request rates.\n\nAn alternative strategy can be to set this default to some medium value and tweak per service if needed. \n\nSee merge request dfinity-lab/public/ic!14600"
      },
      {
        "id": "71ca884d3a24bde972079f4312e1afde57da26f2",
        "date": "2023-09-06T15:57:54Z",
        "message": "Increase the max number of open files for all systemd services"
      },
      {
        "id": "8861256a8b405a9a7451b47f9cff2c7719e48db5",
        "date": "2023-09-05T17:59:56Z",
        "message": "Merge branch 'BOUN-863-increase-openfiles-limit' into 'master'\n\n(BOUN-863) increase the number of open files limit\n\n`Performance` system-testing of the `ic-boundary` revealed that at high rps (>6K req/s) `500` errors start to emerge.\nThe underlying reason is that the default limit on the max number of the open file descriptors was exceeded. In this MR we set the limit for `ic-boundary` service to some high value. The pictures below show the success/failure rate of the `ic-boundary` before and after the fix. The rps is doubled in graph, this problem [still needs to be fixed](https://dfinity.atlassian.net/browse/BOUN-862).\n\n**Before the fix**:\n![Screenshot_2023-09-05_at_11.37.49](/uploads/c66403d4f92f42c603e04796a17e2e8b/Screenshot_2023-09-05_at_11.37.49.png)\n**After the fix**:\n![Screenshot_2023-09-05_at_12.59.57](/uploads/8b90a0591da92402adc33e5db560bb46/Screenshot_2023-09-05_at_12.59.57.png) \n\nSee merge request dfinity-lab/public/ic!14582"
      },
      {
        "id": "53fcbc9e72a8f3749ad7447ca056fb19c133f97a",
        "date": "2023-09-05T17:59:56Z",
        "message": "(BOUN-863) increase the number of open files limit"
      },
      {
        "id": "8d18259da438205b83504a978c70db9ac660f3f0",
        "date": "2023-09-04T13:27:49Z",
        "message": "Merge branch 'refactor-prometheus-sync-system-tests' into 'master'\n\nRefactor Prometheus targets sync in system-tests\n\n`sync_with_prometheus()` now synchornizes with Prometheus both - IC topology and all boundary nodes. \n\nSee merge request dfinity-lab/public/ic!14520"
      },
      {
        "id": "c5a2a54484477a9d86762d3f7fd576eb56d627b5",
        "date": "2023-09-04T13:27:48Z",
        "message": "Refactor Prometheus targets sync in system-tests"
      },
      {
        "id": "1a64a6860e74cc3d35e3bb089f8b44909e8307ad",
        "date": "2023-08-30T07:24:59Z",
        "message": "Adjust params for ic-boundary performance system-test"
      },
      {
        "id": "ec3500a5bb005a8845a66a316d8e0bcea62a74a8",
        "date": "2023-08-29T09:26:52Z",
        "message": "add missing Grafana deps to boundary-node system-test target"
      },
      {
        "id": "6054e05bba83897b8e6d98c7d1dd1df5767b742a",
        "date": "2023-08-28T15:17:49Z",
        "message": "Merge branch 'BOUN-844-add-bn-to-grafana-in-system-tests' into 'master'\n\n(BOUN-844) add boundary-node targets to Prometheus scraper in system-tests\n\n**How to test**: \n```\nict t //rs/tests/boundary_nodes:api_boundary_node_integration_test --keepalive -- --test_tmpdir=./tmp\n```\nFind `ipv6` of the `PrometheusVm` in the logs:\n```\n{\n   \"event_name\":\"farm_vm_created_event\",\n   \"body\":{\n      \"vm_name\":\"prometheus\",\n      \"ipv6\":\"PROMETHEUS_IPV6\",\n   }\n}\n```\nCheck that boundary-node targets, namely `boundary_nodes`, `boundary_nodes_exporter` and `boundary_nodes_nginx` are healthy by navigating to Prometheus server url:\n```\nhttp://[PROMETHEUS_IPV6]:9090/targets\n```\nCheck that all metrics are available by navigating to the links:\n```\nhttp://[BN_IPV6]:9324/metrics\nhttp://[BN_IPV6]:9100/metrics\nhttp://[BN_IPV6]:9316/metrics\n```\nCheck that newly created Grafana dashboard Boundary Node shows the curves (below are the curves for the WIP performance test):\n![image](/uploads/792db467522a2ee8e542ac91c1702221/image.png) \n\nSee merge request dfinity-lab/public/ic!14379"
      },
      {
        "id": "1224064ca8e822beb36e574286153b3fd69eed6d",
        "date": "2023-08-28T15:17:49Z",
        "message": "(BOUN-844) add boundary-node targets to Prometheus scraper in system-tests"
      },
      {
        "id": "8939b1f8e42e92d717f297e9d449f9a6b31f44f9",
        "date": "2023-08-24T12:10:09Z",
        "message": "Merge branch 'BOUN-848-remove-panic-handler' into 'master'\n\nRefactor(BOUN-848) Remove panic handler\n\n \n\nSee merge request dfinity-lab/public/ic!14284"
      },
      {
        "id": "587e994beeb55c095e14fb2e3971abe8b7ce8b19",
        "date": "2023-08-24T12:10:09Z",
        "message": "Refactor(BOUN-848) Remove panic handler"
      },
      {
        "id": "5392ef842bc58b6b95ddc8d27a08d858721da7df",
        "date": "2023-08-24T10:39:13Z",
        "message": "Merge branch 'BOUN-848-refactor-setup-functions' into 'master'\n\nRefactor(BOUN-848) common setup() for boundary nodes\n\n \n\nSee merge request dfinity-lab/public/ic!14250"
      },
      {
        "id": "87cbc0dc40393dd43c16985606df0d030d869f00",
        "date": "2023-08-24T10:39:11Z",
        "message": "Refactor(BOUN-848) common setup() for boundary nodes"
      },
      {
        "id": "59c431d9b8b58297bd6e7d49b7d2c674866abd65",
        "date": "2023-08-23T13:19:32Z",
        "message": "Merge branch 'BOUN-853-fix-api-v2-status' into 'master'\n\n(BOUN-853) fix api/v2/status for ic-boundary\n\n**Changes**:\n- All calls (status/query/update/read_state) are now `proxy_pass`ed to `ic-boundary` for `api-boundary-guestos`\n- api/v2/status has its own middleware, different from the one for query/update/read_state\n- a provisional fix of the nns public key conversion into bytes, append a prefix as is done for [agent-rs](https://github.com/dfinity/agent-rs/blob/4afb978efb2e3fb0bcaa2178571b81bed73ca0ae/ic-agent/src/agent/response_authentication.rs#L10) \n\nSee merge request dfinity-lab/public/ic!14328"
      },
      {
        "id": "47227846058a910a422d3d3bc666a109fb81d3d4",
        "date": "2023-08-23T13:19:32Z",
        "message": "(BOUN-853) fix api/v2/status for ic-boundary"
      },
      {
        "id": "945a40d80c113b51df8065d1e25d2e29cbb14690",
        "date": "2023-08-22T17:33:04Z",
        "message": "Merge branch 'fix-testnet-create-bazel-args-override' into 'master'\n\nBazel args provided by user should override default ones\n\n**How to test**:\n```sh\nict testnet create small --verbose --lifetime-mins=10 -- --test_timeout=10\n\n...\nRaw Bazel command to be invoked: \n$ bazel test //rs/tests/testing_verification/testnets:small --config=systest --cache_test_results=no --test_timeout=1200 --test_arg=--no-delete-farm-group --test_timeout=10\n\n//rs/tests/testing_verification/testnets:small                          TIMEOUT in 10.0s\n```\nNote `test_timeout` is provided twice and the one by the user overrides the default. \n\nSee merge request dfinity-lab/public/ic!14326"
      },
      {
        "id": "050cfa75f6d9cf2b9fc8dbeeab82e906f82c4628",
        "date": "2023-08-22T17:33:03Z",
        "message": "Bazel args provided by user should override default ones"
      },
      {
        "id": "4709b8bf66b582be987b57febb8f33c30def02a1",
        "date": "2023-08-18T11:42:27Z",
        "message": "(BOUN-841) add performance query_calls_test()"
      },
      {
        "id": "5a3cdb63bf8f5d165903f408c6d1827dce173e9a",
        "date": "2023-08-16T16:41:48Z",
        "message": "Merge branch 'BOUN-848-refactor-bn-system-tests' into 'master'\n\nRefactor(BOUN-848) organize code for boundary_nodes system-tests\n\nScope:\n- Mostly moving/grouping boundary_nodes files\n- Leave a single folder for `boundary_nodes` code `/ic/rs/tests/src/boundary_nodes/`\n- Move all helper functions to a separate module `/ic/rs/tests/src/boundary_nodes/helpers.rs`\n\nTODOs in the follow up MRs:\n- Unite (or get rid of) two different `PanicHandler`s for API BN and BN\n- Try to group code of `fn setup()` of API and BN\n- Completely remove `fn exec_ssh_command`, use `bn,block_on_bash_script(..)` \n\nSee merge request dfinity-lab/public/ic!14189"
      },
      {
        "id": "6e5b49c56817e3ed8e03e08c4e725df35cdb2b45",
        "date": "2023-08-16T16:41:46Z",
        "message": "Refactor(BOUN-848) organize code for boundary_nodes system-tests"
      },
      {
        "id": "4203e00168d1c281af6361268dfb8c8bd6aecce9",
        "date": "2023-08-15T11:10:12Z",
        "message": "Refactor(BOUN-848) move code from api_boundary_nodes  to boundary_nodes"
      },
      {
        "id": "4ea1e80a8ac6ca0b7a7658f19a7481f8e4028ba8",
        "date": "2023-08-15T08:39:01Z",
        "message": "Merge branch 'BOUN-841-introduce-performance-test' into 'master'\n\n(BOUN-841) Introduce boundary-node performance system-test\n\nThis MR introduces the first `manual` performance test of the `boundary-node`.\n\n**How to run**:\n```shell\nict test //rs/tests/boundary_nodes:boundary_node_performance_test_colocate --keepalive\n```\nThe test will execute `update` write calls on the counter canister via `boundary-node` agent. \n- requests per second: 10-400 (with step 50)\n- duration of each step is 60 secs\n- no assertions so far, but they can be easily introduced\n- http metrics of the replica reveal that `rps=300 req/sec` is the [max throughput allowed by the nginx](https://sourcegraph.com/github.com/dfinity/ic/-/blob/ic-os/boundary-guestos/rootfs/etc/nginx/conf.d/000-nginx-global.conf?L155).\n\n![image](/uploads/17897004bd789d1cc17b88b90c5ad423/image.png) \n\nSee merge request dfinity-lab/public/ic!14143"
      },
      {
        "id": "bbbd33bc8f862333058176980069c922fbaf2656",
        "date": "2023-08-15T08:39:01Z",
        "message": "(BOUN-841) Introduce boundary-node performance system-test"
      },
      {
        "id": "96d1ec75711a7796636cb05ffe4aa8a828720d97",
        "date": "2023-08-11T14:56:17Z",
        "message": "Merge branch 'BOUN-840-system-test-ic-boundary-routing' into 'master'\n\n(BOUN-840) New system-test for canister requests routing  by API boundary node\n\nThis MR adds a `system-test`, which ensures that IC system API calls (`query`, `update`, `read_state`) are forwarded to the correct canisters by the boundary node.\n\n**Note**: so far all subnets are single-node ones. One can consider increasing the number of nodes (to 2-3) and in addition verify that boundary API node routes requests to IC nodes in a round robin fashion. \n\nSee merge request dfinity-lab/public/ic!14046"
      },
      {
        "id": "d4e48498fa50c9c6403f8406d93aead590c32209",
        "date": "2023-08-11T14:56:17Z",
        "message": "(BOUN-840) New system-test for canister requests routing  by API boundary node"
      },
      {
        "id": "8c99dc237e18860458df61662df6a82bff32dbae",
        "date": "2023-08-11T13:42:56Z",
        "message": "Adjust CODEOWNERS for boundary-node team"
      },
      {
        "id": "a3d0d147107cc60eecd3763da1196f8b4e0a6719",
        "date": "2023-08-08T14:05:21Z",
        "message": "Merge branch 'BOUN-833-bn-image-with-reverse-proxy' into 'master'\n\n(BOUN-833) add ic-boundary proxy to boundary-api-guestos, processing /api/v2/canister/canister_id/query\n\nIn this MR we start introducing `ic-boundary` (reverse proxy) functionality to the `boundary-node`.\nWe do this porting process incrementally:\n- For the time being, only `boundary-api-guestos` image includes `ic-boundary` binary and starts it as a `systemd` service. Prod/dev `boundary-guestos` image will implement the same functionality, but on a [feature branch](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13975) for the moment.\n- `nginx` proxies to `ic-boudary` only `/api/v2/canister/canister_id/query` requests, as only those work at the moment in `ic-boundary`. For example, `/api/v2/status` is not yet compliant with the [specification](https://internetcomputer.org/docs/current/references/ic-interface-spec#api-status), as e.g. `root_key` [is not](https://sourcegraph.com/github.com/dfinity/ic/-/blob/rs/boundary_node/ic_boundary/src/routes.rs?L407) returned.\n- For testing purposes, I also created a `testnet` - `small_api_boundary`\n\nI ran the following test manually:\n```\nict t api_boundary_node_integration_test --keepalive\n```\nand the journal logs confirm that `ic-boundary` processes the requests, which are routed by the `nginx`:\n```\nroot@api-boundary-node-1:~# journalctl -u ic-boundary | grep request_id\nAug 04 09:50:57 api-boundary-node-1 ic-boundary[695]: {\"timestamp\":\"2023-08-04T09:50:57.657691Z\",\"level\":\"INFO\",\"request_id\":\"843a17cc-effc-4325-8289-f0a77f9da025\",\"request_type\":\"query\",\"error_cause\":\"no_error\",\"status\":200,\"subnet_id\":\"mivdn-mqkfh-kt5rd-bwbx6-zex7n-bu4an-pvusf-55adt-pvkw7-qrhjl-yqe\",\"node_id\":\"xz25v-x2l5d-ifrmd-x5cfk-ntxvq-vilca-q3m6r-r4sgs-odqm3-2xowr-zae\",\"canister_id\":\"q4eej-kyaaa-aaaaa-aaaha-cai\",\"canister_id_cbor\":\"q4eej-kyaaa-aaaaa-aaaha-cai\",\"sender\":\"2vxsx-fae\",\"method_name\":\"read\",\"duration\":0.001601296,\"request_size\":110,\"response_size\":35,\"target\":\"ic_boundary::routes\"}\nAug 04 09:50:58 api-boundary-node-1 ic-boundary[695]: {\"timestamp\":\"2023-08-04T09:50:58.145896Z\",\"level\":\"INFO\",\"request_id\":\"bbd3f662-5f1f-47d0-abf3-04eca5b88b12\",\"request_type\":\"query\",\"error_cause\":\"no_error\",\"status\":200,\"subnet_id\":\"mivdn-mqkfh-kt5rd-bwbx6-zex7n-bu4an-pvusf-55adt-pvkw7-qrhjl-yqe\",\"node_id\":\"xz25v-x2l5d-ifrmd-x5cfk-ntxvq-vilca-q3m6r-r4sgs-odqm3-2xowr-zae\",\"canister_id\":\"qhbym-qaaaa-aaaaa-aaafq-cai\",\"canister_id_cbor\":\"qhbym-qaaaa-aaaaa-aaafq-cai\",\"sender\":\"b3gus-edhie-77egn-fejju-pt4xd-zz2pt-7v22l-rrts4-a3ebi-fcm4d-wae\",\"method_name\":\"read\",\"duration\":0.003139322,\"request_size\":276,\"response_size\":35,\"target\":\"ic_boundary::routes\"}\nAug 04 09:50:59 api-boundary-node-1 ic-boundary[695]: {\"timestamp\":\"2023-08-04T09:50:59.342889Z\",\"level\":\"INFO\",\"request_id\":\"6ad5eefa-c238-4e11-823b-fac1348d8c32\",\"request_type\":\"query\",\"error_cause\":\"no_error\",\"status\":200,\"subnet_id\":\"mivdn-mqkfh-kt5rd-bwbx6-zex7n-bu4an-pvusf-55adt-pvkw7-qrhjl-yqe\",\"node_id\":\"xz25v-x2l5d-ifrmd-x5cfk-ntxvq-vilca-q3m6r-r4sgs-odqm3-2xowr-zae\",\"canister_id\":\"qsgjb-riaaa-aaaaa-aaaga-cai\",\"canister_id_cbor\":\"qsgjb-riaaa-aaaaa-aaaga-cai\",\"sender\":\"2vxsx-fae\",\"method_name\":\"read\",\"duration\":0.003036149,\"request_size\":110,\"response_size\":35,\"target\":\"ic_boundary::routes\"}\n``` \n\nSee merge request dfinity-lab/public/ic!13967"
      },
      {
        "id": "5069d25ce5c00d3cf9ace24657b091f83bf19df1",
        "date": "2023-08-08T14:05:21Z",
        "message": "(BOUN-833) add ic-boundary proxy to boundary-api-guestos, processing /api/v2/canister/canister_id/query"
      },
      {
        "id": "654125b4e9e9560c55c21f0d51936f0e7be20024",
        "date": "2023-08-07T15:19:39Z",
        "message": "Merge branch 'dbloom/fix-control-plane' into 'master'\n\nfix(BOUN-838): Add `setup-nginx` to `control-plane`\n\nThe `routes-path` (among others) the `control-plane` depends on is setup by `setup-nginx`. Adding in this dependency resolves a race condition between the startup of these services. \n\nSee merge request dfinity-lab/public/ic!13989"
      },
      {
        "id": "243304bfa74034d13fd31406746bbdb37c9e2230",
        "date": "2023-08-07T09:40:25Z",
        "message": "Merge branch 'dbloom/nns_key_status' into 'master'\n\nfix(BOUN-839): Add NNS root key to status calls\n\n \n\nSee merge request dfinity-lab/public/ic!13988"
      }
    ],
    "email": "nikolay.komarevskiy@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 71,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 33,
    "fixes": 4,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "aa754376b4f0a7b1bd87f9081698aa461ad799e8",
        "date": "2023-11-23T09:58:52Z",
        "message": "(BOUN-933) Add ApiBoundaryNodeRegistry trait"
      },
      {
        "id": "2042f6837dcad3aa867b5dc57e61f6473b06a9a7",
        "date": "2023-11-22T13:29:09Z",
        "message": "set counters on canisters sequentially in test"
      },
      {
        "id": "fe8ff70f1642bb83a05b2d744dd85899ca0edf00",
        "date": "2023-11-20T09:21:25Z",
        "message": "introduce retries for canister calls in BN test"
      },
      {
        "id": "a75257652d49af06c66bdd469f70678aa20b7bd5",
        "date": "2023-11-17T05:25:21Z",
        "message": "(BOUN-959) Bump up the ic-agent version"
      },
      {
        "id": "aecdfd4fd1de6966fc5b214ce5f2556ba622e6d7",
        "date": "2023-11-14T22:59:19Z",
        "message": "feat(BOUN-833): deploy ic-boundary"
      },
      {
        "id": "1d349fba12c76c5ba6592db4f027950ba6c4ca56",
        "date": "2023-11-14T08:26:54Z",
        "message": "(BOUN-930) icx-proxy bind to ipv6 and ipv4"
      },
      {
        "id": "ddd6829ea8c6961cbf5cb4bdedba2033ac0b96f9",
        "date": "2023-11-08T11:15:46Z",
        "message": "ic-boundary server binds to ipv4 and ipv6"
      },
      {
        "id": "976769b29f5423476d633373cdff34eb95f07c35",
        "date": "2023-11-03T08:37:48Z",
        "message": "(BOUN-940) add API node discovery library to system-test"
      },
      {
        "id": "5e750ebef5b71283fab56c3e1168c1ceae6700df",
        "date": "2023-10-31T16:48:28Z",
        "message": "(BOUN-927) POC API Discovery Library"
      },
      {
        "id": "7e61e2efec51533d413ec59c0e5141b797900354",
        "date": "2023-10-26T08:06:47Z",
        "message": "(BOUN-865) add mainnet BN performance test"
      },
      {
        "id": "191a0823043fad01f99762615da6a6e5fe620cc3",
        "date": "2023-10-24T07:17:49Z",
        "message": "(BOUN-928) Add API BN decentralization test"
      },
      {
        "id": "022e5eb38772edd2893f86be230a4127a1b8f98e",
        "date": "2023-10-19T13:44:02Z",
        "message": "Fix typo in metrics"
      },
      {
        "id": "ec444c916a4e08e4998ed0336f84555a19c6f557",
        "date": "2023-10-19T07:20:04Z",
        "message": "(BOUN-916) Add GetApiBoundaryNodes subcommand"
      },
      {
        "id": "ed12b4181c760780932471f1af2f64b4d3248aad",
        "date": "2023-10-13T15:50:52Z",
        "message": "Disable flaky ic-boundary cache test"
      },
      {
        "id": "aa3174ee2f23360289476af1524b774b0733d211",
        "date": "2023-10-09T13:28:08Z",
        "message": "Boundary GuestOs add canister-routing test"
      },
      {
        "id": "a7e0879d8aa295c9d44fd3f9933ac2523de768bd",
        "date": "2023-10-09T13:19:56Z",
        "message": "(BOUN-894) add x-request-id header verification in ic-boundary"
      },
      {
        "id": "0b1277667530703765e769c94a3a5cfd15a57328",
        "date": "2023-09-12T12:37:44Z",
        "message": "fix assertion in performance test"
      },
      {
        "id": "da13416f1879471cca86e73c0395349939a088d7",
        "date": "2023-09-11T08:42:16Z",
        "message": "(BOUN-874) add client-side assertions to performance BN test"
      },
      {
        "id": "4ceb8e37f8192c7be0aa37ae17ce451ad8b57523",
        "date": "2023-09-09T05:19:56Z",
        "message": "(BOUN-875) update boundary-node Grafana dashboard"
      },
      {
        "id": "6aded28aab015f56bc3baabd6dc26d11ac794130",
        "date": "2023-09-08T08:09:58Z",
        "message": "Adapt Grafana dashboard for the Boundary-Node"
      },
      {
        "id": "05a475dbae492ef332864ce23b839e106981ce3a",
        "date": "2023-09-07T13:11:48Z",
        "message": "(BOUN-860) Fix vector-setup and vector in the boundary-guestos for test env"
      },
      {
        "id": "71ca884d3a24bde972079f4312e1afde57da26f2",
        "date": "2023-09-06T15:57:54Z",
        "message": "Increase the max number of open files for all systemd services"
      },
      {
        "id": "53fcbc9e72a8f3749ad7447ca056fb19c133f97a",
        "date": "2023-09-05T17:59:56Z",
        "message": "(BOUN-863) increase the number of open files limit"
      },
      {
        "id": "c5a2a54484477a9d86762d3f7fd576eb56d627b5",
        "date": "2023-09-04T13:27:48Z",
        "message": "Refactor Prometheus targets sync in system-tests"
      },
      {
        "id": "1a64a6860e74cc3d35e3bb089f8b44909e8307ad",
        "date": "2023-08-30T07:24:59Z",
        "message": "Adjust params for ic-boundary performance system-test"
      },
      {
        "id": "ec3500a5bb005a8845a66a316d8e0bcea62a74a8",
        "date": "2023-08-29T09:26:52Z",
        "message": "add missing Grafana deps to boundary-node system-test target"
      },
      {
        "id": "1224064ca8e822beb36e574286153b3fd69eed6d",
        "date": "2023-08-28T15:17:49Z",
        "message": "(BOUN-844) add boundary-node targets to Prometheus scraper in system-tests"
      },
      {
        "id": "587e994beeb55c095e14fb2e3971abe8b7ce8b19",
        "date": "2023-08-24T12:10:09Z",
        "message": "Refactor(BOUN-848) Remove panic handler"
      },
      {
        "id": "87cbc0dc40393dd43c16985606df0d030d869f00",
        "date": "2023-08-24T10:39:11Z",
        "message": "Refactor(BOUN-848) common setup() for boundary nodes"
      },
      {
        "id": "47227846058a910a422d3d3bc666a109fb81d3d4",
        "date": "2023-08-23T13:19:32Z",
        "message": "(BOUN-853) fix api/v2/status for ic-boundary"
      },
      {
        "id": "050cfa75f6d9cf2b9fc8dbeeab82e906f82c4628",
        "date": "2023-08-22T17:33:03Z",
        "message": "Bazel args provided by user should override default ones"
      },
      {
        "id": "4709b8bf66b582be987b57febb8f33c30def02a1",
        "date": "2023-08-18T11:42:27Z",
        "message": "(BOUN-841) add performance query_calls_test()"
      },
      {
        "id": "6e5b49c56817e3ed8e03e08c4e725df35cdb2b45",
        "date": "2023-08-16T16:41:46Z",
        "message": "Refactor(BOUN-848) organize code for boundary_nodes system-tests"
      },
      {
        "id": "4203e00168d1c281af6361268dfb8c8bd6aecce9",
        "date": "2023-08-15T11:10:12Z",
        "message": "Refactor(BOUN-848) move code from api_boundary_nodes  to boundary_nodes"
      },
      {
        "id": "bbbd33bc8f862333058176980069c922fbaf2656",
        "date": "2023-08-15T08:39:01Z",
        "message": "(BOUN-841) Introduce boundary-node performance system-test"
      },
      {
        "id": "d4e48498fa50c9c6403f8406d93aead590c32209",
        "date": "2023-08-11T14:56:17Z",
        "message": "(BOUN-840) New system-test for canister requests routing  by API boundary node"
      },
      {
        "id": "8c99dc237e18860458df61662df6a82bff32dbae",
        "date": "2023-08-11T13:42:56Z",
        "message": "Adjust CODEOWNERS for boundary-node team"
      },
      {
        "id": "5069d25ce5c00d3cf9ace24657b091f83bf19df1",
        "date": "2023-08-08T14:05:21Z",
        "message": "(BOUN-833) add ic-boundary proxy to boundary-api-guestos, processing /api/v2/canister/canister_id/query"
      }
    ],
    "line_additions": 4826,
    "line_deletions": 3043,
    "lines_effected_total": 7869,
    "rel_comm_add": 29,
    "rel_comm_del": 17,
    "rel_comm_total": 30
  },
  {
    "login": "adambratschikaye",
    "id": 90606735,
    "totalContributions": 428,
    "github": "https://github.com/adambratschikaye",
    "commits": [
      {
        "id": "6fc1aac5482dc0c77b631a43bca7e31d287d5645",
        "date": "2023-11-22T08:08:03Z",
        "message": "Merge branch 'abk/run-830-allow-canister-to-conrol-its-chunk-store' into 'master'\n\nRUN-830: Allow canister to control its chunk store\n\nThere may be situations (e.g. when a canister is SNS/NNS controlled)\nwhere we want to allow the canister itself to control its chunk store.\nThis will allow a canister to upload chunks to the store and then the\ncontroller will only need to do the installation. \n\nSee merge request dfinity-lab/public/ic!16107"
      },
      {
        "id": "e6e3dea8ec20879fdc20e04463755f3539dbfe3d",
        "date": "2023-11-22T08:08:03Z",
        "message": "RUN-830: Allow canister to control its chunk store"
      },
      {
        "id": "3b8abcada8901ea525cf5ee56127766c9c7017b0",
        "date": "2023-11-21T07:48:46Z",
        "message": "Merge branch 'abk/run-829-add-system-test' into 'master'\n\nRUN-829: System tests for Wasm chunk store\n\nAdd two system tests for the happy path of installing a Wasm using the\nchunk store. Also add one test for the error message when installing on\na target canister that is not on the same subnet of the store canister. \n\nSee merge request dfinity-lab/public/ic!16138"
      },
      {
        "id": "486781deda1b510d332ceb27c237a964c5dce605",
        "date": "2023-11-21T07:48:46Z",
        "message": "RUN-829: System tests for Wasm chunk store"
      },
      {
        "id": "e233f292d77a5aad5f922a6d4c6002402c79fe4b",
        "date": "2023-11-16T10:28:46Z",
        "message": "Merge branch 'abk/run-832-upgrade-wasm-parser-encoder' into 'master'\n\nRUN-832: Upgrade wasmparser and wasm-encoder\n\nUpgrade the `wasmparser` and `wasm-encoder` crates to be in sync with the versions used by `wasmtime`. \n\nSee merge request dfinity-lab/public/ic!16103"
      },
      {
        "id": "8fad4cce26e2185157978ecea133178ae3ab9604",
        "date": "2023-11-16T10:28:43Z",
        "message": "RUN-832: Upgrade wasmparser and wasm-encoder"
      },
      {
        "id": "96b1a8470fb71daa8796ad7ddfbab093f8fea027",
        "date": "2023-11-15T16:13:33Z",
        "message": "Merge branch 'abk/run-822-charge-for-upload-chunk' into 'master'\n\nRUN-822: Charge for `upload_chunk`\n\nCharge canisters 200M instructions for executing an `upload_chunk`\nmessage. Also deduct these instructions from the round limit. \n\nSee merge request dfinity-lab/public/ic!15941"
      },
      {
        "id": "6730ffbe594ef2ebeec74ef3e9ae6b065446104c",
        "date": "2023-11-15T16:13:33Z",
        "message": "RUN-822: Charge for `upload_chunk`"
      },
      {
        "id": "41319eab85e65e3eb8174f37518bf81530a58831",
        "date": "2023-11-07T16:23:17Z",
        "message": "Merge branch 'abk/separate-wasm-transform' into 'master'\n\nRUN-835: Separate wasm transform\n\nMove the `wasm_transform` module from `embedders` into its own crate so that it can be used with fuzzing, or other places. \n\nSee merge request dfinity-lab/public/ic!15855"
      },
      {
        "id": "062f05d8e5a731a8b0c44bba9c3eafba3c6726b9",
        "date": "2023-11-07T16:23:15Z",
        "message": "RUN-835: Separate wasm transform"
      },
      {
        "id": "ffd512566168b471ff03c3911f55478f1fd3911d",
        "date": "2023-11-02T07:54:47Z",
        "message": "Merge branch 'abk/run-818-account-for-chunk-store-in-heap-deltas' into 'master'\n\nRUN-818: Account for chunk store in heap deltas\n\nInclude writes to the chunk store in each canister's heap delta rate\nlimiting and the subnet's total delta. Since there is now a third\n`PageMap` in each `CanisterState` (in addition to the heap memory and\nstable memory), we need to count the dirty pages generated in this \n`PageMap` against the limits which prevent too much new data to be\nwritten between checkpoints.\n\nNote that if a canister is rate limited, writes to the chunk store will\nfail. This behavior is different than for regular canister messages\nwhich just sit in the queue and to be processed later. \n\nSee merge request dfinity-lab/public/ic!15742"
      },
      {
        "id": "e5b4e196a0fa5e1e080dd2c4e276d5a732c592e1",
        "date": "2023-11-02T07:54:47Z",
        "message": "RUN-818: Account for chunk store in heap deltas"
      },
      {
        "id": "f5d4d47b2ad5b5a7bcfe5e04a638f123bc72a7d4",
        "date": "2023-11-01T13:44:30Z",
        "message": "Merge branch 'abk/run-737-implement-stored-chunks' into 'master'\n\nRUN-737: Implement stored_chunks\n\nImplement the stored chunks API to list which chunks are in a given\ncanister's store. \n\nSee merge request dfinity-lab/public/ic!15762"
      },
      {
        "id": "a3c3c3dfa5f8155a7d9cfe0f8c699b76b9c4b97c",
        "date": "2023-11-01T13:44:30Z",
        "message": "RUN-737: Implement stored_chunks"
      },
      {
        "id": "1011aa44d52c42b9df90be0872abdd458189e682",
        "date": "2023-11-01T13:33:20Z",
        "message": "Merge branch 'abk/run-802-reserve-cycles-in-upload-chunk' into 'master'\n\nRUN-802: Reserve cycles in `upload_chunk`\n\nMake sure that cycles reservation is performed for the new memory used\nwhen uploading to the chunk store. \n\nSee merge request dfinity-lab/public/ic!15642"
      },
      {
        "id": "10e118353203a64f727ba2325226a99ec8a3c135",
        "date": "2023-11-01T13:33:18Z",
        "message": "RUN-802: Reserve cycles in `upload_chunk`"
      },
      {
        "id": "49c1acbd01ba4a98a7f4965784389772e14942c4",
        "date": "2023-11-01T11:06:55Z",
        "message": "Merge branch 'abk/run-823-impose-max-chunk-store-size' into 'master'\n\nRUN-823: Limit size of Wasm chunk store\n\nImpose a limit on the total size of the Wasm chunk store for each\ncanister. This can be increased later if it's needed. \n\nSee merge request dfinity-lab/public/ic!15752"
      },
      {
        "id": "e3c6c8a9ec206650589418cc2e6bd9b26218ae44",
        "date": "2023-11-01T11:06:52Z",
        "message": "RUN-823: Limit size of Wasm chunk store"
      },
      {
        "id": "770a1faa7ff793bf2a8808ea1996fd4a4f1ebdb2",
        "date": "2023-11-01T09:18:17Z",
        "message": "Merge branch 'abk/run-738-clear-chunk-store' into 'master'\n\nRUN-738: Implement clear_chunk_store\n\nAdd the canister manager method to clear the Wasm chunk store for a\nspecific canister. The only conditions on this method are that it has to\nbe called by a controller of the canister. \n\nSee merge request dfinity-lab/public/ic!15757"
      },
      {
        "id": "0fbb61a5b127f940ac4740e762042fb73cf85633",
        "date": "2023-11-01T09:18:17Z",
        "message": "RUN-738: Implement clear_chunk_store"
      },
      {
        "id": "9401b085bf15c959689a2eb84dd25cc72ef6948b",
        "date": "2023-10-30T09:39:30Z",
        "message": "Merge branch 'abk/run-801-check-freezing-threshold-in-upload-chunk' into 'master'\n\nRUN-801: Check freezing threshold on upload_chunk\n\nWhen uploading to the chunk store, we should check that a canister\ndoesn't go over the freezing threshold. Otherwise the canister could be\nuninstalled with much less warning than expected. \n\nSee merge request dfinity-lab/public/ic!15512"
      },
      {
        "id": "0dc5acaa761a3b19c471b2ac432473c45855ffe3",
        "date": "2023-10-30T09:39:29Z",
        "message": "RUN-801: Check freezing threshold on upload_chunk"
      },
      {
        "id": "8b7676e29767a3bb385d46ca2261c3930ab37e87",
        "date": "2023-10-30T06:43:31Z",
        "message": "Merge branch 'abk/run-825-account-for-instrumentation-in-complexity' into 'master'\n\nRUN-825: Account for Call generated by Grow instructions\n\nWhen validating a Wasm module, we should take into account the fact that\n`TableGrow` and `MemoryGrow` instructions end up generating a `Call`\nwhen instrumented. So they should have higher weights. \n\nSee merge request dfinity-lab/public/ic!15675"
      },
      {
        "id": "cbad521d90f8fc81aba4a7a7783e24d650843b92",
        "date": "2023-10-30T06:43:30Z",
        "message": "RUN-825: Account for Call generated by Grow instructions"
      },
      {
        "id": "f3216c1d7d83a366b4af0cf24708f84819880246",
        "date": "2023-10-26T16:28:54Z",
        "message": "Merge branch 'abk/run-810-make-canisterid-new-infallable' into 'master'\n\nRUN-810: Switch `CanisterId::new` to infallable `CanisterId::unchecked_from_principal`\n\n`CanisterId::new` returns a `Result` type, but the value is always `Ok`\nso it would be better to not return a `Result`. \n\nSee merge request dfinity-lab/public/ic!15456"
      },
      {
        "id": "33b4bbbfd8e315de5b2e86fb796793a6127348bc",
        "date": "2023-10-26T16:28:50Z",
        "message": "RUN-810: Switch `CanisterId::new` to infallable `CanisterId::unchecked_from_principal`"
      },
      {
        "id": "a5e741d51d4acff9ef7eaaf49190af9e6032683f",
        "date": "2023-10-25T10:01:20Z",
        "message": "Merge branch 'abk/run-735-implement-chunked-install' into 'master'\n\nRUN-735: Implement InstallChunkedCode\n\nAdd new management canister message to support installing a wasm module\nfrom chunks stored in the WasmChunkStore of a canister on the same\nsubnet. Corresponding changes here: https://github.com/dfinity/interface-spec/pull/219 \n\nSee merge request dfinity-lab/public/ic!15150"
      },
      {
        "id": "2ae03b8178d2ada5da5d067bcedb92d1b697b75c",
        "date": "2023-10-25T10:01:19Z",
        "message": "RUN-735: Implement InstallChunkedCode"
      },
      {
        "id": "1f37207150dfb2d4d17eb5c3828735e267d4d4dc",
        "date": "2023-10-17T16:45:50Z",
        "message": "Merge branch 'abk/run-809-increase-table.get-complexity' into 'master'\n\nRUN-809: Increase table.get and ref.is_null complexity\n\n \n\nSee merge request dfinity-lab/public/ic!15434"
      },
      {
        "id": "1c2c8be780221f44b6635148e44603b37ab84a02",
        "date": "2023-10-17T15:25:27Z",
        "message": "RUN-809: Increase table.get and ref.is_null complexity"
      },
      {
        "id": "fb596cfad8e69e87e1d9c35674f51dc6c7f9a4e0",
        "date": "2023-10-05T14:46:17Z",
        "message": "Merge branch 'abk/run-800-implement-new-wasm-code-complexity-limit' into 'master'\n\nRUN-800: Implement new wasm complexity limit\n\n \n\nSee merge request dfinity-lab/public/ic!15226"
      },
      {
        "id": "0a62b239e3d8187454245599cfd1be83dbfe0684",
        "date": "2023-10-05T14:46:17Z",
        "message": "RUN-800: Implement new wasm complexity limit"
      },
      {
        "id": "784d226a6d0b5dc5cfd4f96d98161f5423e03802",
        "date": "2023-10-05T13:47:54Z",
        "message": "Merge branch 'abk/run-734-implement-upload-chunk' into 'master'\n\nRUN-734: Implement upload chunk\n\nAdd support for uploading chunks to a canister's chunk store. This\nincludes charging for the space and checking subnet memory limits. \n\nSee merge request dfinity-lab/public/ic!15130"
      },
      {
        "id": "8c473630c4079e9aecd9207003305fd0415705f6",
        "date": "2023-10-05T13:47:54Z",
        "message": "RUN-734: Implement upload chunk"
      },
      {
        "id": "387e96d7111e2639763a02b004e6798fa858215b",
        "date": "2023-10-05T12:12:33Z",
        "message": "Merge branch 'abk/run-787-hold-unixstream' into 'master'\n\nRUN-787: Hold UnixStream for sandbox IPC communication\n\nThere are places where we use a raw file descriptor for the socket doing\nsandbox IPC. A test was found to trigger an error where this file\ndescriptor was invalid, so it would be safer to always hold an actual\n`UnixStream` to prevent the fd from being closed on drop. Conversion to\na raw fd can then just be performed at the call site to a libc function. \n\nSee merge request dfinity-lab/public/ic!15033"
      },
      {
        "id": "2494bbd736a1c67f15ce4773a466e6cf0e25ba13",
        "date": "2023-10-05T12:12:32Z",
        "message": "RUN-787: Hold UnixStream for sandbox IPC communication"
      },
      {
        "id": "f71035db3cde189eea1ee408f2e143aff1c23340",
        "date": "2023-09-14T13:38:58Z",
        "message": "Merge branch 'abk/run-733-add-wasm-chunk-store' into 'master'\n\nRUN-733: Add Wasm chunk store to replicated state\n\nAdds the Wasm chunk store to the `SystemState` in `ReplicatedState`. This will be used to support installation of large Wasms. Follow up MRs will implement the IC00 methods to add chunks, clear the store and install from a Wasm in the store. These will also include charging for the storage used, counting that storage against the subnet storage limits, and counting the dirty pages against the canister and subnet limits.\n\nThis should not be merged until a release has been cut containing https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14668 because that MR will perform cleanup of the newly created pagemap files in case we need to rollback. \n\nSee merge request dfinity-lab/public/ic!14586"
      },
      {
        "id": "3f5ff4d79835c81bb777efa10d97111f8ebc3718",
        "date": "2023-09-14T13:38:57Z",
        "message": "RUN-733: Add Wasm chunk store to replicated state"
      },
      {
        "id": "89916d9a29ab672f7ae54c58b742308b85671a90",
        "date": "2023-09-11T08:32:25Z",
        "message": "Merge branch 'abk/run-758-delete-new-pagemap-file' into 'master'\n\nRUN-758: Remove Wasm chunk store file\n\nIn case we roll out Wasm chunk store changes and then roll back, this\nlogic will delete any left over pagemap files. \n\nSee merge request dfinity-lab/public/ic!14668"
      },
      {
        "id": "76e3dd284e51baf982e81b680fb659570c293ba4",
        "date": "2023-09-11T08:32:25Z",
        "message": "RUN-758: Remove Wasm chunk store file"
      },
      {
        "id": "ebfc90f1f4cb62492d2a4d8ba033cf29d052591e",
        "date": "2023-09-06T13:41:20Z",
        "message": "Merge branch 'abk/run-732-chunk-upload-apis' into 'master'\n\nRUN-732: Introduce chunked Wasm upload APIs\n\nAdd enums for the new IC00 methods that will be used for chunked\nuploading of Wasm modules. Actually implementation of the new APIs\nwill come in follow-up MRs. \n\nSee merge request dfinity-lab/public/ic!14575"
      },
      {
        "id": "b1d0bf908220c60f184b12ca691fc7dd7e518fd5",
        "date": "2023-09-06T13:41:20Z",
        "message": "RUN-732: Introduce chunked Wasm upload APIs"
      },
      {
        "id": "80b32daa918c869e7b59f1b2092a9a3351ce5e43",
        "date": "2023-08-24T15:17:48Z",
        "message": "Merge branch 'abk/upgrade-wasm-encoder-wasmparser' into 'master'\n\nRUN-712: Upgrade `wasmparser` and `wasm-encoder`\n\nThere were some breaking changes in these modules to handle the Wasm GC\nproposal. These changes mean that more complex types can now appear in\nthe `Types` section of a module (including types which don't correspond\nto function signatures). So now we occasionally need to return errors if\na function is given a type which isn't a valid function type.  Wasmtime\nvalidation will also assert that all functions are given valid types. \n\nSee merge request dfinity-lab/public/ic!13746"
      },
      {
        "id": "e0dee3a89ef77ebaa9dae58850f2fc1d477b89fc",
        "date": "2023-08-24T15:17:48Z",
        "message": "RUN-712: Upgrade `wasmparser` and `wasm-encoder`"
      },
      {
        "id": "9e220fc7a3f6657503d79708f9a3fa19bb8133bd",
        "date": "2023-08-22T16:00:52Z",
        "message": "Merge branch 'abk/run-689-include-more-instructions-in-complexity-limit' into 'master'\n\nRUN-689: Expand complexity limit\n\nAdd more instructions to a potentially new complexity limit. This change only modifies the metrics recording what the new complexity value will be for newly compiled modules. The actual validation is unchanged. \n\nSee merge request dfinity-lab/public/ic!14185"
      },
      {
        "id": "7e055e4f2dfe34b296cc01ad7393c4fcea19279a",
        "date": "2023-08-22T16:00:51Z",
        "message": "RUN-689: Expand complexity limit"
      },
      {
        "id": "2a45b7ec5f5d538667fa5e92996b515965f572cc",
        "date": "2023-08-15T13:51:28Z",
        "message": "Revert \"Devcontainer SSH forwarding\""
      },
      {
        "id": "0358c627d9d264b116a6ad0606623a1ebd1ef514",
        "date": "2023-08-10T07:43:57Z",
        "message": "Merge branch 'abk/run-716-disable-wasm-features' into 'master'\n\nRUN-716: Disable unused Wasm features\n\nExplicitly disable unused Wasm features which aren't used by canisters.\nThese features are already disable by default in Wasmtime, but\nexplicitly disabling them protects us for when they are eventually\nturned on by default in Wasmtime. \n\nSee merge request dfinity-lab/public/ic!14050"
      },
      {
        "id": "425bc5f01c72b4ff78be4f6061b985de121fe42b",
        "date": "2023-08-10T07:43:57Z",
        "message": "RUN-716: Disable unused Wasm features"
      },
      {
        "id": "24d1d36d89fdffb93cd1a7861f8f0cf9c8e85137",
        "date": "2023-08-07T15:43:36Z",
        "message": "Merge branch 'abk/run-722-change-rpc-prefix' into 'master'\n\nRUN-722: Change sandbox RPC prefix\n\n \n\nSee merge request dfinity-lab/public/ic!13996"
      },
      {
        "id": "4d8a9854178975e5064aa02ca5e93ea462d8fd68",
        "date": "2023-08-07T15:43:36Z",
        "message": "RUN-722: Change sandbox RPC prefix"
      }
    ],
    "email": "adam.bratschikaye@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 51,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 25,
    "fixes": 1,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "e6e3dea8ec20879fdc20e04463755f3539dbfe3d",
        "date": "2023-11-22T08:08:03Z",
        "message": "RUN-830: Allow canister to control its chunk store"
      },
      {
        "id": "486781deda1b510d332ceb27c237a964c5dce605",
        "date": "2023-11-21T07:48:46Z",
        "message": "RUN-829: System tests for Wasm chunk store"
      },
      {
        "id": "8fad4cce26e2185157978ecea133178ae3ab9604",
        "date": "2023-11-16T10:28:43Z",
        "message": "RUN-832: Upgrade wasmparser and wasm-encoder"
      },
      {
        "id": "6730ffbe594ef2ebeec74ef3e9ae6b065446104c",
        "date": "2023-11-15T16:13:33Z",
        "message": "RUN-822: Charge for `upload_chunk`"
      },
      {
        "id": "062f05d8e5a731a8b0c44bba9c3eafba3c6726b9",
        "date": "2023-11-07T16:23:15Z",
        "message": "RUN-835: Separate wasm transform"
      },
      {
        "id": "e5b4e196a0fa5e1e080dd2c4e276d5a732c592e1",
        "date": "2023-11-02T07:54:47Z",
        "message": "RUN-818: Account for chunk store in heap deltas"
      },
      {
        "id": "a3c3c3dfa5f8155a7d9cfe0f8c699b76b9c4b97c",
        "date": "2023-11-01T13:44:30Z",
        "message": "RUN-737: Implement stored_chunks"
      },
      {
        "id": "10e118353203a64f727ba2325226a99ec8a3c135",
        "date": "2023-11-01T13:33:18Z",
        "message": "RUN-802: Reserve cycles in `upload_chunk`"
      },
      {
        "id": "e3c6c8a9ec206650589418cc2e6bd9b26218ae44",
        "date": "2023-11-01T11:06:52Z",
        "message": "RUN-823: Limit size of Wasm chunk store"
      },
      {
        "id": "0fbb61a5b127f940ac4740e762042fb73cf85633",
        "date": "2023-11-01T09:18:17Z",
        "message": "RUN-738: Implement clear_chunk_store"
      },
      {
        "id": "0dc5acaa761a3b19c471b2ac432473c45855ffe3",
        "date": "2023-10-30T09:39:29Z",
        "message": "RUN-801: Check freezing threshold on upload_chunk"
      },
      {
        "id": "cbad521d90f8fc81aba4a7a7783e24d650843b92",
        "date": "2023-10-30T06:43:30Z",
        "message": "RUN-825: Account for Call generated by Grow instructions"
      },
      {
        "id": "33b4bbbfd8e315de5b2e86fb796793a6127348bc",
        "date": "2023-10-26T16:28:50Z",
        "message": "RUN-810: Switch `CanisterId::new` to infallable `CanisterId::unchecked_from_principal`"
      },
      {
        "id": "2ae03b8178d2ada5da5d067bcedb92d1b697b75c",
        "date": "2023-10-25T10:01:19Z",
        "message": "RUN-735: Implement InstallChunkedCode"
      },
      {
        "id": "1c2c8be780221f44b6635148e44603b37ab84a02",
        "date": "2023-10-17T15:25:27Z",
        "message": "RUN-809: Increase table.get and ref.is_null complexity"
      },
      {
        "id": "0a62b239e3d8187454245599cfd1be83dbfe0684",
        "date": "2023-10-05T14:46:17Z",
        "message": "RUN-800: Implement new wasm complexity limit"
      },
      {
        "id": "8c473630c4079e9aecd9207003305fd0415705f6",
        "date": "2023-10-05T13:47:54Z",
        "message": "RUN-734: Implement upload chunk"
      },
      {
        "id": "2494bbd736a1c67f15ce4773a466e6cf0e25ba13",
        "date": "2023-10-05T12:12:32Z",
        "message": "RUN-787: Hold UnixStream for sandbox IPC communication"
      },
      {
        "id": "3f5ff4d79835c81bb777efa10d97111f8ebc3718",
        "date": "2023-09-14T13:38:57Z",
        "message": "RUN-733: Add Wasm chunk store to replicated state"
      },
      {
        "id": "76e3dd284e51baf982e81b680fb659570c293ba4",
        "date": "2023-09-11T08:32:25Z",
        "message": "RUN-758: Remove Wasm chunk store file"
      },
      {
        "id": "b1d0bf908220c60f184b12ca691fc7dd7e518fd5",
        "date": "2023-09-06T13:41:20Z",
        "message": "RUN-732: Introduce chunked Wasm upload APIs"
      },
      {
        "id": "e0dee3a89ef77ebaa9dae58850f2fc1d477b89fc",
        "date": "2023-08-24T15:17:48Z",
        "message": "RUN-712: Upgrade `wasmparser` and `wasm-encoder`"
      },
      {
        "id": "7e055e4f2dfe34b296cc01ad7393c4fcea19279a",
        "date": "2023-08-22T16:00:51Z",
        "message": "RUN-689: Expand complexity limit"
      },
      {
        "id": "2a45b7ec5f5d538667fa5e92996b515965f572cc",
        "date": "2023-08-15T13:51:28Z",
        "message": "Revert \"Devcontainer SSH forwarding\""
      },
      {
        "id": "425bc5f01c72b4ff78be4f6061b985de121fe42b",
        "date": "2023-08-10T07:43:57Z",
        "message": "RUN-716: Disable unused Wasm features"
      },
      {
        "id": "4d8a9854178975e5064aa02ca5e93ea462d8fd68",
        "date": "2023-08-07T15:43:36Z",
        "message": "RUN-722: Change sandbox RPC prefix"
      }
    ],
    "line_additions": 4558,
    "line_deletions": 1531,
    "lines_effected_total": 6089,
    "rel_comm_add": 20,
    "rel_comm_del": 15,
    "rel_comm_total": 22
  },
  {
    "login": "gregorydemay",
    "id": 112856886,
    "totalContributions": 422,
    "github": "https://github.com/gregorydemay",
    "commits": [
      {
        "id": "62c8e00cc890a810ec97d5ffc3f8a40529de59e9",
        "date": "2023-11-22T09:06:56Z",
        "message": "Merge branch 'gdemay/FI-945-ensure-no-double-mint' into 'master'\n\ntest(cketh): integration test to ensure logs are not scrapped twice when changing tracked ethereum block height\n\n(FI-945): Ensure that changing the finality of the tracked block height (e.g., from `Safe` to `Finalized`) does not lead to scrapping the logs of the same blocks twice and therefore to double minting. \n\nSee merge request dfinity-lab/public/ic!16248"
      },
      {
        "id": "d9f026a23cc00190457d3ef68f5839d7179065b5",
        "date": "2023-11-22T09:06:56Z",
        "message": "test(cketh): integration test to ensure logs are not scrapped twice when changing tracked ethereum block height"
      },
      {
        "id": "f4c6b2027da8aa7def9a472a1f43a88f27d0c699",
        "date": "2023-11-21T08:59:37Z",
        "message": "feat(cketh): add hash of failed transaction to dashboard"
      },
      {
        "id": "310ea7053a5f5062271612199a894ea785323a1f",
        "date": "2023-11-20T09:56:20Z",
        "message": "Merge branch 'gdemay/FI-1060-fix-num-events' into 'master'\n\nfix(cketh): fix typo in Solidity helper smart contract related to `event_counter`\n\n(FI-1060): Fix a typo introduced in [MR-16119](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16119) requiring the number of events to be less than `0` instead of being less than `10`.\n\nAdditionally the contract has been slightly optimized as follows:\n1. The field `cketh_minter_main_address` containing the minter's address is declared `immutable`.\n2. The maximal number of of events (`10`) is a declared as a `constant`.\n\nBoth changes ensure that the corresponding values will be inlined upon contract creation so that no `SLOAD` operation is needed to read their values, therefore slightly decreasing the gas cost of a single `deposit` (see [this article](https://medium.com/@ajaotosinserah/a-comprehensive-guide-to-implementing-constant-and-immutable-variables-in-solidity-4026ebadc6aa)) \n\nSee merge request dfinity-lab/public/ic!16201"
      },
      {
        "id": "029765df88faffbc76357c12aa0418ce40f0641b",
        "date": "2023-11-20T09:56:19Z",
        "message": "fix(cketh): fix typo in Solidity helper smart contract related to `event_counter`"
      },
      {
        "id": "3812c04c8926f084da9a48de893c24fef6429cff",
        "date": "2023-11-17T12:57:25Z",
        "message": "Merge branch 'gdemay/FI-1056-int-test-memos' into 'master'\n\ntest(cketh): integration tests for interaction with ledger\n\n(FI-1056): Add integration tests to ensure that transfers sent from the minter to the ledger are correct (inclusive memos which were added in [MR-15680](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15680)). \n\nSee merge request dfinity-lab/public/ic!16149"
      },
      {
        "id": "6be4dca11473d1f679b602ae5273be568db8ac8e",
        "date": "2023-11-17T12:57:25Z",
        "message": "test(cketh): integration tests for interaction with ledger"
      },
      {
        "id": "c557f818cc022e7be840e1a762222f544506776b",
        "date": "2023-11-17T12:07:58Z",
        "message": "Merge branch 'gdemay/fix-nonce-workload-cherry-pick' into 'master'\n\nfix: ensure nonce used for update request is at most 32 bytes\n\n(Cherry-pick of [MR-16167](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16167)).\n\nFollow-up on [MR-16066](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16066) to ensure that update requests used in `workload_generator` use a nonce of at most 32 bytes. The previously used nonce was some bytes derived from pretty-printing a timestamp and a counter. The new nonce is the SHA2-256 of the previous bytes so that the result is guaranteed to be 32 bytes. \n\nSee merge request dfinity-lab/public/ic!16170"
      },
      {
        "id": "f5acce6e0ce892c96bc46c7a113eff48ce0411c4",
        "date": "2023-11-17T10:23:21Z",
        "message": "fix: ensure nonce used for update request is at most 32 bytes"
      },
      {
        "id": "c23dc4865dc6172b9e7d3ddc62956f96ab5460e9",
        "date": "2023-11-15T16:37:56Z",
        "message": "Merge branch 'gdemay/FI-1059-fix-scrapping-logic' into 'master'\n\nfix(cketh): bug when scraping ethereum logs\n\n(FI-1059): Fixes an important bug related to deposit (ETH -> ckETH) when scraping Ethereum logs. In case the scraping of a range of block starting at block `h` failed (e.g., one provider returns an error), the minter would wrongly retry starting at block `h+1` (instead of `h`), therefore skipping the logs that may have occurred in block `h`. \n\nSee merge request dfinity-lab/public/ic!16112"
      },
      {
        "id": "d1f5440050d1e383c10657962abd6eed213a691d",
        "date": "2023-11-15T16:37:56Z",
        "message": "fix(cketh): bug when scraping ethereum logs"
      },
      {
        "id": "d6ff6af2653c885772405991758c70cfe7c86939",
        "date": "2023-11-14T19:26:50Z",
        "message": "Merge branch 'gdemay/FI-832-clean-up-TODOs' into 'master'\n\nchore(cketh): clean-up TODOs and consolidate address validation\n\n(FI-832): Clean-up all remaining TODOs in `rs/ethereum`. While doing so, consolidate the validation of the recipient's address during withdrawals (ckETH -> ETH) into a single function. \n\nSee merge request dfinity-lab/public/ic!16052"
      },
      {
        "id": "be3ebfb4d5d975b3cb00011e05bfb34e143c204e",
        "date": "2023-11-14T19:26:47Z",
        "message": "chore(cketh): clean-up TODOs and consolidate address validation"
      },
      {
        "id": "8a60a3774968700a30d5ea513dafa138ecd8904a",
        "date": "2023-11-14T17:41:05Z",
        "message": "Merge branch 'gdemay/limit-request-nonces' into 'master'\n\nfix(crypto): Limit size of nonces in HTTP requests\n\nNonces in HTTP requests are user-provided data, typically randomly generated, used to created distinct requests with otherwise identical fields (see the [IC specification](https://internetcomputer.org/docs/current/references/ic-interface-spec#authentication)). This MR ensures that the provided nonces are at most 32 bytes. Requests with larger nonces will be rejected by the IC and not processed any further. Once this MR is merged, the IC specification will be adapted accordingly to mention this new restriction. \n\nSee merge request dfinity-lab/public/ic!16066"
      },
      {
        "id": "70f2554b58d88d0701d23827066e2be5f4cd037c",
        "date": "2023-11-14T17:41:05Z",
        "message": "fix(crypto): Limit size of nonces in HTTP requests"
      },
      {
        "id": "e561732ae0bde3a8ea43af411a530a4b3ea2364a",
        "date": "2023-11-14T09:40:10Z",
        "message": "Merge branch 'gdemay/FI-832-estimate-tx-price-unit-test' into 'master'\n\nrefactor(cketh): ensure transaction price estimation does not panic\n\n(FI-832): Transaction price estimation occurs on a timer and should not panic since in that case we would not know about it (known limitation of timers). This issue is addressed as follows:\n1. `estimate_transaction_price` was refactored to no longer panic\n2. Added missing unit tests for `estimate_transaction_price` \n\nSee merge request dfinity-lab/public/ic!16048"
      },
      {
        "id": "fc3196cd28f9e789bdae28f96ca3e7c3f4c83096",
        "date": "2023-11-14T09:40:10Z",
        "message": "refactor(cketh): ensure transaction price estimation does not panic"
      },
      {
        "id": "a0cd0ea503b085ab9dca9291b2c33fb7fd092b83",
        "date": "2023-11-13T10:39:36Z",
        "message": "Merge branch 'gdemay/FI-1040-integreation-test-resubmission' into 'master'\n\ntest(cketh): integration tests for transaction resubmission\n\n(FI-1040): Follow-up on [MR-15891](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15891) to add integration tests related to resubmission of stuck transactions:\n1. when the transaction fees did not increase, the same raw bytes should be re-sent;\n2. when the transaction fees did increase, a new transaction reflecting the change in fee should be created, signed and sent over. \n\nSee merge request dfinity-lab/public/ic!15999"
      },
      {
        "id": "3ed3082f98026a15bb0315f5b86dc103c662ca25",
        "date": "2023-11-13T10:39:36Z",
        "message": "test(cketh): integration tests for transaction resubmission"
      },
      {
        "id": "0138b5189d3e6fe10ff7fe6e6c5ac1e86d4319c2",
        "date": "2023-11-09T11:15:15Z",
        "message": "Merge branch 'gdemay/FI-1033-more-tests' into 'master'\n\ntest(cketh): integration tests for withdrawals\n\n(FI-1033): Follow-up on [MR-15842](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15842) to add more integration tests regarding withdrawals ckETH -> ETH, which includes\n1. basic sanity checks when a withdrawal should be rejected (insufficient funds, ledger approval missing, withdrawn amount too low, etc)\n2. some edge-cases involving multiple providers given inconsistent answers for `eth_feeHistory` or `eth_getTransactionReceipt`.\n\nMore integration tests regarding transaction resubmission is planned in another ticket (FI-1040) \n\nSee merge request dfinity-lab/public/ic!15891"
      },
      {
        "id": "8ed3f4853095dabf21ebbbe4e9551238fe66b233",
        "date": "2023-11-09T11:15:15Z",
        "message": "test(cketh): integration tests for withdrawals"
      },
      {
        "id": "62cc99e17b2ac746cd0da33c1280baeafaf6f2ab",
        "date": "2023-11-08T11:15:31Z",
        "message": "Merge branch 'gdemay/FI-1041-dashboard-improvements' into 'master'\n\nfeat(cketh): display first scraped block number and minimum withdrawal amount on dashboard\n\n(FI-1041): Minor improvements on the ckETH minter dashboard to add the following information:\n1. Display the minimum withdrawal amount.\n2. Display the first scraped block number. \n\nSee merge request dfinity-lab/public/ic!15958"
      },
      {
        "id": "26bfb831fa044cf22034ffcceaf710f7b0a77351",
        "date": "2023-11-08T11:15:31Z",
        "message": "feat(cketh): display first scraped block number and minimum withdrawal amount on dashboard"
      },
      {
        "id": "353b6585c5f2bcd9b96d78516ec09dd6441b16ab",
        "date": "2023-11-08T10:12:52Z",
        "message": "Merge branch 'gdemay/FI-911-minter-pot' into 'master'\n\nfeat(cketh): track minter's balance\n\n(FI-911): Track the ETH managed by the ckETH minter across deposits and withdrawals. This includes the following information:\n1. ETH directly managed by the ckETH minter's address, which has the following lifecycle:\n    1. This amount increases upon every deposit made to the helper smart contract (ETH -> ckETH).\n    2. This amount decreases upon every withdrawal ckETH -> ETH. The exact deducted amount depends on whether the transaction was successful: it is the sum of the transaction value and the effective transaction fees if the transaction was successful; or, it is only the effective transactions fees in case the transaction failed (e.g., withdrawal was made to a smart contract address resulting in an out-of-gas error). \n\n   It is an important invariant that this tracked amount of ETH managed by the ckETH minter never falls below zero. Note that it's expected that this tracked amount can be less or equal than the effective amount of ETH associated with the ckETH minter's address (and that is visible on Etherescan or can be retrieved by `eth_getBalance`) due to the following reasons\n    * Transfer made directly to the minter's address without going through the helper smart contract are not tracked.\n    * Deposits made via the helper smart contract that are invalid are not tracked, e.g. the given IC principal is invalid or the originating address is blocked.\n2. Total transaction fees over all finalized transactions ckETH -> ETH: Useful to derive an average transaction fee (the number of sent transactions can be deduced from the `next_nonce` value) and also to compare it with the unspent transaction fees below.\n3. Total unspent transaction fees: given that transaction fees are dynamic and not known in advance on Ethereum, the ckETH minter issues transaction by assuming that the maximal transaction fee will be deducted, which is often not the case. This means that for every finalized transaction a part of the transaction fee that was burnt on the ledger was not used and is currently owned solely by the ckETH minter. \n\nSee merge request dfinity-lab/public/ic!15789"
      },
      {
        "id": "80ba9f771850a871962116a754d6488c841ff3cc",
        "date": "2023-11-08T10:12:52Z",
        "message": "feat(cketh): track minter's balance"
      },
      {
        "id": "3a11ae70ac4f879376233c685a050f108fe11e59",
        "date": "2023-11-07T16:53:42Z",
        "message": "Merge branch 'gdemay/FIX-consolidate-deps' into 'master'\n\nfix: consolidate dependencies in `state_machine_tests`\n\nFollow-up on [MR-15376](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15376) to fix some discrepancies between `rs/state_machine_tests/BUILD.bazel` and `rs/state_machine_tests/Cargo.toml`:\n1. Bazel uses `rand_0_8_4` but Cargo just `0.8` (pinned to `0.8.5` in Cargo.lock)\n2. Bazel uses `//rs/types/base_types` but Cargo uses `ic-test-utilities` \n\nSee merge request dfinity-lab/public/ic!15942"
      },
      {
        "id": "c66e989fb1c30ea42df8be35fb37e5812c973ecc",
        "date": "2023-11-07T16:53:42Z",
        "message": "fix: consolidate dependencies in `state_machine_tests`"
      },
      {
        "id": "6281c56341179eda2f25ae70df46acc5bf0c0837",
        "date": "2023-11-07T09:40:54Z",
        "message": "Merge branch 'gdemay/FI-984-memoize-hash' into 'master'\n\nrefactor(cketh): memoize transaction hash\n\n(FI-984): The hash of an ethereum signed transaction is used to uniquely identify a transaction and is often queried to retrieve information about a concrete transaction. Computing the hash of an EIP-1559 signed transaction is somewhat computationally involved:\n1. RLP encoding of all involved fields\n2. Keccak-256 on the bytes resulting from the RLP encoding.\n\nTo avoid wasting computation resources, this MR memoizes the transaction hash upon instantiation of an `SignedEip1559TransactionRequest`, whose value can then be retrieved by querying the `hash()` method. \n\nSee merge request dfinity-lab/public/ic!15813"
      },
      {
        "id": "d6b37489a38aead7b08fbf5c0d4ca90de1edd0b1",
        "date": "2023-11-07T09:40:53Z",
        "message": "refactor(cketh): memoize transaction hash"
      },
      {
        "id": "7b9cd48d076890fce29f1dcfd86ef17a0b9246c3",
        "date": "2023-11-06T16:24:23Z",
        "message": "Merge branch 'gdemay/FI-984-remove-unnecessary-serde' into 'master'\n\nrefactor(cketh): remove some unnecessary serde annotations\n\n(FI-984): Remove some unnecessary `serde::Serialize` or `serde:Deserialize` annotations. \n\nSee merge request dfinity-lab/public/ic!15908"
      },
      {
        "id": "101dcf5268d9fd21ce9c88ed13348ed506e93fd7",
        "date": "2023-11-06T16:24:22Z",
        "message": "refactor(cketh): remove some unnecessary serde annotations"
      },
      {
        "id": "24fd80082f40de6d0b3cd7876be09ef1aadbde86",
        "date": "2023-11-06T10:49:14Z",
        "message": "Merge branch 'gdemay/FI-1033-int-test-providers' into 'master'\n\ntest(cketh): test infrastructure to mock HTTP outcalls\n\n(FI-1033): Add test infrastructure to be able to easily mock responses to HTTP outcalls from various providers. This is to ensure that the minter behaves appropriately in case some Ethereum JSON-RPC API providers give diverging answers. As an example, a single test `should_not_mint_when_logs_inconsistent` was added to showcase how the new infrastructure can be used. More tests will follow in another MR. \n\nSee merge request dfinity-lab/public/ic!15842"
      },
      {
        "id": "ad45ffb08b966a7eab74ccc4a72c387e6ae3f769",
        "date": "2023-11-06T10:49:13Z",
        "message": "test(cketh): test infrastructure to mock HTTP outcalls"
      },
      {
        "id": "a460e48d29e5b8be90db70ce1ec605aa59c4703e",
        "date": "2023-11-03T07:51:05Z",
        "message": "Merge branch 'gdemay/FI-977-multi-providers-transaction-price' into 'master'\n\nfeat(cketh): use multiple providers to retrieve transaction fee history\n\n(FI-977): Query multiple RPC providers for `eth_feeHistory` that is used to determined the current transaction fees. Each fee history result contains among other things the `oldestBlock` (see [Ethereum JSON-RPC specification](https://ethereum.github.io/execution-apis/api-documentation/)), which corresponds to the \"lowest number block of the returned range\". The results are reduced using a stable median on `oldestBlock` as follows:\n1. it's expected that any 2 fee history results that have the same value for `oldestBlock` are equal.\n2. The fee history result with the median `oldestBlock` value is returned.\n\nA compromised node provider could only influence the return fee history result if the other providers return results whose `oldestBlock` differ by at least 2 blocks. In practice this is rarely the case (see for example the height of nodes on [Ethereum Mainnet RPC URL List](https://chainlist.org/)). \n\nSee merge request dfinity-lab/public/ic!15672"
      },
      {
        "id": "000c5aaf21f095b18c1975e8999a0dc77ea8e9d0",
        "date": "2023-11-03T07:51:05Z",
        "message": "feat(cketh): use multiple providers to retrieve transaction fee history"
      },
      {
        "id": "627528f355de1212e87c5d0df5553f6dae9fb71d",
        "date": "2023-11-01T09:24:39Z",
        "message": "Merge branch 'gdemay/FI-984-immutable-txs' into 'master'\n\nrefactor(cketh): ensure that signed and finalized transactions are immutable\n\n(FI-984): Follow-up from [MR-15416](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15416) to revert changes related to `SignedEip1559TransactionRequest` and `FinalizedEip1559Transaction` ensuring that those structs are immutable and have private fields. Documentation was added to indicate how to those structs can be instantiated. \n\nSee merge request dfinity-lab/public/ic!15806"
      },
      {
        "id": "41a33592de01ea8bc10bc419f6cb981007d1686f",
        "date": "2023-11-01T09:24:38Z",
        "message": "refactor(cketh): ensure that signed and finalized transactions are immutable"
      },
      {
        "id": "771021402df9848538223e11150f6f15d5788f12",
        "date": "2023-10-31T13:20:59Z",
        "message": "Merge branch 'gdemay/FI-1024-fluent-int-tests' into 'master'\n\ntest(cketh): refactor integration tests\n\n(FI-1024): refactor integration tests with a fluent API to render logical flow and interaction with other components more explicit. Adding new tests should now be easier and involve less code. \n\nSee merge request dfinity-lab/public/ic!15729"
      },
      {
        "id": "0b38a56379be980d300e191ffcb4f7621e4ff242",
        "date": "2023-10-31T13:20:59Z",
        "message": "test(cketh): refactor integration tests"
      },
      {
        "id": "108c21a077fdce81188a67aa96bdb9c9a48a3a82",
        "date": "2023-10-30T09:54:55Z",
        "message": "Merge branch 'gdemay/FI-977-unit-test-dashboard-2' into 'master'\n\ntest(cketh): add unit tests for dashboard (II)\n\n(FI-977): Follow-up on [MR-15611](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15611) to add unit tests to the HTML dashboard of the ckETH minter. This MR covers the remaining parts related to withdrawal:\n1. Withdrawal requests\n2. Pending transactions\n3. Finalized transactions\n\nReimbursed transactions will be covered in FI-1025. \n\nSee merge request dfinity-lab/public/ic!15690"
      },
      {
        "id": "857d570cd7c2275d7b221fcebe47ccad1788a2aa",
        "date": "2023-10-30T09:54:54Z",
        "message": "test(cketh): add unit tests for dashboard (II)"
      },
      {
        "id": "e89564adda6ca8588f29780d9dfd7b8512e19f8c",
        "date": "2023-10-26T13:36:41Z",
        "message": "Merge branch 'gdemay/FI-1024-fluent-int-tests' into 'master'\n\nfix(cketh): Return an error when receipient's address is blocked [override-didc-check]\n\n(FI-1024): Return an error when the recipient's address for withdrawal is blocked instead of panicking. \nAlso fix an integration test that was previously successful for the wrong reason (given address failed parsing instead of being blocked). \n\nSee merge request dfinity-lab/public/ic!15681"
      },
      {
        "id": "6f5cab223ee229fe4e9e793cd099d4cde442b87c",
        "date": "2023-10-26T13:36:41Z",
        "message": "fix(cketh): Return an error when receipient's address is blocked [override-didc-check]"
      },
      {
        "id": "cc9d5da36de8f9a0cdd0e60c351d984fd5d112bf",
        "date": "2023-10-26T11:18:08Z",
        "message": "Merge branch 'gdemay/FI-965-unit-test-dashboard' into 'master'\n\ntest(cketh): add unit tests for dashboard (I)\n\n(FI-965): Add unit tests to the HTML dashboard rendering which is a central tool for debugging and tracking the status of the ckETH minter.\nThis is the first part covering:\n1. Metadata\n2. Block Syncing\n3. Deposits withs events to mint, minted events and rejected deposits.\n\nA second MR will cover withdrawals. \n\nSee merge request dfinity-lab/public/ic!15611"
      },
      {
        "id": "64cf8375b5fe678e78dde346e5b39bcad8d672dc",
        "date": "2023-10-26T11:18:06Z",
        "message": "test(cketh): add unit tests for dashboard (I)"
      },
      {
        "id": "3730aae62ebca0383c7d66ae8547639bfd68681b",
        "date": "2023-10-24T15:18:53Z",
        "message": "Merge branch 'gdemay/FI-948-limit-withdrawal-queue-size' into 'master'\n\nfeat(cketh): Limit number of parallel operations in withdrawals ckETH -> ETH\n\n(FI-948): Limit the number of parallel operations involved in a withdrawal ckETH -> ETH:\n1. The number of pending withdrawal requests is limited to `1000`. Additional withdrawal requests will not be accepted by the minter.\n2. The number of pending transaction nonces is limited to `100`. No additional pending withdrawal request will be processed by the minter.\n3. At each timer interval, the pending withdrawal requests are processed as follows:\n    1. At most 5 new pending withdrawal requests are pulled to create new Ethereum transactions.\n    2. At most 5 transactions will be signed via threshold ECDSA.\n    3. At most 5 signed transactions will be sent to Ethereum via `eth_sendRawTransaction`.\n    4. The frequency of the timer will double (3min instead of 6min) as long as there is still work to do. \n\nSee merge request dfinity-lab/public/ic!15576"
      },
      {
        "id": "9ebe3abc3e3b9f78ee8b3f2c20ec685610c9b7e4",
        "date": "2023-10-24T15:18:53Z",
        "message": "feat(cketh): Limit number of parallel operations in withdrawals ckETH -> ETH"
      },
      {
        "id": "2f1333fce27159708e0debe414fe8aa35d911eab",
        "date": "2023-10-13T16:24:57Z",
        "message": "Merge branch 'gdemay/FI-1009-remove-panics' into 'master'\n\nrefactor(cketh): remove panics in JSON-RPC calls\n\n(FI-1009): Remove remaining panics in following JSON-RPC calls:\n1. `eth_getBlockByNumber`\n2. `eth_feeHistory` \n\nSee merge request dfinity-lab/public/ic!15385"
      },
      {
        "id": "32a7684f085277eef7ffa733bdd985c0f3e04978",
        "date": "2023-10-13T16:24:56Z",
        "message": "refactor(cketh): remove panics in JSON-RPC calls"
      },
      {
        "id": "c79b0962250a2b56e9b505e328a93421d8a744d6",
        "date": "2023-10-13T12:37:19Z",
        "message": "Merge branch 'gdemay/FI-933-remove-signed-tx' into 'master'\n\nrefactor(cketh): simplify data structure for withdrawal flow [override-didc-check]\n\n(FI-933): Simplify the data structure in `EthTransactions` that contain transactions issued by the minter for withdrawals (ckETH -> ETH) in various states. Namely the queue `signed_tx` that contained signed transactions waiting to be sent to Ethereum via `eth_sendRawTransaction` has been removed. The new behaviour is as follows\n1. For resubmission: for every non-mined nonce we evaluate whether the price of the last sent transaction is still up-to-date. If it is, we don’t do any state modification; otherwise, we create a new transaction with a price bump and put it in `created_tx`.\n1. We create transactions by processing withdrawal requests (as is).\n1. We sign transactions in `created_tx` and add them to `sent_tx` directly.\n1. For every non-mined nonce, we send the last transaction in `sent_tx` implying that sending a transaction is not a state-changing operation \n\nSee merge request dfinity-lab/public/ic!15355"
      },
      {
        "id": "e68d27558b3e2334d581021ad36cc0b416137f8b",
        "date": "2023-10-13T12:37:18Z",
        "message": "refactor(cketh): simplify data structure for withdrawal flow [override-didc-check]"
      },
      {
        "id": "095982613c035b9211de2fc822007b1ca0d6e44a",
        "date": "2023-10-11T08:45:39Z",
        "message": "fix(cketh): improve handling of `eth_get_logs`"
      },
      {
        "id": "03abe903287511ec26708d981ef6f697d61c7162",
        "date": "2023-10-05T21:12:13Z",
        "message": "fix(cketh): fix match pattern in case response body is too big"
      },
      {
        "id": "851b331f6896f464cb232daf23588dfce057d35a",
        "date": "2023-10-05T15:08:37Z",
        "message": "Merge branch 'gdemay/FI-942-fix-deser-transaction-status' into 'master'\n\nfix(cketh): fix serialization of `TransactionStatus`\n\n(FI-942): fix the serialization and deserialization of `TransactionStatus` which was not working and lead to the minter crashing upon upgrade as soon as a finalized transaction was stored:\n```\nUpgrading code for canister minter, with canister ID be2us-64aaa-aaaaa-qaabq-cai\nError: Failed while trying to deploy canisters.\nCaused by: Failed while trying to deploy canisters.\n  Failed while trying to install all canisters.\n    Failed to install wasm module to canister 'minter'.\n      Failed during wasm installation call: The replica returned a replica error: Replica Error: reject code CanisterError, reject message Canister be2us-64aaa-aaaaa-qaabq-cai trapped explicitly: Panicked at 'CBOR deserialization should succeed: Semantic(None, \"invalid digit found in string\")', rs/ethereum/cketh/minter/src/storage.rs:94:10, error code None\n``` \n\nSee merge request dfinity-lab/public/ic!15227"
      },
      {
        "id": "1baa6279e9c576097eae584e51b183b5f6b18511",
        "date": "2023-10-05T15:08:36Z",
        "message": "fix(cketh): fix serialization of `TransactionStatus`"
      },
      {
        "id": "8ad420bd259c2d64cfb20b20d6be7c08f4d1afe4",
        "date": "2023-10-05T10:11:01Z",
        "message": "Merge branch 'gdemay/FI-942-clean-up' into 'master'\n\nchore(cketh): remove `eth_get_transaction_by_hash`\n\n(FI-942): Following-up on [MR-15139](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15139):\n1. Remove no longer used `eth_get_transaction_by_hash`\n2. Update ticket number in TODO. \n\nSee merge request dfinity-lab/public/ic!15217"
      },
      {
        "id": "9ac71233e8da50993b110c18c66c9a3df378aed5",
        "date": "2023-10-05T10:10:59Z",
        "message": "chore(cketh): remove `eth_get_transaction_by_hash`"
      },
      {
        "id": "8578742324ce049b844698b80c214d3f3bc148f5",
        "date": "2023-10-05T10:10:11Z",
        "message": "Merge branch 'gdemay/FI-984-3rd-provider' into 'master'\n\nfeat(cketh): Add PublicNode as 3rd JSON-RPC provider\n\n(FI-984): Adds a third JSON-RPC provider (in addition to [Ankr](https://www.ankr.com/) and [BlockPi](https://blockpi.io/)) for Sepolia with [PublicNode](https://ethereum-sepolia.publicnode.com). \n\nSee merge request dfinity-lab/public/ic!15171"
      },
      {
        "id": "1771c613810e4ffc5c76eda886c6a65852f54495",
        "date": "2023-10-05T10:10:11Z",
        "message": "feat(cketh): Add PublicNode as 3rd JSON-RPC provider"
      },
      {
        "id": "8bbef2156ed833bffba1320940462982aa39fa80",
        "date": "2023-10-05T05:21:15Z",
        "message": "Merge branch 'gdemay/FI-942-finalize-transactions' into 'master'\n\nfeat(cketh): Finalize transactions\n\n(FI-942): Finalize transactions issued by the minter for withdrawals as follows:\n1. On a timer, query the current transaction count at finalized block height.\n2. Query the transaction receipts for all sent transactions whose nonces are smaller than this transaction count.\n3. Expect exactly one transaction receipt for a given nonce and store it.\n\nFinalization was tested successfully [locally](https://sepolia.etherscan.io/address/0x8C73Cc448c834f2322e0415097C8Ec0Bfe9Db223).\nThe dashboard has been slightly enhanced to display the effective transaction fees and whether the transaction was successful.\n![Screenshot_2023-10-03_at_12.32.00](/uploads/f9cee772fa0cdc2fd70b06c6d9b39b3e/Screenshot_2023-10-03_at_12.32.00.png) \n\nSee merge request dfinity-lab/public/ic!15139"
      },
      {
        "id": "994bc7360ae375acc5fb15239c1317728f30181a",
        "date": "2023-10-05T05:21:15Z",
        "message": "feat(cketh): Finalize transactions"
      },
      {
        "id": "45c073721c036407dca66c84ec60d03f022b0c8f",
        "date": "2023-10-04T10:09:50Z",
        "message": "Merge branch 'gdemay/FI-933-clean-up' into 'master'\n\nchore(cketh): clean-up of some TODOs\n\n(FI-933): Clean-up all TODOs related to FI-933:\n1. Handles the error case of `NonceTooLow` when sending an transaction request to Ethereum as a success since this could mean that a previously stuck transaction was mined in the meantime.\n2. Changes related to limiting number of withdrawal requests or pending transactions is moved to a dedicated issue, see FI-948.\n2. Unit tests related to a transaction mismatch have been turned into proptests. \n\nSee merge request dfinity-lab/public/ic!15186"
      },
      {
        "id": "b45afeb58f99f299ee4e21e21f968d780ee379de",
        "date": "2023-10-04T10:09:50Z",
        "message": "chore(cketh): clean-up of some TODOs"
      },
      {
        "id": "dec312a9e8ca1198baf693f2d171c33d10298f21",
        "date": "2023-10-03T15:07:12Z",
        "message": "Merge branch 'gdemay/FI-980-banner' into 'master'\n\nfeat(cketh): add a warning banner on minter's dashboard\n\nFI-980: add a banner on top of the minter's dashboard to clearly state that it's under active development. \n\nSee merge request dfinity-lab/public/ic!15166"
      },
      {
        "id": "cc5adf258882b9cd69a6666abda280af516ca410",
        "date": "2023-10-03T15:07:10Z",
        "message": "feat(cketh): add a warning banner on minter's dashboard"
      },
      {
        "id": "99687fc42ef6a2210d87485d65b7ac0cd69b01e5",
        "date": "2023-10-03T12:26:43Z",
        "message": "Merge branch 'gdemay/FI-933-resubmit-transactions' into 'master'\n\nfeat(cketh): resubmit stuck transactions\n\n(FI-933): Resubmit transactions sent by the minter that did not make progress. On a timer query the current transaction price and latest transaction count:\n1. Every sent transaction whose nonce is not smaller than the latest transaction count will be resubmitted.\n2. If the price of the transaction is still up-to-date, the transaction to be resubmitted will be inserted in the `signed_tx` queue to be resent as is.\n3. Otherwise, the a new transaction with a bumped price will be created and inserted in the `created_tx` queue to be signed and sent.\n\nResubmission was tested successfully [locally](https://sepolia.etherscan.io/address/0x8C73Cc448c834f2322e0415097C8Ec0Bfe9Db223) by initially creating transactions with an artificially low tipping fee. On the dashboard it then looks like this:\n- For transactions resubmitted as is:\n![Screenshot_2023-09-29_at_14.09.32](/uploads/e3fc803874a8a054c729f2ae9bb1ced9/Screenshot_2023-09-29_at_14.09.32.png)\n- For transactions resubmitted with a bumped price:\n![Screenshot_2023-09-29_at_14.48.00](/uploads/eaacd42f53350506a7d0a26c675edd29/Screenshot_2023-09-29_at_14.48.00.png) \n\nSee merge request dfinity-lab/public/ic!15011"
      },
      {
        "id": "7d6c3511a85f9375f723cc01796b8d12f65273f3",
        "date": "2023-10-03T12:26:43Z",
        "message": "feat(cketh): resubmit stuck transactions"
      },
      {
        "id": "9f1c58231b9f7da032e5bfaa2193e94e018c00da",
        "date": "2023-09-28T08:43:06Z",
        "message": "Merge branch 'gdemay/FI-933-withdrawal-queues' into 'master'\n\nfeat(cketh): Parallel processing of ETH withdrawals\n\n(FI-933): This MR rewrites the withdrawal flow from ckETH -> ETH to ensure that withdrawal requests can be process in parallel. The current behaviour of withdrawals is otherwise not modified and the following open points will be addressed in other MRs:\n1. Resubmission of stuck transactions\n2. Proper handling of finalized transactions\n\nWith the proposed implementation, multiple transactions issued by a locally deployed minter could be mined in the same block\n![Screenshot_2023-09-22_at_10.23.28](/uploads/3be1414d9d31b965b4e804d80ddac73a/Screenshot_2023-09-22_at_10.23.28.png)\n\nIn contrast, such a burst of transactions on the currently deployed [minter](https://jzenf-aiaaa-aaaar-qaa7q-cai.raw.icp0.io/dashboard) on mainnet will take much longer to be processed and will be mined in different blocks![Screenshot_2023-09-22_at_12.07.10](/uploads/b8bae5f330c7ea2ccc8c2787c811a198/Screenshot_2023-09-22_at_12.07.10.png)\n\nIn addition to refactoring the logic for withdrawals, the bulk of the MR is actually made by previously missing unit tests. \n\nSee merge request dfinity-lab/public/ic!14879"
      },
      {
        "id": "211392a54f1324deab9188e52ef6513ff34f1794",
        "date": "2023-09-28T08:43:05Z",
        "message": "feat(cketh): Parallel processing of ETH withdrawals"
      },
      {
        "id": "9ad4b5011d0b793d7654516543ea9649b836f13c",
        "date": "2023-09-22T08:57:13Z",
        "message": "Merge branch 'gdemay/FI-933-double-map' into 'master'\n\nrefactor(cketh): multi key map to index transactions by nounces and burn indeces\n\n(FI-933): Introduce a `MultiKeyMap` where elements can be retrieved by a primary key (`TransactionNonce`) or an alternative key (`LedgerBurnIndex`). This is useful for FI-933 because we are going to need at least two instances (maybe more) thereof:\n1. to store the submitted transactions\n2. to store finalized transactions\n\nThe need for two keys is due to\n1. The user needing at any time to be able to know the status of his/her transaction which is retrieved by the `LedgerBurnIndex`.\n2. The minter deciding on the status of a transaction (mined, to be resubmitted, finalized) based on its nonce. \n\nSee merge request dfinity-lab/public/ic!14829"
      },
      {
        "id": "f8afea323ae28bb546cd6a037960aa4eb24e3e71",
        "date": "2023-09-22T08:57:12Z",
        "message": "refactor(cketh): multi key map to index transactions by nounces and burn indeces"
      },
      {
        "id": "962819bbd44e214ae2d6a081be93d52a70cd352c",
        "date": "2023-09-21T10:22:28Z",
        "message": "Merge branch 'gdemay/FI-832-fix-dashboards-links' into 'master'\n\nfix(cketh): fix links to etherscan block number on dashboard\n\n(FI-832): Fix a regression that was introduced with [MR-14864](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14864) where `BlockNumber`s are displayed with thousands separators. As a consequence the links on the dashboard were no longer working: a link to `https://sepolia.etherscan.io/block/4_332_415`  was rendered instead of `https://sepolia.etherscan.io/block/4332415`. \n\nSee merge request dfinity-lab/public/ic!14921"
      },
      {
        "id": "e51eb1f814993e281d61fa5f40b89052381e150f",
        "date": "2023-09-21T10:22:28Z",
        "message": "fix(cketh): fix links to etherscan block number on dashboard"
      },
      {
        "id": "47001d119987cd42e07dff2a072622fb6e9eaddd",
        "date": "2023-09-19T14:56:31Z",
        "message": "Merge branch 'FI-consolidate-numeric-types-checked-amount-of' into 'master'\n\nrefactor(cketh): consolidate numeric types (checked-amount-of)\n\nConsolidate numeric types used for cketh as follows:\n\n1. `BlockNumber`, `LogIndex` are moved to `numeric`.\n1. A new type `CheckedAmountOf<Unit>` similar in spirit to `AmountOf<Unit, Repr>` is introduced. This new type uses `ethnum::u256` as hard-coded representation and only provides checked operations.\n1. Existing numeric types like `Wei`, `TransactionNonce`, `BlockNumber` are re-defined as alias of `CheckedAmountOf`. \n\nSee merge request dfinity-lab/public/ic!14864"
      },
      {
        "id": "3819ab05ddf482ad857e902b6613e8475af41be7",
        "date": "2023-09-19T14:56:31Z",
        "message": "refactor(cketh): consolidate numeric types (checked-amount-of)"
      },
      {
        "id": "b81393196eb60f07510056c39a56ed3ba2d3e553",
        "date": "2023-09-18T14:15:01Z",
        "message": "Merge branch 'gdemay/FI-947-transaction-count' into 'master'\n\nfeat(cketh): retrieve transaction count for finalized and latest block height\n\n(FI-947): Retrieve the transaction count via `eth_getTransactionCount` needed for the retry strategy to determine whether sent transactions by the minter were finalized or are currently stuck and need to be resubmitted. The method `eth_get_transaction_count` is therefore envisioned to be used in 2 different manners\n1. For retrieving the minter's finalized transaction count. In that case results from multiple providers are expected to be equal.\n2. For retrieving the minter's latest transaction count. In that case results from multiple providers may differ and the minimum will be taken. \n\nSee merge request dfinity-lab/public/ic!14817"
      },
      {
        "id": "cc965a0d756d5002fc744687336537a9d7f89e45",
        "date": "2023-09-18T14:15:01Z",
        "message": "feat(cketh): retrieve transaction count for finalized and latest block height"
      },
      {
        "id": "831e32c7de308c9bd9632f855d0b1f39e21b4ce4",
        "date": "2023-09-14T19:39:01Z",
        "message": "Merge branch 'gdemay/FI-941-transaction-receipt' into 'master'\n\nfeat(cketh): Retrieve transaction receipt\n\n(FI-941): Retrieve transaction receipt by querying `eth_getTransactionReceipt` on multiple JSON-RPC providers. This will be needed to keep track of the unspent transactions fees once a transaction is finalized. \n\nSee merge request dfinity-lab/public/ic!14779"
      },
      {
        "id": "17aafc72da5b40d47cbf73109de8c70d8f71b6be",
        "date": "2023-09-14T19:39:00Z",
        "message": "feat(cketh): Retrieve transaction receipt"
      },
      {
        "id": "330df35ba79213856859538e3bf15acdce6f939f",
        "date": "2023-09-14T08:51:22Z",
        "message": "Merge branch 'gdemay/fix-cketh-block-transform' into 'master'\n\nfix(cketh): normalize JSON-RPC responses for `Block` and `Vec<LogEntry>`\n\nEnsure that JSON-RPC responses to `eth_getBlockByNumber` and `eth_getLogs` are normalized (e.g, same ordering of JSON fields) to ensure that consensus can be reached on those responses. \n\nSee merge request dfinity-lab/public/ic!14792"
      },
      {
        "id": "dd9ca5aea1878474bee6705914da39ded69a2185",
        "date": "2023-09-14T08:51:22Z",
        "message": "fix(cketh): normalize JSON-RPC responses for `Block` and `Vec<LogEntry>`"
      },
      {
        "id": "b858390fd502c22c102dbe587319549642ea5702",
        "date": "2023-09-12T08:41:31Z",
        "message": "Merge branch 'gdemay/FI-937-configure-latest-block' into 'master'\n\nfeat(cketh): configure observed height of Ethereum blocks\n\n(FI-937): Allow the height of Ethereum block observed by the minter to be configurable. This is for example useful to switch between `Safe` and `Finalized` (see [commitment levels](https://www.alchemy.com/overviews/ethereum-commitment-levels#what-are-ethereum-commitment-levels)) to reduce the amount of waiting involved for deposits. \n\nSee merge request dfinity-lab/public/ic!14663"
      },
      {
        "id": "9c48963800506ef1407c757207471c7623f40f6d",
        "date": "2023-09-12T08:41:31Z",
        "message": "feat(cketh): configure observed height of Ethereum blocks"
      },
      {
        "id": "fb80c80211da8f2934818e04a03a094acc467635",
        "date": "2023-09-11T18:28:27Z",
        "message": "Merge branch 'gdemay/FI-938-extend-dashboard-await-minting' into 'master'\n\nfeat(cketh): display events to mint on dashboard\n\n(FI-938): Extend dashboard to also display Ethereum events waiting to be minted. \n\nSee merge request dfinity-lab/public/ic!14720"
      },
      {
        "id": "c1195af6ebca676a9a5ce0cfea3829fdc55cd637",
        "date": "2023-09-11T18:28:27Z",
        "message": "feat(cketh): display events to mint on dashboard"
      },
      {
        "id": "ba6d2ba6f35f09a93af4b888b62e64765eec6116",
        "date": "2023-09-11T09:16:57Z",
        "message": "Merge branch 'gdemay/FI-931-improve-logging' into 'master'\n\nrefactor(cketh): improve debug formatting\n\n(FI-931) Improve the readability of `Debug` by ensuring that the `Display` formatting for `Address` and `Principal` is used instead of the internal byte array representation. This is particularly useful when searching the logs for a concrete IC principal or Ethereum address. \n\nSee merge request dfinity-lab/public/ic!14686"
      },
      {
        "id": "f40df83ca12f27696f1a3cb7a47e567ff7752d27",
        "date": "2023-09-11T09:16:56Z",
        "message": "refactor(cketh): improve debug formatting"
      },
      {
        "id": "8cebb36689288dfa96ed2c092da0addeadf8c2f8",
        "date": "2023-09-07T11:21:04Z",
        "message": "Merge branch 'gdemay/FI-932-request-counter' into 'master'\n\nfeat(cketh): correlation ID for JSON-RPC requests and responses\n\n(FI-932): Introduces a request counter to use as an identifier of emitted HTTP requests so that logged JSON-RPC requests and responses can easily be correlated. \n\nSee merge request dfinity-lab/public/ic!14641"
      },
      {
        "id": "f681e65069490b82b93eaae9098b183e9c2e7614",
        "date": "2023-09-07T11:21:04Z",
        "message": "feat(cketh): correlation ID for JSON-RPC requests and responses"
      },
      {
        "id": "5bdbd676aa739c8d5343aa3aa69d6664e15b143c",
        "date": "2023-09-06T14:12:02Z",
        "message": "Merge branch 'gdemay/FI-926-clean-up' into 'master'\n\nrefactor(cketh): clean-up [override-didc-check]\n\n(FI-926): Provides the following minor improvements:\n1. remove the endpoint `test_transfer`\n2. refactor `eip_1559_transaction_price` to use the same strategy as the one used for withdrawal\n2. Add the Ethereum chain information to the dashboard\n3. Document the minter's Candid interface\n4. Add an endpoint to retrieve the helper smart contract address \n\nSee merge request dfinity-lab/public/ic!14613"
      },
      {
        "id": "96286236ce70e4ae2eaf4e998e6b0b8977c26717",
        "date": "2023-09-06T14:12:02Z",
        "message": "refactor(cketh): clean-up [override-didc-check]"
      },
      {
        "id": "bc5efa6ab14b464f65f6a484a9242cf86811b521",
        "date": "2023-09-06T08:31:02Z",
        "message": "Merge branch 'gdemay/FI-896-validate-minter-args' into 'master'\n\nfeat(cketh): validate init and upgrade minter args\n\n(FI-896): The minter's runtime configuration is influenced by the following parameters:\n1. Parameters given upon initialization, which are defined in `lifecycle/init.rs`.\n2. Parameters given upon upgrade, which may overwrite previous values (from previous upgrades or initialization) and are defined in `lifecycle/upgrade.rs`. This MR makes the following parameters upgradable:\n    * `next_transaction_nonce`\n    * `minimum_withdrawal_amount`\n    * `ethereum_contract_address`\n\nThis MR does some basic checking of those parameters to ensure their validity:\n1. `ecdsa_key_name` is not blank\n2. `ledger_id` is not the anonymous principal\n3. `ethereum_contract_address` if provided is not the contract creation address (all-zeros)\n4. `minimum_withdrawal_amount` is positive \n\nSee merge request dfinity-lab/public/ic!14535"
      },
      {
        "id": "945caf12d3339b44f72965875dbf4acaf12b4e82",
        "date": "2023-09-06T08:31:02Z",
        "message": "feat(cketh): validate init and upgrade minter args"
      },
      {
        "id": "8a0b5f00a536071a3ef188a94efb6f5670b50fb6",
        "date": "2023-09-05T14:49:17Z",
        "message": "Merge branch 'gdemay/FI-867-fix' into 'master'\n\nfix(cketh): make `Transaction::gasPrice` optional\n\n(FI-867): Although `Transaction::gasPrice` is required according to the [specification](https://ethereum.github.io/execution-apis/api-documentation/), some providers do not always include it. \n\nSee merge request dfinity-lab/public/ic!14587"
      },
      {
        "id": "f20d1782c56902a3d21c5fe586d51fd79ef08668",
        "date": "2023-09-05T14:49:17Z",
        "message": "fix(cketh): make `Transaction::gasPrice` optional"
      },
      {
        "id": "a08e6de6fb2a96251531cc08e395ed7145632062",
        "date": "2023-09-04T14:14:15Z",
        "message": "Merge branch 'gdemay/FI-867-blocking-withdrawal' into 'master'\n\nfeat(cketh-experimental): blocking withdrawal flow until transaction minted [override-didc-check]\n\n(FI-867): Refactor the withdrawal flow with a new data structure `EthTransactions` to enforce the following invariants:\n1. Withdrawal requests from the user are stored in a queue, which may contain several such requests.\n2. There is at most one pending request, which is initially not set.\n5. On a timer, try to confirm the pending transaction in one go:\n    1. If there is no pending transaction, take a withdrawal request from the queue, estimate the current transaction fees, increment the transaction nonce and create an `Eip1559TransactionRequest` as pending transaction\n    2. Signed the request with threshold ECDSA\n    3. Send the signed transaction to Ethereum via `eth_sendRawTransaction`\n    4. Observe whether the transaction is confirmed, meaning that it was mined in a block. If confirmed, move the pending transaction to the pool of confirmed transaction.\n    5. If any of those steps fails, return\n3. On the next timer pick-up, the pending transaction and go back at the step where it previously was before failing and do the next steps\n\nThis process was successfully tested [locally](https://sepolia.etherscan.io/address/0x907b6efc1a398fd88a8161b3ca02eec8eaf72ca1) (recording multiple withdrawal requests and processing Ethereum transactions one at a time). \n\nSee merge request dfinity-lab/public/ic!14458"
      },
      {
        "id": "ac7630425a5ef5c4e02893a94e1315d842f6b6e8",
        "date": "2023-09-04T14:14:15Z",
        "message": "feat(cketh-experimental): blocking withdrawal flow until transaction minted [override-didc-check]"
      },
      {
        "id": "65f1480bf6a72e23171355ddf9f8d59cf4c7ba59",
        "date": "2023-08-31T19:44:56Z",
        "message": "Merge branch 'gdemay/FI-918-record-deposit-rejection' into 'master'\n\nfeat(cketh): record reason in case ETH deposit is rejected\n\n(FI-918): Records and displays the reason on the dashboard in case a ETH deposit was rejected (not minted to ckETH). \n\nSee merge request dfinity-lab/public/ic!14518"
      },
      {
        "id": "0e53e40c47dd5e654fc8ebd7296c5f9dfea617a0",
        "date": "2023-08-31T19:44:56Z",
        "message": "feat(cketh): record reason in case ETH deposit is rejected"
      },
      {
        "id": "dfd89763cb1272f7cd2b2585edefb9b3970ae3e4",
        "date": "2023-08-31T10:30:00Z",
        "message": "Merge branch 'gdemay/FI-894-forbid-zero-address' into 'master'\n\nfeat(cketh-experimental): forbid contract creation address as destination of an Ethereum transfer\n\n(FI-894): Ensures that the user input Ethereum address which is used as destination to convert ckETH to ETH is not the all zero contract creation address. \n\nSee merge request dfinity-lab/public/ic!14500"
      },
      {
        "id": "de78c4f0a58a22a3bd309bb56a4a60c10d974494",
        "date": "2023-08-31T10:29:59Z",
        "message": "feat(cketh-experimental): forbid contract creation address as destination of an Ethereum transfer"
      },
      {
        "id": "52b7a7b75a5d5b3750cbe6b1b184c023e3388943",
        "date": "2023-08-30T10:10:49Z",
        "message": "Merge branch 'gdemay/FI-892-faster-catch-up' into 'master'\n\nfeat(cketh-experimental): faster catch-up during ETH logs scraping [override-didc-check]\n\n(FI-892): Scraps Ethereum logs via `eth_getLogs` aggressively until the minter catches up with the current finalized bock height. Then, reduce the frequency at which logs are scraped. \n\nSee merge request dfinity-lab/public/ic!14378"
      },
      {
        "id": "61c22bb6816d59be6a83e3a20a2fad74cc9dffc3",
        "date": "2023-08-30T10:10:49Z",
        "message": "feat(cketh-experimental): faster catch-up during ETH logs scraping [override-didc-check]"
      },
      {
        "id": "fa1890148225399ef7a04e74673b192090895a59",
        "date": "2023-08-28T09:23:12Z",
        "message": "Merge branch 'gdemay/FI-875-error-send-raw-tx' into 'master'\n\nfeat(experimental-ckETH): sanitize errors for `eth_sendRawTransaction` [override-didc-check]\n\n(FI-875): Sending an Ethereum transaction via HTTP outcalls with the JSON-RPC method [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction) is problematic for the following reasons:\n1. The signed transaction will be send multiple (subnet size) times to one JSON-RPC provider but `eth_sendRawTransaction` is by definition not idempotent (it changes the state of the Ethereum blockchain). This means that one subnet node may get an ok result, while the other nodes will receive an error (typically something like the transaction being `already known`). The result of the HTTP outcall after consensus will therefore be an error, even though the transaction was successfully sent to the Ethereum blockchain.\n2. Errors are unfortunately not standardized in the [JSON-RPC Ethereum API](https://ethereum.org/en/developers/docs/apis/json-rpc/) and so different Ethereum clients **do** respond with different errors in that case. This implies that the result of the HTTP outcall after consensus may end up in an unexpected error or worse that no consensus was achieved if they were too many different errors.\n\nTo circumvent this, this MR sanitizes the response of HTTP outcalls for `eth_sendRawTransaction` by parsing the returned `code` and `message` in case of an error for 4 different Ethereum clients: \n1. [Geth](https://github.com/ethereum/go-ethereum)\n2. [Nethermind](https://github.com/NethermindEth/nethermind)\n3. [Erigon](https://github.com/ledgerwatch/erigon)\n4. [Besu](https://github.com/hyperledger/besu) \n\nThose providers constitutes [more than 99% of Ethereum nodes](https://ethernodes.org/). \n\nSee merge request dfinity-lab/public/ic!14336"
      },
      {
        "id": "038ce5d9f30445476d71ba89992429a4fe1c283a",
        "date": "2023-08-28T09:23:12Z",
        "message": "feat(experimental-ckETH): sanitize errors for `eth_sendRawTransaction` [override-didc-check]"
      },
      {
        "id": "1daa209e553c5469cab1576d664619c388312fa3",
        "date": "2023-08-25T11:45:44Z",
        "message": "Merge branch 'roman-cketh-print-proxy' into 'master'\n\nfeat(cketh): print all logs to debug stream\n\nWith this change, ckETH minter will display all log entries in the debug\nreplica output. \n\nSee merge request dfinity-lab/public/ic!14382"
      },
      {
        "id": "8f9b3e7031c0c7c2e6256b9cd2d4e7d466b7c50e",
        "date": "2023-08-24T10:04:00Z",
        "message": "Merge branch 'gdemay/FI-867-eth-network-in-init-args' into 'master'\n\nrefactor(experimental-ckETH): Ethereum network configurable in `InitArg` [override-didc-check]\n\n(FI-867): Makes the chosen Ethereum network (Mainnet or Sepolia for testing) configurable in the minter initialization arguments `InitArg`. \n\nSee merge request dfinity-lab/public/ic!14274"
      },
      {
        "id": "8ec5c821b6d288ad17660349aede0a0faf65bffe",
        "date": "2023-08-24T10:04:00Z",
        "message": "refactor(experimental-ckETH): Ethereum network configurable in `InitArg` [override-didc-check]"
      },
      {
        "id": "fba67641f0cd914956759cf2b889c742942dd369",
        "date": "2023-08-22T12:59:50Z",
        "message": "Merge branch 'gdemay/FI-867-nonce-in-init-args' into 'master'\n\nrefactor(experimental-ckETH): Make `next_transaction_nonce` configurable in minter `InitArg` [override-didc-check]\n\n(FI-867) The initial nonce value used in Ethereum transaction can now be configured in the canister initialization arguments. Also ensure that Ethereum transactions are at the charge of the beneficiary. \n\nSee merge request dfinity-lab/public/ic!14214"
      },
      {
        "id": "0fa84173749fba115ba0c7bc32b919c2a05bf94c",
        "date": "2023-08-22T12:59:48Z",
        "message": "refactor(experimental-ckETH): Make `next_transaction_nonce` configurable in minter `InitArg` [override-didc-check]"
      },
      {
        "id": "f99495f3772d5a85d25ef5008179b49a5f12c5c2",
        "date": "2023-08-16T18:39:33Z",
        "message": "Merge branch 'gdemay/FI-867-fix-signature-y-parity' into 'master'\n\nfix(experimental-ckETH): fix computation of `signature_y_parity`\n\nUse the newly introduced utility function `PublicKey::try_recovery_from_digest` in [MR-14121](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14121) to fix the incorrect computation of `signature_y_parity` during the signing of [EIP-1559 transactions](https://eips.ethereum.org/EIPS/eip-1559). \n\nSee merge request dfinity-lab/public/ic!14175"
      },
      {
        "id": "88a6e715c6b8ca25a7e16e5320637431a10e32e7",
        "date": "2023-08-16T18:39:33Z",
        "message": "fix(experimental-ckETH): fix computation of `signature_y_parity`"
      },
      {
        "id": "1ccd519db1d24adc023e2409fdf94cfc2777fe92",
        "date": "2023-08-16T08:47:04Z",
        "message": "Merge branch 'gdemay/CRP-2166-signature-y-parity' into 'master'\n\nfeat(crypto): CRP-2166 recover `signature_y_parity` for ecdsa-secp256k1\n\nGiven a public key, a message digest and a signature on it, compute the parity of the y value of the curve point for which r is the x-value in the ECDSA secp256k1 signing process. \n\nSee merge request dfinity-lab/public/ic!14121"
      },
      {
        "id": "f60b1289d25627a5481b689836be2f3101d15c3e",
        "date": "2023-08-16T08:47:03Z",
        "message": "feat(crypto): CRP-2166 recover `signature_y_parity` for ecdsa-secp256k1"
      },
      {
        "id": "da2669ff76d74473fc6eb0825f0c73b9b5be2ca1",
        "date": "2023-08-15T10:35:27Z",
        "message": "Merge branch 'gdemay/FI-867-sign-and-send' into 'master'\n\nfeat(experimental-ckETH): timer to sign and send pending transactions [override-didc-check]\n\n(FI-867): Follow-up on [MR-13925](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13925) to withdraw ckETH to ETH. This MR processes queued transactions as follows:\n1. on a timer, sign prepared transactions from [MR-13925](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13925). Queue signed transactions.\n2. on a timer, try to send via `eth_sendRawTransaction` to Ethereum every signed transaction. Queue sent transactions if the call was successful, otherwise retry sending the same transaction later on. There is currently no transformation associated with `eth_sendRawTransaction` to clean-up the response so it's expected that this call will most likely fail once the minter is deployed. \n\nSee merge request dfinity-lab/public/ic!13969"
      },
      {
        "id": "7ca2d3b0eb99b17cc37ee766c93fb5f2a7e3afc5",
        "date": "2023-08-15T10:35:27Z",
        "message": "feat(experimental-ckETH): timer to sign and send pending transactions [override-didc-check]"
      },
      {
        "id": "d5a3a1d3148636f3947637589531168054aa1780",
        "date": "2023-08-14T15:51:16Z",
        "message": "Merge branch 'gdemay/FI-848-json-rpc-providers' into 'master'\n\nfeat(experimental-ckETH): Ethereum RPC client for querying multiple providers\n\n(FI-848): Introduce an Ethereum RPC client `EthRpcClient` that is used to handle all JSON-RPC calls to Ethereum RPC node providers. Depending on whether the considered call is security relevant for ckETH, two behaviours are provided:\n1. Multiple providers are queried in parallel with the same request and their results are expected to be all equal. This is to ensure that no single provider can influence the minter's state. This is the case for `eth_getLogs`, `eth_getBlockByNumber` and `eth_getTransactionByHash`.\n2. Providers are queried sequentially until the first JSON-RPC response is encountered. This is to ensure that a single provider if down will not negatively impact the system's liveness. This is the case for `eth_feeHistory` and for `eth_sendRawTransaction`. \n\nSee merge request dfinity-lab/public/ic!14044"
      },
      {
        "id": "8e2c6dfd18e6068631d36a553694c38499e35bbc",
        "date": "2023-08-14T15:51:14Z",
        "message": "feat(experimental-ckETH): Ethereum RPC client for querying multiple providers"
      },
      {
        "id": "6c5700664804690bc70c8201d85f7b7a16e74d3d",
        "date": "2023-08-11T15:02:55Z",
        "message": "Merge branch 'gdemay/FI-848-response-size' into 'master'\n\nrefactor(experimental-ckETH): reduce `max_response_bytes` in HTTP outcalls from 200 KB to 10KB\n\n(FI-848): Seem impact on burn rate:\n1. 2023.08.11 at 13:30 ZRH: Balance: `11_762_435_637_357` Cycles after re-installation\n2. 2023.08.11 at 14:30 ZRH: Balance: `11_749_399_533_023` -> `-13_036_104_334` cycles\n3. 2023.08.11 at 15:30 ZRH: Balance: `11_738_007_836_960` -> `-11_391_696_063` cycles\n4. 2023.08.11 at 16:30 ZRH: Balance: `11_724_588_013_366` -> `-13_419_823_594` cycles \n\nSee merge request dfinity-lab/public/ic!14108"
      },
      {
        "id": "3d92caba9821cb91adc2173f2877a0af4fecbc07",
        "date": "2023-08-11T15:02:55Z",
        "message": "refactor(experimental-ckETH): reduce `max_response_bytes` in HTTP outcalls from 200 KB to 10KB"
      },
      {
        "id": "8b547cde1964d61be834bae81be5ba0406670707",
        "date": "2023-08-07T15:45:24Z",
        "message": "Merge branch 'gdemay/FI-867-withdraw' into 'master'\n\nfeat(experimental-ckETH): queue for pending transactions\n\n(FI-867): Withdrawal flow to convert ckETH back to ETH. Upon a user can request to withdraw a certain amount of ckETH to a given Ethereum address this MR prepares a transaction request as follows:\n1. Estimates current price of Ethereum transactions. Ensure that the requested amount is not smaller than the maximal transaction fee.\n2. Increment and retrieve the current value for transaction nonce\n2. Add transaction request to queue.\n\nCurrently, the interaction with the ledger (e.g. burning requested amount of ckETH) is fake and only printed on standard output. \nIn a follow-up MR, a timer will work on this queue to sign a transaction request via t-ECDSA, send it to Ethereum blockchain and check its status at regular interval. \n\nSee merge request dfinity-lab/public/ic!13925"
      },
      {
        "id": "f263136462d2f4bd15d434a09d61c473eb76820d",
        "date": "2023-08-07T15:45:21Z",
        "message": "feat(experimental-ckETH): queue for pending transactions"
      },
      {
        "id": "31c3206948e7050fdda39f80916c624443a456f2",
        "date": "2023-08-03T13:52:49Z",
        "message": "Merge branch 'gdemay/FI-848-optimize-http-outcalls' into 'master'\n\nrefactor(experimental-ckETH): reduce number of HTTP outcalls to scrap ETH log events\n\n(FI-848): \n1. Reduces frequency at which ETH logs are scrapped from 15s to 3m.\n2. Provides a new query point \"dump_state_for_debugging\" to retrieve the current state of the minter canister for debugging purposes. \n\nSee merge request dfinity-lab/public/ic!13947"
      },
      {
        "id": "241348f0263a63ecec6eea74fbaa3714b7cb6efb",
        "date": "2023-08-03T13:52:49Z",
        "message": "refactor(experimental-ckETH): reduce number of HTTP outcalls to scrap ETH log events"
      },
      {
        "id": "d6fb1ce6fb00650262d18195ccf756a4ba8e1fac",
        "date": "2023-08-02T15:06:13Z",
        "message": "Merge branch 'gdemay/FI-865-transaction-status' into 'master'\n\nfeat(experimental-ckETH): check status of Ethereum transactions\n\n(FI-865) Check the status of an Ethereum transaction from its hash by calling [`eth_getTransactionByHash`](https://ethereum.github.io/execution-apis/api-documentation/). This method was favoured over `eth_getTransactionReceipt` since the first does return some information in case the transaction is pending and not yet finalized. \n\nSee merge request dfinity-lab/public/ic!13887"
      },
      {
        "id": "d30ff9a7e0592f750e070936eb977480c235b489",
        "date": "2023-08-02T15:06:12Z",
        "message": "feat(experimental-ckETH): check status of Ethereum transactions"
      },
      {
        "id": "d9dfe00d00b22cbe8c640f9f206e1a1c699d2920",
        "date": "2023-08-02T12:51:19Z",
        "message": "Merge branch 'gdemay/FI-843-forbid-some-principals' into 'master'\n\nrefactor(experimental-ckETH): forbid some principals to receive ckETH\n\n(FI-843): Follow-up on [MR-13776](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13776) to ensure that that the following principals cannot be used to receive ckETH:\n1. management canister principal\n2. anonymous principal \n\nSee merge request dfinity-lab/public/ic!13872"
      },
      {
        "id": "16d8777cf448af7728b0330fa60e6decbc3a6ad6",
        "date": "2023-08-02T12:51:19Z",
        "message": "refactor(experimental-ckETH): forbid some principals to receive ckETH"
      }
    ],
    "email": "gregory.demay@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 128,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 63,
    "fixes": 13,
    "feats": 26,
    "non_merge_commits": [
      {
        "id": "d9f026a23cc00190457d3ef68f5839d7179065b5",
        "date": "2023-11-22T09:06:56Z",
        "message": "test(cketh): integration test to ensure logs are not scrapped twice when changing tracked ethereum block height"
      },
      {
        "id": "f4c6b2027da8aa7def9a472a1f43a88f27d0c699",
        "date": "2023-11-21T08:59:37Z",
        "message": "feat(cketh): add hash of failed transaction to dashboard"
      },
      {
        "id": "029765df88faffbc76357c12aa0418ce40f0641b",
        "date": "2023-11-20T09:56:19Z",
        "message": "fix(cketh): fix typo in Solidity helper smart contract related to `event_counter`"
      },
      {
        "id": "6be4dca11473d1f679b602ae5273be568db8ac8e",
        "date": "2023-11-17T12:57:25Z",
        "message": "test(cketh): integration tests for interaction with ledger"
      },
      {
        "id": "f5acce6e0ce892c96bc46c7a113eff48ce0411c4",
        "date": "2023-11-17T10:23:21Z",
        "message": "fix: ensure nonce used for update request is at most 32 bytes"
      },
      {
        "id": "d1f5440050d1e383c10657962abd6eed213a691d",
        "date": "2023-11-15T16:37:56Z",
        "message": "fix(cketh): bug when scraping ethereum logs"
      },
      {
        "id": "be3ebfb4d5d975b3cb00011e05bfb34e143c204e",
        "date": "2023-11-14T19:26:47Z",
        "message": "chore(cketh): clean-up TODOs and consolidate address validation"
      },
      {
        "id": "70f2554b58d88d0701d23827066e2be5f4cd037c",
        "date": "2023-11-14T17:41:05Z",
        "message": "fix(crypto): Limit size of nonces in HTTP requests"
      },
      {
        "id": "fc3196cd28f9e789bdae28f96ca3e7c3f4c83096",
        "date": "2023-11-14T09:40:10Z",
        "message": "refactor(cketh): ensure transaction price estimation does not panic"
      },
      {
        "id": "3ed3082f98026a15bb0315f5b86dc103c662ca25",
        "date": "2023-11-13T10:39:36Z",
        "message": "test(cketh): integration tests for transaction resubmission"
      },
      {
        "id": "8ed3f4853095dabf21ebbbe4e9551238fe66b233",
        "date": "2023-11-09T11:15:15Z",
        "message": "test(cketh): integration tests for withdrawals"
      },
      {
        "id": "26bfb831fa044cf22034ffcceaf710f7b0a77351",
        "date": "2023-11-08T11:15:31Z",
        "message": "feat(cketh): display first scraped block number and minimum withdrawal amount on dashboard"
      },
      {
        "id": "80ba9f771850a871962116a754d6488c841ff3cc",
        "date": "2023-11-08T10:12:52Z",
        "message": "feat(cketh): track minter's balance"
      },
      {
        "id": "c66e989fb1c30ea42df8be35fb37e5812c973ecc",
        "date": "2023-11-07T16:53:42Z",
        "message": "fix: consolidate dependencies in `state_machine_tests`"
      },
      {
        "id": "d6b37489a38aead7b08fbf5c0d4ca90de1edd0b1",
        "date": "2023-11-07T09:40:53Z",
        "message": "refactor(cketh): memoize transaction hash"
      },
      {
        "id": "101dcf5268d9fd21ce9c88ed13348ed506e93fd7",
        "date": "2023-11-06T16:24:22Z",
        "message": "refactor(cketh): remove some unnecessary serde annotations"
      },
      {
        "id": "ad45ffb08b966a7eab74ccc4a72c387e6ae3f769",
        "date": "2023-11-06T10:49:13Z",
        "message": "test(cketh): test infrastructure to mock HTTP outcalls"
      },
      {
        "id": "000c5aaf21f095b18c1975e8999a0dc77ea8e9d0",
        "date": "2023-11-03T07:51:05Z",
        "message": "feat(cketh): use multiple providers to retrieve transaction fee history"
      },
      {
        "id": "41a33592de01ea8bc10bc419f6cb981007d1686f",
        "date": "2023-11-01T09:24:38Z",
        "message": "refactor(cketh): ensure that signed and finalized transactions are immutable"
      },
      {
        "id": "0b38a56379be980d300e191ffcb4f7621e4ff242",
        "date": "2023-10-31T13:20:59Z",
        "message": "test(cketh): refactor integration tests"
      },
      {
        "id": "857d570cd7c2275d7b221fcebe47ccad1788a2aa",
        "date": "2023-10-30T09:54:54Z",
        "message": "test(cketh): add unit tests for dashboard (II)"
      },
      {
        "id": "6f5cab223ee229fe4e9e793cd099d4cde442b87c",
        "date": "2023-10-26T13:36:41Z",
        "message": "fix(cketh): Return an error when receipient's address is blocked [override-didc-check]"
      },
      {
        "id": "64cf8375b5fe678e78dde346e5b39bcad8d672dc",
        "date": "2023-10-26T11:18:06Z",
        "message": "test(cketh): add unit tests for dashboard (I)"
      },
      {
        "id": "9ebe3abc3e3b9f78ee8b3f2c20ec685610c9b7e4",
        "date": "2023-10-24T15:18:53Z",
        "message": "feat(cketh): Limit number of parallel operations in withdrawals ckETH -> ETH"
      },
      {
        "id": "32a7684f085277eef7ffa733bdd985c0f3e04978",
        "date": "2023-10-13T16:24:56Z",
        "message": "refactor(cketh): remove panics in JSON-RPC calls"
      },
      {
        "id": "e68d27558b3e2334d581021ad36cc0b416137f8b",
        "date": "2023-10-13T12:37:18Z",
        "message": "refactor(cketh): simplify data structure for withdrawal flow [override-didc-check]"
      },
      {
        "id": "095982613c035b9211de2fc822007b1ca0d6e44a",
        "date": "2023-10-11T08:45:39Z",
        "message": "fix(cketh): improve handling of `eth_get_logs`"
      },
      {
        "id": "03abe903287511ec26708d981ef6f697d61c7162",
        "date": "2023-10-05T21:12:13Z",
        "message": "fix(cketh): fix match pattern in case response body is too big"
      },
      {
        "id": "1baa6279e9c576097eae584e51b183b5f6b18511",
        "date": "2023-10-05T15:08:36Z",
        "message": "fix(cketh): fix serialization of `TransactionStatus`"
      },
      {
        "id": "9ac71233e8da50993b110c18c66c9a3df378aed5",
        "date": "2023-10-05T10:10:59Z",
        "message": "chore(cketh): remove `eth_get_transaction_by_hash`"
      },
      {
        "id": "1771c613810e4ffc5c76eda886c6a65852f54495",
        "date": "2023-10-05T10:10:11Z",
        "message": "feat(cketh): Add PublicNode as 3rd JSON-RPC provider"
      },
      {
        "id": "994bc7360ae375acc5fb15239c1317728f30181a",
        "date": "2023-10-05T05:21:15Z",
        "message": "feat(cketh): Finalize transactions"
      },
      {
        "id": "b45afeb58f99f299ee4e21e21f968d780ee379de",
        "date": "2023-10-04T10:09:50Z",
        "message": "chore(cketh): clean-up of some TODOs"
      },
      {
        "id": "cc5adf258882b9cd69a6666abda280af516ca410",
        "date": "2023-10-03T15:07:10Z",
        "message": "feat(cketh): add a warning banner on minter's dashboard"
      },
      {
        "id": "7d6c3511a85f9375f723cc01796b8d12f65273f3",
        "date": "2023-10-03T12:26:43Z",
        "message": "feat(cketh): resubmit stuck transactions"
      },
      {
        "id": "211392a54f1324deab9188e52ef6513ff34f1794",
        "date": "2023-09-28T08:43:05Z",
        "message": "feat(cketh): Parallel processing of ETH withdrawals"
      },
      {
        "id": "f8afea323ae28bb546cd6a037960aa4eb24e3e71",
        "date": "2023-09-22T08:57:12Z",
        "message": "refactor(cketh): multi key map to index transactions by nounces and burn indeces"
      },
      {
        "id": "e51eb1f814993e281d61fa5f40b89052381e150f",
        "date": "2023-09-21T10:22:28Z",
        "message": "fix(cketh): fix links to etherscan block number on dashboard"
      },
      {
        "id": "3819ab05ddf482ad857e902b6613e8475af41be7",
        "date": "2023-09-19T14:56:31Z",
        "message": "refactor(cketh): consolidate numeric types (checked-amount-of)"
      },
      {
        "id": "cc965a0d756d5002fc744687336537a9d7f89e45",
        "date": "2023-09-18T14:15:01Z",
        "message": "feat(cketh): retrieve transaction count for finalized and latest block height"
      },
      {
        "id": "17aafc72da5b40d47cbf73109de8c70d8f71b6be",
        "date": "2023-09-14T19:39:00Z",
        "message": "feat(cketh): Retrieve transaction receipt"
      },
      {
        "id": "dd9ca5aea1878474bee6705914da39ded69a2185",
        "date": "2023-09-14T08:51:22Z",
        "message": "fix(cketh): normalize JSON-RPC responses for `Block` and `Vec<LogEntry>`"
      },
      {
        "id": "9c48963800506ef1407c757207471c7623f40f6d",
        "date": "2023-09-12T08:41:31Z",
        "message": "feat(cketh): configure observed height of Ethereum blocks"
      },
      {
        "id": "c1195af6ebca676a9a5ce0cfea3829fdc55cd637",
        "date": "2023-09-11T18:28:27Z",
        "message": "feat(cketh): display events to mint on dashboard"
      },
      {
        "id": "f40df83ca12f27696f1a3cb7a47e567ff7752d27",
        "date": "2023-09-11T09:16:56Z",
        "message": "refactor(cketh): improve debug formatting"
      },
      {
        "id": "f681e65069490b82b93eaae9098b183e9c2e7614",
        "date": "2023-09-07T11:21:04Z",
        "message": "feat(cketh): correlation ID for JSON-RPC requests and responses"
      },
      {
        "id": "96286236ce70e4ae2eaf4e998e6b0b8977c26717",
        "date": "2023-09-06T14:12:02Z",
        "message": "refactor(cketh): clean-up [override-didc-check]"
      },
      {
        "id": "945caf12d3339b44f72965875dbf4acaf12b4e82",
        "date": "2023-09-06T08:31:02Z",
        "message": "feat(cketh): validate init and upgrade minter args"
      },
      {
        "id": "f20d1782c56902a3d21c5fe586d51fd79ef08668",
        "date": "2023-09-05T14:49:17Z",
        "message": "fix(cketh): make `Transaction::gasPrice` optional"
      },
      {
        "id": "ac7630425a5ef5c4e02893a94e1315d842f6b6e8",
        "date": "2023-09-04T14:14:15Z",
        "message": "feat(cketh-experimental): blocking withdrawal flow until transaction minted [override-didc-check]"
      },
      {
        "id": "0e53e40c47dd5e654fc8ebd7296c5f9dfea617a0",
        "date": "2023-08-31T19:44:56Z",
        "message": "feat(cketh): record reason in case ETH deposit is rejected"
      },
      {
        "id": "de78c4f0a58a22a3bd309bb56a4a60c10d974494",
        "date": "2023-08-31T10:29:59Z",
        "message": "feat(cketh-experimental): forbid contract creation address as destination of an Ethereum transfer"
      },
      {
        "id": "61c22bb6816d59be6a83e3a20a2fad74cc9dffc3",
        "date": "2023-08-30T10:10:49Z",
        "message": "feat(cketh-experimental): faster catch-up during ETH logs scraping [override-didc-check]"
      },
      {
        "id": "038ce5d9f30445476d71ba89992429a4fe1c283a",
        "date": "2023-08-28T09:23:12Z",
        "message": "feat(experimental-ckETH): sanitize errors for `eth_sendRawTransaction` [override-didc-check]"
      },
      {
        "id": "8ec5c821b6d288ad17660349aede0a0faf65bffe",
        "date": "2023-08-24T10:04:00Z",
        "message": "refactor(experimental-ckETH): Ethereum network configurable in `InitArg` [override-didc-check]"
      },
      {
        "id": "0fa84173749fba115ba0c7bc32b919c2a05bf94c",
        "date": "2023-08-22T12:59:48Z",
        "message": "refactor(experimental-ckETH): Make `next_transaction_nonce` configurable in minter `InitArg` [override-didc-check]"
      },
      {
        "id": "88a6e715c6b8ca25a7e16e5320637431a10e32e7",
        "date": "2023-08-16T18:39:33Z",
        "message": "fix(experimental-ckETH): fix computation of `signature_y_parity`"
      },
      {
        "id": "f60b1289d25627a5481b689836be2f3101d15c3e",
        "date": "2023-08-16T08:47:03Z",
        "message": "feat(crypto): CRP-2166 recover `signature_y_parity` for ecdsa-secp256k1"
      },
      {
        "id": "7ca2d3b0eb99b17cc37ee766c93fb5f2a7e3afc5",
        "date": "2023-08-15T10:35:27Z",
        "message": "feat(experimental-ckETH): timer to sign and send pending transactions [override-didc-check]"
      },
      {
        "id": "8e2c6dfd18e6068631d36a553694c38499e35bbc",
        "date": "2023-08-14T15:51:14Z",
        "message": "feat(experimental-ckETH): Ethereum RPC client for querying multiple providers"
      },
      {
        "id": "3d92caba9821cb91adc2173f2877a0af4fecbc07",
        "date": "2023-08-11T15:02:55Z",
        "message": "refactor(experimental-ckETH): reduce `max_response_bytes` in HTTP outcalls from 200 KB to 10KB"
      },
      {
        "id": "f263136462d2f4bd15d434a09d61c473eb76820d",
        "date": "2023-08-07T15:45:21Z",
        "message": "feat(experimental-ckETH): queue for pending transactions"
      },
      {
        "id": "241348f0263a63ecec6eea74fbaa3714b7cb6efb",
        "date": "2023-08-03T13:52:49Z",
        "message": "refactor(experimental-ckETH): reduce number of HTTP outcalls to scrap ETH log events"
      },
      {
        "id": "d30ff9a7e0592f750e070936eb977480c235b489",
        "date": "2023-08-02T15:06:12Z",
        "message": "feat(experimental-ckETH): check status of Ethereum transactions"
      },
      {
        "id": "16d8777cf448af7728b0330fa60e6decbc3a6ad6",
        "date": "2023-08-02T12:51:19Z",
        "message": "refactor(experimental-ckETH): forbid some principals to receive ckETH"
      }
    ],
    "line_additions": 19132,
    "line_deletions": 5027,
    "lines_effected_total": 24159,
    "rel_comm_add": 55,
    "rel_comm_del": 42,
    "rel_comm_total": 57
  },
  {
    "login": "dsd-at-dfinity",
    "id": 118480276,
    "totalContributions": 413,
    "github": "https://github.com/dsd-at-dfinity",
    "commits": [
      {
        "id": "17b46b7be8121eb1df9a0ef764fbbf0d3df752b9",
        "date": "2023-10-12T09:27:21Z",
        "message": "Merge branch 'elias/revert-pic-timeout' into 'master'\n\nRevert \"fix(PocketIC): Use timeout for requests\"\n\nThis reverts commit 6daf8dfaffa12dd03d35b2f7a59bf9e2c8f83fb5.\nThe change did not fix the problem. Should we undo it? \n\nSee merge request dfinity-lab/public/ic!15352"
      },
      {
        "id": "24232a658ce3780e53770d6747ff0d3d6b1177e1",
        "date": "2023-10-10T14:58:04Z",
        "message": "Merge branch 'dsd/pocket-ic/shipshape' into 'master'\n\nchore(VER-2543): shipshape pocket-ic package\n\n \n\nSee merge request dfinity-lab/public/ic!15319"
      },
      {
        "id": "95b66d5aa8ab35cd80d5199fc527c36fe00c850c",
        "date": "2023-10-09T12:56:03Z",
        "message": "Merge branch 'dsd/pocket-ic/retain_state_dir' into 'master'\n\nfix(VER-2539): don't recursively delete state dir as it slows down test execution\n\nWhen the state_dir-`TempDir` owned by the StateMachine struct is dropped, the corresponding directory is deleted recursively. The method `into_state_dir` destroys the state machine, but returns the `TempDir` that contains the state directory without deleting it. \n\nSee merge request dfinity-lab/public/ic!15277"
      },
      {
        "id": "4429bf0c965d839d1329877e4087add654fb4eee",
        "date": "2023-10-09T12:56:03Z",
        "message": "fix(VER-2539): don't recursively delete state dir as it slows down test execution"
      },
      {
        "id": "cdb2c828f519de38d31318c354d3f56ef41b384e",
        "date": "2023-10-09T12:54:05Z",
        "message": "Merge branch 'ic-mainnet-revisions' into 'master'\n\nUpdate Mainnet IC revisions file\n\n \n\nSee merge request dfinity-lab/public/ic!15294"
      },
      {
        "id": "a78abeaf12383d1bd19866fbc98782fd17ebeb70",
        "date": "2023-10-05T15:26:02Z",
        "message": "Merge branch 'dsd/pocket-ic/gc_background' into 'master'\n\nchore(VER-2537): gc pocket ic instances in the background\n\n \n\nSee merge request dfinity-lab/public/ic!15235"
      },
      {
        "id": "4cd4b8e071a8388d66ec0e60c291b88c9f7b7089",
        "date": "2023-10-04T15:21:42Z",
        "message": "Merge branch 'dsd/remove_write_lock' into 'master'\n\nfix(VER-2534): Don't grab write lock when deleting an instance\n\n \n\nSee merge request dfinity-lab/public/ic!15198"
      },
      {
        "id": "7ac94de89eeb18055996707e71ddc2cb2a5a30a0",
        "date": "2023-10-03T18:42:44Z",
        "message": "Merge branch 'dsd/pocket_ic/log_improvements' into 'master'\n\nfix(VER-2529): Logging Improvements\n\nThis removes all command line flags for PocketIC regarding logging. As we need to take care of environment variables anyway, let's use them. Adding command line arguments just introduces potential for confusions (precedence?)\n\n* PocketIC will use `RUST_LOG` env var by default to set log levels of all crates.\n* `POCKET_IC_LOG_DIR` allows specifying a directory that contains log files.\n* Using `POCKET_IC_LOG_DIR_LEVELS`, one can control the log levels for the log files independent of `RUST_LOG`.\n\nSo, e.g., providing the following settings, PocketIC will log use the level WARN when logging to stdout (while ignoring all other logs), but level TRACE when logging to files in the directory /tmp/pocket_ic/log:\n\n`RUST_LOG=\"pocket_ic_server=WARN\" POCKET_IC_LOG_DIR=\"/tmp/pocket_ic/log\" POCKET_IC_LOG_DIR_LEVELS=\"pocket_ic_server=TRACE,tower_http=TRACE,axum::reject=TRACE\"` \n\nSee merge request dfinity-lab/public/ic!15165"
      },
      {
        "id": "e8f525212ce4835aa5b200a0353d197794781f36",
        "date": "2023-10-03T18:42:43Z",
        "message": "fix(VER-2529): Logging Improvements"
      },
      {
        "id": "1805210cab873f70b7453e4feab94781586f434a",
        "date": "2023-10-03T12:54:58Z",
        "message": "chore(VER-2528): trace logs for state updates"
      },
      {
        "id": "bf0c1c39f18a8e36dd1b2c6e4f990d075e547e39",
        "date": "2023-10-03T08:38:54Z",
        "message": "Merge branch 'dsd/dont_panic_log_level' into 'master'\n\nfix(VER-2527): don't panic if RUST_LOG cannot be parsed; use default instead\n\n \n\nSee merge request dfinity-lab/public/ic!15152"
      },
      {
        "id": "134fa3f9001f978820cff0d2c2759b7addcf332f",
        "date": "2023-10-03T08:38:54Z",
        "message": "fix(VER-2527): don't panic if RUST_LOG cannot be parsed; use default instead"
      },
      {
        "id": "03caff1f70fc03f06c33faf0a0a46d3e2379019b",
        "date": "2023-10-02T16:20:37Z",
        "message": "Merge branch 'dsd/drop_lock_before_spawn' into 'master'\n\nchore(VER-2526): Drop lock before spawn\n\nThis change ensures that we drop the lock on the instances map before spawning a background task. The latter is suspected to cause delays. \n\nSee merge request dfinity-lab/public/ic!15144"
      },
      {
        "id": "c8096c5bd7232727f9280ca1343ea6b1741a2fe3",
        "date": "2023-10-02T16:20:34Z",
        "message": "chore(VER-2526): Drop lock before spawn"
      },
      {
        "id": "02415e512b4dcc6c06ea92616e5a0792d5fe1d96",
        "date": "2023-10-02T16:06:11Z",
        "message": "Merge branch 'elias/pic-timeouts-everywhere' into 'master'\n\nfix(VER-2525): Use timeouts in all methods\n\nWe experienced some flakiness in `set_time` due to the small default timeout, so we add the timeout even to the primitive functions \n\nSee merge request dfinity-lab/public/ic!15145"
      },
      {
        "id": "9476cdeaeba1d2553bde9b14c32ec508fc88bade",
        "date": "2023-10-02T15:04:44Z",
        "message": "Merge branch 'dsd/log_file' into 'master'\n\nfeat(VER-2522): Push logs to files\n\n* Adds an option `--log-dir`. If provided, PocketIC will write the logs to the specified directory and *not* log to stdout, unless `--log-to-stdout` is specified.\n* Adds an option '--log-level'. If provided, PocketIC will use the specified log level for the `pocket-ic-server` and `tower` crate.\n* Adds an option '--log-to-stdout`. If provided, PocketIC will log to stdout in any case. \n\nSee merge request dfinity-lab/public/ic!15142"
      },
      {
        "id": "2f86212a97e37f7698f67ef37426f09b9c43beb0",
        "date": "2023-10-02T15:04:44Z",
        "message": "feat(VER-2522): Push logs to files"
      },
      {
        "id": "a2416889b941935e52686110fcc91a7e7fd69246",
        "date": "2023-10-02T07:50:03Z",
        "message": "Merge branch 'tmu/bump-webpki' into 'master'\n\nbump webpki\n\n \n\nSee merge request dfinity-lab/public/ic!15121"
      },
      {
        "id": "4d6e936e0d76a809102e9b482f0465de48ae83ac",
        "date": "2023-10-02T06:47:05Z",
        "message": "Merge branch 'mwe/fixes' into 'master'\n\nfix: [VER-2493] Add some last missing bits to the PocketIc API\n\n \n\nSee merge request dfinity-lab/public/ic!15105"
      },
      {
        "id": "6062a462d8a8b417851afbd1cca34e1405687615",
        "date": "2023-09-29T11:49:00Z",
        "message": "Merge branch 'mwe/switch' into 'master'\n\nchore: [VER-2517] Switch PocketIc API from V1 to V2\n\n \n\nSee merge request dfinity-lab/public/ic!15096"
      },
      {
        "id": "0df03da56156a512b7292182a2b965c98cbb26e2",
        "date": "2023-09-29T07:37:29Z",
        "message": "Merge branch 'levsha/-IC-1490-Set-ssh2-crate-version-the-same-in-cargo-as-in-bazel-' into 'master'\n\n[IC-1490] Set ssh2 crate version the same in cargo as in bazel.\n\nThe version for bazel is set in `bazel/external_crates.bzl` \n\nSee merge request dfinity-lab/public/ic!15081"
      },
      {
        "id": "23b7608998ae9b4e8caa761026826efc7a5e6683",
        "date": "2023-09-28T14:06:37Z",
        "message": "Merge branch 'dsd/timeout_header' into 'master'\n\nfeat(VER-2512): Allow client to specify timeout\n\nAllows a client to specify the `processing-timeout-ms` header which indicates the duration a client is willing to wait for a synchronous response. \n\nSee merge request dfinity-lab/public/ic!15060"
      },
      {
        "id": "72f79b718182e859c2a62f18ab7e85328a0f9275",
        "date": "2023-09-28T14:06:36Z",
        "message": "feat(VER-2512): Allow client to specify timeout"
      },
      {
        "id": "d4ef77d68f705fe609b63a522c0590bc753d0447",
        "date": "2023-09-25T15:38:29Z",
        "message": "Merge branch 'dsd/pocket_ic_v2' into 'master'\n\nchore(VER-2505): Establish temporary PocketIcV2\n\n* `PocketIcV2` type that provides the same functionality as `PocketIc` but uses the new API.\n* Moves types and trait-declaration that are common between the server and the client library to `pocket-ic/src/common`.\n* De-duplicates some rust structs used in the rest api. \n\nSee merge request dfinity-lab/public/ic!14979"
      },
      {
        "id": "d09c297b5bec64dd75e4150b479df989fdecd19c",
        "date": "2023-09-25T15:38:29Z",
        "message": "chore(VER-2505): Establish temporary PocketIcV2"
      },
      {
        "id": "b89ddd0de9260e073b90708bfc8471ff6508fccd",
        "date": "2023-09-21T17:29:49Z",
        "message": "Merge branch 'elias/pocket-ic-server-logging-level' into 'master'\n\nchore(PocketIC): Less verbose logging by default\n\nSet logging level to info. \n\nSee merge request dfinity-lab/public/ic!14935"
      },
      {
        "id": "6af85a5d6a97ba588791f561fbd364bf49e37036",
        "date": "2023-09-20T15:38:42Z",
        "message": "Merge branch 'dsd/pic_logging' into 'master'\n\nchore(VER-2492): introduce tracing layer\n\n* Introduces a tracing layer in PocketIc using the `tracing` and `tracing-subscriber` crate. The logging level for the `pocket-ic-server` crate is set to `DEBUG` for now.\n* Replaces some println with proper log events.\n\nIn addition:\n* Updates calls to the `base64` encode to the new API of that crate. \n\nSee merge request dfinity-lab/public/ic!14903"
      },
      {
        "id": "ab6c126b14029e0775a2f306abaa598837f22c37",
        "date": "2023-09-20T15:38:42Z",
        "message": "chore(VER-2492): introduce tracing layer"
      },
      {
        "id": "1f75cedec0e0cb9c8c45f096f687c1cf89229a5b",
        "date": "2023-09-14T16:06:14Z",
        "message": "Merge branch 'mwe/ops' into 'master'\n\nfeat: [VER-2447] Add Operations for PocketIC\n\n* Uses the new `latest_state_certification_hash` to calculate the StateLabel of a PocketIc instance.\n* Add `ExecuteIngressMessage`, `Query`, `AddCycles`, `CyclesBalance` operations and corresponding tests.\n* Various refactorings. \n\nSee merge request dfinity-lab/public/ic!14692"
      },
      {
        "id": "c94a0b6ca4ab13b2f63a22323fcad48d766ceb8e",
        "date": "2023-09-13T14:55:30Z",
        "message": "Merge branch 'levsha/-IDX-2651-Decrease-CPU-reservations-for-spec_compliance_-to-4-' into 'master'\n\n[IDX-2651] Decrease CPU reservations for spec_compliance_* to 4.\n\nThese tests don't use so many CPUs they reserve:\n![Screenshot_2023-09-13_at_15.38.03](/uploads/db249e38161345ebecf7113c08bf6d3e/Screenshot_2023-09-13_at_15.38.03.png)\nHowever bazel doesn't track actual usage, it relies on what is requested solery.\nAs result these tests wait a long until bazel can reserve 16 CPUs for\nthem, so they effectively run sequentially:\n![Screenshot_2023-09-13_at_15.38.24](/uploads/f4c9b8a900781196df3cffaf0e50b18d/Screenshot_2023-09-13_at_15.38.24.png) \n\nSee merge request dfinity-lab/public/ic!14774"
      },
      {
        "id": "da6a81fee189aa23530cb7551b96a6717649586a",
        "date": "2023-09-13T09:33:39Z",
        "message": "Merge branch 'arshavir/24h-testnets' into 'master'\n\nAllow for ICP testnets to live up to 24 hours\n\nThis MR increases the maximum time for an ICT testnet to 24 hours.\n\nThis will significantly improve the situation for longer experimentation, e.g. NNS and SNS canister release testing. \n\nSee merge request dfinity-lab/public/ic!14766"
      },
      {
        "id": "6512d0fad399bc0a1d1e062873dcc4fc8169c493",
        "date": "2023-09-12T13:54:58Z",
        "message": "Merge branch 'dsd/hash_test' into 'master'\n\nfeat(VER-2482): remove stale states from the state machine\n\nThis MR contains two changes:\n* In `StateMachine::execute_payload` we delete all but the newest state after processing a batch.\n* Introduce a method `StateManagerImpl::latest_state_hash` that returns the latest state hash, irrespective of whether that state has been certified.\n\nRationale: Not removing the states causes memory issues for long-running StateMachines. For canister tests, we only ever care about the latest state. The method `latest_state_hash` comes in handy when you want to identify the state after each batch without paying the price of certification. \n\nSee merge request dfinity-lab/public/ic!14697"
      },
      {
        "id": "77eea55e7e27238b10a5de9a7ce653ca6daf9da7",
        "date": "2023-09-12T13:54:58Z",
        "message": "feat(VER-2482): remove stale states from the state machine"
      },
      {
        "id": "3a6c72bde4b6b993dbc09b11b4faf5e17880b284",
        "date": "2023-09-08T09:47:13Z",
        "message": "Merge branch 'dsd/blocking_batch_processing' into 'master'\n\nchore(VER-2478): process batches synchronously in state machine tests\n\n* Introduces a `SyncMessageRouting` component that allows for synchronous batch processing.\n* Uses the above in `StateMachine` tests.\n\nRationale: The client code is simplified, as the current code emulates a synchronous API on top of an asynchronous API, introducing unnecessary timeouts. \n\nSee merge request dfinity-lab/public/ic!14670"
      },
      {
        "id": "cf4974488468e9480f2c282a7743012a75cf7328",
        "date": "2023-09-08T09:47:13Z",
        "message": "chore(VER-2478): process batches synchronously in state machine tests"
      },
      {
        "id": "0b9ee871a15b599699b1170b4740fdd24092248b",
        "date": "2023-09-06T17:36:35Z",
        "message": "Merge branch 'dsd/always_report_actual_instance_state' into 'master'\n\nfix(VER-2477): Respond with actual instance status\n\nThis removes the path where issuing an operation returns a previously already computed result, even though the instance is actually busy. \n\nSee merge request dfinity-lab/public/ic!14624"
      },
      {
        "id": "dea74ace87e4321cea415bd6367b84ae2030b686",
        "date": "2023-09-06T11:26:18Z",
        "message": "Merge branch 'mraszyk/configure-large-testnet' into 'master'\n\nparameterize number of app subnets and BNs on large testnet\n\nThis MR makes it possible to easily configure the number of app subnets and boundary nodes for the large testnet to facilitate benchmarking large ICs. \n\nSee merge request dfinity-lab/public/ic!14619"
      },
      {
        "id": "8f9daf0ec77bd113f3093195921f319885218ad5",
        "date": "2023-09-05T18:40:10Z",
        "message": "Merge branch 'dsd/use_simple_atomic' into 'master'\n\nchore: use std-atomic instead of special dependency\n\nNo need for extra dependencies for shallow abstractions. ;-) \n\nSee merge request dfinity-lab/public/ic!14595"
      },
      {
        "id": "1b18a0c2b026b752e1aedee295ce898505cf81d7",
        "date": "2023-09-05T18:40:09Z",
        "message": "chore: use std-atomic instead of special dependency"
      },
      {
        "id": "b2caacfd3808f84bbb8052d8d0d430d5a5c6d875",
        "date": "2023-09-05T18:28:50Z",
        "message": "Merge branch 'dsd/allow_awaiting_result' into 'master'\n\nfeat(VER-2474): Allow clients to specify timeout\n\nClients that want to implement a blocking behavior can now simply specify a long timeout. (Problem solved). \n\nSee merge request dfinity-lab/public/ic!14594"
      },
      {
        "id": "2066368554c3feb4efadc4a011d7cec8d4d6b757",
        "date": "2023-09-05T18:28:50Z",
        "message": "feat(VER-2474): Allow clients to specify timeout"
      },
      {
        "id": "0cb1f4eeff7cd921724f7f3a165f65c2bb1fb126",
        "date": "2023-08-16T15:39:52Z",
        "message": "Feat(VER-2432): Provide first implementation of PocketIcStateManager"
      },
      {
        "id": "e26efb662f5b858b45f4f354f70c783e134212e9",
        "date": "2023-08-15T20:08:16Z",
        "message": "Merge branch 'mraszyk/rs-to-hs' into 'master'\n\nMove spec_compliance tests from /rs to /hs\n\nThis MR moves Haskell source code of spec_compliance tests from `/rs` to a new `/hs` directory to match the source language (Haskell) of those tests. \n\nSee merge request dfinity-lab/public/ic!14168"
      },
      {
        "id": "1448fa43acd58c605f299d70588154fdd19d8b04",
        "date": "2023-08-14T13:50:46Z",
        "message": "Merge branch 'rumenov/hghgreex' into 'master'\n\ntest: remove the https outcalls non hermetic test\n\nThe removed test is the same as  http_basic.rs with the difference that we use example.com instead of the webserver from the universal VM. \n\nSee merge request dfinity-lab/public/ic!14125"
      },
      {
        "id": "877b508d63fe549ce3aa1ae9ec9b8fac2088235b",
        "date": "2023-08-14T09:56:18Z",
        "message": "Merge branch 'rumenov/rmfsuy' into 'master'\n\ntest: remove the two_third_latency_test.rs system test\n\nThere is no value brought by this test compared to the already existing `update_workload...`\n\nMixing update calls with invalid queries calls doesn't really given much extra signal for the e2e system. \n\nSee merge request dfinity-lab/public/ic!14124"
      },
      {
        "id": "6e06e9243084574204fc6ebf794331158108347b",
        "date": "2023-08-11T15:56:37Z",
        "message": "Merge branch 'dsd/delete_old_test' into 'master'\n\nchore: delete obsolete bash based test script\n\n \n\nSee merge request dfinity-lab/public/ic!10410"
      },
      {
        "id": "83787ac8a733cc5b99c6b097f08820b0521d2cfa",
        "date": "2023-08-11T15:56:35Z",
        "message": "chore: delete obsolete bash based test script"
      },
      {
        "id": "91b8a91888ab26c3367c0fb3fe08a66e9b00da7a",
        "date": "2023-08-11T12:08:28Z",
        "message": "fix: Make sure nonce updates are atomic"
      },
      {
        "id": "f655ceea0aa5e7e7e272759be4017dbe63b61abf",
        "date": "2023-08-10T16:34:11Z",
        "message": "Merge branch 'dsd/configure_tokio_runtime' into 'master'\n\nchore(VER-2438): set config values for tokio runtime\n\nSets some sane default values for the main tokio runtime being used in pocket ic. \n\nSee merge request dfinity-lab/public/ic!14098"
      },
      {
        "id": "adbb95481143957bad60653aeff2ac7f983cd646",
        "date": "2023-08-10T12:29:24Z",
        "message": "Merge branch 'dsd/api_adjustments' into 'master'\n\n[VER-2436] Implement new API\n\n* Creates a mock of the instances endpoint of the new API.\n* Ensure that the last request timestamp (used to keep the daemon alive) is bumped on every request.\n* Refactors some code in main. \n\nSee merge request dfinity-lab/public/ic!14070"
      },
      {
        "id": "dd25279040086892f4b3c14f88e9298df77a90f3",
        "date": "2023-08-10T12:29:24Z",
        "message": "[VER-2436] Implement new API"
      },
      {
        "id": "98b8d751d108001feaa49452e98e9cb644aaf099",
        "date": "2023-08-10T12:05:50Z",
        "message": "Merge branch 'mraszyk/bn-rety-loop' into 'master'\n\nadd back retry loop restarting BN in spec_compliance tests\n\nWe're again getting HTTP errors from the BN (now mostly `502 Bad Gateway`) in the setup function. Let's add back the retry loop restarting the control-plane.service and clean up in a follow up MR if it helps. \n\nSee merge request dfinity-lab/public/ic!14071"
      },
      {
        "id": "44d0b26446a61afed8eb9163590a9d375e33a317",
        "date": "2023-08-07T13:53:05Z",
        "message": "Merge branch 'ic-mainnet-revisions' into 'master'\n\nUpdate Mainnet IC revisions file\n\n \n\nSee merge request dfinity-lab/public/ic!13998"
      }
    ],
    "email": "danielstefan.dietiker@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 53,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 36,
    "fixes": 4,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "4429bf0c965d839d1329877e4087add654fb4eee",
        "date": "2023-10-09T12:56:03Z",
        "message": "fix(VER-2539): don't recursively delete state dir as it slows down test execution"
      },
      {
        "id": "e8f525212ce4835aa5b200a0353d197794781f36",
        "date": "2023-10-03T18:42:43Z",
        "message": "fix(VER-2529): Logging Improvements"
      },
      {
        "id": "1805210cab873f70b7453e4feab94781586f434a",
        "date": "2023-10-03T12:54:58Z",
        "message": "chore(VER-2528): trace logs for state updates"
      },
      {
        "id": "134fa3f9001f978820cff0d2c2759b7addcf332f",
        "date": "2023-10-03T08:38:54Z",
        "message": "fix(VER-2527): don't panic if RUST_LOG cannot be parsed; use default instead"
      },
      {
        "id": "c8096c5bd7232727f9280ca1343ea6b1741a2fe3",
        "date": "2023-10-02T16:20:34Z",
        "message": "chore(VER-2526): Drop lock before spawn"
      },
      {
        "id": "2f86212a97e37f7698f67ef37426f09b9c43beb0",
        "date": "2023-10-02T15:04:44Z",
        "message": "feat(VER-2522): Push logs to files"
      },
      {
        "id": "72f79b718182e859c2a62f18ab7e85328a0f9275",
        "date": "2023-09-28T14:06:36Z",
        "message": "feat(VER-2512): Allow client to specify timeout"
      },
      {
        "id": "d09c297b5bec64dd75e4150b479df989fdecd19c",
        "date": "2023-09-25T15:38:29Z",
        "message": "chore(VER-2505): Establish temporary PocketIcV2"
      },
      {
        "id": "ab6c126b14029e0775a2f306abaa598837f22c37",
        "date": "2023-09-20T15:38:42Z",
        "message": "chore(VER-2492): introduce tracing layer"
      },
      {
        "id": "77eea55e7e27238b10a5de9a7ce653ca6daf9da7",
        "date": "2023-09-12T13:54:58Z",
        "message": "feat(VER-2482): remove stale states from the state machine"
      },
      {
        "id": "cf4974488468e9480f2c282a7743012a75cf7328",
        "date": "2023-09-08T09:47:13Z",
        "message": "chore(VER-2478): process batches synchronously in state machine tests"
      },
      {
        "id": "1b18a0c2b026b752e1aedee295ce898505cf81d7",
        "date": "2023-09-05T18:40:09Z",
        "message": "chore: use std-atomic instead of special dependency"
      },
      {
        "id": "2066368554c3feb4efadc4a011d7cec8d4d6b757",
        "date": "2023-09-05T18:28:50Z",
        "message": "feat(VER-2474): Allow clients to specify timeout"
      },
      {
        "id": "0cb1f4eeff7cd921724f7f3a165f65c2bb1fb126",
        "date": "2023-08-16T15:39:52Z",
        "message": "Feat(VER-2432): Provide first implementation of PocketIcStateManager"
      },
      {
        "id": "83787ac8a733cc5b99c6b097f08820b0521d2cfa",
        "date": "2023-08-11T15:56:35Z",
        "message": "chore: delete obsolete bash based test script"
      },
      {
        "id": "91b8a91888ab26c3367c0fb3fe08a66e9b00da7a",
        "date": "2023-08-11T12:08:28Z",
        "message": "fix: Make sure nonce updates are atomic"
      },
      {
        "id": "dd25279040086892f4b3c14f88e9298df77a90f3",
        "date": "2023-08-10T12:29:24Z",
        "message": "[VER-2436] Implement new API"
      }
    ],
    "line_additions": 1690,
    "line_deletions": 990,
    "lines_effected_total": 2680,
    "rel_comm_add": 12,
    "rel_comm_del": 11,
    "rel_comm_total": 13
  },
  {
    "login": "EnzoPlayer0ne",
    "id": 15707207,
    "totalContributions": 396,
    "github": "https://github.com/EnzoPlayer0ne",
    "commits": [
      {
        "id": "db5c7426e9161d9f95c4d6cc1aca379ebf025e3d",
        "date": "2023-11-07T10:23:03Z",
        "message": "Merge branch 'andrew/update-reproducibility-check' into 'master'\n\nfeat(NODE-898): Extend repro-check.sh to check build reproducibility of hostOS and setupOS\n\nRepro-check.sh is currently designed to check the build reproducibility of the guestOS update image. This MR extends the script to also check the build reproducibility of the hostOS update image and the setupOS disk image.\n\nNote that when an `Elect Replica Version` proposal id is given to the script, it also checks whether the proposal hash (the hash for the image listed in the proposal payload) matches the hash of the image downloaded from the CDN/the locally built image. The replica proposal payloads do not currently contain the hash for HostOS update and setupOS disk images, so the script only currently checks this for guestOS.\n\nThe script will fail if given a proposal id of an `Elect HostOS version` proposal. However, in releases, we direct people to verify reproducibility using git commits, and HostOS version proposals will only be every few months, so I don't believe this will be an issue. \n\nSee merge request dfinity-lab/public/ic!15798"
      },
      {
        "id": "de8dcd9be5b5287472e7f402d599e47ef6044a6c",
        "date": "2023-11-01T11:39:10Z",
        "message": "Merge branch 'levsha/chore-IDX-3017-sync-the-version-of-libsecp256k1-between-Cargo-toml-and-bazel' into 'master'\n\nchore(IDX-3017): sync the version of libsecp256k1 between Cargo.toml and bazel\n\n \n\nSee merge request dfinity-lab/public/ic!15814"
      },
      {
        "id": "8f56059c784fd0a23d9960f780b3b9dbee0cde99",
        "date": "2023-10-20T12:09:27Z",
        "message": "Merge branch 'vsekar/sanitize_rust_library' into 'master'\n\nfeat(PSEC-1564): Sanitize first level `rust_library` dependencies of fuzzers\n\nThis MR adds an option to almost all first level `rust_library` dependencies currently used in fuzzers to sanitize them when a bazel flag is set. This flag is only enabled when fuzzers are built and doesn't affect normal code paths.\n\nAffects fuzzers performance but helps with better code coverage / guidance for fuzzing. \n\nSee merge request dfinity-lab/public/ic!15500"
      },
      {
        "id": "70f6510221fd2b7b47ae45bfe97963579e0e7f2f",
        "date": "2023-10-06T06:20:55Z",
        "message": "Merge branch 'kb/test-snp' into 'master'\n\nfix: two issues with SEV GuestOS\n\n1. touch a file in /boot/config instead of /var/run. /var/run/SEV was not getting written.\n2. Build dev-sev guestos image with CPU_SUPPORT=\"sev\" \n\nSee merge request dfinity-lab/public/ic!15242"
      },
      {
        "id": "6023e07463a993eee6552bf2469b7234ffb3d86b",
        "date": "2023-09-04T16:34:10Z",
        "message": "Merge branch 'add-output' into 'master'\n\nchore(ci): Remove redirection to `/dev/null` for part of `repro-check.sh`\n\nOn weekly DSCVR threads about testing out this script multiple users still ran the old one to see the output and the progess. \n\nSee merge request dfinity-lab/public/ic!14569"
      },
      {
        "id": "8eb4d1d0d061cd567db86b40b78e1c5a3206c0cc",
        "date": "2023-09-04T16:34:10Z",
        "message": "chore(ci): Remove redirection to `/dev/null` for part of `repro-check.sh`"
      },
      {
        "id": "a0ae4fe3e690a488a36da64182fdcd554a8a9bd9",
        "date": "2023-09-04T11:53:16Z",
        "message": "Merge branch 'alin/fix-buf-breaking-check' into 'master'\n\nfix: Fix protobuf backwards-compatibility presubmit check\n\nBy actually calling `buf breaking`. This appears to have been broken in !14038. \n\nSee merge request dfinity-lab/public/ic!14561"
      },
      {
        "id": "d510314358602b53473041cd1e72dc855a3667ae",
        "date": "2023-08-23T17:33:21Z",
        "message": "Merge branch 'rumenov/updatecri' into 'master'\n\nchore: update criterion to 0.5\n\n \n\nSee merge request dfinity-lab/public/ic!14362"
      },
      {
        "id": "862a455e9b86a25bbfbaf96c5529a4840bc56b91",
        "date": "2023-08-23T10:04:43Z",
        "message": "Merge branch 'bump-rust-version' into 'master'\n\nchore(ci): Bump container Rust version to `1.71.1`\n\n \n\nSee merge request dfinity-lab/public/ic!14327"
      },
      {
        "id": "d945076cbce793c1526fd3fa2ce14e154b86a53c",
        "date": "2023-08-23T10:04:43Z",
        "message": "chore(ci): Bump container Rust version to `1.71.1`"
      },
      {
        "id": "4872bfa29c9891a5347b16e0f52b2e772d1d8fb5",
        "date": "2023-08-15T13:51:28Z",
        "message": "Merge branch 'abk/revert-dev-container-ssh' into 'master'\n\nRevert \"Devcontainer SSH forwarding\"\n\nThis reverts commit e0208cdf03115f17bfd5775c81025950831aa838. \n\nSee merge request dfinity-lab/public/ic!14166"
      },
      {
        "id": "89d953c597228a419303000002041bb358b7faaa",
        "date": "2023-08-11T13:42:56Z",
        "message": "Merge branch 'correction-codeowners-bounrdary-node-team' into 'master'\n\nAdjust CODEOWNERS for boundary-node team\n\nIn this [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14046) an approval from the `ic-testing-verification` was required, even though it shouldn't be the case. Folder `/rs/tests/api_boundary_nodes` (and all its subfolders) should be co-owned by the `boundarynode-team`.  Am I correct that adding a `/` will actually fix the issue? \n\nSee merge request dfinity-lab/public/ic!14123"
      },
      {
        "id": "c54bac117dc5c2a930626403f35cac8c8503ce11",
        "date": "2023-08-11T08:46:02Z",
        "message": "chore(ci): change `repro-check.sh`  requirements checks from errors to warning"
      },
      {
        "id": "f43790181c0e2e13d79807a7133276e12b68dfb9",
        "date": "2023-08-11T08:21:38Z",
        "message": "chore(ci): rename `build-verifier.sh` to `repro-check.sh`"
      },
      {
        "id": "c8b48ae172292319a19bbf77b3cd8136afe982c9",
        "date": "2023-08-10T17:07:12Z",
        "message": "Merge branch 'fix-repro-check' into 'master'\n\nfix(ci): minor bug correction `repro-check.sh`\n\n \n\nSee merge request dfinity-lab/public/ic!14081"
      },
      {
        "id": "3562722ae6074862b61966c74461d19edd07bd49",
        "date": "2023-08-10T17:07:11Z",
        "message": "fix(ci): minor bug correction `repro-check.sh`"
      },
      {
        "id": "e63f0084ca0593bccb6175c32d0525d7e48b2081",
        "date": "2023-08-10T10:09:20Z",
        "message": "Merge branch 'update-mold' into 'master'\n\nchore(ci): Update mold to `2.0.0`\n\n \n\nSee merge request dfinity-lab/public/ic!14067"
      },
      {
        "id": "fd876114a66b3831ce9bf4b55ef1475e48872539",
        "date": "2023-08-10T10:09:19Z",
        "message": "chore(ci): Update mold to `2.0.0`"
      },
      {
        "id": "fdaf1a020d312efe925aca26401d83d12a6f6294",
        "date": "2023-08-10T08:53:29Z",
        "message": "Merge branch 'add-buf-format' into 'master'\n\nfeat(bazel): add protobuf formatting\n\nWe add protobuf formatting as bazel targets. Changes done:\n\n- add a test target for testing formatting \n- add a run target for formatting protobuf files, as well as an alias for ease of running the command\n- the formatting run target is run in pre-commit prior to pushing changes \n- the formatting test is run in both pre-commit upon pushing and on bazel-test-all\n- format all protobuf files in the repository to pass the new tests \n\nSee merge request dfinity-lab/public/ic!14038"
      },
      {
        "id": "703eb96fea44ad2c82740e4360a526a2a127a960",
        "date": "2023-08-10T08:53:28Z",
        "message": "feat(bazel): add protobuf formatting"
      },
      {
        "id": "0826beb051d47706355806f9438ce881972fb6f8",
        "date": "2023-08-09T15:14:10Z",
        "message": "Merge branch 'rumenov/tokforad' into 'master'\n\nchore: remove unused deps\n\n \n\nSee merge request dfinity-lab/public/ic!14042"
      },
      {
        "id": "6d5d873ba5b3a2e3b771a02d3fec32ff38da582f",
        "date": "2023-08-09T11:38:57Z",
        "message": "Merge branch 'update-buf-dockerfile' into 'master'\n\nchore(ci): Update `buf` version from `1.16.0` to `1.25.1` in container image\n\n \n\nSee merge request dfinity-lab/public/ic!14037"
      },
      {
        "id": "42948b5709e45f67712b0ae4242b868db7ef9d2c",
        "date": "2023-08-09T11:38:57Z",
        "message": "chore(ci): Update `buf` version from `1.16.0` to `1.25.1` in container image"
      },
      {
        "id": "9c34cb37f7154530f30e885f8e5bcc2a5f911049",
        "date": "2023-08-09T09:01:10Z",
        "message": "chore(bazel): Update `buf` version from `1.16.0` to `1.25.1`"
      },
      {
        "id": "a57cb82bebfe17d1af1e78667fcfd4588564ff01",
        "date": "2023-08-07T14:54:28Z",
        "message": "Merge branch 'rust-toolchain' into 'master'\n\nchore(rust): bump `rust-toolchain.toml` version\n\n \n\nSee merge request dfinity-lab/public/ic!13995"
      },
      {
        "id": "63e6aaa068d4bb4e78e4bc42c15b8f062d418923",
        "date": "2023-08-07T14:54:27Z",
        "message": "chore(rust): bump `rust-toolchain.toml` version"
      },
      {
        "id": "8d2bd93faa6e81c535c9e91f536ad055e8ea9d55",
        "date": "2023-08-07T09:40:30Z",
        "message": "Merge branch 'bump-171' into 'master'\n\nchore(rust): Bump rust version to `1.71.1`\n\n \n\nSee merge request dfinity-lab/public/ic!13979"
      },
      {
        "id": "e784ef513a0f19ea8a705b69280ab86e8038d841",
        "date": "2023-08-07T09:40:29Z",
        "message": "chore(rust): Bump rust version to `1.71.1`"
      },
      {
        "id": "290df60f2460af25f971716e1cdee9135f911ba0",
        "date": "2023-08-05T12:15:54Z",
        "message": "Merge branch 'maksym/canister-creator-owners' into 'master'\n\nchore: add runtime & execution as canister_creator owners\n\nThis MR adds runtime and execution teams as owners of `rs/rust_canisters/canister_creator` \n\nSee merge request dfinity-lab/public/ic!13968"
      },
      {
        "id": "90e2799c255733409d0e61682685afcc2431c928",
        "date": "2023-08-04T15:26:31Z",
        "message": "Merge branch 'fix-e2e-scalability' into 'master'\n\nfeat: `e2e-scability` test to use `dfx` defined through bazel\n\n- add `dfx` bazel artifcats\n- use newly created artifacts from test\n- other references to dfx in scripts are moved to helpers as those are not meant to be run via Bazel \n- removed function not needed anymore which referenced above scripts \n\nSee merge request dfinity-lab/public/ic!13973"
      },
      {
        "id": "3242154689441d9db7f548493784ff2d36c8c8c6",
        "date": "2023-08-04T15:26:31Z",
        "message": "feat: `e2e-scability` test to use `dfx` defined through bazel"
      },
      {
        "id": "f8022f33877774b45ddfdf9de02b41f22ae1e8a9",
        "date": "2023-08-04T15:05:41Z",
        "message": "Merge branch 'update-rules-rust' into 'master'\n\nchore(bazel): update `rules_rust` to `0.26.0`\n\n \n\nSee merge request dfinity-lab/public/ic!13970"
      },
      {
        "id": "5e60c08ffa26cad215f829e9d05ab11a6f4f2e7f",
        "date": "2023-08-04T15:05:41Z",
        "message": "chore(bazel): update `rules_rust` to `0.26.0`"
      },
      {
        "id": "f8dfb620a62672cd863689f7a29f164aa3e656a7",
        "date": "2023-08-03T20:37:43Z",
        "message": "Merge branch 'add-check-requirements' into 'master'\n\nfeat(repro-check): Add checking requirements to `repro-check.sh`\n\n \n\nSee merge request dfinity-lab/public/ic!13954"
      },
      {
        "id": "5f68164a891920dbca80983e2243fea67de9e2f0",
        "date": "2023-08-03T20:37:42Z",
        "message": "feat(repro-check): Add checking requirements to `repro-check.sh`"
      },
      {
        "id": "9d80b36c84779e728890993b34e270de727bb87c",
        "date": "2023-08-03T13:47:40Z",
        "message": "chore: change `README`"
      },
      {
        "id": "008b83597da32178aa23eb7e36d5936d935ce241",
        "date": "2023-08-03T13:12:34Z",
        "message": "Merge branch 'martin/fix-sha256-script-follow-redirect' into 'master'\n\nfix(bazel,sha256sum): follow redirect\n\nThis MR makes curl in `bazel/sha256sum.sh` follow redirect responses \n\nSee merge request dfinity-lab/public/ic!13943"
      },
      {
        "id": "643a54a5b4f3d875e312d3f1a36b594203801a34",
        "date": "2023-08-03T09:07:56Z",
        "message": "Merge branch 'repro-check-part-2' into 'master'\n\nfeat(IDX-2961): simplify `repro-check.sh`\n\n\n## Changes\n- simplify `repro-check.sh` script to fit the use case above and the one from teams that need to investigate the source of non-determinism.\n- add new instructions to verify a specific release - the goal is to make it a one liner on Ubuntu \n\n```sh\nsudo apt-get install -y curl && curl --proto '=https' --tlsv1.2 -sSL https://raw.githubusercontent.com/dfinity/ic/master/gitlab-ci/tools/repro-check.sh | bash -s -- -c <git revision>\n``` \n\nSee merge request dfinity-lab/public/ic!13046"
      },
      {
        "id": "de20ac375f2e4871fda0cf5e77970cfd5c3045aa",
        "date": "2023-08-03T09:07:55Z",
        "message": "feat(IDX-2961): simplify `repro-check.sh`"
      },
      {
        "id": "6c91d74918046ae32b190766580b55556d18c452",
        "date": "2023-08-02T16:08:51Z",
        "message": "Merge branch 'nathan/add-mkcert' into 'master'\n\nci: add mkcert\n\n \n\nSee merge request dfinity-lab/public/ic!13922"
      },
      {
        "id": "ed38d75ce6ce7b87563c6e0c011492fca4604e24",
        "date": "2023-08-02T14:28:43Z",
        "message": "Merge branch 'nathan/bump-dfx' into 'master'\n\nci: bump sdk version\n\n \n\nSee merge request dfinity-lab/public/ic!13919"
      },
      {
        "id": "e4f7ac5efba7d1405884a3b5bbbf4b09fb299c1b",
        "date": "2023-08-02T07:25:06Z",
        "message": "Merge branch '@anchpop/check-incompatibilities' into 'master'\n\nrefactor: correct spelling of check-incompabilities\n\n \n\nSee merge request dfinity-lab/public/ic!13904"
      }
    ],
    "email": "enzo.desiage@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 42,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 26,
    "fixes": 1,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "8eb4d1d0d061cd567db86b40b78e1c5a3206c0cc",
        "date": "2023-09-04T16:34:10Z",
        "message": "chore(ci): Remove redirection to `/dev/null` for part of `repro-check.sh`"
      },
      {
        "id": "d945076cbce793c1526fd3fa2ce14e154b86a53c",
        "date": "2023-08-23T10:04:43Z",
        "message": "chore(ci): Bump container Rust version to `1.71.1`"
      },
      {
        "id": "c54bac117dc5c2a930626403f35cac8c8503ce11",
        "date": "2023-08-11T08:46:02Z",
        "message": "chore(ci): change `repro-check.sh`  requirements checks from errors to warning"
      },
      {
        "id": "f43790181c0e2e13d79807a7133276e12b68dfb9",
        "date": "2023-08-11T08:21:38Z",
        "message": "chore(ci): rename `build-verifier.sh` to `repro-check.sh`"
      },
      {
        "id": "3562722ae6074862b61966c74461d19edd07bd49",
        "date": "2023-08-10T17:07:11Z",
        "message": "fix(ci): minor bug correction `repro-check.sh`"
      },
      {
        "id": "fd876114a66b3831ce9bf4b55ef1475e48872539",
        "date": "2023-08-10T10:09:19Z",
        "message": "chore(ci): Update mold to `2.0.0`"
      },
      {
        "id": "703eb96fea44ad2c82740e4360a526a2a127a960",
        "date": "2023-08-10T08:53:28Z",
        "message": "feat(bazel): add protobuf formatting"
      },
      {
        "id": "42948b5709e45f67712b0ae4242b868db7ef9d2c",
        "date": "2023-08-09T11:38:57Z",
        "message": "chore(ci): Update `buf` version from `1.16.0` to `1.25.1` in container image"
      },
      {
        "id": "9c34cb37f7154530f30e885f8e5bcc2a5f911049",
        "date": "2023-08-09T09:01:10Z",
        "message": "chore(bazel): Update `buf` version from `1.16.0` to `1.25.1`"
      },
      {
        "id": "63e6aaa068d4bb4e78e4bc42c15b8f062d418923",
        "date": "2023-08-07T14:54:27Z",
        "message": "chore(rust): bump `rust-toolchain.toml` version"
      },
      {
        "id": "e784ef513a0f19ea8a705b69280ab86e8038d841",
        "date": "2023-08-07T09:40:29Z",
        "message": "chore(rust): Bump rust version to `1.71.1`"
      },
      {
        "id": "3242154689441d9db7f548493784ff2d36c8c8c6",
        "date": "2023-08-04T15:26:31Z",
        "message": "feat: `e2e-scability` test to use `dfx` defined through bazel"
      },
      {
        "id": "5e60c08ffa26cad215f829e9d05ab11a6f4f2e7f",
        "date": "2023-08-04T15:05:41Z",
        "message": "chore(bazel): update `rules_rust` to `0.26.0`"
      },
      {
        "id": "5f68164a891920dbca80983e2243fea67de9e2f0",
        "date": "2023-08-03T20:37:42Z",
        "message": "feat(repro-check): Add checking requirements to `repro-check.sh`"
      },
      {
        "id": "9d80b36c84779e728890993b34e270de727bb87c",
        "date": "2023-08-03T13:47:40Z",
        "message": "chore: change `README`"
      },
      {
        "id": "de20ac375f2e4871fda0cf5e77970cfd5c3045aa",
        "date": "2023-08-03T09:07:55Z",
        "message": "feat(IDX-2961): simplify `repro-check.sh`"
      }
    ],
    "line_additions": 1790,
    "line_deletions": 1359,
    "lines_effected_total": 3149,
    "rel_comm_add": 9,
    "rel_comm_del": 7,
    "rel_comm_total": 9
  },
  {
    "login": "basvandijk",
    "id": 576355,
    "totalContributions": 356,
    "github": "https://github.com/basvandijk",
    "commits": [
      {
        "id": "53240952a87cee71c5b83162faf7df1409cfb797",
        "date": "2023-11-23T13:00:08Z",
        "message": "fix: test-sns-canister-upgrades.sh: increase swap amount"
      },
      {
        "id": "29ec86dc9f9ca4691d4d4386c8b2aa41e14d9d16",
        "date": "2023-11-20T19:45:06Z",
        "message": "Merge branch 'basvandijk/require-args-for-CMCM-in-prepare-nns-upgrade-proposal-text' into 'master'\n\nchore: prepare-nns-upgrade-proposal-text.sh: throw error in case no upgrade args are provided for CMC\n\nThis lets `prepare-nns-upgrade-proposal-text.sh` throw an error in case the user forgets to specify the required upgrade arguments for the cycles-minting canister. For example:\n\n```\n$ testnet/tools/nns-tools/prepare-nns-upgrade-proposal-text.sh cycles-minting cd63057550f46b939de511beef7f39bb598408d1\ncycles-minting requires upgrade arguments. We recommend setting them to '()', i.e.:\ntestnet/tools/nns-tools/prepare-nns-upgrade-proposal-text.sh cycles-minting cd63057550f46b939de511beef7f39bb598408d1 '()'\n``` \n\nSee merge request dfinity-lab/public/ic!16212"
      },
      {
        "id": "4523fd78e02b29ab94be74a0eea55f7112b168a9",
        "date": "2023-11-20T19:40:14Z",
        "message": "Merge branch 'basvandijk/support-upgrading-cmc-to-working-tree' into 'master'\n\nfix: upgrade-canister-to-working-tree.sh: support upgrading CMC\n\n \n\nSee merge request dfinity-lab/public/ic!16213"
      },
      {
        "id": "16bcd6cfb2221fffb0f9c162fcd1b60455474e2f",
        "date": "2023-11-20T19:40:14Z",
        "message": "fix: upgrade-canister-to-working-tree.sh: support upgrading CMC"
      },
      {
        "id": "f563bccf9c14812501088725f879cc9136e11e7e",
        "date": "2023-11-20T13:17:41Z",
        "message": "Merge branch 'ic-mainnet-revisions' into 'master'\n\nUpdate Mainnet IC revisions file\n\n \n\nSee merge request dfinity-lab/public/ic!16206"
      },
      {
        "id": "c480fbef91d41a4b113b0c06184a10c0f88fbc67",
        "date": "2023-11-20T12:51:19Z",
        "message": "chore: prepare-nns-upgrade-proposal-text.sh: throw error in case no upgrade args are provided for CMC"
      },
      {
        "id": "cd63057550f46b939de511beef7f39bb598408d1",
        "date": "2023-11-17T22:40:40Z",
        "message": "Merge branch 'basvandijk/fix-sns-upgrade-error-min_icp_e8s' into 'master'\n\nfix: sns_default_test_init_params_v2.yml: rm min/max_icp_e8s\n\n \n\nSee merge request dfinity-lab/public/ic!16196"
      },
      {
        "id": "2129c5d1b9c69046d4414a9d67ae02f89b2bd1d1",
        "date": "2023-11-17T21:41:36Z",
        "message": "fix: sns_default_test_init_params_v2.yml: rm min/max_icp_e8s"
      },
      {
        "id": "a7aa612bfd467f0911d57775f85c5bd959be84d8",
        "date": "2023-11-17T19:57:51Z",
        "message": "Merge branch 'basvandijk/fix-neurons_fund_participation' into 'master'\n\nDraft: fix: sns upgrades bug due to removed neurons_fund_investment_icp field\n\nSNS upgrade testing revealed the following error:\n```\nProposing new SNS!\nUnable to parse the SNS configuration file. err = \"Unable to convert configuration file to proposal: Failed to convert CreateServiceNervousSystem proposal to SnsInitPayload:\\nneurons_fund_investment_icp (Tokens { e8s: Some(0) }) is deprecated; please set neurons_fund_participation instead.\\nError: neurons_fund_participation must be specified.\".\n``` \n\nSee merge request dfinity-lab/public/ic!16190"
      },
      {
        "id": "119a28da2578f9af29e29f14e8549e453fa708fc",
        "date": "2023-11-17T19:57:51Z",
        "message": "Draft: fix: sns upgrades bug due to removed neurons_fund_investment_icp field"
      },
      {
        "id": "187fe4dc379fc40e126a9c75764d5bdcf0a9958d",
        "date": "2023-11-17T15:30:02Z",
        "message": "fix: nns: governance: remove newlines from warning log message"
      },
      {
        "id": "29de6c43de18f19850b6ae9c7069164e68faf566",
        "date": "2023-11-17T12:51:47Z",
        "message": "Merge branch 'basvandijk/sync-sns_publish_log.txt' into 'master'\n\nchore: sync testnet/tools/nns-tools/sns_publish_log.txt\n\nSync `testnet/tools/nns-tools/sns_publish_log.txt` with\nhttps://dashboard.internetcomputer.org/proposal/125601 \n\nSee merge request dfinity-lab/public/ic!16174"
      },
      {
        "id": "b55ce303d85d55a5539e24932c079e1fd5f5aad4",
        "date": "2023-11-17T12:51:46Z",
        "message": "chore: sync testnet/tools/nns-tools/sns_publish_log.txt"
      },
      {
        "id": "2acae5d2d7d2b7ce9ac8eea56815583cc25c3c2f",
        "date": "2023-11-15T18:30:41Z",
        "message": "Merge branch 'basvandijk/rm-ic-registry-replicator-check' into 'master'\n\nfix: ic_mainnet_nns_recovery: remove waiting on ic-registry-replicator\n\nThe ic-registry-replicator.service in the Boundary Node has been removed.\nSo we need to remove the code that waits on it in the ic_mainnet_nns_recovery\nsystem-tests. \n\nSee merge request dfinity-lab/public/ic!16124"
      },
      {
        "id": "9a799c71724d1961ac60bdbcc983c73e29424df4",
        "date": "2023-11-15T18:30:41Z",
        "message": "fix: ic_mainnet_nns_recovery: remove waiting on ic-registry-replicator"
      },
      {
        "id": "d3f153392f1307416aed2242982d9dca87d76918",
        "date": "2023-11-13T11:36:40Z",
        "message": "Merge branch 'basvandijk/use-mainnet-ic-recovery' into 'master'\n\nchore: use mainnet ic-recovery\n\nNow that the right ic-recovery has been released to mainnet (https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16035) we can switch to using the mainnet version instead of the HEAD version of ic-recovery in the ic_mainnet_nns_recovery system-tests such that we won't run into the incompatibility issues with the ic.json5 config file anymore. \n\nSee merge request dfinity-lab/public/ic!16039"
      },
      {
        "id": "73e75bc129ab844b3f591afdcf1d16c7660f3c21",
        "date": "2023-11-13T10:44:34Z",
        "message": "chore: use mainnet ic-recovery"
      },
      {
        "id": "bcfcdbbd85d496fe6dfb384813d25348518c3524",
        "date": "2023-11-08T16:48:03Z",
        "message": "Merge branch 'basvandijk/rm-deprecated-scripts' into 'master'\n\nchore: remove scripts that reference the deleted nns_state_deployment.sh\n\nThis removes all scripts that reference the deleted `testnet/tools/nns_state_deployment.sh` since they can't obviously work anymore. \n\nSee merge request dfinity-lab/public/ic!15930"
      },
      {
        "id": "1a952e76a2582730e02d4fd87aa5bdcefeda55b2",
        "date": "2023-11-08T16:48:03Z",
        "message": "chore: remove scripts that reference the deleted nns_state_deployment.sh"
      },
      {
        "id": "f5e94144515da19f1331f9464413b3a1ffa7731c",
        "date": "2023-11-07T18:01:37Z",
        "message": "chore: support testing the upgrade of the cycles-minting canister on the ic_mainnet_nns_recovery testnet"
      },
      {
        "id": "63d129a74be8cbd8ed9c905e4a40c0e41a055770",
        "date": "2023-11-06T14:35:40Z",
        "message": "Merge branch 'basvandijk/introduce-a-nns-nightly-pipeline' into 'master'\n\nchore: introduce a bazel-system-test-nightly-nns pipeline\n\nThis introduces the pipeline `bazel-system-test-nightly-nns` which currently only runs the `nns_upgrade_test` system-test. Once this is merged we'll create a `nns-nightly` schedule which runs this pipeline every night. \n\nSee merge request dfinity-lab/public/ic!14930"
      },
      {
        "id": "7a9479081eb11889211f49fa8b8c7684d16e6103",
        "date": "2023-11-06T14:35:39Z",
        "message": "chore: introduce a bazel-system-test-nightly-nns pipeline"
      },
      {
        "id": "5879c997a0c47f70f3c6c65b706bd3cfa41cdfd2",
        "date": "2023-11-02T10:26:13Z",
        "message": "fix: add missing depenency on ic-recovery in recovered_mainnet_nns"
      },
      {
        "id": "2953f45c5a0c0485a574838e55a1813b2b71fdb3",
        "date": "2023-11-02T08:20:44Z",
        "message": "chore: use IPv6 in the nns_upgrade_test"
      },
      {
        "id": "77a001d00d2ca0aaa4aec9f2b73c1f314f8a097b",
        "date": "2023-11-01T18:13:15Z",
        "message": "Merge branch 'basvandijk/reenable-nns_upgrade_test' into 'master'\n\nchore: re-enable the nns_upgrade_test system-tests on hourly and nightly pipelines\n\nThis runs the `nns_upgrade_test` on the hourly and nightly pipelines.\n\nIt runs the test in colocated mode to ensure a consistent runtime. \n\nSee merge request dfinity-lab/public/ic!15829"
      },
      {
        "id": "26e2c3120388b370c30c7bdd8494d5f1932c7bc1",
        "date": "2023-11-01T18:13:15Z",
        "message": "chore: re-enable the nns_upgrade_test system-tests on hourly and nightly pipelines"
      },
      {
        "id": "8f431a60e6cee2f186ca6fc7fa38b53a753a4170",
        "date": "2023-11-01T14:12:04Z",
        "message": "Merge branch 'basvandijk/replace-ic-recovery-lib-with-bin' into 'master'\n\nchore: ic_mainnet_nns_recovery: replace the ic-recovery lib with its binary\n\nThis switches the `ic_mainnet_nns_recovery` system-test from using `ic-recovery` as a library to using it as a binary. The reason is that we need to use the mainnet version of `ic-recovery` and `ic-replay` such that we won't run into incompatibility issues when using a mainnet `ic.json5` config file with a HEAD version of `ic-replay`.\n\nWe don't yet use the mainnet version of `ic-recovery` since we first need to wait until our changes to ic-recovery (which are part of this MR) are released. \n\nSee merge request dfinity-lab/public/ic!15793"
      },
      {
        "id": "88ed2b58df716e9bf0dbe492d9026e7cac2d2737",
        "date": "2023-11-01T14:12:04Z",
        "message": "chore: ic_mainnet_nns_recovery: replace the ic-recovery lib with its binary"
      },
      {
        "id": "98ae73dfadffbdde86a4000057097dda9b7f0639",
        "date": "2023-10-27T12:03:14Z",
        "message": "Merge branch 'sns-testing-fixes' into 'master'\n\nfeat: Simpler SNS testing scripts and fixes\n\nAdding a new script to test new SNS deployment, and removing that from previous upgrade script.  \n\nFixing issue with ledger not being initialized when using v2 of yaml configuration file. \n\nSee merge request dfinity-lab/public/ic!15665"
      },
      {
        "id": "ed544c96ba86a85fede96af9e347c3f9c910e70b",
        "date": "2023-10-25T17:32:33Z",
        "message": "Merge branch 'basvandijk/sns-testing-increase-timeout' into 'master'\n\nfix: increase timeout for propose_new_sns in test-sns-canister-upgrades.sh\n\n \n\nSee merge request dfinity-lab/public/ic!15640"
      },
      {
        "id": "5bb932d7ec46ed8b3a97c9efb50731ffc8a9a48b",
        "date": "2023-10-25T16:14:47Z",
        "message": "Merge branch 'basvandijk/fix-sns_default_test_init_params_v2.yml' into 'master'\n\nfix: add some missing fields to sns_default_test_init_params_v2.yml\n\n \n\nSee merge request dfinity-lab/public/ic!15651"
      },
      {
        "id": "a42605ed0c83abfda4e365f0fc9e38f027f52237",
        "date": "2023-10-25T13:29:31Z",
        "message": "fix: add some missing fields to sns_default_test_init_params_v2.yml"
      },
      {
        "id": "2acde86a0e588cba0b2d0ab081e77b206fec28aa",
        "date": "2023-10-25T10:38:25Z",
        "message": "fix: increase timeout for propose_new_sns in test-sns-canister-upgrades.sh"
      },
      {
        "id": "4b4305970af83ca2d0552a98d30907807389a75d",
        "date": "2023-10-23T13:27:51Z",
        "message": "Merge branch 'basvandijk/replace-ic-replay-lib-with-mainnet-bin' into 'master'\n\nfix: replace the ic-replay library with the mainnet binary\n\n`ic_mainnet_nns_recovery` was using ic-replay as a library. This had the problem that when a commit got merged in master that changed the format of the `ic.json5` config file with respect to mainnet, ic-replay would fail because it expected the new format while it was using the mainnet config file.\n\nTo prevent this we now use the mainnet ic-replay binary instead of the HEAD version of the ic-replay library.\n\nThis doesn't completely fix the `ic.json5` config file issue because we still use `ic-recovery` as a library which uses the `ic-replay` library internally. So that will follow later. \n\nSee merge request dfinity-lab/public/ic!15470"
      },
      {
        "id": "19f2469c0a32f0d55d5f5d3d76b88dafb82895c0",
        "date": "2023-10-23T13:27:51Z",
        "message": "fix: replace the ic-replay library with the mainnet binary"
      },
      {
        "id": "f42646c96a7c7d9fa61f5ed1df6b128107bbdb26",
        "date": "2023-10-19T13:54:26Z",
        "message": "Merge branch 'basvandijk/colocated-ic-mainnet-nns-recovery' into 'master'\n\nfeat: support colocating the ic-mainnet-nns-recovery\n\nThis extends the colocated test-driver with the following features that enable running the ic-mainnet-nns-recovery test in a colocated matter:\n\n* Support optionally forwarding the SSH agent to the colocated test-driver VM and then to the docker container running the system-test. This allows the colocated system-test to SSH using the user's identity into the backpod pod `zh1-pyr07`.\n\n* Support optionally adding an IPv4 address for the colocated test-driver VM. This is needed for the VM to reach the backup pod `zh1-pyr07` which only has an IPv4 address.\n\nUnfortunately we can't (yet) use the colocated `ic-mainnet-nns-recovery` interactively since the command `source \".../setup/set_testnet_env_variables.sh\"`, logged by the system-test which should be run by the user in his terminal, can only work in the docker container on the co-located test-driver and not in the user's local terminal.\n\nHowever this support would still be good to have once we run this in CI. \n\nSee merge request dfinity-lab/public/ic!15481"
      },
      {
        "id": "d8546dc595304ae91bc545c6a24976d20b323901",
        "date": "2023-10-19T13:54:24Z",
        "message": "feat: support colocating the ic-mainnet-nns-recovery"
      },
      {
        "id": "91fee1987ee7c84c22cdd70c4bbebd9bf6a79b45",
        "date": "2023-10-17T21:19:59Z",
        "message": "Merge branch 'jason/increase-recovered-mainnet-nns-timeout' into 'master'\n\nIncrease recovered_mainnet_nns timeout to 1h\n\nExample timeout: https://dash.sf1-idx1.dfinity.network/invocation/c0ae97f8-6ec8-4ceb-82c5-6048b6511708 \n\nSee merge request dfinity-lab/public/ic!15443"
      },
      {
        "id": "968e084b042cb172af54da72e8717a1740a6bba0",
        "date": "2023-10-17T16:28:07Z",
        "message": "Merge branch 'basvandijk/sns_default_test_init_params_v2.yml-fix-principal' into 'master'\n\nfix: use the right principal in testnet/tools/nns-tools/sns_default_test_init_params_v2.yml\n\n \n\nSee merge request dfinity-lab/public/ic!15435"
      },
      {
        "id": "24e8c68df5b382b07b379cacba4edfa1d2c729b7",
        "date": "2023-10-17T15:31:49Z",
        "message": "fix: use the right principal in testnet/tools/nns-tools/sns_default_test_init_params_v2.yml"
      },
      {
        "id": "ab9d8bb1e846d4a6617b0009b204a0500d7ae204",
        "date": "2023-10-17T15:23:57Z",
        "message": "Merge branch 'basvandijk/let-p8s-scrape-recovered-nns' into 'master'\n\nchore: let p8s scrape recovered nns\n\nThis adapts the `ic_mainnet_nns_recovery` library such that it configures prometheus to scrape the topology of the recovered NNS subnet instead of the initial topology.\n\nThe resources of the p8s VM have also been bumped because it now has to scrape the whole mainnet topology (since we use the topology of the recovered mainnet registry) which requires more resources than the default. \n\nSee merge request dfinity-lab/public/ic!15427"
      },
      {
        "id": "a0829ab346f317a360b31f43b16b304277e11381",
        "date": "2023-10-17T15:23:56Z",
        "message": "chore: let p8s scrape recovered nns"
      },
      {
        "id": "ea5f8a71c41c6b53db8fabf13a2d30da2735ba54",
        "date": "2023-10-16T21:31:10Z",
        "message": "Merge branch 'basvandijk/fixes-to-sns-scripts' into 'master'\n\nchore: fix SNS upgrade scripts to work with the ic_mainnet_nns_recovery system-test\n\nThis adapts the scripts under `testnet/tools/nns-tools` to work on testnets created by the `recovered_mainnet_nns` system-test.\n\n* It configures `dfx` to use the `DFX_HOME` environment variable as its home directory.\n\n* It uses the `PEM` environment variable to specify the PEM file instead of hard coding it to `$NNS_TOOLS_DIR/test_user.pem`.\n\n* It makes sure the node in the application subnet (to which we deploy SNSes) is correctly initialised.\n\n* It sets the `NNS_URL` to the Boundary Node and it makes sure the Boundary Node actually becomes healthy. \n\nSee merge request dfinity-lab/public/ic!15261"
      },
      {
        "id": "331f4d70f42ff66b1fdd24b0d9199de57b3a36c1",
        "date": "2023-10-16T21:31:09Z",
        "message": "chore: fix SNS upgrade scripts to work with the ic_mainnet_nns_recovery system-test"
      },
      {
        "id": "3f4b4f969b2d9401e6bd200744baa4bec04d3646",
        "date": "2023-10-06T13:23:30Z",
        "message": "Merge branch 'basvandijk/fix-set_testnet_env_variables.sh' into 'master'\n\nfix: ic_mainnet_nns_recovery: fix the set_testnet_env_variables.sh\n\n \n\nSee merge request dfinity-lab/public/ic!15262"
      },
      {
        "id": "abb4a51e03842a92fb384fa4484f5b55e0ef5015",
        "date": "2023-10-06T12:22:21Z",
        "message": "fix: ic_mainnet_nns_recovery: fix the set_testnet_env_variables.sh"
      },
      {
        "id": "65dae6899179b6c95172e47ffec008127599fbf5",
        "date": "2023-10-06T10:12:13Z",
        "message": "Merge branch 'basvandijk/add-app-subnet-to-nns-upgrade-test' into 'master'\n\nfeat: support testing SNS upgrades on mainnet state\n\nThis extends the `ic_mainnet_nns_recovery::setup()` function to make the testnet, with the recovered mainnet NNS subnet state, suitable for deploying SNSes to. Specifically it:\n\n* Adds a new application subnet.\n* Creates a cycle wallet.\n* Configures SNS-W to:\n  * deploy SNS to the newly created application subnet.\n  * Allows the created cycle wallet to create SNSes.\n* Extends the `set_testnet_env_variables.sh` file to also set the `SUBNET_URL`, `WALLET_CANISTER`, `SNS_QUILL` and `IDL2JSON` environment variables which are required by the SNS shell scripts. \n\nSee merge request dfinity-lab/public/ic!14778"
      },
      {
        "id": "eec1a8312197dad35ec1b3075cfabdf877a9585e",
        "date": "2023-10-06T10:12:12Z",
        "message": "feat: support testing SNS upgrades on mainnet state"
      },
      {
        "id": "b9b91715c6991fa177b19f03229c5510f53500a0",
        "date": "2023-10-04T15:03:25Z",
        "message": "Merge branch 'basvandijk/unstuck_subnet_test-curl-fail' into 'master'\n\nchore: let curl fail in the unstuck_subnet_test in case it hits an error\n\nWe had some test failures due to curl not being able to download the image.\nHowever in those cases curl didn't actually fail but the script failed later.\nIt would be more understandable if curl itself fails if it can't download the image.\nSo we pass the [`--fail`](https://curl.se/docs/manpage.html#-f) flag. \n\nSee merge request dfinity-lab/public/ic!15185"
      },
      {
        "id": "e39571d1f88a1cd7d44b926bf6d9a74061756eca",
        "date": "2023-10-04T15:03:23Z",
        "message": "chore: let curl fail in the unstuck_subnet_test in case it hits an error"
      },
      {
        "id": "04aec5efe99a02f165b6a8f01bf993e2b48cec29",
        "date": "2023-09-28T18:05:07Z",
        "message": "Merge branch 'basvandijk/move-benchmarklarge-to-farm' into 'master'\n\nchore: remove testnet benchmarklarge such that it hosts can move to Farm\n\nhttps://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15032 was not enough to fix the required capacity on Farm. So this removes the `benchmarklarge` static testnet such that we can move over the following hosts to farm:\n\nch1:\n* ch1-spm16\n* ch1-spm17\n* ch1-spm18\n* ch1-spm19\n* ch1-spm20\n* ch1-spm21\n* ch1-spm22\n\nfr1:\n* fr1-spm16\n* fr1-spm17\n* fr1-spm18\n* fr1-spm19\n* fr1-spm20\n* fr1-spm21\n* fr1-spm22\n\nsf1:\n* sf1-spm16\n* sf1-spm17\n* sf1-spm18\n* sf1-spm19\n* sf1-spm20\n* sf1-spm21\n* sf1-spm22\n\nzh1:\n* zh1-spm05\n* zh1-spm06\n* zh1-spm07\n* zh1-spm08\n* zh1-spm09\n* zh1-spm10\n* zh1-spm11\n\n`benchmarklarge` users in the last quarter:\n\n```\nbas@ch1-spm16:~$  sudo journalctl --since \"2023-06-01\" -r -u ssh -g \"session opened\" | grep -v -E '(joeo|thlavacek|Reboot|dfnadmin|bas)'  | awk '{print $1\" \"$2\" \"$3\" \"$11}'\n-- Logs begin Wed\nSep 22 13:17:05 rbirkner\nSep 22 12:51:16 rbirkner\nAug 17 12:42:15 tkachenko\nAug 17 12:42:15 tkachenko\nAug 17 12:42:09 tkachenko\nAug 17 11:38:41 tkachenko\nAug 17 11:38:41 tkachenko\nAug 17 11:38:32 tkachenko\nAug 16 16:01:35 tkachenko\nAug 16 16:00:40 tkachenko\nAug 16 16:00:40 tkachenko\nAug 16 16:00:02 tkachenko\nAug 16 13:26:09 tkachenko\nAug 16 13:26:07 tkachenko\nAug 16 13:25:37 tkachenko\nJul 30 17:59:41 tim\nJul 30 17:59:41 tim\nJul 30 17:59:16 tim\nJul 30 15:05:11 tim\nJul 30 15:05:11 tim\nJul 30 15:04:52 tim\nJul 30 14:23:30 tim\nJul 30 14:23:30 tim\nJul 30 14:23:14 tim\nJul 27 13:46:19 rbirkner\nJul 02 16:59:29 martin\nJul 02 16:59:24 martin\nJun 26 20:45:38 raghav\nJun 26 20:45:32 raghav\nJun 26 20:32:06 raghav\nJun 26 20:31:59 raghav\nJun 16 16:02:38 dietersommer\nJun 16 16:02:31 dietersommer\nJun 16 08:35:02 dietersommer\nJun 16 08:34:55 dietersommer\nJun 15 15:09:34 vsekar\nJun 15 15:09:23 vsekar\nJun 15 12:43:53 vsekar\nJun 15 12:43:34 vsekar\nJun 14 23:19:15 shuo\nJun 14 23:19:07 shuo\nJun 13 09:12:45 dietersommer\nJun 13 09:10:47 dietersommer\nJun 13 09:10:40 dietersommer\nJun 12 06:58:12 dietersommer\nJun 12 06:58:05 dietersommer\nJun 08 08:18:44 dietersommer\nJun 08 08:18:36 dietersommer\nJun 07 14:12:55 dsharifi\nJun 07 14:11:15 dsharifi\nJun 07 14:11:04 dsharifi\nJun 06 09:52:15 dsharifi\nJun 06 09:52:06 dsharifi\nJun 06 08:49:04 dsharifi\nJun 06 08:48:57 dsharifi\nJun 05 13:03:23 dietersommer\nJun 05 13:03:15 dietersommer\nJun 05 09:29:02 dietersommer\nJun 05 09:28:56 dietersommer\nJun 02 12:26:47 alexuta\nJun 02 12:25:03 alexuta\nJun 02 12:24:56 alexuta\n```\n\nWe ask the above users to perform their performance workloads on the [performance](https://sourcegraph.com/github.com/dfinity/ic/-/blob/rs/tests/src/driver/farm.rs?L486) hosts on Farm. \n\nSee merge request dfinity-lab/public/ic!15046"
      },
      {
        "id": "b5e1b04818cc77360b9d79d7f3ad0c349471a114",
        "date": "2023-09-27T15:56:39Z",
        "message": "chore: remove testnet benchmarklarge such that it hosts can move to Farm"
      },
      {
        "id": "fc08fbf454e40982216e473f3050d7e29f8394d4",
        "date": "2023-09-27T15:29:49Z",
        "message": "Merge branch 'basvandijk/move-benchmarksmall01-to-farm' into 'master'\n\nchore: remove testnet benchmarksmall01 such that it hosts can move to Farm\n\nFarm is reaching capacity multiple times per day now.\nWe need to take action because it's hurting productivity.\nSee the [slack thread](https://dfinity.slack.com/archives/C018WHN6R2L/p1695805584164659) that triggered this MR.\n\nThis MR removes the `benchmarksmall01` static testnet such that\nits following hosts can move to Farm:\n\n* ch1-spm27\n* ch1-spm28\n* ch1-spm29\n* ch1-spm30\n* fr1-spm28\n* fr1-spm29\n* fr1-spm30\n\nThese were its users in the last quarter:\n\n```\nbas@ch1-spm27:~$  sudo journalctl --since \"2023-06-01\" -r -u ssh -g \"session opened\" | grep -v -E '(joeo|thlavacek|Reboot|dfnadmin|bas)'  | awk '{print $1\" \"$2\" \"$3\" \"$11}'\n-- Logs begin Wed\nSep 24 23:17:54 mkot\nSep 22 13:17:08 rbirkner\nSep 22 12:51:20 rbirkner\nSep 20 16:17:02 ulan\nSep 20 16:17:02 ulan\nSep 20 16:16:44 ulan\nAug 27 02:22:03 mkot\nAug 27 02:20:10 mkot\nAug 27 02:20:10 mkot\nAug 27 02:19:57 mkot\nJul 27 13:46:22 rbirkner\nJul 06 12:37:43 pakhomov\nJul 06 12:37:35 pakhomov\nJul 05 13:12:19 pakhomov\nJul 05 13:12:09 pakhomov\nJun 22 08:29:08 pakhomov\nJun 22 08:28:52 pakhomov\nJun 21 11:05:10 pakhomov\nJun 21 11:05:03 pakhomov\nJun 21 10:56:49 pakhomov\nJun 21 10:56:21 pakhomov\nJun 21 09:59:12 pakhomov\nJun 21 09:59:00 pakhomov\nJun 20 15:31:28 pakhomov\nJun 20 15:31:20 pakhomov\nJun 16 12:13:52 pakhomov\nJun 16 12:13:45 pakhomov\nJun 09 11:50:54 pakhomov\nJun 09 11:50:43 pakhomov\nJun 07 12:42:29 pakhomov\nJun 07 12:42:16 pakhomov\nJun 07 12:16:14 pakhomov\nJun 07 12:16:04 pakhomov\nJun 06 15:20:01 pakhomov\nJun 06 15:19:53 pakhomov\nJun 06 14:37:13 pakhomov\nJun 06 14:37:01 pakhomov\nJun 06 13:51:42 pakhomov\nJun 06 13:51:35 pakhomov\nJun 05 13:35:17 stefanschneider\nJun 05 13:23:09 stefanschneider\nJun 05 13:17:16 stefanschneider\nJun 05 13:08:01 stefanschneider\nJun 05 12:50:18 stefanschneider\nJun 05 10:43:59 stefanschneider\nJun 05 08:52:33 stefanschneider\nJun 05 08:49:22 stefanschneider\n```\n\nWe recommend those users to run their performance workloads on the\n`performance` hosts on Farm. \n\nSee merge request dfinity-lab/public/ic!15032"
      },
      {
        "id": "e4eefe5798b85d2d0af2f725328fc482587a1103",
        "date": "2023-09-27T15:29:49Z",
        "message": "chore: remove testnet benchmarksmall01 such that it hosts can move to Farm"
      },
      {
        "id": "681787fb15cc680934f13eaf5dcf0f625af8745c",
        "date": "2023-09-25T07:50:51Z",
        "message": "Merge branch 'basvandijk/revert-add-node-exporter-full-dashboard' into 'master'\n\nRevert \"chore: add the node-exporter-full Grafana dashboards\"\n\nThis reverts commit b8ed1041a3525c7aebbefc841c28ad4814194e05 since the dashboard already existed under the name `Server Metrics Full`. \n\nSee merge request dfinity-lab/public/ic!14966"
      },
      {
        "id": "11f44fa6ba995a9a23fdcf6340ce250accb73957",
        "date": "2023-09-25T07:50:50Z",
        "message": "Revert \"chore: add the node-exporter-full Grafana dashboards\""
      },
      {
        "id": "2aef41757a22a2244c099ef0c1e90b33adf7029e",
        "date": "2023-09-22T14:40:21Z",
        "message": "Merge branch 'basvandijk/add-node-exporter-full-dashboard' into 'master'\n\nchore: add the node-exporter-full Grafana dashboards\n\nCopied from: https://github.com/rfmoz/grafana-dashboards/blob/master/prometheus/node-exporter-full.json \n\nSee merge request dfinity-lab/public/ic!14951"
      },
      {
        "id": "b8ed1041a3525c7aebbefc841c28ad4814194e05",
        "date": "2023-09-22T14:40:20Z",
        "message": "chore: add the node-exporter-full Grafana dashboards"
      },
      {
        "id": "91c6b092c2d56692949c0339197a8b7be1f04566",
        "date": "2023-09-21T11:21:40Z",
        "message": "Merge branch 'basvandijk/temporarily-disable-nns_upgrade_test' into 'master'\n\nfix: temporarily disable the nns_upgrade_test\n\nThe problem is that commit 3ba9857f19cf22b5da85e1268f914f58f66f3d3a\nintroduced a change in the format of ic.json5 which means that\nthe ic.json5 we download from a mainnet node has an older format\nthan the one expected by ic-replay.\n\nWays forward:\n\n* Short term: disable this test such that we can get a green RC.\n  Implemented in this MR.\n\n* Mid term: move the test to a different pipeline separate\n  from the nightly RC pipeline. Something specific for the NNS.\n  Such that, in case of failures, this test doesn't block IC releases\n  but just blocks NNS releases.\n\n* Long term: instead of using the HEAD version of the ic-replay\n  library and binary use the mainnet version to ensure it's\n  compatible with the mainnet IC. \n\nSee merge request dfinity-lab/public/ic!14923"
      },
      {
        "id": "0a7cc938541a5e252a46f631766d878c88cf9eba",
        "date": "2023-09-21T11:21:40Z",
        "message": "fix: temporarily disable the nns_upgrade_test"
      },
      {
        "id": "d9f9772f6ac302be8d76e816758d1924d8d6ea02",
        "date": "2023-09-13T08:16:18Z",
        "message": "Merge branch 'basvandijk/fix-scalability-test' into 'master'\n\nfix: update p8s and UVM images\n\n \n\nSee merge request dfinity-lab/public/ic!13753"
      },
      {
        "id": "4d8e5a5fd6dcaa074259be51f8016cfa66f57bc9",
        "date": "2023-09-13T08:16:18Z",
        "message": "fix: update p8s and UVM images"
      },
      {
        "id": "516fa862180e482cd5a9b2a50313e54475644a22",
        "date": "2023-09-12T07:56:13Z",
        "message": "Merge branch 'ic-mainnet-revisions' into 'master'\n\nUpdate Mainnet IC revisions file\n\n \n\nSee merge request dfinity-lab/public/ic!14722"
      },
      {
        "id": "7f83d98aa094f90cfbded004c7953d1b431469f4",
        "date": "2023-09-09T05:19:56Z",
        "message": "Merge branch 'update-bn-grafana-dashboard' into 'master'\n\n(BOUN-875) update boundary-node Grafana dashboard\n\nAdjusted panel positions, line widths, point sizes, interpolation, etc.\n\n![Screenshot_2023-09-08_at_16.10.34](/uploads/412c7ae35f828878585c1c21e84bec74/Screenshot_2023-09-08_at_16.10.34.png) \n\nSee merge request dfinity-lab/public/ic!14696"
      },
      {
        "id": "c9537827816be95191c5e80532317211baf760c9",
        "date": "2023-09-08T23:30:19Z",
        "message": "Merge branch 'basvandijk/run-nns_upgrade_test-on-ci' into 'master'\n\nchore: run the nns_upgrade_test on the nightly CI pipeline\n\n \n\nSee merge request dfinity-lab/public/ic!14684"
      },
      {
        "id": "086a8f3977559d991b638588e1077b66274e50d1",
        "date": "2023-09-08T23:30:19Z",
        "message": "chore: run the nns_upgrade_test on the nightly CI pipeline"
      },
      {
        "id": "40ca680e4e7560a7fee4a6216ca08a2ba93a2755",
        "date": "2023-09-07T14:40:48Z",
        "message": "Merge branch 'basvandijk/improve-recovered_mainnet_nns' into 'master'\n\nchore: update testnet/tools/nns-tools/README.md & improve the recovered_mainnet_nns testnet\n\n \n\nSee merge request dfinity-lab/public/ic!14589"
      },
      {
        "id": "84126910319e3223e712bb192da749f74c3efaa5",
        "date": "2023-09-07T14:40:48Z",
        "message": "chore: update testnet/tools/nns-tools/README.md & improve the recovered_mainnet_nns testnet"
      },
      {
        "id": "d97c68612fa3daebff60757ff4372b57598fe12b",
        "date": "2023-09-06T16:51:45Z",
        "message": "Merge branch 'basvandijk/nns-tools-fail-on-errors' into 'master'\n\nfix: fail when curl fails in testnet/tools/nns-tools/\n\n \n\nSee merge request dfinity-lab/public/ic!14599"
      },
      {
        "id": "32aee193c24496dc2789307bb62272774c59d808",
        "date": "2023-09-06T16:51:44Z",
        "message": "fix: fail when curl fails in testnet/tools/nns-tools/"
      },
      {
        "id": "75299261c88a82defeb3d78a0088bb21f8f15fb4",
        "date": "2023-09-05T14:49:03Z",
        "message": "Merge branch 'basvandijk/fix-kibana-urls-in-ict-testnet' into 'master'\n\nfix: don't escape HTML in the `ict testnet create` summary to fix the Kibana URL\n\n \n\nSee merge request dfinity-lab/public/ic!14584"
      },
      {
        "id": "470ff6cce637ee89eeb87a9d9da6c695add70b8a",
        "date": "2023-09-05T14:49:03Z",
        "message": "fix: don't escape HTML in the `ict testnet create` summary to fix the Kibana URL"
      },
      {
        "id": "e5e1458cc2b7cc577c4c67f8abb62931cf47fda8",
        "date": "2023-09-01T11:39:42Z",
        "message": "Merge branch 'basvandijk/fix-system-test-kibana-url' into 'master'\n\nfix: point to the new Kibana from system-tests so that we can search logs again\n\n \n\nSee merge request dfinity-lab/public/ic!14515"
      },
      {
        "id": "ab628b871d70ccdb1562c40b0ce036ec6693b267",
        "date": "2023-09-01T11:39:42Z",
        "message": "fix: point to the new Kibana from system-tests so that we can search logs again"
      },
      {
        "id": "763e32de4d130eb015ba6f170f02add7a7ea34dc",
        "date": "2023-08-30T08:43:13Z",
        "message": "Merge branch 'basvandijk/rm-update_workload_long_tes' into 'master'\n\nchore: remove the update_workload_long_test\n\nThe `update_workload_long_test` is flaky\nand doesn't provide a good signal\nso after confirming with the networking and consensus\nteams we decided to remove this test. \n\nSee merge request dfinity-lab/public/ic!14436"
      },
      {
        "id": "1a8314cdbe58eb78e97c4cbc4d2ba7e3a8ba913d",
        "date": "2023-08-30T08:43:12Z",
        "message": "chore: remove the update_workload_long_test"
      },
      {
        "id": "a1ca34acf3375cfc24a60dfb0485a748ea2ab022",
        "date": "2023-08-26T12:53:03Z",
        "message": "Merge branch 'basvandijk/configure-bn-for-recovered-mainnet-nns' into 'master'\n\nfeat: setup a BoundaryNode configured for the recovered mainnet NNS\n\nCloses NNS1-2512. \n\nCloses NNS1-2512\n\nSee merge request dfinity-lab/public/ic!14369"
      },
      {
        "id": "ce60ebcb9366a17a57e03b7e67e885f0dfcab57e",
        "date": "2023-08-26T12:53:03Z",
        "message": "feat: setup a BoundaryNode configured for the recovered mainnet NNS"
      },
      {
        "id": "150e9f53d33121e3efd8d8a4772bd1b24e08ac12",
        "date": "2023-08-25T13:17:36Z",
        "message": "chore: fix ownership of system-tests (missing trailing slashes)"
      },
      {
        "id": "cde091c7a37367e0f018e37bafaf24c030ae1954",
        "date": "2023-08-23T17:41:19Z",
        "message": "Merge branch 'basvandijk/ic_mainnet_nns_recovery_lib' into 'master'\n\nfeat: support \"ict testnet create recovered_mainnet_nns\"\n\n* Add the `recovered_mainnet_nns` dynamic testnet which can be created using: `ict testnet create recovered_mainnet_nns`\n\n* Introduce the `ic-mainnet-nns-recovery` rust library which is used in both the dynamic testnet above and the `nns_upgrade_test` system-test. \n\nSee merge request dfinity-lab/public/ic!14347"
      },
      {
        "id": "4a1c3e68c4642806fe1bcf03f6988513f76db6be",
        "date": "2023-08-23T17:41:17Z",
        "message": "feat: support \"ict testnet create recovered_mainnet_nns\""
      },
      {
        "id": "fafbbf80885b90ee70fc73d4499f27e411b39f1c",
        "date": "2023-08-22T17:26:04Z",
        "message": "Merge branch 'basvandijk/nns_upgrade_system_test' into 'master'\n\nPort nns_state_deployment.sh to the nns_upgrade_test system-test\n\n`//rs/tests/nns:nns_upgrade_test` is a port of `/testnet/tools/nns_state_deployment.sh` to a manual system-test that deploys an IC with a NNS that is recovered from the latest mainnet state.\n\nTo run the test you need to be authorised to SSH into `zh1-pyr07.zh1.dfinity.network` which contains the NNS backups.\n\nRun the test using:\n\n```\nrm -rf test_tmpdir; ict test nns_upgrade_test -- --test_env=SSH_AUTH_SOCK --test_tmpdir=test_tmpdir --flaky_test_attempts=1\n```\n\nIt will take between 10 to 20 minutes to setup the recovered NNS.\n\nCloses: NNS1-2511, NNS1-2323, NNS1-2470, NNS1-2441, NNS1-2372, NNS1-2473 \n\nCloses NNS1-2511\n\nSee merge request dfinity-lab/public/ic!13356"
      },
      {
        "id": "c6ed9ca48d01530298e88de955f3689b96508a40",
        "date": "2023-08-22T17:26:04Z",
        "message": "Port nns_state_deployment.sh to the nns_upgrade_test system-test"
      },
      {
        "id": "24038420d2f2eee92790cca4791236de93b51d3b",
        "date": "2023-08-09T12:14:28Z",
        "message": "Merge branch 'chmllr/test-caching' into 'master'\n\ntest(consensus): enable caching of consensus tests\n\nThis MR enables caching for all consensus tests. \n\nSee merge request dfinity-lab/public/ic!13475"
      }
    ],
    "email": "bas@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 84,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 42,
    "fixes": 19,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "53240952a87cee71c5b83162faf7df1409cfb797",
        "date": "2023-11-23T13:00:08Z",
        "message": "fix: test-sns-canister-upgrades.sh: increase swap amount"
      },
      {
        "id": "16bcd6cfb2221fffb0f9c162fcd1b60455474e2f",
        "date": "2023-11-20T19:40:14Z",
        "message": "fix: upgrade-canister-to-working-tree.sh: support upgrading CMC"
      },
      {
        "id": "c480fbef91d41a4b113b0c06184a10c0f88fbc67",
        "date": "2023-11-20T12:51:19Z",
        "message": "chore: prepare-nns-upgrade-proposal-text.sh: throw error in case no upgrade args are provided for CMC"
      },
      {
        "id": "2129c5d1b9c69046d4414a9d67ae02f89b2bd1d1",
        "date": "2023-11-17T21:41:36Z",
        "message": "fix: sns_default_test_init_params_v2.yml: rm min/max_icp_e8s"
      },
      {
        "id": "119a28da2578f9af29e29f14e8549e453fa708fc",
        "date": "2023-11-17T19:57:51Z",
        "message": "Draft: fix: sns upgrades bug due to removed neurons_fund_investment_icp field"
      },
      {
        "id": "187fe4dc379fc40e126a9c75764d5bdcf0a9958d",
        "date": "2023-11-17T15:30:02Z",
        "message": "fix: nns: governance: remove newlines from warning log message"
      },
      {
        "id": "b55ce303d85d55a5539e24932c079e1fd5f5aad4",
        "date": "2023-11-17T12:51:46Z",
        "message": "chore: sync testnet/tools/nns-tools/sns_publish_log.txt"
      },
      {
        "id": "9a799c71724d1961ac60bdbcc983c73e29424df4",
        "date": "2023-11-15T18:30:41Z",
        "message": "fix: ic_mainnet_nns_recovery: remove waiting on ic-registry-replicator"
      },
      {
        "id": "73e75bc129ab844b3f591afdcf1d16c7660f3c21",
        "date": "2023-11-13T10:44:34Z",
        "message": "chore: use mainnet ic-recovery"
      },
      {
        "id": "1a952e76a2582730e02d4fd87aa5bdcefeda55b2",
        "date": "2023-11-08T16:48:03Z",
        "message": "chore: remove scripts that reference the deleted nns_state_deployment.sh"
      },
      {
        "id": "f5e94144515da19f1331f9464413b3a1ffa7731c",
        "date": "2023-11-07T18:01:37Z",
        "message": "chore: support testing the upgrade of the cycles-minting canister on the ic_mainnet_nns_recovery testnet"
      },
      {
        "id": "7a9479081eb11889211f49fa8b8c7684d16e6103",
        "date": "2023-11-06T14:35:39Z",
        "message": "chore: introduce a bazel-system-test-nightly-nns pipeline"
      },
      {
        "id": "5879c997a0c47f70f3c6c65b706bd3cfa41cdfd2",
        "date": "2023-11-02T10:26:13Z",
        "message": "fix: add missing depenency on ic-recovery in recovered_mainnet_nns"
      },
      {
        "id": "2953f45c5a0c0485a574838e55a1813b2b71fdb3",
        "date": "2023-11-02T08:20:44Z",
        "message": "chore: use IPv6 in the nns_upgrade_test"
      },
      {
        "id": "26e2c3120388b370c30c7bdd8494d5f1932c7bc1",
        "date": "2023-11-01T18:13:15Z",
        "message": "chore: re-enable the nns_upgrade_test system-tests on hourly and nightly pipelines"
      },
      {
        "id": "88ed2b58df716e9bf0dbe492d9026e7cac2d2737",
        "date": "2023-11-01T14:12:04Z",
        "message": "chore: ic_mainnet_nns_recovery: replace the ic-recovery lib with its binary"
      },
      {
        "id": "a42605ed0c83abfda4e365f0fc9e38f027f52237",
        "date": "2023-10-25T13:29:31Z",
        "message": "fix: add some missing fields to sns_default_test_init_params_v2.yml"
      },
      {
        "id": "2acde86a0e588cba0b2d0ab081e77b206fec28aa",
        "date": "2023-10-25T10:38:25Z",
        "message": "fix: increase timeout for propose_new_sns in test-sns-canister-upgrades.sh"
      },
      {
        "id": "19f2469c0a32f0d55d5f5d3d76b88dafb82895c0",
        "date": "2023-10-23T13:27:51Z",
        "message": "fix: replace the ic-replay library with the mainnet binary"
      },
      {
        "id": "d8546dc595304ae91bc545c6a24976d20b323901",
        "date": "2023-10-19T13:54:24Z",
        "message": "feat: support colocating the ic-mainnet-nns-recovery"
      },
      {
        "id": "24e8c68df5b382b07b379cacba4edfa1d2c729b7",
        "date": "2023-10-17T15:31:49Z",
        "message": "fix: use the right principal in testnet/tools/nns-tools/sns_default_test_init_params_v2.yml"
      },
      {
        "id": "a0829ab346f317a360b31f43b16b304277e11381",
        "date": "2023-10-17T15:23:56Z",
        "message": "chore: let p8s scrape recovered nns"
      },
      {
        "id": "331f4d70f42ff66b1fdd24b0d9199de57b3a36c1",
        "date": "2023-10-16T21:31:09Z",
        "message": "chore: fix SNS upgrade scripts to work with the ic_mainnet_nns_recovery system-test"
      },
      {
        "id": "abb4a51e03842a92fb384fa4484f5b55e0ef5015",
        "date": "2023-10-06T12:22:21Z",
        "message": "fix: ic_mainnet_nns_recovery: fix the set_testnet_env_variables.sh"
      },
      {
        "id": "eec1a8312197dad35ec1b3075cfabdf877a9585e",
        "date": "2023-10-06T10:12:12Z",
        "message": "feat: support testing SNS upgrades on mainnet state"
      },
      {
        "id": "e39571d1f88a1cd7d44b926bf6d9a74061756eca",
        "date": "2023-10-04T15:03:23Z",
        "message": "chore: let curl fail in the unstuck_subnet_test in case it hits an error"
      },
      {
        "id": "b5e1b04818cc77360b9d79d7f3ad0c349471a114",
        "date": "2023-09-27T15:56:39Z",
        "message": "chore: remove testnet benchmarklarge such that it hosts can move to Farm"
      },
      {
        "id": "e4eefe5798b85d2d0af2f725328fc482587a1103",
        "date": "2023-09-27T15:29:49Z",
        "message": "chore: remove testnet benchmarksmall01 such that it hosts can move to Farm"
      },
      {
        "id": "11f44fa6ba995a9a23fdcf6340ce250accb73957",
        "date": "2023-09-25T07:50:50Z",
        "message": "Revert \"chore: add the node-exporter-full Grafana dashboards\""
      },
      {
        "id": "b8ed1041a3525c7aebbefc841c28ad4814194e05",
        "date": "2023-09-22T14:40:20Z",
        "message": "chore: add the node-exporter-full Grafana dashboards"
      },
      {
        "id": "0a7cc938541a5e252a46f631766d878c88cf9eba",
        "date": "2023-09-21T11:21:40Z",
        "message": "fix: temporarily disable the nns_upgrade_test"
      },
      {
        "id": "4d8e5a5fd6dcaa074259be51f8016cfa66f57bc9",
        "date": "2023-09-13T08:16:18Z",
        "message": "fix: update p8s and UVM images"
      },
      {
        "id": "086a8f3977559d991b638588e1077b66274e50d1",
        "date": "2023-09-08T23:30:19Z",
        "message": "chore: run the nns_upgrade_test on the nightly CI pipeline"
      },
      {
        "id": "84126910319e3223e712bb192da749f74c3efaa5",
        "date": "2023-09-07T14:40:48Z",
        "message": "chore: update testnet/tools/nns-tools/README.md & improve the recovered_mainnet_nns testnet"
      },
      {
        "id": "32aee193c24496dc2789307bb62272774c59d808",
        "date": "2023-09-06T16:51:44Z",
        "message": "fix: fail when curl fails in testnet/tools/nns-tools/"
      },
      {
        "id": "470ff6cce637ee89eeb87a9d9da6c695add70b8a",
        "date": "2023-09-05T14:49:03Z",
        "message": "fix: don't escape HTML in the `ict testnet create` summary to fix the Kibana URL"
      },
      {
        "id": "ab628b871d70ccdb1562c40b0ce036ec6693b267",
        "date": "2023-09-01T11:39:42Z",
        "message": "fix: point to the new Kibana from system-tests so that we can search logs again"
      },
      {
        "id": "1a8314cdbe58eb78e97c4cbc4d2ba7e3a8ba913d",
        "date": "2023-08-30T08:43:12Z",
        "message": "chore: remove the update_workload_long_test"
      },
      {
        "id": "ce60ebcb9366a17a57e03b7e67e885f0dfcab57e",
        "date": "2023-08-26T12:53:03Z",
        "message": "feat: setup a BoundaryNode configured for the recovered mainnet NNS"
      },
      {
        "id": "150e9f53d33121e3efd8d8a4772bd1b24e08ac12",
        "date": "2023-08-25T13:17:36Z",
        "message": "chore: fix ownership of system-tests (missing trailing slashes)"
      },
      {
        "id": "4a1c3e68c4642806fe1bcf03f6988513f76db6be",
        "date": "2023-08-23T17:41:17Z",
        "message": "feat: support \"ict testnet create recovered_mainnet_nns\""
      },
      {
        "id": "c6ed9ca48d01530298e88de955f3689b96508a40",
        "date": "2023-08-22T17:26:04Z",
        "message": "Port nns_state_deployment.sh to the nns_upgrade_test system-test"
      }
    ],
    "line_additions": 27278,
    "line_deletions": 25675,
    "lines_effected_total": 52953,
    "rel_comm_add": 16,
    "rel_comm_del": 18,
    "rel_comm_total": 24
  },
  {
    "login": "rikonor",
    "id": 3395638,
    "totalContributions": 355,
    "github": "https://github.com/rikonor",
    "commits": [
      {
        "id": "7e603985f8cb02856a7f8efe23d5518af28e7727",
        "date": "2023-10-13T16:54:45Z",
        "message": "Merge branch 'or-important-custom-domains' into 'master'\n\nfeat: Consider important domains for metrics\n\nThe BN's custom domain feature tracks failures for custom domain renewals. That said, we don't want to alert on any such failure. Instead, we want to alert only when it's an important domain. \n\nSee merge request dfinity-lab/public/ic!15368"
      },
      {
        "id": "89fa1c814158b4719edad29c71992f6ec88fa9b6",
        "date": "2023-10-13T16:54:43Z",
        "message": "feat: Consider important domains for metrics"
      },
      {
        "id": "e5e14f9b1bb5933fd6a393a9e2a87f9a60f82f5c",
        "date": "2023-10-05T17:29:31Z",
        "message": "Merge branch 'or-btc-queries' into 'master'\n\nfeat(BOUN-822): Support special routing logic for BTC canisters\n\n \n\nSee merge request dfinity-lab/public/ic!15174"
      },
      {
        "id": "65fc855c3034f7ca4fc6974fdbf1440054b25fed",
        "date": "2023-10-05T17:29:30Z",
        "message": "feat(BOUN-822): Support special routing logic for BTC canisters"
      },
      {
        "id": "4e437c016f3351e04f45627cb505ee3b4c2a454d",
        "date": "2023-09-29T17:25:37Z",
        "message": "Merge branch 'or-disable-checks' into 'master'\n\nfeat(NODE-1109): Tool to disable SetupOS checks\n\n \n\nSee merge request dfinity-lab/public/ic!15102"
      },
      {
        "id": "fe6826edc2b3035d6622f8314608683e9a7c3f3f",
        "date": "2023-09-29T17:25:37Z",
        "message": "feat(NODE-1109): Tool to disable SetupOS checks"
      },
      {
        "id": "3c580d095b5e0128219559a3288fbaa730c06de9",
        "date": "2023-09-29T15:04:55Z",
        "message": "Merge branch 'or-disable-dns-cache' into 'master'\n\nfeat(BOUN-887): disable certificate-issuer dns cache\n\n \n\nSee merge request dfinity-lab/public/ic!15107"
      },
      {
        "id": "275fde1fb4c7c29f6c906a587ce712d1ba2cc5ea",
        "date": "2023-09-29T15:04:54Z",
        "message": "feat(BOUN-887): disable certificate-issuer dns cache"
      },
      {
        "id": "17dbaaca6ee0dcbc0c30e33a11d1f5c364ec1274",
        "date": "2023-09-28T18:42:29Z",
        "message": "Merge branch 'or/BOUN-216' into 'master'\n\nfeat(BOUN-742): The API BN is represented in the registry\n\nAdds the following NNS record type:\n```protobuf\nmessage ApiBoundaryNodeRecord {\n  string version = 1;\n  string domain = 2;\n}\n```\n\nThe keys for `ApiBoundaryNodeRecord` will have the format: `api_boundary_node_<node_id>`.  \nThis indicates that a replica with `<node_id>` is required to act as an API Boundary Node.\n\nAdds 4 new proposal types:\n* `AddApiBoundaryNode`\n* `UpdateApiBoundaryNodesVersion`\n* `UpdateApiBoundaryNodeDomain`\n* `RemoveApiBoundaryNodes`\n\n## Open questions for the NNS team\n\n* Updating get-topology \n\nSee merge request dfinity-lab/public/ic!13175"
      },
      {
        "id": "5be690effe3fbc09f761834512dc2b7dd5fb7a61",
        "date": "2023-09-28T18:42:29Z",
        "message": "feat(BOUN-742): The API BN is represented in the registry"
      },
      {
        "id": "39200ffa5c4338deea51403e1d724a65ae2ef54e",
        "date": "2023-09-21T16:00:23Z",
        "message": "Merge branch 'or-setupos-inject-configuration' into 'master'\n\nfeat(BOUN-892): setupos-inject-configuration\n\n \n\nSee merge request dfinity-lab/public/ic!14910"
      },
      {
        "id": "9506ac99f5f2b6a5eecab35541a5bc79f509273b",
        "date": "2023-09-21T16:00:23Z",
        "message": "feat(BOUN-892): setupos-inject-configuration"
      },
      {
        "id": "912c32fc247333374119e67214f9bff6cae7ca4a",
        "date": "2023-09-20T15:42:41Z",
        "message": "Merge branch 'or-fix-deps-2' into 'master'\n\nchore: fix dependencies so we can import sys_mount\n\n \n\nSee merge request dfinity-lab/public/ic!14906"
      },
      {
        "id": "308d870839df67219be8af6d77f87b092b6a5276",
        "date": "2023-09-20T15:42:41Z",
        "message": "chore: fix dependencies so we can import sys_mount"
      },
      {
        "id": "825f330722671fc2c5b66ea0f9673c5cc0804ac7",
        "date": "2023-09-15T15:48:20Z",
        "message": "Merge branch 'or-disable-gatewayd' into 'master'\n\nchore(BOUN-851): block access to systemd-journal-gatewayd on BNs\n\nThis change blocks access (via nftables) to `systemd-journal-gatewayd`. Instead, we allow access to `systemd-journal-gatewayd-shim`. \n\nSee merge request dfinity-lab/public/ic!14827"
      },
      {
        "id": "c4902401d3099ba8deee4db972d520976c67432f",
        "date": "2023-09-15T15:48:19Z",
        "message": "chore(BOUN-851): block access to systemd-journal-gatewayd on BNs"
      },
      {
        "id": "6645099b0502627691ba271eebefb953caa52c88",
        "date": "2023-08-29T18:08:40Z",
        "message": "Merge branch 'gatewayd-shim' into 'master'\n\nsystemd-journal-gatewayd-shim\n\nRequired follow-ups:\n\n1. [[Done](https://github.com/nikola-milosa/vector/pull/9)] Update our fork of [vector](https://github.com/nikola-milosa/vector/tree/master) to support specifying services to pull logs of.\n2. [Done] (Optional) If request does not specify any `_SYSTEMD_UNIT`, just export all _allowed_ service logs.\n3. [TODO] Create new services using vector to sanitize logs (e.g nginx-logs, certificate-issuer-logs, etc). \n\nSee merge request dfinity-lab/public/ic!14388"
      },
      {
        "id": "fe90e5739c15036259e7fa788af219503d286a70",
        "date": "2023-08-29T18:08:38Z",
        "message": "systemd-journal-gatewayd-shim"
      },
      {
        "id": "200eb37b0de2216711a6464e7e6af322548c2bb1",
        "date": "2023-08-24T15:54:05Z",
        "message": "Merge branch 'or-simplify-3' into 'master'\n\nchore: start breaking up ErrorCause into specific error types\n\nThis is a simple pass on breaking up ErrorCause into the following:\n\n1. ApiError\n2. ProxyError (will be done in a follow-up)\n3. LookupError (will be done in a follow-up)\n\nMy suggestion here is that, on failure, API endpoints always return an `Err(ApiError)`, which implements `IntoResponse`.\n\nSeparately (but will be done later), the `Proxy` trait will return `ProxyError` and `Lookup` will return `LookupError`.\nThese will then be automatically converted to `ApiError` using `thiserror`. \n\nSee merge request dfinity-lab/public/ic!14364"
      },
      {
        "id": "1ff881e70e31c0a15bf2ecbc324f04169f05495e",
        "date": "2023-08-24T15:54:05Z",
        "message": "chore: start breaking up ErrorCause into specific error types"
      },
      {
        "id": "e34b7d86443a375b3daeb33dace13913e0e61149",
        "date": "2023-08-24T14:51:30Z",
        "message": "Merge branch 'or-simplify-2' into 'master'\n\nchore: break up trait into simpler individual traits\n\nbreak up `Proxier` into simpler individual traits:\n\n1. Proxy\n2. Lookup\n3. Health\n4. RootKey\n\nThis is just an initial simplification, I plan on doing another pass over it later (e.g RootKey does not need to be a trait, it can just be injected as-is). \n\nSee merge request dfinity-lab/public/ic!14363"
      },
      {
        "id": "074391c6c3dd82221c61f289fe64f29eeb8ac97b",
        "date": "2023-08-24T14:51:30Z",
        "message": "chore: break up trait into simpler individual traits"
      },
      {
        "id": "33d4e63486a172237f7d270e931a72914e8a2974",
        "date": "2023-08-24T13:03:08Z",
        "message": "Merge branch 'or-simplify-router' into 'master'\n\nchore: simpliy https router setup\n\nThis just deduplicates the setting up of route layers. \n\nSee merge request dfinity-lab/public/ic!14361"
      },
      {
        "id": "8d1717eaaedb77a027b413b1ab6f064240fb639d",
        "date": "2023-08-24T13:03:07Z",
        "message": "chore: simpliy https router setup"
      },
      {
        "id": "d33ce10e3896f223045bc44320c794308c32a13e",
        "date": "2023-08-22T19:16:21Z",
        "message": "Merge branch 'or-icb-metrics' into 'master'\n\nfeat: instrument ic-boundary with individual buckets\n\n \n\nSee merge request dfinity-lab/public/ic!14333"
      },
      {
        "id": "5f781b55bb6c61855f93da599748cce42e3922b8",
        "date": "2023-08-22T19:16:20Z",
        "message": "feat: instrument ic-boundary with individual buckets"
      },
      {
        "id": "d3eb75522375983b18f790514265401551ca3d39",
        "date": "2023-08-21T20:44:18Z",
        "message": "Merge branch 'or-metrics-http' into 'master'\n\nchore: instrument http client\n\n \n\nSee merge request dfinity-lab/public/ic!14303"
      },
      {
        "id": "31661fe915a157fe097117b368f9f78c57bc13ee",
        "date": "2023-08-21T20:44:18Z",
        "message": "chore: instrument http client"
      },
      {
        "id": "5403c40a7dcf1fe84721952593f5a48188d4b324",
        "date": "2023-08-21T19:19:58Z",
        "message": "Merge branch 'or-metrics' into 'master'\n\nchore: Add logs to dns_resolver and tls_verifier\n\n \n\nSee merge request dfinity-lab/public/ic!14301"
      },
      {
        "id": "6fcbd3a45d354fbafda880b71bae51896cbb7924",
        "date": "2023-08-21T19:19:57Z",
        "message": "chore: Add logs to dns_resolver and tls_verifier"
      },
      {
        "id": "646f52d2be2d5ef596b65b230fce6a986877568d",
        "date": "2023-08-18T14:08:37Z",
        "message": "Merge branch 'or-group-args' into 'master'\n\nchore: group ic-boundary cli args into groups\n\n \n\nSee merge request dfinity-lab/public/ic!14208"
      },
      {
        "id": "4c1062aabc02d84ce2d8b7b608278838758ac70e",
        "date": "2023-08-18T14:08:37Z",
        "message": "chore: group ic-boundary cli args into groups"
      },
      {
        "id": "4c7c37ac32150a851759f91207a513e1c139daac",
        "date": "2023-08-14T14:26:38Z",
        "message": "Merge branch 'or-dont-es' into 'master'\n\nfix(BOUN-843): stop sending logs to elasticsearch from bn vector\n\nThe Dfinity Elasticsearch cluster was recently moved to k8s such that it is no longer reachable from BNs. The intent is to switch to pulling logs instead of pushing them. This removes the push from the BNs since it's not working anymore. \n\nSee merge request dfinity-lab/public/ic!14131"
      },
      {
        "id": "912bd8627aa5856022476b9ee85a8c07b6a78681",
        "date": "2023-08-14T14:26:38Z",
        "message": "fix(BOUN-843): stop sending logs to elasticsearch from bn vector"
      }
    ],
    "email": "or.ricon@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 34,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 17,
    "fixes": 2,
    "feats": 7,
    "non_merge_commits": [
      {
        "id": "89fa1c814158b4719edad29c71992f6ec88fa9b6",
        "date": "2023-10-13T16:54:43Z",
        "message": "feat: Consider important domains for metrics"
      },
      {
        "id": "65fc855c3034f7ca4fc6974fdbf1440054b25fed",
        "date": "2023-10-05T17:29:30Z",
        "message": "feat(BOUN-822): Support special routing logic for BTC canisters"
      },
      {
        "id": "fe6826edc2b3035d6622f8314608683e9a7c3f3f",
        "date": "2023-09-29T17:25:37Z",
        "message": "feat(NODE-1109): Tool to disable SetupOS checks"
      },
      {
        "id": "275fde1fb4c7c29f6c906a587ce712d1ba2cc5ea",
        "date": "2023-09-29T15:04:54Z",
        "message": "feat(BOUN-887): disable certificate-issuer dns cache"
      },
      {
        "id": "5be690effe3fbc09f761834512dc2b7dd5fb7a61",
        "date": "2023-09-28T18:42:29Z",
        "message": "feat(BOUN-742): The API BN is represented in the registry"
      },
      {
        "id": "9506ac99f5f2b6a5eecab35541a5bc79f509273b",
        "date": "2023-09-21T16:00:23Z",
        "message": "feat(BOUN-892): setupos-inject-configuration"
      },
      {
        "id": "308d870839df67219be8af6d77f87b092b6a5276",
        "date": "2023-09-20T15:42:41Z",
        "message": "chore: fix dependencies so we can import sys_mount"
      },
      {
        "id": "c4902401d3099ba8deee4db972d520976c67432f",
        "date": "2023-09-15T15:48:19Z",
        "message": "chore(BOUN-851): block access to systemd-journal-gatewayd on BNs"
      },
      {
        "id": "fe90e5739c15036259e7fa788af219503d286a70",
        "date": "2023-08-29T18:08:38Z",
        "message": "systemd-journal-gatewayd-shim"
      },
      {
        "id": "1ff881e70e31c0a15bf2ecbc324f04169f05495e",
        "date": "2023-08-24T15:54:05Z",
        "message": "chore: start breaking up ErrorCause into specific error types"
      },
      {
        "id": "074391c6c3dd82221c61f289fe64f29eeb8ac97b",
        "date": "2023-08-24T14:51:30Z",
        "message": "chore: break up trait into simpler individual traits"
      },
      {
        "id": "8d1717eaaedb77a027b413b1ab6f064240fb639d",
        "date": "2023-08-24T13:03:07Z",
        "message": "chore: simpliy https router setup"
      },
      {
        "id": "5f781b55bb6c61855f93da599748cce42e3922b8",
        "date": "2023-08-22T19:16:20Z",
        "message": "feat: instrument ic-boundary with individual buckets"
      },
      {
        "id": "31661fe915a157fe097117b368f9f78c57bc13ee",
        "date": "2023-08-21T20:44:18Z",
        "message": "chore: instrument http client"
      },
      {
        "id": "6fcbd3a45d354fbafda880b71bae51896cbb7924",
        "date": "2023-08-21T19:19:57Z",
        "message": "chore: Add logs to dns_resolver and tls_verifier"
      },
      {
        "id": "4c1062aabc02d84ce2d8b7b608278838758ac70e",
        "date": "2023-08-18T14:08:37Z",
        "message": "chore: group ic-boundary cli args into groups"
      },
      {
        "id": "912bd8627aa5856022476b9ee85a8c07b6a78681",
        "date": "2023-08-14T14:26:38Z",
        "message": "fix(BOUN-843): stop sending logs to elasticsearch from bn vector"
      }
    ],
    "line_additions": 3675,
    "line_deletions": 783,
    "lines_effected_total": 4458,
    "rel_comm_add": 14,
    "rel_comm_del": 12,
    "rel_comm_total": 14
  },
  {
    "login": "Dfinity-skaestle",
    "id": 58423291,
    "totalContributions": 330,
    "github": "https://github.com/Dfinity-skaestle",
    "commits": [
      {
        "id": "cefa6034e8d4423179df51f0ad714473dcff41c0",
        "date": "2023-11-20T10:41:13Z",
        "message": "Merge branch 'skaestle/scalability-week-47' into 'master'\n\nUse gzip instead of the parallel version, since that's not installed in the CD docker image\n\n \n\nSee merge request dfinity-lab/public/ic!16207"
      },
      {
        "id": "af4bee1437318fd17ea9b979128fac8dfd915b80",
        "date": "2023-11-20T10:41:12Z",
        "message": "Use gzip instead of the parallel version, since that's not installed in the CD docker image"
      },
      {
        "id": "a9de3177a1f7e7528068035b5f771641bb3b4f6f",
        "date": "2023-11-17T15:07:28Z",
        "message": "Merge branch 'skaestle/fees_and_limits' into 'master'\n\nRUN-816: Fees and limits json dumper\n\nAdded a new binary that dumps current fees and resource limits for the current replica version. \n\nSee merge request dfinity-lab/public/ic!15937"
      },
      {
        "id": "f4c0a78f512f7bbe5d7025f1140e717fb69d86dc",
        "date": "2023-11-17T15:07:27Z",
        "message": "RUN-816: Fees and limits json dumper"
      },
      {
        "id": "084f12693370fef7d6b335b25aac46a786159688",
        "date": "2023-11-16T09:54:28Z",
        "message": "Merge branch 'fix-prometheus_url' into 'master'\n\nFix prometheus_url in scalability script\n\n \n\nSee merge request dfinity-lab/public/ic!16051"
      },
      {
        "id": "4afcb7050b087a738a15e82519974e20c61bffd5",
        "date": "2023-10-31T21:14:10Z",
        "message": "Merge branch 'query-stats/set-epoch' into 'master'\n\nRUN-627 Set epoch from query handler\n\nChange the query handler and context to use a `Labeled` state, which includes the height. We then use this height to switch epochs when collecting query stats. \n\nSee merge request dfinity-lab/public/ic!15615"
      },
      {
        "id": "142beabc44cd77a5485d8cc7b24293d46f189d7e",
        "date": "2023-10-31T21:14:09Z",
        "message": "RUN-627 Set epoch from query handler"
      },
      {
        "id": "74651414a30e38f51624699006f65f5bf84b48df",
        "date": "2023-10-26T11:56:32Z",
        "message": "Merge branch 'scalability/week-43' into 'master'\n\nWrapper around Prometheus and fix Farm deployment scripts\n\n \n\nSee merge request dfinity-lab/public/ic!15613"
      },
      {
        "id": "f299d74c0baafd83212d1fe5cf5c88918f434c71",
        "date": "2023-10-26T11:56:32Z",
        "message": "Wrapper around Prometheus and fix Farm deployment scripts"
      },
      {
        "id": "15da2e805b02c3bf04ab27a7bfa203b177a7fd29",
        "date": "2023-10-20T13:04:04Z",
        "message": "Merge branch 'query-stats-composite-query' into 'master'\n\nRUN-627 Track query stats for each canister individually when doing composite query calls\n\nThis changes ensure that query stats behave as expected when composite queries are being executed. Now, if canister A triggers a call into canister B, queries stats will be collected individually for both canisters A and B.\n\nAlong with these changes, there is a new test to ensure that the expected behavior can be observed. \n\nSee merge request dfinity-lab/public/ic!15430"
      },
      {
        "id": "5f18135c86583d0a12e12717cb643468239c319c",
        "date": "2023-10-20T13:04:01Z",
        "message": "RUN-627 Track query stats for each canister individually when doing composite query calls"
      },
      {
        "id": "fa8cb52e8d10931e708c2bef87a9e22bf38ce0de",
        "date": "2023-10-18T15:25:21Z",
        "message": "Merge branch 'query-stats-canister-status' into 'master'\n\nAdd query stats to canister status endpoint\n\nDraft of Spec changes: https://github.com/dfinity/interface-spec/pull/183/files \n\nSee merge request dfinity-lab/public/ic!15196"
      },
      {
        "id": "4afbee5880c794d4e48892b6cd1e2c1c6d003641",
        "date": "2023-10-18T15:25:21Z",
        "message": "Add query stats to canister status endpoint"
      },
      {
        "id": "5acc3b2ca1749d57f99b19369c082c34d7ca3caa",
        "date": "2023-10-06T12:13:39Z",
        "message": "chore(CON-1140): Query stats rename"
      },
      {
        "id": "4a730bcbea65e73aac790b248976e26918aa3a5d",
        "date": "2023-10-04T11:57:01Z",
        "message": "Merge branch 'scalability/fix-cd-dashboard' into 'master'\n\nMinor fix in scalability dashboard\n\n \n\nSee merge request dfinity-lab/public/ic!15187"
      },
      {
        "id": "8d9cf8a61f93b04c073d6a7fc6b3d84ac6800107",
        "date": "2023-10-04T11:57:00Z",
        "message": "Minor fix in scalability dashboard"
      },
      {
        "id": "88777d653977c10c6596ab9bbb0922e8c450d0af",
        "date": "2023-09-28T09:38:29Z",
        "message": "Merge branch 'query-stats-aggregation-tests' into 'master'\n\nRUN-629: Query stats aggregation tests\n\nTest deterministic query aggregation. \n\nSee merge request dfinity-lab/public/ic!14907"
      },
      {
        "id": "b724938768d7af4ae945500a14f1f6fe9ee543ae",
        "date": "2023-09-28T09:38:28Z",
        "message": "RUN-629: Query stats aggregation tests"
      },
      {
        "id": "56800b234dc986c14e8730ba9c26f29811c3db79",
        "date": "2023-09-21T07:42:44Z",
        "message": "Merge branch 'scalability/week-38' into 'master'\n\nRe-added scaled up performance numbers to dashboard\n\n \n\nSee merge request dfinity-lab/public/ic!14865"
      },
      {
        "id": "5be525b23b1a11d6b74d7fdde61e2572e2f288db",
        "date": "2023-09-21T07:42:43Z",
        "message": "Re-added scaled up performance numbers to dashboard"
      },
      {
        "id": "a3056e8684896894cd2921eb5db40bd999af7af1",
        "date": "2023-09-19T20:13:19Z",
        "message": "Aggregate query stats into canister state"
      },
      {
        "id": "71d25a0a5516d9494faef3b0840e8fa75b7ff7cb",
        "date": "2023-09-15T09:39:11Z",
        "message": "Merge branch 'query-stats-aggregation' into 'master'\n\nRUN-629: Protobuf changes to add query stats to canister state\n\nProtobuf changes + serialization/deserialization for query stats in canister state.\nQuery stats in the canister state are updated once per epoch, when per-node data becomes globally available from consensus blocks. Deterministic aggregation of those values will follow in the next MR.\n\nDesign doc: https://docs.google.com/document/d/1awcOUG33wb5KPyjRhsnRgZDeRAO8Gv4xCI9KYYg-1bA/edit \n\nSee merge request dfinity-lab/public/ic!14771"
      },
      {
        "id": "e0a0f33c49f2162389cf9f3d7f2e2603188230f3",
        "date": "2023-09-15T09:39:11Z",
        "message": "RUN-629: Protobuf changes to add query stats to canister state"
      },
      {
        "id": "9fa88aa1df1bbaf2dedbbf6f9e16a49c3552a683",
        "date": "2023-09-07T14:18:19Z",
        "message": "Merge branch 'query-stats/deliver-batch' into 'master'\n\nQuery Stats: deliver batch\n\nPart 2 of the query stats feature.\n\nStore incomplete query stats attached to blocks in a temporary data structure in the replicated state. \n\nSee merge request dfinity-lab/public/ic!14256"
      },
      {
        "id": "389865c58a0ca97c51d68da3f645401e26eb45f2",
        "date": "2023-09-07T14:18:18Z",
        "message": "Query Stats: deliver batch"
      },
      {
        "id": "6d06d57f22f3fc23455f0fd2a21db2a0c0efe794",
        "date": "2023-08-22T09:32:08Z",
        "message": "Merge branch 'skaestle/scalability-week-33' into 'master'\n\nScalability Suite: Week 33\n\n \n\nSee merge request dfinity-lab/public/ic!14145"
      },
      {
        "id": "7c0b816f3eef3d6a60a8fde66763189d99a9bf81",
        "date": "2023-08-22T09:32:08Z",
        "message": "Scalability Suite: Week 33"
      },
      {
        "id": "23a96f71e4ff434f1aaae04eb1d9e9ab36d663f0",
        "date": "2023-08-15T12:21:58Z",
        "message": "Merge branch 'leon/query_stats_part1' into 'master'\n\nfeature(CON-1091,RUN-627): Implement Query Stats Local collector and payload builder stub\n\nThis is the first of several MRs to implement IC-1454 Query Stats\nThis MR implements:\n- The `QueryStatsCollector` that collects node local metrics\n- A stub of the `QueryStatsPayloadBuilder` that receives the stats from the `QueryStatsCollector` but simply builds always builds empty payloads.\n\nThe feature is deactivated by a config flag, so metrics are not being collected in current configuration and this MR should not change behaviour of the IC \n\nCloses IC-1454\n\nSee merge request dfinity-lab/public/ic!13841"
      },
      {
        "id": "0fc277230742ae10c3f6cb5581bfc65e0960ac4b",
        "date": "2023-08-11T19:18:59Z",
        "message": "Merge branch 'scalability/week-32' into 'master'\n\nScalability Suite: week 32\n\n* Removed deprecated `notify_dashboard` script left-overs\n* Fixed memory test benchmark (don't show runs against a single canister any more, but only the multi-canister version)\n* Show detailed latency and throughput numbers for system baseline updates as well as memory test benchmarks \n\nSee merge request dfinity-lab/public/ic!14003"
      },
      {
        "id": "9ba671e0bc56eab88f439eaa1c0cce6eede7988c",
        "date": "2023-08-11T19:18:59Z",
        "message": "Scalability Suite: week 32"
      },
      {
        "id": "11cf778d3f2c6b8cc2443995184089b4be6b1a1a",
        "date": "2023-08-04T13:12:24Z",
        "message": "Merge branch 'scalability/week-31' into 'master'\n\nScalability suite: Fixes week 31\n\n*Install II canister in NNS:*\n\nThere seems to be a regression with more recent versions of `dfx` where deploying to non-NNS subnetworks doesn't work w/o specifying a effective canister ID.\n\nII installation is the only place in the suite where we use `dfx` to deploy canisters, so I simply changed the code to install the II canister in the NNS subnetwork.\n\n*Motoko QR benchmark*\n\nUse more appropriate request rates, almost all of them have 100% failure rate right now.\n\n*Boundary nodes benchmark*\n\nRüdi fixed the boundary nodes benchmark, thanks for that!\n\n*Deprecated code*\n\nRemove deprecated code to upload nightly results to elasticsearch. \n\nSee merge request dfinity-lab/public/ic!13942"
      },
      {
        "id": "8d1a1c02e0104ae62ab5e0f623261bb4c7c97830",
        "date": "2023-08-04T13:12:24Z",
        "message": "Scalability suite: Fixes week 31"
      }
    ],
    "email": "stefan.kaestle@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 32,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 16,
    "fixes": 3,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "af4bee1437318fd17ea9b979128fac8dfd915b80",
        "date": "2023-11-20T10:41:12Z",
        "message": "Use gzip instead of the parallel version, since that's not installed in the CD docker image"
      },
      {
        "id": "f4c0a78f512f7bbe5d7025f1140e717fb69d86dc",
        "date": "2023-11-17T15:07:27Z",
        "message": "RUN-816: Fees and limits json dumper"
      },
      {
        "id": "142beabc44cd77a5485d8cc7b24293d46f189d7e",
        "date": "2023-10-31T21:14:09Z",
        "message": "RUN-627 Set epoch from query handler"
      },
      {
        "id": "f299d74c0baafd83212d1fe5cf5c88918f434c71",
        "date": "2023-10-26T11:56:32Z",
        "message": "Wrapper around Prometheus and fix Farm deployment scripts"
      },
      {
        "id": "5f18135c86583d0a12e12717cb643468239c319c",
        "date": "2023-10-20T13:04:01Z",
        "message": "RUN-627 Track query stats for each canister individually when doing composite query calls"
      },
      {
        "id": "4afbee5880c794d4e48892b6cd1e2c1c6d003641",
        "date": "2023-10-18T15:25:21Z",
        "message": "Add query stats to canister status endpoint"
      },
      {
        "id": "5acc3b2ca1749d57f99b19369c082c34d7ca3caa",
        "date": "2023-10-06T12:13:39Z",
        "message": "chore(CON-1140): Query stats rename"
      },
      {
        "id": "8d9cf8a61f93b04c073d6a7fc6b3d84ac6800107",
        "date": "2023-10-04T11:57:00Z",
        "message": "Minor fix in scalability dashboard"
      },
      {
        "id": "b724938768d7af4ae945500a14f1f6fe9ee543ae",
        "date": "2023-09-28T09:38:28Z",
        "message": "RUN-629: Query stats aggregation tests"
      },
      {
        "id": "5be525b23b1a11d6b74d7fdde61e2572e2f288db",
        "date": "2023-09-21T07:42:43Z",
        "message": "Re-added scaled up performance numbers to dashboard"
      },
      {
        "id": "a3056e8684896894cd2921eb5db40bd999af7af1",
        "date": "2023-09-19T20:13:19Z",
        "message": "Aggregate query stats into canister state"
      },
      {
        "id": "e0a0f33c49f2162389cf9f3d7f2e2603188230f3",
        "date": "2023-09-15T09:39:11Z",
        "message": "RUN-629: Protobuf changes to add query stats to canister state"
      },
      {
        "id": "389865c58a0ca97c51d68da3f645401e26eb45f2",
        "date": "2023-09-07T14:18:18Z",
        "message": "Query Stats: deliver batch"
      },
      {
        "id": "7c0b816f3eef3d6a60a8fde66763189d99a9bf81",
        "date": "2023-08-22T09:32:08Z",
        "message": "Scalability Suite: Week 33"
      },
      {
        "id": "9ba671e0bc56eab88f439eaa1c0cce6eede7988c",
        "date": "2023-08-11T19:18:59Z",
        "message": "Scalability Suite: week 32"
      },
      {
        "id": "8d1a1c02e0104ae62ab5e0f623261bb4c7c97830",
        "date": "2023-08-04T13:12:24Z",
        "message": "Scalability suite: Fixes week 31"
      }
    ],
    "line_additions": 1896,
    "line_deletions": 754,
    "lines_effected_total": 2650,
    "rel_comm_add": 13,
    "rel_comm_del": 8,
    "rel_comm_total": 13
  },
  {
    "login": "maksymar",
    "id": 103510076,
    "totalContributions": 327,
    "github": "https://github.com/maksymar",
    "commits": [
      {
        "id": "7d40c09f4a0609f3d00322172c1336759f8f6be1",
        "date": "2023-11-11T18:52:34Z",
        "message": "Merge branch 'maksym/exc-bench-3' into 'master'\n\nchore: remove hardcoded sample-size in execution benchmarks\n\nThis MR removes hardcoded `sample-size` setting from management_cansiter benchmarks.\n\nThis allows to modify sample size in just one place (command line) vs many files per each benchmark group. \n\nSee merge request dfinity-lab/public/ic!16030"
      },
      {
        "id": "49713de9b1cf8f53aa04330ad932105095115666",
        "date": "2023-11-11T18:52:34Z",
        "message": "chore: remove hardcoded sample-size in execution benchmarks"
      },
      {
        "id": "fc1ba08bb9e197d19f97b5a4339b6c17a692d826",
        "date": "2023-11-10T13:53:17Z",
        "message": "Merge branch 'maksym/exc-bench-2' into 'master'\n\nchore: add execution_environment benchmarks\n\nThis MR adds execution_environment benchmarks for management_canister calls. \n\nSee merge request dfinity-lab/public/ic!15969"
      },
      {
        "id": "ef0b2c42cc687ebabc6f50acb5dff44b040ac9a6",
        "date": "2023-11-10T13:53:17Z",
        "message": "chore: add execution_environment benchmarks"
      },
      {
        "id": "7f98742b14878cfe2458b04db2b56c44992c0edd",
        "date": "2023-11-07T09:18:23Z",
        "message": "Merge branch 'maksym/exc-bench' into 'master'\n\nchore: organise execution environment benchmarks\n\nThis MR cleans up execution environment benchmark folder by moving benchmarks to specific folders.\n\nThis is a preparation for adding more benchmarks with an aim to avoid root directory cluttering. \n\nSee merge request dfinity-lab/public/ic!15914"
      },
      {
        "id": "b80ba28f1bb9d7bc31b546f0e3a2ffca22fa5785",
        "date": "2023-11-07T09:18:23Z",
        "message": "chore: organise execution environment benchmarks"
      },
      {
        "id": "8ec3e3ed3140a4b381ad2c1366dc1d2212b2de73",
        "date": "2023-10-30T08:55:46Z",
        "message": "Merge branch 'maksym/follow-1160-k-data' into 'master'\n\nfix: add instructions-per-byte factor to data sending api calls\n\nThis MR adds instructions-per-byte conversion factor for charging instructions in data sending api calls to account for sandbox-replica communication.\n\nSpecifically:\n- `msg_reply_data_append`\n- `msg_reject`\n- `call_data_append`\n\nWhen charging instructions for a payload size it's important to account not only for the memory, but also for the time that is spent for transferring the payload from canister's wasm through sandbox into replica. \n\nSee merge request dfinity-lab/public/ic!15315"
      },
      {
        "id": "2c480185147ba3b4503c0d1f4aa55187d3b88793",
        "date": "2023-10-30T08:55:46Z",
        "message": "fix: add instructions-per-byte factor to data sending api calls"
      },
      {
        "id": "97e3a6d9740712af753bdffea2e75d084a65af35",
        "date": "2023-10-12T08:20:38Z",
        "message": "chore: update execution metrics dashboards for testnets to match prod"
      },
      {
        "id": "b512c5926d7619557b81432d8fc2c3b74c73c6cd",
        "date": "2023-10-05T15:10:15Z",
        "message": "Merge branch 'maksym/follow-1160-revert-k' into 'master'\n\nchore: revert \"fix: add instructions-per-byte factor for proper payload counting\"\n\nThis reverts commit f079f70e61f3e88da1f1f530fc546ecfd461b41a. \n\nSee merge request dfinity-lab/public/ic!15232"
      },
      {
        "id": "edb335215a1b4205d10f61ad5d17d598bff8134d",
        "date": "2023-10-05T15:10:14Z",
        "message": "chore: revert \"fix: add instructions-per-byte factor for proper payload counting\""
      },
      {
        "id": "12ab7e7755260fa3ee90469a4b7af1c3a9cacf35",
        "date": "2023-10-04T12:42:59Z",
        "message": "Merge branch 'maksym/follow-1160-k' into 'master'\n\nfix: add instructions-per-byte factor for proper payload counting\n\nThis MR adds instructions-per-byte conversion factor for charging instructions to account for sandbox-replica communication.\n\nWhen charging instructions for a payload size it's important to account not only for the memory, but also for the time that is spent for transferring the payload from canister's wasm through sandbox into replica.\n\nIt also required to adjust the instruction counter in wasm instrumentation. \n\nSee merge request dfinity-lab/public/ic!14985"
      },
      {
        "id": "f079f70e61f3e88da1f1f530fc546ecfd461b41a",
        "date": "2023-10-04T12:42:59Z",
        "message": "fix: add instructions-per-byte factor for proper payload counting"
      },
      {
        "id": "6529a74eea03c55c1e093cc262e1237150b3a93f",
        "date": "2023-09-22T17:07:35Z",
        "message": "Merge branch 'maksym/follow-1160-bounded-vec-item-size' into 'master'\n\nchore: add limit to a single HTTP header in headers to comply with the spec\n\nThis MR applies a limit to a single HTTP header size to comply with the interface spec for `http_request`.\n\nThis is implemented via adding a new template parameter `MAX_ALLOWED_ELEMENT_DATA_SIZE` to `BoundaryVec`.\nSince `BoundaryVec` is getting bigger it was moved to a separate file.\n\nSpec: https://internetcomputer.org/docs/current/references/ic-interface-spec/#ic-http_request \n\nSee merge request dfinity-lab/public/ic!14926"
      },
      {
        "id": "284951f073a429cd349ba3b757c6cd3d27770900",
        "date": "2023-09-22T17:07:35Z",
        "message": "chore: add limit to a single HTTP header in headers to comply with the spec"
      },
      {
        "id": "9bfc0832783b1adeee00648cb0cbc79a5667acc9",
        "date": "2023-09-20T12:34:18Z",
        "message": "Merge branch 'maksym/del-go-bazel-link' into 'master'\n\nchore: remove go/bazel-guide link from bazel logs\n\nThis MR removes `go/bazel-guide` link from bazel logs since go-links are obsolete. \n\nSee merge request dfinity-lab/public/ic!14886"
      },
      {
        "id": "8e0667e6dbc0d8509b8502746cac85e7e6b5aa70",
        "date": "2023-09-20T12:34:18Z",
        "message": "chore: remove go/bazel-guide link from bazel logs"
      },
      {
        "id": "21fa6190f619ae1179e3511092cd5644f61ceb3e",
        "date": "2023-09-19T12:33:15Z",
        "message": "Merge branch 'maksym/follow-1160-header-size' into 'master'\n\nchore: implement HTTP headers size limit for HTTP outcall requests\n\nThis MR adds a size limit to HTTP headers in HTTP outcall requests to comply with the spec.\n\nTo implement size limitation added a new parameter to an existing structure `BoundedVec`, so that it can be bounded either by length or by the size. This required adding a `DataSize` trait to calculate the underlying data size of each vector element.\n\nSpec: https://internetcomputer.org/docs/current/references/ic-interface-spec/#ic-http_request \n\nSee merge request dfinity-lab/public/ic!14824"
      },
      {
        "id": "ad7d9a3fec756374e7bf6fb8e2867c8f9f48c240",
        "date": "2023-09-19T12:33:14Z",
        "message": "chore: implement HTTP headers size limit for HTTP outcall requests"
      },
      {
        "id": "0fcc515109dbfd59774cb647ed02887ec4af8186",
        "date": "2023-09-07T10:37:56Z",
        "message": "Merge branch 'maksym/refactor-exec-tests-2' into 'master'\n\ntest: add execution_environment tests for creating canisters or updating settings with different amount of controllers\n\nThis MR adds tests for creating canisters or updating settings with different amount of controllers to make sure it complies with the specs. \n\nSee merge request dfinity-lab/public/ic!14629"
      },
      {
        "id": "1b2257df25670975ab525922fbeeb22f51c42a1a",
        "date": "2023-09-07T10:37:56Z",
        "message": "test: add execution_environment tests for creating canisters or updating settings with different amount of controllers"
      },
      {
        "id": "4aed8d07eb676a223544665d53ec7d7e2e689822",
        "date": "2023-09-07T08:36:21Z",
        "message": "Merge branch 'maksym/refactor-exec-tests' into 'master'\n\nrefactor: cleanup and unify execution_environment tests\n\nThis MR refactors execution_environment tests by adding some helper functions.\n\nThis is needed in order to shorten the overall test body and improve its readability.\n\n- add `B` and `T` constants for simplifying cycles reading, so it's `Cycles::new(100 * B)` and not `Cycles::new(100_000_000_000)`\n- add helper functions for creating canister with cycles and universal canister with cycles\n- add simplified assertions for reply, reply with specific value and reject \n\nSee merge request dfinity-lab/public/ic!14617"
      },
      {
        "id": "ff40772ad148ef07c2deb9f5b50f0cff42e4972d",
        "date": "2023-09-07T08:36:21Z",
        "message": "refactor: cleanup and unify execution_environment tests"
      },
      {
        "id": "ebfead78bfac261edc9ed66a08046d150b4381e4",
        "date": "2023-09-06T12:51:58Z",
        "message": "Merge branch 'maksym/follow-1160-update-settings-2' into 'master'\n\nfix: apply controllers number limit for update_settings deserialisation\n\nThis MR adds a controllers number limit checker during update_settings deserialisation to comply with the specification. \n\nSee merge request dfinity-lab/public/ic!14568"
      },
      {
        "id": "1b617931fb842929479c3ec2d4956be555dc0ab4",
        "date": "2023-09-06T12:51:58Z",
        "message": "fix: apply controllers number limit for update_settings deserialisation"
      },
      {
        "id": "1189970d878907c986e38cc1c87fa82c9c20da82",
        "date": "2023-08-24T10:25:23Z",
        "message": "Merge branch 'maksym/user-error-ellipsized' into 'master'\n\nperf: [EXC-1456] ellipsize user error message\n\nThis MR shortens UserError message using ellipsys format.\n\nThis improves performance of processing big errors. \n\nSee merge request dfinity-lab/public/ic!14345"
      },
      {
        "id": "7aa868653494a220b5b3002727f1b8358dd2dca5",
        "date": "2023-08-24T10:25:23Z",
        "message": "perf: [EXC-1456] ellipsize user error message"
      },
      {
        "id": "7c8c19a82a27bb1a35b3602926c564336e3d6192",
        "date": "2023-08-23T13:52:22Z",
        "message": "Merge branch 'maksym/ellipsize-cleanup' into 'master'\n\nchore: cleanup new_with_message_length_limit content\n\nThis MR cleans up the content of `new_with_message_length_limit()` function\n\n- bounding a value within range is done by `.clamp(min, max)` function\n- removed explicit no-op case since it's done inside `ellipsize` function \n\nSee merge request dfinity-lab/public/ic!14351"
      },
      {
        "id": "6d058d365102346c0983943348b6cd6e2baa5fe9",
        "date": "2023-08-23T13:52:21Z",
        "message": "chore: cleanup new_with_message_length_limit content"
      },
      {
        "id": "866a33cd4e76040fe0b1d54b6153447df452d023",
        "date": "2023-08-23T10:33:47Z",
        "message": "Merge branch 'maksym/str-ellipse' into 'master'\n\nrefactor: [EXC-1456] add StrEllipse trait for shortening strings easy\n\nThis MR adds `StrEllipse` trait for strings to represent them in an ellipsis format. \n\nSee merge request dfinity-lab/public/ic!14323"
      },
      {
        "id": "f216ec41eda384b7d467dfd2b0984951dcb0fc5f",
        "date": "2023-08-23T10:33:47Z",
        "message": "refactor: [EXC-1456] add StrEllipse trait for shortening strings easy"
      },
      {
        "id": "9edbe28b5cabcf49e0952a0ccb2c14f27dc9295d",
        "date": "2023-08-22T12:03:35Z",
        "message": "Merge branch 'maksym/follow-1160-seq-visitor' into 'master'\n\nperf: improve deserialization performance for DerivationPath\n\nThis MR switches from \"deserialise all, then check the size\" to \"deserialise elements sequentially and check the size along the way\" approach.\n\nThis allows to fail early when the top-level vector size exceeds the limit. \n\nSee merge request dfinity-lab/public/ic!14288"
      },
      {
        "id": "cf2c4c11f9a3cb787c46e5e11a3916d889345f44",
        "date": "2023-08-22T12:03:34Z",
        "message": "perf: improve deserialization performance for DerivationPath"
      },
      {
        "id": "8f36985a7563bef6135ad133bb82780a86df43cf",
        "date": "2023-08-11T15:13:13Z",
        "message": "Merge branch 'maksym/follow-1160-serde-bytes' into 'master'\n\nfix: add serde_bytes to ic00_types to improve candid decode performance\n\nAdding `serde_bytes` is a no-op on the Candid side, has no backwards compatibility issues and only improves the decoding performance. \n\nSee merge request dfinity-lab/public/ic!14120"
      },
      {
        "id": "3a3b13608bb86bc1a4950b3844b59a2fb91a7b3f",
        "date": "2023-08-11T15:13:13Z",
        "message": "fix: add serde_bytes to ic00_types to improve candid decode performance"
      },
      {
        "id": "4271bc91af7d78704ccbdfd04928eeb6093ffdf0",
        "date": "2023-08-11T10:21:43Z",
        "message": "Merge branch 'maksym/follow-1160-ecdsa' into 'master'\n\nfix: add serde_bytes to derivation path candid type to improve decoding performance\n\nThis MR adds `serde_bytes` structure for storing a vector of bytes which improves performance of decoding derivation path objects. \n\nSee merge request dfinity-lab/public/ic!14079"
      },
      {
        "id": "956c17effc7992a6e07312d09b59d2bc650154ab",
        "date": "2023-08-11T10:21:42Z",
        "message": "fix: add serde_bytes to derivation path candid type to improve decoding performance"
      },
      {
        "id": "54be82b984088c218147eddf609b6a623273af2a",
        "date": "2023-08-10T05:19:09Z",
        "message": "Merge branch 'maksym/install-code-serde-bytes' into 'master'\n\nfix: add serde_bytes to InstallCodeArgs to improve candid decode performance\n\nAdd `serde_bytes` to `arg` field of `InstallCodeArgs` struct to improve performance of candid decoding. \n\nSee merge request dfinity-lab/public/ic!14060"
      },
      {
        "id": "b6f690a76522df55d4e4dff993c1c5b869754242",
        "date": "2023-08-10T05:19:08Z",
        "message": "fix: add serde_bytes to InstallCodeArgs to improve candid decode performance"
      },
      {
        "id": "043f577ad9715f084c360314149c7be78f235b78",
        "date": "2023-08-08T05:32:26Z",
        "message": "Merge branch 'maksym/install_code' into 'master'\n\nrefactor: separate creating canisters from installing code in canister_creator canister\n\nThis MR separates creating canisters from installing code in cansiter_creator canister.\n\nThis allows to correctly measure performance of those actions separately. \n\nSee merge request dfinity-lab/public/ic!13959"
      },
      {
        "id": "7330db74309c50f748a835f3157264442ad97d87",
        "date": "2023-08-08T05:32:26Z",
        "message": "refactor: separate creating canisters from installing code in canister_creator canister"
      },
      {
        "id": "3c34775e2ed3f8cb2e298f62dc4ca0a87be6c38d",
        "date": "2023-08-05T12:15:54Z",
        "message": "chore: add runtime & execution as canister_creator owners"
      },
      {
        "id": "b3fa7421cf44fc03ada58c5ca6f155522c97e8ea",
        "date": "2023-08-03T11:41:51Z",
        "message": "Merge branch 'maksym/install_code' into 'master'\n\nfeat: add install_code to canister_creator\n\nThis MR adds `install_code` method into `canister_creator` so that it's possible to create and install a given number of canisters with provided wasm module and args.\n\nAdded to `state_machine_tests` methods for reading from metrics: `num_running_canisters` and `canister_memory_usage_bytes`. \n\nSee merge request dfinity-lab/public/ic!13928"
      },
      {
        "id": "cd9722b27503babc6a893a095ae6d23e1463d1d3",
        "date": "2023-08-03T11:41:51Z",
        "message": "feat: add install_code to canister_creator"
      },
      {
        "id": "03529e82f716e290e8f1eaec04df522b73eddd51",
        "date": "2023-08-03T09:57:32Z",
        "message": "Merge branch 'nathan/revert-sdk' into 'master'\n\nci: revert sdk version to 0.12.0\n\n \n\nSee merge request dfinity-lab/public/ic!13940"
      }
    ],
    "email": "maksym.arutyunyan@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 45,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 22,
    "fixes": 7,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "49713de9b1cf8f53aa04330ad932105095115666",
        "date": "2023-11-11T18:52:34Z",
        "message": "chore: remove hardcoded sample-size in execution benchmarks"
      },
      {
        "id": "ef0b2c42cc687ebabc6f50acb5dff44b040ac9a6",
        "date": "2023-11-10T13:53:17Z",
        "message": "chore: add execution_environment benchmarks"
      },
      {
        "id": "b80ba28f1bb9d7bc31b546f0e3a2ffca22fa5785",
        "date": "2023-11-07T09:18:23Z",
        "message": "chore: organise execution environment benchmarks"
      },
      {
        "id": "2c480185147ba3b4503c0d1f4aa55187d3b88793",
        "date": "2023-10-30T08:55:46Z",
        "message": "fix: add instructions-per-byte factor to data sending api calls"
      },
      {
        "id": "97e3a6d9740712af753bdffea2e75d084a65af35",
        "date": "2023-10-12T08:20:38Z",
        "message": "chore: update execution metrics dashboards for testnets to match prod"
      },
      {
        "id": "edb335215a1b4205d10f61ad5d17d598bff8134d",
        "date": "2023-10-05T15:10:14Z",
        "message": "chore: revert \"fix: add instructions-per-byte factor for proper payload counting\""
      },
      {
        "id": "f079f70e61f3e88da1f1f530fc546ecfd461b41a",
        "date": "2023-10-04T12:42:59Z",
        "message": "fix: add instructions-per-byte factor for proper payload counting"
      },
      {
        "id": "284951f073a429cd349ba3b757c6cd3d27770900",
        "date": "2023-09-22T17:07:35Z",
        "message": "chore: add limit to a single HTTP header in headers to comply with the spec"
      },
      {
        "id": "8e0667e6dbc0d8509b8502746cac85e7e6b5aa70",
        "date": "2023-09-20T12:34:18Z",
        "message": "chore: remove go/bazel-guide link from bazel logs"
      },
      {
        "id": "ad7d9a3fec756374e7bf6fb8e2867c8f9f48c240",
        "date": "2023-09-19T12:33:14Z",
        "message": "chore: implement HTTP headers size limit for HTTP outcall requests"
      },
      {
        "id": "1b2257df25670975ab525922fbeeb22f51c42a1a",
        "date": "2023-09-07T10:37:56Z",
        "message": "test: add execution_environment tests for creating canisters or updating settings with different amount of controllers"
      },
      {
        "id": "ff40772ad148ef07c2deb9f5b50f0cff42e4972d",
        "date": "2023-09-07T08:36:21Z",
        "message": "refactor: cleanup and unify execution_environment tests"
      },
      {
        "id": "1b617931fb842929479c3ec2d4956be555dc0ab4",
        "date": "2023-09-06T12:51:58Z",
        "message": "fix: apply controllers number limit for update_settings deserialisation"
      },
      {
        "id": "7aa868653494a220b5b3002727f1b8358dd2dca5",
        "date": "2023-08-24T10:25:23Z",
        "message": "perf: [EXC-1456] ellipsize user error message"
      },
      {
        "id": "6d058d365102346c0983943348b6cd6e2baa5fe9",
        "date": "2023-08-23T13:52:21Z",
        "message": "chore: cleanup new_with_message_length_limit content"
      },
      {
        "id": "f216ec41eda384b7d467dfd2b0984951dcb0fc5f",
        "date": "2023-08-23T10:33:47Z",
        "message": "refactor: [EXC-1456] add StrEllipse trait for shortening strings easy"
      },
      {
        "id": "cf2c4c11f9a3cb787c46e5e11a3916d889345f44",
        "date": "2023-08-22T12:03:34Z",
        "message": "perf: improve deserialization performance for DerivationPath"
      },
      {
        "id": "3a3b13608bb86bc1a4950b3844b59a2fb91a7b3f",
        "date": "2023-08-11T15:13:13Z",
        "message": "fix: add serde_bytes to ic00_types to improve candid decode performance"
      },
      {
        "id": "956c17effc7992a6e07312d09b59d2bc650154ab",
        "date": "2023-08-11T10:21:42Z",
        "message": "fix: add serde_bytes to derivation path candid type to improve decoding performance"
      },
      {
        "id": "b6f690a76522df55d4e4dff993c1c5b869754242",
        "date": "2023-08-10T05:19:08Z",
        "message": "fix: add serde_bytes to InstallCodeArgs to improve candid decode performance"
      },
      {
        "id": "7330db74309c50f748a835f3157264442ad97d87",
        "date": "2023-08-08T05:32:26Z",
        "message": "refactor: separate creating canisters from installing code in canister_creator canister"
      },
      {
        "id": "3c34775e2ed3f8cb2e298f62dc4ca0a87be6c38d",
        "date": "2023-08-05T12:15:54Z",
        "message": "chore: add runtime & execution as canister_creator owners"
      },
      {
        "id": "cd9722b27503babc6a893a095ae6d23e1463d1d3",
        "date": "2023-08-03T11:41:51Z",
        "message": "feat: add install_code to canister_creator"
      }
    ],
    "line_additions": 6429,
    "line_deletions": 1792,
    "lines_effected_total": 8221,
    "rel_comm_add": 18,
    "rel_comm_del": 14,
    "rel_comm_total": 19
  },
  {
    "login": "randombit",
    "id": 469092,
    "totalContributions": 323,
    "github": "https://github.com/randombit",
    "commits": [
      {
        "id": "86597bd1d7b40412ccca31746c9b4659d909beb9",
        "date": "2023-11-08T18:34:52Z",
        "message": "Merge branch 'jack/crp-2158' into 'master'\n\nperf(crypto): CRP-2158 Update IDKG/tECDSA benchmarks to include P-256\n\n \n\nSee merge request dfinity-lab/public/ic!15765"
      },
      {
        "id": "bef6e2149483dc43b96a288cff093335496de7a6",
        "date": "2023-11-08T18:34:51Z",
        "message": "perf(crypto): CRP-2158 Update IDKG/tECDSA benchmarks to include P-256"
      },
      {
        "id": "843f26d323595f7c1ceedc43ff5543d527bf1376",
        "date": "2023-10-27T16:31:11Z",
        "message": "Merge branch 'jack/crp-2228' into 'master'\n\nfeat(crypto): CRP-2228 Add support at the crypto component layer for P-256 threshold ECDSA\n\n \n\nSee merge request dfinity-lab/public/ic!15281"
      },
      {
        "id": "15d6a680c6c2f54d8df0666d408ca2520d9952e6",
        "date": "2023-10-27T16:31:11Z",
        "message": "feat(crypto): CRP-2228 Add support at the crypto component layer for P-256 threshold ECDSA"
      },
      {
        "id": "0d82756db84fe90602aecb0e3ef6632d6af2df43",
        "date": "2023-10-23T17:19:02Z",
        "message": "Merge branch 'jack/rotate-testnet-ssh-key' into 'master'\n\nRotate testnet ssh key for Jack Lloyd\n\n \n\nSee merge request dfinity-lab/public/ic!15578"
      },
      {
        "id": "6067a94de1e768053d006eea58b4a875477cc607",
        "date": "2023-10-23T16:34:43Z",
        "message": "Rotate testnet ssh key for Jack Lloyd"
      },
      {
        "id": "930bf0eda6218d173c4a1abc504fb06c41a7c689",
        "date": "2023-10-20T17:01:30Z",
        "message": "Merge branch 'jack/fix-typo' into 'master'\n\nchore(crypto): Fix typo in function name\n\n \n\nSee merge request dfinity-lab/public/ic!15546"
      },
      {
        "id": "da4da269427216ea3923c3341644252c5715839a",
        "date": "2023-10-20T15:57:27Z",
        "message": "chore(crypto): Fix typo in function name"
      },
      {
        "id": "ad4d94cbf47cafb06eeab0aca40a9a93958c677e",
        "date": "2023-10-19T19:23:36Z",
        "message": "Merge branch 'jack/tecdsa-zk-perf' into 'master'\n\nperf(crypto): CRP-2243 Faster verification of discrete logarithm equality and product proofs\n\nProofOfEqualOpenings::verify benchmark\nwas: [204.16 µs 205.41 µs 206.67 µs]\nnow: [173.54 µs 175.34 µs 177.57 µs]\n\nProofOfProduct::verify benchmark\nwas: [453.59 µs 466.57 µs 482.63 µs]\nnow: [398.18 µs 400.69 µs 403.00 µs] \n\nSee merge request dfinity-lab/public/ic!14261"
      },
      {
        "id": "d0ebe0b41a5b4af584e2e6263a525f16904d8ec8",
        "date": "2023-10-19T19:23:36Z",
        "message": "perf(crypto): CRP-2243 Faster verification of discrete logarithm equality and product proofs"
      },
      {
        "id": "61231a3abf73837b725088ba97ea831a8ee820dd",
        "date": "2023-10-19T18:49:21Z",
        "message": "Merge branch 'jack/crp-2176' into 'master'\n\nperf(crypto): CRP-2176 Take advantage of k256 MulByGenerator\n\nUsing a precomputed table for multiplications by the generator is approximately 2x the performance of general scalar mul. \n\nSee merge request dfinity-lab/public/ic!15344"
      },
      {
        "id": "0651fbaa45591e54b20eeabe31bfa7032bf1d8dc",
        "date": "2023-10-19T18:49:13Z",
        "message": "perf(crypto): CRP-2176 Take advantage of k256 MulByGenerator"
      },
      {
        "id": "3d8309b06dfd2c6c2a9e2d8b670db711faca3f1c",
        "date": "2023-10-16T21:44:55Z",
        "message": "Merge branch 'jack/crp-2161' into 'master'\n\nfeat(crypto): CRP-2161 Support MEGa encryption with mixed curves\n\nThis lets one create P256 signatures while continuing to use the already deployed secp256k1 dealing encryption keys. \n\nSee merge request dfinity-lab/public/ic!15204"
      },
      {
        "id": "0273bde1b427b04c0da43dac8b4aaf57a60e6e86",
        "date": "2023-10-16T21:44:54Z",
        "message": "feat(crypto): CRP-2161 Support MEGa encryption with mixed curves"
      },
      {
        "id": "d95b2cb0ee1a73d6bbe173c5af4927ed5d96bfed",
        "date": "2023-10-16T17:29:53Z",
        "message": "Merge branch 'jack/crp-2160' into 'master'\n\nfeat(crypto): CRP-2160 Add support for threshold ECDSA P256 signatures\n\nThis extends the low level tECDSA implementation to also support generating keys and signatures over P-256. \n\nSee merge request dfinity-lab/public/ic!15117"
      },
      {
        "id": "3f088c47b9a1b625a0cc1e7ce980f3ecd61a1356",
        "date": "2023-10-16T17:29:52Z",
        "message": "feat(crypto): CRP-2160 Add support for threshold ECDSA P256 signatures"
      },
      {
        "id": "9beadb415fe165ab9eaa09d257cdac508f19ad9c",
        "date": "2023-10-13T19:18:53Z",
        "message": "Merge branch 'jack/optimize-k256-and-p256' into 'master'\n\nchore(crypto): Always optimize p256 and k256 crates\n\nThis cuts the time to run the main crypto threshold signature tests to about 1/3 of what it is without the optimization when performing `dev`-mode builds. \n\nSee merge request dfinity-lab/public/ic!15279"
      },
      {
        "id": "7a591c110b020da913e4f94cd1c61a56f15684e6",
        "date": "2023-10-13T19:18:52Z",
        "message": "chore(crypto): Always optimize p256 and k256 crates"
      },
      {
        "id": "d83ea54b63d2e0c46e329e390ca2efb680197e49",
        "date": "2023-10-11T20:12:41Z",
        "message": "chore(crypto): Upgrade bip32 crate to 0.5.0"
      },
      {
        "id": "18783bf8066ee1d9d0162fc640d192c473fe335b",
        "date": "2023-09-29T21:45:09Z",
        "message": "Merge branch 'jack/crp-2159' into 'master'\n\nchore(crypto): CRP-2159 Add AlgorithmId for threshold ECDSA with P256\n\n \n\nSee merge request dfinity-lab/public/ic!14991"
      },
      {
        "id": "c326b4a5e8da4863913a279897ce525ad827ff9a",
        "date": "2023-09-29T21:45:09Z",
        "message": "chore(crypto): CRP-2159 Add AlgorithmId for threshold ECDSA with P256"
      },
      {
        "id": "530677c029ad7d8ad1e8b2ea3929c46ff4dd7aa7",
        "date": "2023-09-29T17:41:22Z",
        "message": "Merge branch 'jack/crp-2157' into 'master'\n\nfeat(crypto): CRP-2157 Extend tECDSA key derivation to support P256\n\nThis follows the SLIP-0010 specification, which differs from BIP32\nonly in the case that the HMAC output is greater than the group order;\nfor secp256k1 this case occurs with negligible probability.\n\nSee https://github.com/satoshilabs/slips/blob/master/slip-0010.md \n\nSee merge request dfinity-lab/public/ic!15087"
      },
      {
        "id": "a7177adf1e642327e6df5402885d3c2ffb881fd9",
        "date": "2023-09-29T17:41:20Z",
        "message": "feat(crypto): CRP-2157 Extend tECDSA key derivation to support P256"
      },
      {
        "id": "cc6931eee09baa86f678896b41760ad17c7ae1d5",
        "date": "2023-09-29T17:03:16Z",
        "message": "Merge branch 'jack/bench-tecdsa-pt-serialize' into 'master'\n\nperf(crypto): Add a benchmark of tECDSA point serialization and deserialization\n\n \n\nSee merge request dfinity-lab/public/ic!15010"
      },
      {
        "id": "be6ab0121f64525a22931b9f95e6f446bc6fc19d",
        "date": "2023-09-26T19:27:41Z",
        "message": "Merge branch 'jack/use-rustcrypto-for-sha' into 'master'\n\nrefactor(crypto): CRP-1914 Use RustCrypto for all SHA-2 hashing\n\nBoth RustCrypt's `sha2` crate and OpenSSL make use of the SHA-NI instruction set which is available on all processors used to run the replicas. \n\nSee merge request dfinity-lab/public/ic!14859"
      },
      {
        "id": "0913e39b7fd629b05ed6e0df70597bf4bd200eaa",
        "date": "2023-09-26T19:27:41Z",
        "message": "refactor(crypto): CRP-1914 Use RustCrypto for all SHA-2 hashing"
      },
      {
        "id": "3753212d50013f4d4fcd155f5f37b32a024e1d39",
        "date": "2023-09-26T14:32:09Z",
        "message": "perf(crypto): Add a benchmark of tECDSA point serialization and deserialization"
      },
      {
        "id": "7b5ba3bd0848169d5b216b55a9123b73f295b460",
        "date": "2023-09-12T13:36:37Z",
        "message": "feat(crypto): CRP-2184 Add crypto utilities for PocketIC"
      },
      {
        "id": "17ee8bd8aa1153b1da364d3389392c89793cf3e4",
        "date": "2023-08-30T15:39:37Z",
        "message": "Merge branch 'jack/crp-2097' into 'master'\n\nchore(crypto): CRP-2097 Remove unreachable error mapping\n\nThe `from_dealings` function can never encounter an InsufficientOpening error, so this mapping was not neccessary. \n\nSee merge request dfinity-lab/public/ic!14485"
      },
      {
        "id": "a6553766e8310a685aa0cec034faa10936a803f9",
        "date": "2023-08-30T15:39:37Z",
        "message": "chore(crypto): CRP-2097 Remove unreachable error mapping"
      },
      {
        "id": "876b07a8396327bec54b0e24b61c5cb27e2e92a2",
        "date": "2023-08-28T19:59:10Z",
        "message": "Merge branch 'jack/crp-2076' into 'master'\n\nperf(crypto): CRP-2076 Add a benchmark for tECDSA key derivation\n\n \n\nSee merge request dfinity-lab/public/ic!14234"
      },
      {
        "id": "f787a1ff4aee61d9f8f1ecc54d233cb921dcb66d",
        "date": "2023-08-28T19:59:09Z",
        "message": "perf(crypto): CRP-2076 Add a benchmark for tECDSA key derivation"
      },
      {
        "id": "dcdc74729c1e3d2b17f2e7b6d97ba3e159ff97a5",
        "date": "2023-08-28T19:59:05Z",
        "message": "Merge branch 'jack/crp-1429-continued' into 'master'\n\ntest(crypto): CRP-1429 Add further tests of tECDSA verify_transcript\n\n \n\nSee merge request dfinity-lab/public/ic!14300"
      },
      {
        "id": "bc8c1c1775c7242dd2ad20af189a9a8cf92395ac",
        "date": "2023-08-28T19:59:05Z",
        "message": "test(crypto): CRP-1429 Add further tests of tECDSA verify_transcript"
      },
      {
        "id": "9c075c311c394bfe27d40cedb2c9fbe77342c50c",
        "date": "2023-08-28T15:51:10Z",
        "message": "Merge branch 'jack/crp-1572' into 'master'\n\nrefactor(crypto): CRP-1572 Have check_opening return Result<()>\n\n \n\nSee merge request dfinity-lab/public/ic!14406"
      },
      {
        "id": "b42f52d85878247bccbed470d3652e476abc1dec",
        "date": "2023-08-25T17:02:16Z",
        "message": "refactor(crypto): CRP-1572 Have check_opening return Result<()>"
      },
      {
        "id": "b9f3594ae57181d6c4d04044c9ff6c62ae1f6a07",
        "date": "2023-08-18T14:08:32Z",
        "message": "Merge branch 'jack/crp-1364' into 'master'\n\nrefactor(crypto): CRP-1364 Make MEGa key generation infalliable\n\nThis has the side effect of fixing CRP-1364, as the last remaining usage of the\nThresholdEcdsaError type outside of the clib implementation was related to MEGa\nkey generation. \n\nCloses CRP-1364\n\nSee merge request dfinity-lab/public/ic!14233"
      },
      {
        "id": "cd9fa146dd1a15b92f6cb3d69e4ce97e8089e861",
        "date": "2023-08-18T14:08:32Z",
        "message": "refactor(crypto): CRP-1364 Make MEGa key generation infalliable"
      },
      {
        "id": "74868d021b9e043ee272c337bfb0cced31c091de",
        "date": "2023-08-16T17:30:45Z",
        "message": "Merge branch 'jack/crp-2141' into 'master'\n\nchore(crypto): CRP-2141 Extend ic-vetkd-utils tests with a simulation of the protocol\n\n \n\nSee merge request dfinity-lab/public/ic!13983"
      },
      {
        "id": "884815cf024a13e5369304176f1179d8f146df86",
        "date": "2023-08-16T17:30:43Z",
        "message": "chore(crypto): CRP-2141 Extend ic-vetkd-utils tests with a simulation of the protocol"
      },
      {
        "id": "f5b486f0831d8f3a5a6b2d4fd5c59d5082e8dc6a",
        "date": "2023-08-15T16:44:51Z",
        "message": "Merge branch 'jack/no-zero-threshold-for-you' into 'master'\n\nfix(crypto): Do not allow generating NIDKG keys with a threshold of zero\n\n \n\nSee merge request dfinity-lab/public/ic!13730"
      },
      {
        "id": "d7e1fba7c88be10958988a85a0992c5003e93eea",
        "date": "2023-08-15T16:44:50Z",
        "message": "fix(crypto): Do not allow generating NIDKG keys with a threshold of zero"
      },
      {
        "id": "3bb9dc43c2d9bf6bb68db8586897ea2a76c36ef3",
        "date": "2023-08-14T17:44:57Z",
        "message": "Merge branch 'jack/tecdsa-misc-improvements' into 'master'\n\nchore(crypto): Small improvements to threshold ECDSA implementation\n\n \n\nSee merge request dfinity-lab/public/ic!14023"
      },
      {
        "id": "dab4f1c066738edb4d22367804a6a64afc5c871f",
        "date": "2023-08-14T17:44:56Z",
        "message": "chore(crypto): Small improvements to threshold ECDSA implementation"
      },
      {
        "id": "03930c9d892006a3fa6862d92067501048da952e",
        "date": "2023-08-07T13:15:23Z",
        "message": "Merge branch 'jack/remove-dup-polynomial-type' into 'master'\n\nfix(crypto): Remove duplicated Polynomial type\n\nMR !13173 introduced a Polynomial type into the bls12_381/type library but failed to remove this duplicated logic from the vetkd tests. \n\nSee merge request dfinity-lab/public/ic!13981"
      },
      {
        "id": "ca4fd8d1e89a23dec10ce3261a7625173fb87fcc",
        "date": "2023-08-07T13:15:22Z",
        "message": "fix(crypto): Remove duplicated Polynomial type"
      },
      {
        "id": "634f809d0062d30e90d59d9815536441029c2f5e",
        "date": "2023-08-03T14:49:29Z",
        "message": "Merge branch 'jack/fix-wrong-algo-type' into 'master'\n\nfix(crypto): CRP-2153 Use the correct algorithm ID for P256 signature validation errors\n\nAccidentally introduced in !13378 \n\nSee merge request dfinity-lab/public/ic!13818"
      },
      {
        "id": "ce34857bd0664aed7860394c0b0fb99c151275aa",
        "date": "2023-08-03T14:49:28Z",
        "message": "fix(crypto): CRP-2153 Use the correct algorithm ID for P256 signature validation errors"
      }
    ],
    "email": "jack.lloyd@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 48,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 23,
    "fixes": 4,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "bef6e2149483dc43b96a288cff093335496de7a6",
        "date": "2023-11-08T18:34:51Z",
        "message": "perf(crypto): CRP-2158 Update IDKG/tECDSA benchmarks to include P-256"
      },
      {
        "id": "15d6a680c6c2f54d8df0666d408ca2520d9952e6",
        "date": "2023-10-27T16:31:11Z",
        "message": "feat(crypto): CRP-2228 Add support at the crypto component layer for P-256 threshold ECDSA"
      },
      {
        "id": "6067a94de1e768053d006eea58b4a875477cc607",
        "date": "2023-10-23T16:34:43Z",
        "message": "Rotate testnet ssh key for Jack Lloyd"
      },
      {
        "id": "da4da269427216ea3923c3341644252c5715839a",
        "date": "2023-10-20T15:57:27Z",
        "message": "chore(crypto): Fix typo in function name"
      },
      {
        "id": "d0ebe0b41a5b4af584e2e6263a525f16904d8ec8",
        "date": "2023-10-19T19:23:36Z",
        "message": "perf(crypto): CRP-2243 Faster verification of discrete logarithm equality and product proofs"
      },
      {
        "id": "0651fbaa45591e54b20eeabe31bfa7032bf1d8dc",
        "date": "2023-10-19T18:49:13Z",
        "message": "perf(crypto): CRP-2176 Take advantage of k256 MulByGenerator"
      },
      {
        "id": "0273bde1b427b04c0da43dac8b4aaf57a60e6e86",
        "date": "2023-10-16T21:44:54Z",
        "message": "feat(crypto): CRP-2161 Support MEGa encryption with mixed curves"
      },
      {
        "id": "3f088c47b9a1b625a0cc1e7ce980f3ecd61a1356",
        "date": "2023-10-16T17:29:52Z",
        "message": "feat(crypto): CRP-2160 Add support for threshold ECDSA P256 signatures"
      },
      {
        "id": "7a591c110b020da913e4f94cd1c61a56f15684e6",
        "date": "2023-10-13T19:18:52Z",
        "message": "chore(crypto): Always optimize p256 and k256 crates"
      },
      {
        "id": "d83ea54b63d2e0c46e329e390ca2efb680197e49",
        "date": "2023-10-11T20:12:41Z",
        "message": "chore(crypto): Upgrade bip32 crate to 0.5.0"
      },
      {
        "id": "c326b4a5e8da4863913a279897ce525ad827ff9a",
        "date": "2023-09-29T21:45:09Z",
        "message": "chore(crypto): CRP-2159 Add AlgorithmId for threshold ECDSA with P256"
      },
      {
        "id": "a7177adf1e642327e6df5402885d3c2ffb881fd9",
        "date": "2023-09-29T17:41:20Z",
        "message": "feat(crypto): CRP-2157 Extend tECDSA key derivation to support P256"
      },
      {
        "id": "0913e39b7fd629b05ed6e0df70597bf4bd200eaa",
        "date": "2023-09-26T19:27:41Z",
        "message": "refactor(crypto): CRP-1914 Use RustCrypto for all SHA-2 hashing"
      },
      {
        "id": "3753212d50013f4d4fcd155f5f37b32a024e1d39",
        "date": "2023-09-26T14:32:09Z",
        "message": "perf(crypto): Add a benchmark of tECDSA point serialization and deserialization"
      },
      {
        "id": "7b5ba3bd0848169d5b216b55a9123b73f295b460",
        "date": "2023-09-12T13:36:37Z",
        "message": "feat(crypto): CRP-2184 Add crypto utilities for PocketIC"
      },
      {
        "id": "a6553766e8310a685aa0cec034faa10936a803f9",
        "date": "2023-08-30T15:39:37Z",
        "message": "chore(crypto): CRP-2097 Remove unreachable error mapping"
      },
      {
        "id": "f787a1ff4aee61d9f8f1ecc54d233cb921dcb66d",
        "date": "2023-08-28T19:59:09Z",
        "message": "perf(crypto): CRP-2076 Add a benchmark for tECDSA key derivation"
      },
      {
        "id": "bc8c1c1775c7242dd2ad20af189a9a8cf92395ac",
        "date": "2023-08-28T19:59:05Z",
        "message": "test(crypto): CRP-1429 Add further tests of tECDSA verify_transcript"
      },
      {
        "id": "b42f52d85878247bccbed470d3652e476abc1dec",
        "date": "2023-08-25T17:02:16Z",
        "message": "refactor(crypto): CRP-1572 Have check_opening return Result<()>"
      },
      {
        "id": "cd9fa146dd1a15b92f6cb3d69e4ce97e8089e861",
        "date": "2023-08-18T14:08:32Z",
        "message": "refactor(crypto): CRP-1364 Make MEGa key generation infalliable"
      },
      {
        "id": "884815cf024a13e5369304176f1179d8f146df86",
        "date": "2023-08-16T17:30:43Z",
        "message": "chore(crypto): CRP-2141 Extend ic-vetkd-utils tests with a simulation of the protocol"
      },
      {
        "id": "d7e1fba7c88be10958988a85a0992c5003e93eea",
        "date": "2023-08-15T16:44:50Z",
        "message": "fix(crypto): Do not allow generating NIDKG keys with a threshold of zero"
      },
      {
        "id": "dab4f1c066738edb4d22367804a6a64afc5c871f",
        "date": "2023-08-14T17:44:56Z",
        "message": "chore(crypto): Small improvements to threshold ECDSA implementation"
      },
      {
        "id": "ca4fd8d1e89a23dec10ce3261a7625173fb87fcc",
        "date": "2023-08-07T13:15:22Z",
        "message": "fix(crypto): Remove duplicated Polynomial type"
      },
      {
        "id": "ce34857bd0664aed7860394c0b0fb99c151275aa",
        "date": "2023-08-03T14:49:28Z",
        "message": "fix(crypto): CRP-2153 Use the correct algorithm ID for P256 signature validation errors"
      }
    ],
    "line_additions": 6628,
    "line_deletions": 6639,
    "lines_effected_total": 13267,
    "rel_comm_add": 21,
    "rel_comm_del": 13,
    "rel_comm_total": 22
  },
  {
    "login": "DanielThurau",
    "id": 15882011,
    "totalContributions": 320,
    "github": "https://github.com/DanielThurau",
    "commits": [
      {
        "id": "e2d2a52bbac3b330375e48dfac8e58590312432b",
        "date": "2023-11-18T00:22:30Z",
        "message": "Merge branch 'arshavir/fix-one_proposal_neurons_fund_swap_participation_test-2' into 'master'\n\nchore(SNS): Fix `one_proposal_neurons_fund_swap_participation_test`\n\nThis MR fixes the hourly system test `one_proposal_neurons_fund_swap_participation_test` by removing the expected derived Swap state.\n\nNote that instead of this check, we should seen invoke `sns-audit` to verify that the final state of a swap. \n\nSee merge request dfinity-lab/public/ic!16197"
      },
      {
        "id": "11bf40082f7bcc72e82f8995f58a864f6950ca61",
        "date": "2023-11-16T00:59:50Z",
        "message": "Merge branch 'NNS1-2466' into 'master'\n\nfeat(nns): Add the ability to query deployed snses via the proposal id that created them\n\nThe following data was used to generate the past data for SNSes. I collected it via the dashboard. If the SNS was created with the legacy creation flow, I used the proposal_id of the `OpenSnsTokenSwap` NNS Proposal. This can be verified by iterating through each SNS swap canister and querying for this piece of data. Failed SNSes are included in this list.\n\n```\nzxeu2-7aaaa-aaaaq-aaafa-cai => 93_763, => 0,\n3e3x2-xyaaa-aaaaq-aaalq-cai => 109_811, => 1,\n23ten-uaaaa-aaaaq-aaapa-cai => 122_343 => 2,\n7jkta-eyaaa-aaaaq-aaarq-cai => 122_749, => 3\n67bll-riaaa-aaaaq-aaauq-cai => 123_252, => 4\n6kg2g-qaaaa-aaaaq-aaaxa-cai => 123_409, => 5\n4m6il-zqaaa-aaaaq-aaa2a-cai => 123_592, => 6\n5psbn-niaaa-aaaaq-aaa4q-cai => 123_772, => 7\n55uwu-byaaa-aaaaq-aaa7q-cai => 123_794, => 8\nw7g63-nqaaa-aaaaq-aabca-cai => 123_925, => 9\nx4kx5-ziaaa-aaaaq-aabeq-cai => 124_033, => 10\nxjngq-yaaaa-aaaaq-aabha-cai => 124_292, => 11\nv2sfq-qyaaa-aaaaq-aabjq-cai => 124_258, => 12\nuly3p-iqaaa-aaaaq-aabma-cai => 124_264, => 13,\nu67kc-jyaaa-aaaaq-aabpq-cai => 124_483, => 14\nrzbmc-yiaaa-aaaaq-aabsq-cai => 124_514, => 15\nqtooy-2yaaa-aaaaq-aabvq-cai => 124_808, => 16\n```\n\nCloses NNS1-2466 \n\nCloses NNS1-2466\n\nSee merge request dfinity-lab/public/ic!16131"
      },
      {
        "id": "e80f2be2314509103121175117cd6fd675f20eaa",
        "date": "2023-11-16T00:59:50Z",
        "message": "feat(nns): Add the ability to query deployed snses via the proposal id that created them"
      },
      {
        "id": "07298e294c11e44c4d4e7dcacf98bdf5d7ba60c4",
        "date": "2023-11-03T23:13:23Z",
        "message": "Merge branch 'thurau/omit-deprecated-followees' into 'master'\n\nfeat(nns): Scrub deprecated topics from NNS Governance's APIs\n\n \n\nSee merge request dfinity-lab/public/ic!15880"
      },
      {
        "id": "88c500e4dc9cf661c4412305a036bd7d1a99e728",
        "date": "2023-11-03T23:13:22Z",
        "message": "feat(nns): Scrub deprecated topics from NNS Governance's APIs"
      },
      {
        "id": "d5c14266c05d6c2e412ae7f24b92539b00ac7f5a",
        "date": "2023-11-01T19:11:02Z",
        "message": "Merge branch 'NNS1-2689' into 'master'\n\nfeat(nns): Remove specific purge methods for nns proposals and remove unneeded tests\n\n \n\nSee merge request dfinity-lab/public/ic!15803"
      },
      {
        "id": "31aaccd650948d737bce3db03b813a02599d7503",
        "date": "2023-11-01T19:11:01Z",
        "message": "feat(nns): Remove specific purge methods for nns proposals and remove unneeded tests"
      },
      {
        "id": "b788312447088f547a8368b5f3615105650ab277",
        "date": "2023-10-31T23:18:33Z",
        "message": "Merge branch 'thurau/disable-following-on-deprecated-topics' into 'master'\n\nfeat(nns): Add the ability to reject follow requests on deprecated topics\n\n \n\nSee merge request dfinity-lab/public/ic!15802"
      },
      {
        "id": "e60473d5ea8627aa260b57132a5ed1ef69690590",
        "date": "2023-10-31T23:18:33Z",
        "message": "feat(nns): Add the ability to reject follow requests on deprecated topics"
      },
      {
        "id": "8ebe80ad9b625b80a6cfc7f8235fab7fa34ed92c",
        "date": "2023-10-30T18:05:58Z",
        "message": "Merge branch 'NNS1-2689' into 'master'\n\nfeat(nns): Implement exemptions for proposal garbage collection\n\nCloses NNS1-2689 \n\nCloses NNS1-2689\n\nSee merge request dfinity-lab/public/ic!15735"
      },
      {
        "id": "8e70148d04a63cb1a42fbe8bb743072be648cd2a",
        "date": "2023-10-30T18:05:55Z",
        "message": "feat(nns): Implement exemptions for proposal garbage collection"
      },
      {
        "id": "28d18ccfd474fca84d108f15e162d074810e4f8b",
        "date": "2023-10-27T15:39:14Z",
        "message": "feat(sns): Matched Funding / Allow for Swap to call `settle_neruons_fund_participation`"
      },
      {
        "id": "59581fd9202a8ee32fe17452b4c558f2635afe65",
        "date": "2023-10-23T17:21:56Z",
        "message": "Merge branch 'NNS1-2636' into 'master'\n\nfeat(sns): Moved creation of SNS Neuron recipes to swap finalization\n\nCloses NNS1-2636 \n\nCloses NNS1-2636\n\nSee merge request dfinity-lab/public/ic!15552"
      },
      {
        "id": "9d2024693764f4c430afe13daf4c3e64d489fded",
        "date": "2023-10-23T17:21:54Z",
        "message": "feat(sns): Moved creation of SNS Neuron recipes to swap finalization"
      },
      {
        "id": "47ad84d9854a1c85a68affcee7ee5dc8813e5086",
        "date": "2023-10-16T21:31:42Z",
        "message": "Merge branch 'NNS1-2636-p3' into 'master'\n\nfeat(NNS1-2636): Matched Funding / Add idempotent method for creating SNS Neuron Recipes\n\nThis MR prepares `create_sns_neuron_recipes` to be moved to swap finalization, while still maintaining the current flow to reduce complexity of review. To move this stage to finalization, the method must \n1. Not panic and cause a lock to not be dropped\n2. Must be idempotent\n\nTo accomplish these tasks I've refactored the method to not panic when state is missing. the best way to indicate success/failure of this is to return a SweepResult (which will also eventually be used in swap finalization response). I've also added additional optional state that will be set to maintain idempotency. This is the field `has_created_neuron_recipes` on CfNeuorns and BuyerState.\n\n\nCloses NNS1-2636 \n\nCloses NNS1-2636\n\nSee merge request dfinity-lab/public/ic!15304"
      },
      {
        "id": "e2ff2692bbe9a78c9770669ab4cb6ce21a493c02",
        "date": "2023-10-16T21:31:39Z",
        "message": "feat(NNS1-2636): Matched Funding / Add idempotent method for creating SNS Neuron Recipes"
      },
      {
        "id": "7382feb1448d5541fb9917266c171541c5ea0683",
        "date": "2023-10-09T20:44:17Z",
        "message": "chore(nns): Improve the submit-mainnet-nns-upgrade-proposal.sh file to"
      },
      {
        "id": "a195be99fcd2306ae90a70881528bfd82a9a28eb",
        "date": "2023-10-05T21:36:08Z",
        "message": "Merge branch 'NNS1-2636-p2' into 'master'\n\nchore(sns): Move the creation of SNS Neuron recipes from can_commit to its own method\n\nThis merely changes the structure of the code to its own method with a new signature in preparation for movement to finalization, where the bulk of the changes will be.\n\nCloses NNS1-2636 \n\nCloses NNS1-2636\n\nSee merge request dfinity-lab/public/ic!15245"
      },
      {
        "id": "609333f37c0323a0c0262015610fef82add5ca4b",
        "date": "2023-10-05T21:36:08Z",
        "message": "chore(sns): Move the creation of SNS Neuron recipes from can_commit to its own method"
      },
      {
        "id": "353b5c838aab4583441f12e24996e1cbca049904",
        "date": "2023-10-05T18:20:51Z",
        "message": "Merge branch 'NNS1-2636-p1' into 'master'\n\nchore(sns): Refactor Swap heartbeat to only allow one state transition per heartbeat\n\nAdditionally, fix some typos and clarify some functional definitions for clarity.\n\nCloses NNS1-2636 \n\nCloses NNS1-2636\n\nSee merge request dfinity-lab/public/ic!15208"
      },
      {
        "id": "0032f43e2e639b277ba92cb6624517e1f216e4bd",
        "date": "2023-10-05T18:20:49Z",
        "message": "chore(sns): Refactor Swap heartbeat to only allow one state transition per heartbeat"
      },
      {
        "id": "b0482475372f5728d40c43980a49656d7befffb8",
        "date": "2023-10-02T23:38:00Z",
        "message": "Merge branch 'NNS1-2548' into 'master'\n\nfeat(nns/sns)!: Disable UpdateAllowedPrincipals NNS Function in mainnet code\n\nThe first stage in fully deprecating the legacy SNS deployment flow. In this MR, introduce a configuration flag that will disable the `UpdateAllowedPrincipals` NNS function in non-test builds. This is so that our testing code and dependent teams do not break when disabling this proposal on mainnet.\n\nAdditionally, the `sns-upgrade-testing` bash scripts have been updated to remove the legacy SNS deployment flow and associated functionality.\n\nCloses NNS1-2548 \n\nCloses NNS1-2548\n\nSee merge request dfinity-lab/public/ic!15149"
      },
      {
        "id": "6c70619e201cfd4bb0c1db64ec54aa58de55931a",
        "date": "2023-10-02T23:38:00Z",
        "message": "feat(nns/sns)!: Disable UpdateAllowedPrincipals NNS Function in mainnet code"
      },
      {
        "id": "a1c0dca06753cbce346fe683df4fc2315b7055e6",
        "date": "2023-10-02T17:34:12Z",
        "message": "Merge branch 'FOLLOW-124' into 'master'\n\nchore(nns): Remove the is_authorized src and test code in nns common\n\nClose an old security ticket by removing the `is_authorized` related code in NNS common. Since we've upgraded all of the NNS canisters to their latest versions, we know there is no callers of these methods and are safe to remove.\n\nCloses FOLLOW-124 \n\nCloses FOLLOW-124\n\nSee merge request dfinity-lab/public/ic!15148"
      },
      {
        "id": "7a4d777b959594dc9c41c3296ed58e5473fba224",
        "date": "2023-10-02T17:34:11Z",
        "message": "chore(nns): Remove the is_authorized src and test code in nns common"
      },
      {
        "id": "d704c8525e485312538a8205e5926705bef32846",
        "date": "2023-09-29T16:02:35Z",
        "message": "Merge branch 'NNS1-2465' into 'master'\n\nfeat(sns): Add a --save-to flag to the sns-cli propose subcommand\n\nCloses NNS1-2465 \n\nCloses NNS1-2465\n\nSee merge request dfinity-lab/public/ic!15054"
      },
      {
        "id": "d1879d04321017b207f88d582501315442116602",
        "date": "2023-09-29T16:02:35Z",
        "message": "feat(sns): Add a --save-to flag to the sns-cli propose subcommand"
      },
      {
        "id": "2a253b62581f47ae4abc573683333dd96481d02d",
        "date": "2023-09-21T23:37:15Z",
        "message": "fix(nns): Correctly enforce the minimum_icp_xdr_rate when rewarding node providers"
      },
      {
        "id": "818b3869576375d4a80142263da86bca2ad4c8c0",
        "date": "2023-09-18T18:06:02Z",
        "message": "Merge branch 'NNS1-2438' into 'master'\n\nchore(nns): Give a name to the number constant of SNS canisters spawned by SNS-W\n\nCloses NNS1-2438 \n\nCloses NNS1-2438\n\nSee merge request dfinity-lab/public/ic!14835"
      },
      {
        "id": "baee061f4ed1454a0be516c66592c9833dc104f4",
        "date": "2023-09-18T18:06:01Z",
        "message": "chore(nns): Give a name to the number constant of SNS canisters spawned by SNS-W"
      },
      {
        "id": "6c07830e8c3a8e8f3c07eb2bdda26c688eb606c0",
        "date": "2023-09-15T22:05:14Z",
        "message": "Merge branch 'NNS1-2290' into 'master'\n\nfeat(nns)!: Remove deprecated fields from Lifeline's canister_status API [override-didc-check]\n\nThis is a backwards incompatible change to remove the deprecated fields from the lifelines canister_status API.\n\nCloses NNS1-2290 \n\nCloses NNS1-2290\n\nSee merge request dfinity-lab/public/ic!14814"
      },
      {
        "id": "64bfa3e25e9da441471e85c8a8a7ad87b57b71f7",
        "date": "2023-09-15T22:05:14Z",
        "message": "feat(nns)!: Remove deprecated fields from Lifeline's canister_status API [override-didc-check]"
      },
      {
        "id": "5bdc1612a08b02b6ca8e9c4c529dad5a49bd0476",
        "date": "2023-09-07T16:09:22Z",
        "message": "Merge branch 'NNS1-2361' into 'master'\n\nfix(sns): Apply SNS maturity modulation at the end of the 7 day window\n\nIn this MR I applied maturity modulation at the end of the time window instead of at the beginning. To accomplish this I had to do a few things:\n\n1. Introduce a test that failed given the current bad behavior. This needed an updates to the fixtures framework in `fixtures/mod.rs`\n2. Actually apply modulation in the `maybe_finalize_disburse_maturity`. This required moving some method invocations into this function.\n3. Since we have a check to make sure the amount of maturity being disbursed is greater than the SNS's transaction fee, add a new conditional check that will not allow a disburse operation to be performed if the worst case modulation will bring the amount below a transaction fee. This required me to move some constants from the CMC into `nervous_system/common/~/cms.rs`\n\nCloses NNS1-2361 \n\nCloses NNS1-2361\n\nSee merge request dfinity-lab/public/ic!14466"
      },
      {
        "id": "191d7df2a1a6a8f0b2baead195eacb942cc0b5ff",
        "date": "2023-09-07T16:09:21Z",
        "message": "fix(sns): Apply SNS maturity modulation at the end of the 7 day window"
      },
      {
        "id": "53aec379f459077a0005d6c0a1efe15c0cc52ab8",
        "date": "2023-08-31T21:34:00Z",
        "message": "Merge branch 'thurau/update-swap-ublish-version' into 'master'\n\nchore(sns): Update latest swap version in sns_publish_log.txt\n\n \n\nSee merge request dfinity-lab/public/ic!14521"
      },
      {
        "id": "0a6c41fdfb9874b615155a68c3e0a44fc7ae17d3",
        "date": "2023-08-31T21:33:59Z",
        "message": "chore(sns): Update latest swap version in sns_publish_log.txt"
      },
      {
        "id": "9971178c940ffac1cec0d798f687d8aeadf2ad3a",
        "date": "2023-08-31T21:27:08Z",
        "message": "fix(nns): Remove NNS Governance spam log"
      },
      {
        "id": "e64b9916d43732eaf19427651d15c93b299b1763",
        "date": "2023-08-24T22:30:22Z",
        "message": "Merge branch 'NNS1-2385' into 'master'\n\n[NNS1-2385] Provide a template file for the new configuration file version\n\nCloses NNS1-2385 \n\nCloses NNS1-2385\n\nSee merge request dfinity-lab/public/ic!14341"
      },
      {
        "id": "e46c25cedc1f09ffc090b4755fbc457da06f4081",
        "date": "2023-08-24T22:30:22Z",
        "message": "[NNS1-2385] Provide a template file for the new configuration file version"
      },
      {
        "id": "0a92176c85d7a4da2b9789a01fa29d49284969a7",
        "date": "2023-08-23T23:20:57Z",
        "message": "Merge branch 'NNS1-2367' into 'master'\n\n[NNS1-2367] Swap paging algorithms do not panic on invalid offset\n\nCloses NNS1-2367 \n\nCloses NNS1-2367\n\nSee merge request dfinity-lab/public/ic!14365"
      },
      {
        "id": "43fbbab68ab18660700db94863cfd0f114d43eae",
        "date": "2023-08-23T23:20:57Z",
        "message": "[NNS1-2367] Swap paging algorithms do not panic on invalid offset"
      },
      {
        "id": "661fb3fe0d3af65ce15100b9fbb0c4e946571f35",
        "date": "2023-08-22T23:53:45Z",
        "message": "Merge branch 'thurau/nns-tools-archive-support' into 'master'\n\nnns-tools supports upgrade testing of the SNS Archive canister\n\n \n\nSee merge request dfinity-lab/public/ic!14304"
      },
      {
        "id": "38cbbac8c6b5b0ce38010bd41e0205c017dd7fe0",
        "date": "2023-08-22T23:53:44Z",
        "message": "nns-tools supports upgrade testing of the SNS Archive canister"
      },
      {
        "id": "5ae1cddc5acca6a06476778eb525179c603f8e62",
        "date": "2023-08-16T18:16:40Z",
        "message": "Merge branch 'thurau/enable-1-proposal' into 'master'\n\nEnable the 1-proposal compile time feature flag for mainnet release\n\nNote: I've kept the compile time feature flags in place in case we disable the proposal at some point in the near future. \n\nSee merge request dfinity-lab/public/ic!14152"
      },
      {
        "id": "6bd46f81bcfee2481b7a60b5f6b7daefdde24b79",
        "date": "2023-08-16T15:16:26Z",
        "message": "Merge branch 'thurau/nns-tools-1-prop' into 'master'\n\n[NNS1-2468] Support upgrade testing via 1-proposal SNS Initialization\n\nFor now, test upgrading with both initialization flows. Eventually, we can remove the code block exercising the permutations with the legacy init flow. \n\nSee merge request dfinity-lab/public/ic!14180"
      },
      {
        "id": "29d92f0d6d795d9b7b4081b02f8ca1f405016308",
        "date": "2023-08-16T15:16:26Z",
        "message": "[NNS1-2468] Support upgrade testing via 1-proposal SNS Initialization"
      },
      {
        "id": "a46596fd72fdb84001d6267c5449ff509767ff7a",
        "date": "2023-08-14T23:31:48Z",
        "message": "Merge branch 'NNS1-2462' into 'master'\n\n[NNS1-2462] The sns_init.yaml file now specifies NNS Proposal title, summary, and url for proposal submission\n\nCloses NNS1-2462 \n\nCloses NNS1-2462\n\nSee merge request dfinity-lab/public/ic!14133"
      },
      {
        "id": "5cabe8fd9931587536857dcb964c93c968ece56b",
        "date": "2023-08-14T23:31:48Z",
        "message": "[NNS1-2462] The sns_init.yaml file now specifies NNS Proposal title, summary, and url for proposal submission"
      },
      {
        "id": "da273e0f3135fc615b6151505d2177ee599add89",
        "date": "2023-08-14T19:07:56Z",
        "message": "Enable the 1-proposal compile time feature flag for mainnet release"
      },
      {
        "id": "3ce3075f89e6e1d2eae7070fd26ba3c1aa8f6639",
        "date": "2023-08-11T17:39:05Z",
        "message": "Merge branch 'NNS1-2475' into 'master'\n\n[NNS1-2475] Include CreateServiceNervousSystem proposals in the SNS proposal lock\n\nThe actual source code changes are very trivial and can be found in `rs/nns/governance/src/governance.rs`, everything else is test code related. I've expanded on the NNS governance fixtures and interleaving test framework. Most of the code change was including a new `EnvironmentFixture` and `InterleavingTestEnvironment`. The `InterleavingTestEnvironment` is the most interesting: it uses `mspc` channels to send control messages back and forth between threads. This allows the tests to determine when the cross-canister call should be made.\n\nNote: There is no interleaving test that guarantees the CSNS proposal blocks other OSTS and CSNS proposals because the CSNS does not make an async call. However, I've forced it to `acquire` the lock so that OSTS will block other CSNS proposals. \n\nCloses NNS1-2475 \n\nCloses NNS1-2475\n\nSee merge request dfinity-lab/public/ic!14101"
      },
      {
        "id": "10ff02a3a38d9230abc5a1fa29f82482c335f04b",
        "date": "2023-08-11T17:39:05Z",
        "message": "[NNS1-2475] Include CreateServiceNervousSystem proposals in the SNS proposal lock"
      },
      {
        "id": "fd6a005cdee6fce0ebe36254c5159ad283283ae8",
        "date": "2023-08-07T16:59:43Z",
        "message": "Merge branch 'NNS1-2341-p3' into 'master'\n\n[NNS1-2341] Add final integration tests for one-proposal SNS Initialization\n\nCloses NNS1-2341 \n\nCloses NNS1-2341\n\nSee merge request dfinity-lab/public/ic!13985"
      },
      {
        "id": "4a7bb3d641f8c061c043beeeb560e8b94210db7d",
        "date": "2023-08-07T16:59:43Z",
        "message": "[NNS1-2341] Add final integration tests for one-proposal SNS Initialization"
      },
      {
        "id": "e8aa66f1bf45bf63ae49724942ff71b6b043330d",
        "date": "2023-08-06T23:28:45Z",
        "message": "Merge branch 'NNS1-2341-p2' into 'master'\n\n[NNS1-2341] Add additional tests of one-proposal SNS initialization\n\nCloses NNS1-2341 \n\nCloses NNS1-2341\n\nSee merge request dfinity-lab/public/ic!13984"
      },
      {
        "id": "7e207da4b6dc3c5429a1c917a84ff2be55f03346",
        "date": "2023-08-06T23:28:44Z",
        "message": "[NNS1-2341] Add additional tests of one-proposal SNS initialization"
      },
      {
        "id": "48c4875689dbdf94fea1da89c1a3cabb0dbe9434",
        "date": "2023-08-04T19:01:03Z",
        "message": "Merge branch 'NNS1-2341' into 'master'\n\n[NNS1-2341] Add happy case for 1-proposal initialization in dedicated StateMachine tests\n\nThis MR adds the happy case test for 1-prop SNS Initialization. There will be following MRs with other test cases. The bulk of this MR is introducing the supporting code that makes the next few cases easy to test.\n\n\nCloses NNS1-2341 \n\nCloses NNS1-2341\n\nSee merge request dfinity-lab/public/ic!13964"
      },
      {
        "id": "5e53ab3fdc65536e3c8d8a9555bd289e197892ad",
        "date": "2023-08-04T19:01:02Z",
        "message": "[NNS1-2341] Add happy case for 1-proposal initialization in dedicated StateMachine tests"
      },
      {
        "id": "da10deb097be7960644900889b2c259557439d04",
        "date": "2023-08-03T19:19:43Z",
        "message": "Merge branch 'NNS1-2447' into 'master'\n\n[NNS1-2447] Support passing the token_logo to the SNS icrc1 ledger\n\nWhile testing with the nns-dapp it was discovered that the token-logo was not supported in the sns-cli and subsequently not passed to the icrc1 ledger init args.\n\nIn this MR I've added a new field to the init-config-file under the `token` group, and made sure this was passed to the SNS-W properly. Additionally, the SnsInitPayload will add the logo to the icrc1 metadata fields as outlined in this spec https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-1/README.md#standard-metadata-entries\n\nCloses NNS1-2447 \n\nCloses NNS1-2447\n\nSee merge request dfinity-lab/public/ic!13907"
      },
      {
        "id": "8a500946adbfed488f2240d0d73fb3dcf35f1a22",
        "date": "2023-08-03T19:19:41Z",
        "message": "[NNS1-2447] Support passing the token_logo to the SNS icrc1 ledger"
      },
      {
        "id": "39a0e5858f8b3028252783c742b49f3eb924c287",
        "date": "2023-08-02T20:19:56Z",
        "message": "Merge branch '@anchpop/NNS1-2459' into 'master'\n\nNNS1-2459: Make sure restricted_countries is opitonal in sns-cli\n\nCloses NNS1-2459 \n\nCloses NNS1-2459\n\nSee merge request dfinity-lab/public/ic!13931"
      },
      {
        "id": "f8f59f896499f2fef394d8321116f83351c59aa8",
        "date": "2023-08-01T17:49:02Z",
        "message": "Merge branch 'NNS1-2448' into 'master'\n\n[NNS1-2448] Support settling the Neurons' fund for 1-proposal\n\nSystem testing of the 1-proposal feature uncovered that the settling of the neurons' fund was not completely implemented. In this MR, I add the ability for settle_community_fund_participation to support the 1-proposal flow. This required a few changes:\n\n1. A change of authorization method. Since the SNS is now created after the 1-prop is executed, the swap_canister_id is not part of the proposal data. Instead, query the SNS-W canister for all deployed SNSes and see if the caller is a swap_canister.\n2. Make sure refunding of maturity is supported for all error cases. This was not implemented before.\n3. Set the `sns_token_swap_lifecycle` field in the CSNS proposal_data field as it transitions through its state. This is what supports idempotency for settling of the Neurons' fund.\n4. Tests on tests\n\nCloses NNS1-2448 \n\nCloses NNS1-2448\n\nSee merge request dfinity-lab/public/ic!13898"
      },
      {
        "id": "99d5db0bf79b356a430ddbe3b58c4cf71068db60",
        "date": "2023-08-01T17:49:02Z",
        "message": "[NNS1-2448] Support settling the Neurons' fund for 1-proposal"
      }
    ],
    "email": "daniel.thurau@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 62,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 30,
    "fixes": 3,
    "feats": 12,
    "non_merge_commits": [
      {
        "id": "e80f2be2314509103121175117cd6fd675f20eaa",
        "date": "2023-11-16T00:59:50Z",
        "message": "feat(nns): Add the ability to query deployed snses via the proposal id that created them"
      },
      {
        "id": "88c500e4dc9cf661c4412305a036bd7d1a99e728",
        "date": "2023-11-03T23:13:22Z",
        "message": "feat(nns): Scrub deprecated topics from NNS Governance's APIs"
      },
      {
        "id": "31aaccd650948d737bce3db03b813a02599d7503",
        "date": "2023-11-01T19:11:01Z",
        "message": "feat(nns): Remove specific purge methods for nns proposals and remove unneeded tests"
      },
      {
        "id": "e60473d5ea8627aa260b57132a5ed1ef69690590",
        "date": "2023-10-31T23:18:33Z",
        "message": "feat(nns): Add the ability to reject follow requests on deprecated topics"
      },
      {
        "id": "8e70148d04a63cb1a42fbe8bb743072be648cd2a",
        "date": "2023-10-30T18:05:55Z",
        "message": "feat(nns): Implement exemptions for proposal garbage collection"
      },
      {
        "id": "28d18ccfd474fca84d108f15e162d074810e4f8b",
        "date": "2023-10-27T15:39:14Z",
        "message": "feat(sns): Matched Funding / Allow for Swap to call `settle_neruons_fund_participation`"
      },
      {
        "id": "9d2024693764f4c430afe13daf4c3e64d489fded",
        "date": "2023-10-23T17:21:54Z",
        "message": "feat(sns): Moved creation of SNS Neuron recipes to swap finalization"
      },
      {
        "id": "e2ff2692bbe9a78c9770669ab4cb6ce21a493c02",
        "date": "2023-10-16T21:31:39Z",
        "message": "feat(NNS1-2636): Matched Funding / Add idempotent method for creating SNS Neuron Recipes"
      },
      {
        "id": "7382feb1448d5541fb9917266c171541c5ea0683",
        "date": "2023-10-09T20:44:17Z",
        "message": "chore(nns): Improve the submit-mainnet-nns-upgrade-proposal.sh file to"
      },
      {
        "id": "609333f37c0323a0c0262015610fef82add5ca4b",
        "date": "2023-10-05T21:36:08Z",
        "message": "chore(sns): Move the creation of SNS Neuron recipes from can_commit to its own method"
      },
      {
        "id": "0032f43e2e639b277ba92cb6624517e1f216e4bd",
        "date": "2023-10-05T18:20:49Z",
        "message": "chore(sns): Refactor Swap heartbeat to only allow one state transition per heartbeat"
      },
      {
        "id": "6c70619e201cfd4bb0c1db64ec54aa58de55931a",
        "date": "2023-10-02T23:38:00Z",
        "message": "feat(nns/sns)!: Disable UpdateAllowedPrincipals NNS Function in mainnet code"
      },
      {
        "id": "7a4d777b959594dc9c41c3296ed58e5473fba224",
        "date": "2023-10-02T17:34:11Z",
        "message": "chore(nns): Remove the is_authorized src and test code in nns common"
      },
      {
        "id": "d1879d04321017b207f88d582501315442116602",
        "date": "2023-09-29T16:02:35Z",
        "message": "feat(sns): Add a --save-to flag to the sns-cli propose subcommand"
      },
      {
        "id": "2a253b62581f47ae4abc573683333dd96481d02d",
        "date": "2023-09-21T23:37:15Z",
        "message": "fix(nns): Correctly enforce the minimum_icp_xdr_rate when rewarding node providers"
      },
      {
        "id": "baee061f4ed1454a0be516c66592c9833dc104f4",
        "date": "2023-09-18T18:06:01Z",
        "message": "chore(nns): Give a name to the number constant of SNS canisters spawned by SNS-W"
      },
      {
        "id": "64bfa3e25e9da441471e85c8a8a7ad87b57b71f7",
        "date": "2023-09-15T22:05:14Z",
        "message": "feat(nns)!: Remove deprecated fields from Lifeline's canister_status API [override-didc-check]"
      },
      {
        "id": "191d7df2a1a6a8f0b2baead195eacb942cc0b5ff",
        "date": "2023-09-07T16:09:21Z",
        "message": "fix(sns): Apply SNS maturity modulation at the end of the 7 day window"
      },
      {
        "id": "0a6c41fdfb9874b615155a68c3e0a44fc7ae17d3",
        "date": "2023-08-31T21:33:59Z",
        "message": "chore(sns): Update latest swap version in sns_publish_log.txt"
      },
      {
        "id": "9971178c940ffac1cec0d798f687d8aeadf2ad3a",
        "date": "2023-08-31T21:27:08Z",
        "message": "fix(nns): Remove NNS Governance spam log"
      },
      {
        "id": "e46c25cedc1f09ffc090b4755fbc457da06f4081",
        "date": "2023-08-24T22:30:22Z",
        "message": "[NNS1-2385] Provide a template file for the new configuration file version"
      },
      {
        "id": "43fbbab68ab18660700db94863cfd0f114d43eae",
        "date": "2023-08-23T23:20:57Z",
        "message": "[NNS1-2367] Swap paging algorithms do not panic on invalid offset"
      },
      {
        "id": "38cbbac8c6b5b0ce38010bd41e0205c017dd7fe0",
        "date": "2023-08-22T23:53:44Z",
        "message": "nns-tools supports upgrade testing of the SNS Archive canister"
      },
      {
        "id": "29d92f0d6d795d9b7b4081b02f8ca1f405016308",
        "date": "2023-08-16T15:16:26Z",
        "message": "[NNS1-2468] Support upgrade testing via 1-proposal SNS Initialization"
      },
      {
        "id": "5cabe8fd9931587536857dcb964c93c968ece56b",
        "date": "2023-08-14T23:31:48Z",
        "message": "[NNS1-2462] The sns_init.yaml file now specifies NNS Proposal title, summary, and url for proposal submission"
      },
      {
        "id": "da273e0f3135fc615b6151505d2177ee599add89",
        "date": "2023-08-14T19:07:56Z",
        "message": "Enable the 1-proposal compile time feature flag for mainnet release"
      },
      {
        "id": "10ff02a3a38d9230abc5a1fa29f82482c335f04b",
        "date": "2023-08-11T17:39:05Z",
        "message": "[NNS1-2475] Include CreateServiceNervousSystem proposals in the SNS proposal lock"
      },
      {
        "id": "4a7bb3d641f8c061c043beeeb560e8b94210db7d",
        "date": "2023-08-07T16:59:43Z",
        "message": "[NNS1-2341] Add final integration tests for one-proposal SNS Initialization"
      },
      {
        "id": "7e207da4b6dc3c5429a1c917a84ff2be55f03346",
        "date": "2023-08-06T23:28:44Z",
        "message": "[NNS1-2341] Add additional tests of one-proposal SNS initialization"
      },
      {
        "id": "5e53ab3fdc65536e3c8d8a9555bd289e197892ad",
        "date": "2023-08-04T19:01:02Z",
        "message": "[NNS1-2341] Add happy case for 1-proposal initialization in dedicated StateMachine tests"
      },
      {
        "id": "8a500946adbfed488f2240d0d73fb3dcf35f1a22",
        "date": "2023-08-03T19:19:41Z",
        "message": "[NNS1-2447] Support passing the token_logo to the SNS icrc1 ledger"
      },
      {
        "id": "99d5db0bf79b356a430ddbe3b58c4cf71068db60",
        "date": "2023-08-01T17:49:02Z",
        "message": "[NNS1-2448] Support settling the Neurons' fund for 1-proposal"
      }
    ],
    "line_additions": 9142,
    "line_deletions": 3512,
    "lines_effected_total": 12654,
    "rel_comm_add": 25,
    "rel_comm_del": 21,
    "rel_comm_total": 27
  },
  {
    "login": "Bownairo",
    "id": 7826872,
    "totalContributions": 318,
    "github": "https://github.com/Bownairo",
    "commits": [
      {
        "id": "992f8e8c429b02790160746f9c642ccc0b136ccd",
        "date": "2023-11-21T23:33:58Z",
        "message": "feat(NODE-1182,NODE-1183): SEV feature tooling"
      },
      {
        "id": "c06add072d0a3578fec172738e696bf91a4ce32d",
        "date": "2023-11-16T06:25:48Z",
        "message": "Remove old HostOS upgrade test"
      },
      {
        "id": "1bf270a659ac2e42e243ef93b6c8e41396320834",
        "date": "2023-11-15T23:15:51Z",
        "message": "Merge branch 'eero/nested-upgrades' into 'master'\n\n[NODE-1188] Nested HostOS Upgrade Test\n\n```\nbazel run --config=systest //rs/tests/nested:upgrade\n```\n\nCreates a new HostOS upgrade test that runs on nested VMs.\n1. Use SetupOS to install a node and join it to a testnet.\n1. Join the new node to a subnet and check replica health.\n1. Use proposals to elect a new HostOS version and trigger an upgrade on the node.\n1. Check that the node upgrades successfully, and that the replica is still healthy. \n\nSee merge request dfinity-lab/public/ic!16011"
      },
      {
        "id": "00e7519c1d883207f6ddd0a08d1a4114d81a1e90",
        "date": "2023-11-15T23:15:50Z",
        "message": "[NODE-1188] Nested HostOS Upgrade Test"
      },
      {
        "id": "886ae3be8403103c80b9cf4fadaf2a97f181f1bc",
        "date": "2023-11-14T20:13:22Z",
        "message": "Merge branch 'eero/hostos-followups' into 'master'\n\n[NODE-1191] Assorted `ic-admin` improvements\n\nVarious followups from HostOS Upgrades, around `ic-admin`:\n- Bring back a helper function that was cut from a previous MR to reduce complexity.\n- Add a new `--clear-hostos-version` flag to `ic-admin` for discoverability.\n- Simplify some logic under `GetReplicaVersion`, that has been panicking for as long as I can remember. \n\nSee merge request dfinity-lab/public/ic!16058"
      },
      {
        "id": "215c1d1e23515d644f14fdc773e73effe579cc54",
        "date": "2023-11-14T20:13:22Z",
        "message": "[NODE-1191] Assorted `ic-admin` improvements"
      },
      {
        "id": "a954abfd86e8ba75b7767d62fe6353ef0a78ce3f",
        "date": "2023-11-14T19:42:05Z",
        "message": "Merge branch 'eero/setupos-dev-mode' into 'master'\n\n[NODE-1192] Remove development mode from SetupOS\n\n \n\nSee merge request dfinity-lab/public/ic!16059"
      },
      {
        "id": "bbfaa63b94c3b3b87ad5dc84842f01836feca1fe",
        "date": "2023-11-14T19:42:04Z",
        "message": "[NODE-1192] Remove development mode from SetupOS"
      },
      {
        "id": "ec6d8e51f628603f87849df784c239f0860789dd",
        "date": "2023-11-03T21:17:21Z",
        "message": "Merge branch 'eero/nested-test-driver' into 'master'\n\n[NODE-1107] Nested test driver\n\n# SetupOS -> HostOS -> GuestOS System Tests\n\nBring back the experimental nested VM test driver from https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/7126.\n\n```\nbazel run --config=testnet //rs/tests/nested:registration\n```\n\n---\n\nCurrently this has:\n- Basic test driver support around launching HostOS through SetupOS, on Farm.\n- A basic e2e registration test.\n\nAnd still needs:\n- [x] Additions to `setupos-inject-configuration`: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15179\n- [x] Changes to HostOS and SetupOS around running in VMs: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15209\n- [x] Small tweaks to the nested Farm template: https://github.com/dfinity-lab/farm/pull/168 \n\nSee merge request dfinity-lab/public/ic!14916"
      },
      {
        "id": "f968b1c28c2d7bbce901e9edc35ddc3bf0a6ddfe",
        "date": "2023-11-03T21:17:21Z",
        "message": "[NODE-1107] Nested test driver"
      },
      {
        "id": "65b8604144410709e3521c52880f1dad54b5449e",
        "date": "2023-11-02T21:58:45Z",
        "message": "Merge branch 'eero/userspace-tools' into 'master'\n\n[NODE-1175] Userspace tools for SetupOS images\n\nModify the setupos family of tools to work in userspace \n\nSee merge request dfinity-lab/public/ic!15840"
      },
      {
        "id": "6d253cd105f34923ca729e2ba87003d766bb5f34",
        "date": "2023-11-02T21:58:45Z",
        "message": "[NODE-1175] Userspace tools for SetupOS images"
      },
      {
        "id": "cebeff4437859efad780d659547e9b2f88d2d231",
        "date": "2023-10-31T17:54:53Z",
        "message": "Merge branch 'eero/enable-hostos-upgrades' into 'master'\n\n[NODE-1152] Enable HostOS upgrades\n\n \n\nSee merge request dfinity-lab/public/ic!15553"
      },
      {
        "id": "e779feb6bc6d21b09cd414bca8599d030a1817fc",
        "date": "2023-10-31T17:54:53Z",
        "message": "[NODE-1152] Enable HostOS upgrades"
      },
      {
        "id": "2202dc0d597e62fbdcdbcc637cdfb799b92c02a5",
        "date": "2023-10-31T17:28:45Z",
        "message": "Merge branch 'eero/vsock-timeout' into 'master'\n\nFix timeouts around new VSOCK\n\n \n\nSee merge request dfinity-lab/public/ic!15707"
      },
      {
        "id": "e5e829be35093c76d913f47936db9c30c1db67c0",
        "date": "2023-10-31T17:28:44Z",
        "message": "Fix timeouts around new VSOCK"
      },
      {
        "id": "617325f6470edf0efee2428fdfcf07b605a45f9d",
        "date": "2023-10-24T20:19:46Z",
        "message": "Merge branch 'eero/stronger-wipefs' into 'master'\n\n[NODE-1158] Wipe more headers when clearing disks in SetupOS\n\n \n\nSee merge request dfinity-lab/public/ic!15588"
      },
      {
        "id": "a87d7d74c32cd78c20c2847e03f73cb49f2c9f55",
        "date": "2023-10-24T20:19:46Z",
        "message": "[NODE-1158] Wipe more headers when clearing disks in SetupOS"
      },
      {
        "id": "82f2c35cbb517d0928254f637d3f47daad2510c4",
        "date": "2023-10-24T19:21:14Z",
        "message": "Merge branch 'eero/hostos-upgrade-followups-2' into 'master'\n\n[NODE-1130] HostOS upgrade followups\n\nI'd like to merge this after https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/10593 lands on `master`, but I'm pointing it at this branch to reduce the displayed changes for review. \n\nSee merge request dfinity-lab/public/ic!15478"
      },
      {
        "id": "21ff85786505b966ad899728ffdcc6f8ef2048e2",
        "date": "2023-10-24T19:21:14Z",
        "message": "[NODE-1130] HostOS upgrade followups"
      },
      {
        "id": "d404e28859249269459969fb943ed91a215ffee8",
        "date": "2023-10-20T23:31:05Z",
        "message": "Merge branch 'eero/hostos-upgrade-followups-1' into 'master'\n\n[NODE-1129] Ignore errors from old VSOCK code\n\n \n\nSee merge request dfinity-lab/public/ic!15477"
      },
      {
        "id": "6ebdd69e36fbcdac9060f929b5b8236f29213692",
        "date": "2023-10-20T23:31:05Z",
        "message": "[NODE-1129] Ignore errors from old VSOCK code"
      },
      {
        "id": "ac9caa930675add214e8006743dace79737ce684",
        "date": "2023-10-20T22:14:41Z",
        "message": "Merge branch 'eero/hostos-orchestrator' into 'master'\n\nAdd orchestrator task watching for HostOS upgrades\n\nThis MR holds an implementation of an orchestrator task monitoring for HostOS upgrades, based on the GuestOS upgrade process. This aims to implement NODE-629, as part of the NODE-247 (HostOS Upgrades) epic. There are more details on the other components in the [design doc](https://docs.google.com/document/d/1Pz0QWAL939Q-W-svFRXzq2a5bSlI5EDcJ1V1rb6Q4PY/edit?usp=sharing).\n\n---\n\nThis MR follows https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/7221, and watches the registry to detect when the orchestrator should send HostOS upgrade signals over VSOCK. \n\nCloses NODE-629\n\nSee merge request dfinity-lab/public/ic!10593"
      },
      {
        "id": "c38bffe0aef3b16a2e98c1a48afd57f54f3b06cb",
        "date": "2023-10-20T22:14:40Z",
        "message": "Add orchestrator task watching for HostOS upgrades"
      },
      {
        "id": "b641d279654cc88c33bde053cd17562b9ef2c625",
        "date": "2023-10-19T19:49:11Z",
        "message": "Avoid a div by zero during upgrades"
      },
      {
        "id": "7e9c08b91d0b0fbaeac0e32782ff7415f88282f3",
        "date": "2023-10-18T22:43:18Z",
        "message": "Merge branch 'eero/speedup-setupos-2' into 'master'\n\n[NODE-1141] Try speeding up setupos install\n\nFollowing: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15371\n\nTry to speed up SetupOS install by:\n- Switch compression to zstd\n- Only scan tar file once: Previously, we would scan twice, to pre-check file size.\n- Buffer images in memory\n- Use sparse files on extract and write: Previously, I think this means we were writing zeroes across the disk. This should be OK because we still `wipefs` first. \n\nSee merge request dfinity-lab/public/ic!15372"
      },
      {
        "id": "8103f68745d7bc2ce45ea6a8408788a51f108d0a",
        "date": "2023-10-18T22:43:17Z",
        "message": "[NODE-1141] Try speeding up setupos install"
      },
      {
        "id": "f1f8bdf1f204a96502d58c00f1e7bc70c8db1e75",
        "date": "2023-10-17T23:42:56Z",
        "message": "Merge branch 'eero/fix-mgmt-mac' into 'master'\n\nFix unset variable in SetupOS\n\n \n\nSee merge request dfinity-lab/public/ic!15446"
      },
      {
        "id": "f07a5119bd821a760807493025c2e968f814232c",
        "date": "2023-10-17T23:42:55Z",
        "message": "Fix unset variable in SetupOS"
      },
      {
        "id": "b8e3da5b061a99b14877c8f9cb4ebf6de02e30f5",
        "date": "2023-10-17T22:00:42Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-17-2101' into 'master'\n\nUpdating container base images refs [2023-10-17-2101]\n\n \n\nSee merge request dfinity-lab/public/ic!15444"
      },
      {
        "id": "abf1d6606d9215a530b9449ea942884ec433e749",
        "date": "2023-10-17T20:48:15Z",
        "message": "Merge branch 'eero/speedup-setupos-1' into 'master'\n\n[NODE-1141] Add zstd to SetupOS\n\n \n\nSee merge request dfinity-lab/public/ic!15371"
      },
      {
        "id": "d05298d44cb0894f6dc1d84576921fb624e88227",
        "date": "2023-10-17T20:48:15Z",
        "message": "[NODE-1141] Add zstd to SetupOS"
      },
      {
        "id": "5d482c5d8200eed4de6e4fe28098a65a3e2aa528",
        "date": "2023-10-12T21:48:41Z",
        "message": "Merge branch 'eero/vm-images' into 'master'\n\n[NODE-1106] Start building test paths for images in VMs\n\n \n\nSee merge request dfinity-lab/public/ic!15209"
      },
      {
        "id": "aea9a62527d5ae41aca8835119478ee78bc223a5",
        "date": "2023-10-12T21:48:40Z",
        "message": "[NODE-1106] Start building test paths for images in VMs"
      },
      {
        "id": "1ad201eb530a5c572bc72d302160783e7fb4c60b",
        "date": "2023-10-11T22:38:10Z",
        "message": "Merge branch 'eero/amd-microcode' into 'master'\n\nAlways include AMD initramfs\n\nAlways including AMD microcode should be just as deterministic as removing all of it - but we'll first need to check:\n- [x] Does this work when building on intel machines?\n- [x] Is the microcode bundling process deterministic?\n\nand we need to remember that this _still_ requires HostOS upgrades, to ship new microcode.\n\nThis change touches the initramfs bundles that live in the boot partition, which are shipped as part of an upgrade. \n\nSee merge request dfinity-lab/public/ic!13854"
      },
      {
        "id": "e64de01ea8a58053487270bd5809ba183a49167d",
        "date": "2023-10-11T19:08:45Z",
        "message": "Merge branch 'eero/network-fix' into 'master'\n\nFix small network bug in Host and SetupOS\n\n \n\nSee merge request dfinity-lab/public/ic!11934"
      },
      {
        "id": "ae0fdfd5edf7e9027d65a45a70bc6354b36f78c3",
        "date": "2023-10-06T16:43:57Z",
        "message": "Merge branch 'eero/prep-dev' into 'master'\n\n[NODE-1098] Use a dev update image when using ic-prep\n\n \n\nSee merge request dfinity-lab/public/ic!14837"
      },
      {
        "id": "5313e23548aa407bc1bd2d25dd611c1511121be4",
        "date": "2023-10-06T16:43:55Z",
        "message": "[NODE-1098] Use a dev update image when using ic-prep"
      },
      {
        "id": "d628aa32d72565c9e5258d033b3c0be194c77b24",
        "date": "2023-10-05T22:16:27Z",
        "message": "Merge branch 'eero/inject-deployment' into 'master'\n\n[NODE-1089] Add deployment settings to `setupos-inject-configuration`\n\n \n\nSee merge request dfinity-lab/public/ic!15179"
      },
      {
        "id": "ced6a94e7ff6535d42bac1370baf84f303525b25",
        "date": "2023-10-05T22:16:26Z",
        "message": "[NODE-1089] Add deployment settings to `setupos-inject-configuration`"
      },
      {
        "id": "580f9ba5036996a0af80170b5f30409a84c9f5ef",
        "date": "2023-09-27T17:30:12Z",
        "message": "Merge branch 'eero/vm-vsock' into 'master'\n\nCleanup temp handling, add VSOCK support\n\n \n\nSee merge request dfinity-lab/public/ic!15014"
      },
      {
        "id": "0e15273382b24c86249809871ffbf1013fdc0817",
        "date": "2023-09-26T16:35:32Z",
        "message": "Cleanup temp handling, add VSOCK support"
      },
      {
        "id": "4918bb79b1ff24defeec0d596c60796688b5ddec",
        "date": "2023-09-22T22:30:02Z",
        "message": "Merge branch 'eero/setupos-drives' into 'master'\n\n[NODE-1103] Tidy up some SetupOS drive handling\n\n- Consolidate drive-detection logic\n- Update timing on one loop (effectively no-op, happens to help with virtualized tests) \n\nSee merge request dfinity-lab/public/ic!14958"
      },
      {
        "id": "838d58aaf51d08f11e894aae46d2fe8c1392f450",
        "date": "2023-09-22T22:30:02Z",
        "message": "[NODE-1103] Tidy up some SetupOS drive handling"
      },
      {
        "id": "8435b3e9448a52b16ed0dba2b09c305e214ba885",
        "date": "2023-09-22T21:05:23Z",
        "message": "Merge branch 'eero/hostos-vsock-cid' into 'master'\n\nHostOS VSOCK fixes\n\nI ran into this with nested testing.\n\nI'm pretty sure `VMADDR_CID_HOST` will always points at _this_ VM's host. This has been fine because when we are the outermost host, it will point to itself. As soon as we start to nest VMs, it will point up one level, resulting in an error.\n\nThe HostOS should not care what CID it gets, all that matters is the GuestOS can reference it (which it can find through its own `VMADDR_CID_HOST`). This is also how the old VSOCK code was operating - but we still need to test. \n\nSee merge request dfinity-lab/public/ic!14960"
      },
      {
        "id": "a18a01feb630a40951772453e1f50870914675ad",
        "date": "2023-09-21T20:51:47Z",
        "message": "HostOS VSOCK fixes"
      },
      {
        "id": "d0d23094de6d7092c2916b7cb07cd52df59a1406",
        "date": "2023-09-21T15:31:32Z",
        "message": "Merge branch 'base-image-refs-update-2023-09-21-0823' into 'master'\n\nUpdating container base images refs [2023-09-21-0823]\n\n \n\nSee merge request dfinity-lab/public/ic!14919"
      },
      {
        "id": "4958f1a46818d97bb9a26ea1a3679cb94081f72f",
        "date": "2023-09-20T21:46:14Z",
        "message": "Merge branch 'eero/simplify-vms' into 'master'\n\nRemove nvme from local VMs, as it is not needed\n\nTurns out, we don't even _need_ nvme anymore, so simplify the local VM launch. \n\nSee merge request dfinity-lab/public/ic!14912"
      },
      {
        "id": "87c4e5d40440efdafad6af7390afac3a0c6ac1d2",
        "date": "2023-09-20T20:02:31Z",
        "message": "Remove nvme from local VMs, as it is not needed"
      },
      {
        "id": "99d83a9c69d3d3cd4b6d8b4ce2d41bc65e001a5a",
        "date": "2023-09-19T16:12:45Z",
        "message": "Merge branch 'eero/bazel-deploy' into 'master'\n\n[NODE-1099] Fix icos_deploy target, and cleanup visibility\n\n@mykola.dzham1 does this undo too much of https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13731? Is there a better way I should fix this? \n\nSee merge request dfinity-lab/public/ic!14838"
      },
      {
        "id": "1ba96b87734476daf97be5370c0c00cccc45eaa1",
        "date": "2023-09-19T16:12:45Z",
        "message": "[NODE-1099] Fix icos_deploy target, and cleanup visibility"
      },
      {
        "id": "19abb12c2397431b85ee057885ec1030b50dce54",
        "date": "2023-09-18T20:02:02Z",
        "message": "Merge branch 'eero/bazel-vms' into 'master'\n\n[NODE-1100 ] Add bazel scripts for easy VMs\n\nRoughly:\n```\nbazel run //ic-os/guestos/envs/dev:launch-local-vm\nbazel run --config=systest //ic-os/guestos/envs/dev:launch-remote-vm\n\nbazel run //ic-os/hostos/envs/dev:launch-local-vm\nbazel run --config=systest //ic-os/hostos/envs/dev:launch-remote-vm\n\nbazel run //ic-os/setupos/envs/dev:launch-local-vm\nbazel run --config=systest //ic-os/setupos/envs/dev:launch-remote-vm\n``` \n\nSee merge request dfinity-lab/public/ic!14839"
      },
      {
        "id": "90d76312742605babc59ca6eaab65e3d1fd17717",
        "date": "2023-09-18T20:02:02Z",
        "message": "[NODE-1100 ] Add bazel scripts for easy VMs"
      },
      {
        "id": "3b2c4f3a81ff772604fc8d1f4f065abda9b65d3f",
        "date": "2023-09-18T15:59:53Z",
        "message": "Merge branch 'eero/fix-bn-script' into 'master'\n\nFix BN script\n\nFix a small bug that prevents testnet deployments \n\nSee merge request dfinity-lab/public/ic!14836"
      },
      {
        "id": "6deaa2b4550bbd1e174258c253fc9771b4d761a9",
        "date": "2023-09-16T00:22:19Z",
        "message": "Merge branch 'eero/key-linking' into 'master'\n\nResolve symlinks when copying SSH keys\n\nThis can lead to a weird issue when testing upgrades.\n\nWe've been linking all three `admin`, `backup`, and `readonly` keys in testing, and they remain this way when they are pulled into the node.\n\nOn the first launch, `admin` is the only key with real contents. It is copied into place directly, and SSH access works.\nThen, the SSH key manager will empty out the `backup` and `readonly` keys. These are both links to the same `admin` file, so any keys here are cleared.\n\nAfter an upgrade, the node will reconfigure itself with the now empty `admin` key, and SSH access is lost. \n\nSee merge request dfinity-lab/public/ic!14703"
      },
      {
        "id": "e5563336a561670733a396bcc774e9385ffb61ff",
        "date": "2023-09-16T00:22:18Z",
        "message": "Resolve symlinks when copying SSH keys"
      },
      {
        "id": "954636f9e66c52a3dbf5d8a7abe31006b829bca0",
        "date": "2023-09-15T23:39:44Z",
        "message": "Fix BN script"
      },
      {
        "id": "785952de508e69ea80126b46e6d3d7ed461f3b77",
        "date": "2023-09-15T16:12:00Z",
        "message": "Merge branch 'base-image-refs-update-2023-09-15-0825' into 'master'\n\nUpdating container base images refs [2023-09-15-0825]\n\n \n\nSee merge request dfinity-lab/public/ic!14818"
      },
      {
        "id": "8acfe52cafc1e3ddc6d85464d1a1afa66f3ea25c",
        "date": "2023-09-14T16:19:50Z",
        "message": "Merge branch 'base-image-refs-update-2023-09-14-0828' into 'master'\n\nUpdating container base images refs [2023-09-14-0828]\n\n \n\nSee merge request dfinity-lab/public/ic!14796"
      },
      {
        "id": "1177ccf0b79da2db8de8719665794966cbc1ee97",
        "date": "2023-08-28T20:42:39Z",
        "message": "Use generic upload proxy URL"
      },
      {
        "id": "44acec0b521e6e3754d49c983d6e5aad0d69f675",
        "date": "2023-09-06T18:40:45Z",
        "message": "Merge branch 'eero/rework-hostos-proposals' into 'master'\n\n[override-didc-check] Rework HostOS Upgrade Proposals\n\n \n\nSee merge request dfinity-lab/public/ic!13877"
      },
      {
        "id": "14a3983d9d2c093c24e3064fedacb2b4b6fa45c9",
        "date": "2023-09-06T18:40:43Z",
        "message": "[override-didc-check] Rework HostOS Upgrade Proposals"
      },
      {
        "id": "256c21db9942216995490dbc8e43ac416a4b3b84",
        "date": "2023-09-01T00:17:28Z",
        "message": "Merge branch 'eero/fix-old-prep' into 'master'\n\nFix deployments with old `ic-prep`\n\nAdd a compatibility hatch to the scripts in case an old binary is used. \n\nSee merge request dfinity-lab/public/ic!14470"
      },
      {
        "id": "8ab8ef1847e4230b060559d6733bde88710caea2",
        "date": "2023-09-01T00:17:28Z",
        "message": "Fix deployments with old `ic-prep`"
      },
      {
        "id": "ee4f535a7dd6b086cdb83d6b5097ec965a5f3cc8",
        "date": "2023-09-01T00:17:24Z",
        "message": "Merge branch 'eero/k8s-nns' into 'master'\n\nSplit NNS URLs with commas, not spaces\n\n \n\nSee merge request dfinity-lab/public/ic!14493"
      },
      {
        "id": "5eb45d27865c3dea3d4d6ddfc8772364c6ddb9e9",
        "date": "2023-08-31T23:55:02Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-31-2222' into 'master'\n\nUpdating container base images refs [2023-08-31-2222]\n\n \n\nSee merge request dfinity-lab/public/ic!14526"
      },
      {
        "id": "1946858629ede96362cb889cc3a0f662ee06cfad",
        "date": "2023-08-31T23:37:08Z",
        "message": "Fix firewall prefix whitelisting from prep"
      },
      {
        "id": "b306b3904e4391ad8d1855d817d2e07a4cdff707",
        "date": "2023-08-31T22:04:07Z",
        "message": "Merge branch 'eero/fix-baseimages' into 'master'\n\nRemove etc files from GuestOS Filebeat install\n\n \n\nSee merge request dfinity-lab/public/ic!14523"
      },
      {
        "id": "14726477164b54d0521d60ad2606ccb3016f1629",
        "date": "2023-08-31T15:58:36Z",
        "message": "Remove etc files from GuestOS Filebeat install"
      },
      {
        "id": "21f1f859946aee03e7a46972eba24082839d024a",
        "date": "2023-08-31T17:53:32Z",
        "message": "Merge branch 'marko-fix-more-binary-hdr-sections' into 'master'\n\nfix(build reproducibility): infogetty and prestorecon\n\n \n\nSee merge request dfinity-lab/public/ic!14517"
      },
      {
        "id": "c1816034d25d42e2093ea66b7dbb9220f44a2975",
        "date": "2023-08-30T19:18:11Z",
        "message": "Split NNS URLs with commas, not spaces"
      },
      {
        "id": "8e431e6fefc2ccd0e54df759e9e1f8dec9d5047c",
        "date": "2023-08-25T17:30:50Z",
        "message": "Merge branch 'eero/dedup-nodes' into 'master'\n\nClear out old records when redeploying nodes\n\nIn doing so, I may have stumbled upon some forgotten knowledge 🙈.\n\n[`remove_node_directly`](https://gitlab.com/dfinity-lab/public/ic/-/blob/f525ffca24cad00e989370cc770e3c89b83615da/rs/registry/canister/canister/registry.did#L299) allows a NO to pull one of their nodes from the registry, directly. ([impl](https://gitlab.com/dfinity-lab/public/ic/-/blob/f525ffca24cad00e989370cc770e3c89b83615da/rs/registry/canister/src/mutations/node_management/do_remove_node_directly.rs))\n\nShould we just use this from SetupOS? It might be nice to offload the IP search from the registry canister. Let's discuss in [NODE-576](https://dfinity.atlassian.net/browse/NODE-576).\n\n---\n\nAs a fun fact, there's also [`update_node_operator_config_directly`](https://gitlab.com/dfinity-lab/public/ic/-/blob/f525ffca24cad00e989370cc770e3c89b83615da/rs/registry/canister/canister/registry.did#L310-312) which allows a NP to transfer their NO (and nodes) to another NP. ([impl](https://gitlab.com/dfinity-lab/public/ic/-/blob/f525ffca24cad00e989370cc770e3c89b83615da/rs/registry/canister/src/mutations/do_update_node_operator_config_directly.rs)) \n\nSee merge request dfinity-lab/public/ic!13702"
      },
      {
        "id": "7ee977c1edd7134af2790b38c272c686b29ad043",
        "date": "2023-08-25T17:30:49Z",
        "message": "Clear out old records when redeploying nodes"
      },
      {
        "id": "ae65e66a9e2c239cae6889f16531d83ef8b57536",
        "date": "2023-08-24T17:55:04Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-24-0813' into 'master'\n\nUpdating container base images refs [2023-08-24-0813]\n\n \n\nSee merge request dfinity-lab/public/ic!14372"
      },
      {
        "id": "64016bcd15a39bb494591f949b289d5a92128365",
        "date": "2023-08-23T21:02:07Z",
        "message": "Merge branch 'eero/prep-cleanup' into 'master'\n\nRemove deprecated code from `ic-prep`\n\nAnsible testnets still rely on the command line interface of `ic-prep`. To reduce our surface area and need for maintenance, clean up deprecated code. \n\nSee merge request dfinity-lab/public/ic!14293"
      },
      {
        "id": "0a6d4decd22fc9ce6aa76ea9c17e62d17bd016f6",
        "date": "2023-08-23T21:02:06Z",
        "message": "Remove deprecated code from `ic-prep`"
      },
      {
        "id": "023a166b80fc29586be46c9da7369aef2404c3b4",
        "date": "2023-08-22T15:55:08Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-22-0828' into 'master'\n\nUpdating container base images refs [2023-08-22-0828]\n\n \n\nSee merge request dfinity-lab/public/ic!14307"
      },
      {
        "id": "af7bf41264bd21cee07b040a33993fd7e159ee4a",
        "date": "2023-08-21T20:31:11Z",
        "message": "Merge branch 'eero/fix-k8s' into 'master'\n\nUpdate k8s script to MR #14263\n\n \n\nSee merge request dfinity-lab/public/ic!14289"
      },
      {
        "id": "e33a72846cb99a6282e4b5a5fcbfa29c92fd4d29",
        "date": "2023-08-21T20:31:10Z",
        "message": "Update k8s script to MR #14263"
      },
      {
        "id": "b41936a859185658065ba03d0f1d035ab2bbd3ab",
        "date": "2023-08-21T14:37:15Z",
        "message": "Merge branch 'eero/prep-nodes' into 'master'\n\nResurrect removed `--node` flag for `ic-prep`\n\nThe `--node` flag was removed in parts in a few other MRs as it was redundant, but this was intended to replace the older `--nodes` flag.\n\nIn a follow up, I'll switch everything over and remove the deprecated path. \n\nSee merge request dfinity-lab/public/ic!14263"
      },
      {
        "id": "f08f969dedb4ef6243db81db84cb3f93059bc809",
        "date": "2023-08-21T14:37:15Z",
        "message": "Resurrect removed `--node` flag for `ic-prep`"
      },
      {
        "id": "435a2cd6bcda19e8cff6952d5c42386114c103bf",
        "date": "2023-08-12T18:11:04Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-12-0826' into 'master'\n\nUpdating container base images refs [2023-08-12-0826]\n\n \n\nSee merge request dfinity-lab/public/ic!14135"
      },
      {
        "id": "3dddcb06701448dc378f44677ee391d6ddde86c3",
        "date": "2023-08-08T00:02:48Z",
        "message": "Merge branch 'jason/testnet-admin' into 'master'\n\nAdd Jason Zhu's credentials to testnet config\n\n \n\nSee merge request dfinity-lab/public/ic!14010"
      }
    ],
    "email": "eero.kelly@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 83,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 45,
    "fixes": 7,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "992f8e8c429b02790160746f9c642ccc0b136ccd",
        "date": "2023-11-21T23:33:58Z",
        "message": "feat(NODE-1182,NODE-1183): SEV feature tooling"
      },
      {
        "id": "c06add072d0a3578fec172738e696bf91a4ce32d",
        "date": "2023-11-16T06:25:48Z",
        "message": "Remove old HostOS upgrade test"
      },
      {
        "id": "00e7519c1d883207f6ddd0a08d1a4114d81a1e90",
        "date": "2023-11-15T23:15:50Z",
        "message": "[NODE-1188] Nested HostOS Upgrade Test"
      },
      {
        "id": "215c1d1e23515d644f14fdc773e73effe579cc54",
        "date": "2023-11-14T20:13:22Z",
        "message": "[NODE-1191] Assorted `ic-admin` improvements"
      },
      {
        "id": "bbfaa63b94c3b3b87ad5dc84842f01836feca1fe",
        "date": "2023-11-14T19:42:04Z",
        "message": "[NODE-1192] Remove development mode from SetupOS"
      },
      {
        "id": "f968b1c28c2d7bbce901e9edc35ddc3bf0a6ddfe",
        "date": "2023-11-03T21:17:21Z",
        "message": "[NODE-1107] Nested test driver"
      },
      {
        "id": "6d253cd105f34923ca729e2ba87003d766bb5f34",
        "date": "2023-11-02T21:58:45Z",
        "message": "[NODE-1175] Userspace tools for SetupOS images"
      },
      {
        "id": "e779feb6bc6d21b09cd414bca8599d030a1817fc",
        "date": "2023-10-31T17:54:53Z",
        "message": "[NODE-1152] Enable HostOS upgrades"
      },
      {
        "id": "e5e829be35093c76d913f47936db9c30c1db67c0",
        "date": "2023-10-31T17:28:44Z",
        "message": "Fix timeouts around new VSOCK"
      },
      {
        "id": "a87d7d74c32cd78c20c2847e03f73cb49f2c9f55",
        "date": "2023-10-24T20:19:46Z",
        "message": "[NODE-1158] Wipe more headers when clearing disks in SetupOS"
      },
      {
        "id": "21ff85786505b966ad899728ffdcc6f8ef2048e2",
        "date": "2023-10-24T19:21:14Z",
        "message": "[NODE-1130] HostOS upgrade followups"
      },
      {
        "id": "6ebdd69e36fbcdac9060f929b5b8236f29213692",
        "date": "2023-10-20T23:31:05Z",
        "message": "[NODE-1129] Ignore errors from old VSOCK code"
      },
      {
        "id": "c38bffe0aef3b16a2e98c1a48afd57f54f3b06cb",
        "date": "2023-10-20T22:14:40Z",
        "message": "Add orchestrator task watching for HostOS upgrades"
      },
      {
        "id": "b641d279654cc88c33bde053cd17562b9ef2c625",
        "date": "2023-10-19T19:49:11Z",
        "message": "Avoid a div by zero during upgrades"
      },
      {
        "id": "8103f68745d7bc2ce45ea6a8408788a51f108d0a",
        "date": "2023-10-18T22:43:17Z",
        "message": "[NODE-1141] Try speeding up setupos install"
      },
      {
        "id": "f07a5119bd821a760807493025c2e968f814232c",
        "date": "2023-10-17T23:42:55Z",
        "message": "Fix unset variable in SetupOS"
      },
      {
        "id": "d05298d44cb0894f6dc1d84576921fb624e88227",
        "date": "2023-10-17T20:48:15Z",
        "message": "[NODE-1141] Add zstd to SetupOS"
      },
      {
        "id": "aea9a62527d5ae41aca8835119478ee78bc223a5",
        "date": "2023-10-12T21:48:40Z",
        "message": "[NODE-1106] Start building test paths for images in VMs"
      },
      {
        "id": "5313e23548aa407bc1bd2d25dd611c1511121be4",
        "date": "2023-10-06T16:43:55Z",
        "message": "[NODE-1098] Use a dev update image when using ic-prep"
      },
      {
        "id": "ced6a94e7ff6535d42bac1370baf84f303525b25",
        "date": "2023-10-05T22:16:26Z",
        "message": "[NODE-1089] Add deployment settings to `setupos-inject-configuration`"
      },
      {
        "id": "0e15273382b24c86249809871ffbf1013fdc0817",
        "date": "2023-09-26T16:35:32Z",
        "message": "Cleanup temp handling, add VSOCK support"
      },
      {
        "id": "838d58aaf51d08f11e894aae46d2fe8c1392f450",
        "date": "2023-09-22T22:30:02Z",
        "message": "[NODE-1103] Tidy up some SetupOS drive handling"
      },
      {
        "id": "a18a01feb630a40951772453e1f50870914675ad",
        "date": "2023-09-21T20:51:47Z",
        "message": "HostOS VSOCK fixes"
      },
      {
        "id": "87c4e5d40440efdafad6af7390afac3a0c6ac1d2",
        "date": "2023-09-20T20:02:31Z",
        "message": "Remove nvme from local VMs, as it is not needed"
      },
      {
        "id": "1ba96b87734476daf97be5370c0c00cccc45eaa1",
        "date": "2023-09-19T16:12:45Z",
        "message": "[NODE-1099] Fix icos_deploy target, and cleanup visibility"
      },
      {
        "id": "90d76312742605babc59ca6eaab65e3d1fd17717",
        "date": "2023-09-18T20:02:02Z",
        "message": "[NODE-1100 ] Add bazel scripts for easy VMs"
      },
      {
        "id": "e5563336a561670733a396bcc774e9385ffb61ff",
        "date": "2023-09-16T00:22:18Z",
        "message": "Resolve symlinks when copying SSH keys"
      },
      {
        "id": "954636f9e66c52a3dbf5d8a7abe31006b829bca0",
        "date": "2023-09-15T23:39:44Z",
        "message": "Fix BN script"
      },
      {
        "id": "1177ccf0b79da2db8de8719665794966cbc1ee97",
        "date": "2023-08-28T20:42:39Z",
        "message": "Use generic upload proxy URL"
      },
      {
        "id": "14a3983d9d2c093c24e3064fedacb2b4b6fa45c9",
        "date": "2023-09-06T18:40:43Z",
        "message": "[override-didc-check] Rework HostOS Upgrade Proposals"
      },
      {
        "id": "8ab8ef1847e4230b060559d6733bde88710caea2",
        "date": "2023-09-01T00:17:28Z",
        "message": "Fix deployments with old `ic-prep`"
      },
      {
        "id": "1946858629ede96362cb889cc3a0f662ee06cfad",
        "date": "2023-08-31T23:37:08Z",
        "message": "Fix firewall prefix whitelisting from prep"
      },
      {
        "id": "14726477164b54d0521d60ad2606ccb3016f1629",
        "date": "2023-08-31T15:58:36Z",
        "message": "Remove etc files from GuestOS Filebeat install"
      },
      {
        "id": "c1816034d25d42e2093ea66b7dbb9220f44a2975",
        "date": "2023-08-30T19:18:11Z",
        "message": "Split NNS URLs with commas, not spaces"
      },
      {
        "id": "7ee977c1edd7134af2790b38c272c686b29ad043",
        "date": "2023-08-25T17:30:49Z",
        "message": "Clear out old records when redeploying nodes"
      },
      {
        "id": "0a6d4decd22fc9ce6aa76ea9c17e62d17bd016f6",
        "date": "2023-08-23T21:02:06Z",
        "message": "Remove deprecated code from `ic-prep`"
      },
      {
        "id": "e33a72846cb99a6282e4b5a5fcbfa29c92fd4d29",
        "date": "2023-08-21T20:31:10Z",
        "message": "Update k8s script to MR #14263"
      },
      {
        "id": "f08f969dedb4ef6243db81db84cb3f93059bc809",
        "date": "2023-08-21T14:37:15Z",
        "message": "Resurrect removed `--node` flag for `ic-prep`"
      }
    ],
    "line_additions": 3884,
    "line_deletions": 3163,
    "lines_effected_total": 7047,
    "rel_comm_add": 19,
    "rel_comm_del": 17,
    "rel_comm_total": 26
  },
  {
    "login": "daniel-wong-dfinity-org",
    "id": 97631336,
    "totalContributions": 306,
    "github": "https://github.com/daniel-wong-dfinity-org",
    "commits": [
      {
        "id": "ac570efa98118e6e412c57feae0db71f4a5ff95a",
        "date": "2023-11-21T17:48:06Z",
        "message": "Merge branch 'always-generate-reward-events-daniel-wong' into 'master'\n\nfix(sns-governance): NNS1-2588, NNS1-2635. Sane-ify rewards in SNS by bringing it more in line with NNS.\n\nMore concretely,\n\n1. RewardEvents are generated every round, even if the (initial and final) reward rate is 0, and even if there are no proposals. This has a minor externally visible effect: latest_reward_round keeps advancing. This requires changes to ensure that roll over keeps happening. To do this, we copy some code from NNS (this is good for our eventual goal of deduplicating NNS and SNS code). Specifically, the RewardEvent.total_available_e8s_equivalent field is copied, along with related method RewardEvent::e8s_equivalent_to_be_rolled_over.\n\n2. Stop using horribly hacky is_eligible_for_rewards field. Thus, the VotingRewardsParameters::rewards_enabled method has been deleted. This brings us within one step of deleting that field entirely.\n\n3. Data migration (in post_upgrade) targeting only SNSs that have final and initial reward rate set to 0. AFAIK, only Dragginz has 0 (final and initial) reward rate.\n\n# Data Migration\n\nAlways generating RewardEvents (regardless of reward rate) is a problem for proposals that are stuck in the ReadyToSettle state. As far as I know, there is only one such proposal: Dragginz proposal 36. What this MR does is effectively sets those proposal(s) to Settled, by populating the reward_event_end_timestamp_seconds field.\n\nWhy are there proposals stuck in ReadyToSettle:\n\n  1. When they were made, proposals were enabled. This results in is_eligible_for_rewards to be set to true.\n  2. Before distribute_rewards had a chance to process them, distribute_rewards was effectively disabled by setting initial and final reward rate to 0.\n\nThis explains why there is only one known case of this: there is only a short window in which making proposals would cause them to end up in that state, and most SNSs have always had non-zero reward rate.\n\nTo support later deletion of is_eligible_for_rewards, we need to make sure that existing proposals where is_eligible_for_rewards = false would remain in the Settled state. This is achieved using the same method as \"stuck in ReadyToSettle\": set the reward_event_end_timestamp_seconds field in the proposal.\n\nIn both of these cases (i.e. stuck in ReadyToSettle and is_eligible_for_rewards = false), ballots have not been cleared. This data migration does that.\n\nLet me reiterate, these data migrations only target SNSs that have final and initial reward rate set to 0. \n\nSee merge request dfinity-lab/public/ic!16148"
      },
      {
        "id": "fe985aaa3789b52a43ee014cd277bcc1e9d80c69",
        "date": "2023-11-21T17:48:06Z",
        "message": "fix(sns-governance): NNS1-2588, NNS1-2635. Sane-ify rewards in SNS by bringing it more in line with NNS."
      },
      {
        "id": "e98f806cc65cba5a38ebdd7eb1698bd46535fad2",
        "date": "2023-11-15T17:56:40Z",
        "message": "Merge branch 'reward-status-detection-fix-daniel-wong' into 'master'\n\nfix(sns-governance): NNS1-2588: Fixed a bug in reward_status.\n\nThe problem is that the old field (`reward_event_round`) was not used to detect whether a proposal has been rewarded, only the new field (`reward_event_end_timestamp_seconds`).\n\nThis solves that by introducing a new method: `has_been_rewarded`, which correctly uses both. \n\nSee merge request dfinity-lab/public/ic!16028"
      },
      {
        "id": "15512f2cab60a8cff5a3d66a203b556d44bc1d3e",
        "date": "2023-11-15T17:56:40Z",
        "message": "fix(sns-governance): NNS1-2588: Fixed a bug in reward_status."
      },
      {
        "id": "74dfc43fbe5812bce3a18655fc7630733d5b5d16",
        "date": "2023-11-15T16:14:57Z",
        "message": "Merge branch 'publish-canister-proposal-types-daniel-wong' into 'master'\n\nfeat(nns-root): NNS1-2690: Exposed various *_nns_canister methods of NNS root.\n\nWe were already serving such requests, but now they are part of our documented interface. They were previously not documented, probably to avoid clutter, since only governance is allowed to call them.\n\nThe goal of this was for the associated types to be in our automatically generated NNS root.did file (and this has been achieved). This lets clients interpret (and make) NNS proposals that use these types via serialized payload field.\n\nAlso, deleted obsolete authz stuff.\n\nAlso, renamed corresponding *CanisterProposal types to *CanisterRequest, because \"Proposal\" is not apt. This rename resulted in a fair amount of fallout, which explains why there are an unusual number of files in this MR. Fortunately, most of the affected files contain a small amount of very mechanical changes.\n\nCloses NNS1-2690. \n\nCloses NNS1-2690\n\nSee merge request dfinity-lab/public/ic!15964"
      },
      {
        "id": "db4e2edd3581f5ed36862cee24d7059fd144e72d",
        "date": "2023-11-15T16:14:56Z",
        "message": "feat(nns-root): NNS1-2690: Exposed various *_nns_canister methods of NNS root."
      },
      {
        "id": "862a966d193be6d3e98bce40e6322256971b1910",
        "date": "2023-11-07T14:28:51Z",
        "message": "Merge branch 'update-mainnet-canisters-2023-11-03-daniel-wong' into 'master'\n\ntest(NNS1-2694): Updated canister versions recorded in WORKSPACE.bazel.\n\nBecause they were upgraded yesterday (that is, upgrade proposals were adopted and executed).\n\nI say this is a test change, because IIUC, this info would only be used by (system) tests. \n\nSee merge request dfinity-lab/public/ic!15934"
      },
      {
        "id": "d08abef168bc261868288da0af5b1fd4aa06edfa",
        "date": "2023-11-07T14:28:51Z",
        "message": "test(NNS1-2694): Updated canister versions recorded in WORKSPACE.bazel."
      },
      {
        "id": "6bbf9f9d6a03f52a3eccb74ffa8a49b70815f4c8",
        "date": "2023-11-07T14:14:26Z",
        "message": "Merge branch 'wait-for-canister-to-upgrade-daniel-wong' into 'master'\n\nfeat: Wait for canister to upgrade.\n\n \n\nSee merge request dfinity-lab/public/ic!15916"
      },
      {
        "id": "973288305e87f04a92083a084a4c1852f506fcd4",
        "date": "2023-11-07T14:14:25Z",
        "message": "feat: Wait for canister to upgrade."
      },
      {
        "id": "c851dbef0eaa22fd3dc3565702f77874c1dbee46",
        "date": "2023-11-02T17:03:46Z",
        "message": "Merge branch 'jason/NNS1-2414-2' into 'master'\n\nfeat: NNS1-2414 Differentiate new() and restore() for NNS Governance and its NeuronStore\n\n \n\nSee merge request dfinity-lab/public/ic!15769"
      },
      {
        "id": "3d02e30a051284752a656e316045ac55502724ba",
        "date": "2023-10-26T13:15:25Z",
        "message": "Merge branch 'copy-inactive-neurons-to-stable-memory-system-test-daniel-wong' into 'master'\n\ntest: NNS1-2676: Test that runs copying of inactive neurons to stable memory during heartbeat, and verifies the copy.\n\nThis new test takes about 20 minutes to run (on my devenv VM) -> it has \"manual\" tag.\n\nThe test initializes StateMachine using data from zh1-pyr07, a new technique that we recently got working. This takes a few minutes. We may want to do more of these kinds of tests in the future. In that case, we'll want to move some of the test initialization code to a common library.\n\nThe test uses the special `feature = \"test\"` build of NNS governance canister WASM. This is so that copying of inactive neurons is enabled, i.e. happens in heartbeat.\n\nThis also adds some (Prometheus) metric(s) that show the progress of the copy.\n\nThis also adds a bunch of helpers to test_utils/.../state_test_helpers.rs. E.g.\n\n  * create_super_powerful_neuron\n  * mint_icp\n  * scrape_metrics\n  * etc.\n\nThey seem pretty nice, if I do say so myself. These additions could fairly easily be broken out into its own MR though, if we wanted to make this MR smaller.\n\nThis temporarily disregards duplicate followee during validation. This will be removed later as part of http://go/jira/NNS1-2622, which we will need to work on soon.\n\nI found that it takes about 1 s to process a batch of 1_000 heap neurons (again, on my devenv VM). Heartbeat starts failing when a batch size of 10_000 neurons is used -> 1_000 seems like a good number. \n\nSee merge request dfinity-lab/public/ic!14876"
      },
      {
        "id": "fba1ef62acdf900e10c73e6d3934876a9c9c6024",
        "date": "2023-10-26T13:15:22Z",
        "message": "test: NNS1-2676: Test that runs copying of inactive neurons to stable memory during heartbeat, and verifies the copy."
      },
      {
        "id": "016308b1381370c576968028ec38829fb901326e",
        "date": "2023-10-23T08:45:35Z",
        "message": "feat: NNS1-2597: Define \"inactive\" Neuron using only the current time."
      },
      {
        "id": "271597db843ecb15b8c3c3c75a56b02504841d6c",
        "date": "2023-10-19T12:57:45Z",
        "message": "Merge branch 'release-readme-ict-based-daniel-wong' into 'master'\n\ndocs: Misc edits to NNS release README.\n\nBased on my current experience with the new release tools.\n\nAlso, a small refactor to one of the bash scripts. \n\nSee merge request dfinity-lab/public/ic!15101"
      },
      {
        "id": "b7b86c13cc48aeeca0eb9a5e1705e7ef66268b01",
        "date": "2023-10-19T12:57:44Z",
        "message": "docs: Misc edits to NNS release README."
      },
      {
        "id": "d34131d6fcabc7c0fec63bb04844eda53555fe54",
        "date": "2023-09-19T14:10:56Z",
        "message": "Merge branch 'write-inactive-neurons-through-to-stable-memory-daniel-wong' into 'master'\n\nfeat: NNS1-2530: Write inactive neurons through to stable memory when they are modified.\n\nAlso, moved Governance::neuron_can_be_archived to Neuron::is_inactive. A bonus of this is that we now have consistent terminology: no \"archivable\" just \"inactive\".\n\n# Mocking\n\nAn innovation (for us) in testing: I started using the `mockall` library. The first example in [their docs] is enough to get started, but let me give the TL;DR:\n\n[their docs]: https://docs.rs/mockall/latest/mockall/\n\nIt supplies an attribute that you slap onto any trait. E.g. suppose you have `trait T`. The attribute generates `MockT`, a concrete type that implements `T`. In turn, `MockT` lets you specify what method calls you expect.\n\nFWIW, `mockall` is already being used in many places within the `ic` repo.\n\n# Gating\n\nThis feature is NOT built by default. This is controlled by using the following pattern:\n\n```rust\nif cfg! {any(test, feature = \"test\")} {\n    new_code();\n}\n```\n\n# WASM size\n\nThis causes NNS governance WASM to grow a little bit. This lead to the need to increase the size limit.\n\nIt is surprising that the WASM grew past the old limit. I suspect that this growth is mainly caused by the introduction of `mockall`. OTOH, that would be surprising, because the optimizer should be able to recognize that all the code generated by `mockall` is dead, and can therefore be stripped. :shrug: \n\nSee merge request dfinity-lab/public/ic!14759"
      },
      {
        "id": "bfd56c887402bbbe2239ed7b2afa029493c6a8d8",
        "date": "2023-09-19T14:10:55Z",
        "message": "feat: NNS1-2530: Write inactive neurons through to stable memory when they are modified."
      },
      {
        "id": "30b72fcec436cff73838cdd54d703135687253ce",
        "date": "2023-09-08T17:45:43Z",
        "message": "fix: Fixed a small bug in NNS root protobuf_generator."
      },
      {
        "id": "0dab7793a4bc1c37e14728c3c06e0afde063f982",
        "date": "2023-09-05T15:32:28Z",
        "message": "Merge branch 'run-neuron-fund-test-less-frequently-daniel-wong' into 'master'\n\nMake neuron fund test run regularly, but not on every MR, because it is crazy slow.\n\n \n\nSee merge request dfinity-lab/public/ic!14592"
      },
      {
        "id": "ec5c518507ea72b5b420806a1c3ac26eb804aa02",
        "date": "2023-09-05T14:49:09Z",
        "message": "Merge branch 'copy-all-inactive-neurons-to-stable-memory-daniel-wong' into 'master'\n\nfeat: NNS1-2529: Copy inactive neurons to stable memory in heartbeat.\n\nJust added the necessary \"cursor\" logic. Not actually called from heartbeat yet, but enabling that is just a matter of adding two lines. \n\nSee merge request dfinity-lab/public/ic!14519"
      },
      {
        "id": "8c579d7da42fe5502b83166e63dbf8a25ddef0ab",
        "date": "2023-09-05T14:49:09Z",
        "message": "feat: NNS1-2529: Copy inactive neurons to stable memory in heartbeat."
      },
      {
        "id": "4156e76a812952bc219855bd8235075f5a343764",
        "date": "2023-09-05T14:36:41Z",
        "message": "Make neuron fund test run regularly, but not on every MR, because it is crazy slow."
      },
      {
        "id": "bb578b98f2864a931d37a0a6f9944cf57ada8160",
        "date": "2023-09-05T09:12:02Z",
        "message": "Merge branch 'dnaiel-wong/copy-batch-of-inactive-neurons' into 'master'\n\nfeat: NNS1-2527: Copy batch of inactive Neurons to StableNeuronStore.\n\nUnfortunately, it is not enough to have the Neuron itself in order to determine whether it is active or not. You must also know locks and open proposals.\n\nAs a result, we have chosen for the batch to be constructed by the caller (Governance), since it has the needed supporting auxiliary data. Of course, to do this, Governance will need the help of NeuronStore to scan a range of heap neurons based on a start point, and limit (i.e. batch size).\n\nWe would like for NeuronStore to own StableNeuronStore, but this is thwarted by the fact that StableBTreeMap is not Send (although, it might be easy to add this). There may be a way around this, but after much gnashing of teeth, I was not able to find a workaround.\n\nSince NS cannot own StableNS, it must instead use STABLE_NEURON_STORE global. From a testing point of view, this is not so great, but as long as \n\nSee merge request dfinity-lab/public/ic!14511"
      },
      {
        "id": "354d52af5e0c2db6e6b943bf6424124ea4ba1ed4",
        "date": "2023-09-05T09:12:01Z",
        "message": "feat: NNS1-2527: Copy batch of inactive Neurons to StableNeuronStore."
      },
      {
        "id": "5f4ed131f503f40a618d89aab559445a31625c79",
        "date": "2023-08-29T12:59:22Z",
        "message": "Merge branch 'test-multiple-stable-neurons-daniel-wong' into 'master'\n\ntest: NNS1-2525: Added red herring neurons to StableNeuronStore tests.\n\nMake sure that mutations to one neuron do not bleed over into others.\n\nCloses NNS1-2525 \n\nCloses NNS1-2525\n\nSee merge request dfinity-lab/public/ic!14395"
      },
      {
        "id": "8906670202dad3e686ea85b5f2a56a1ca71f799d",
        "date": "2023-08-29T12:59:22Z",
        "message": "test: NNS1-2525: Added red herring neurons to StableNeuronStore tests."
      },
      {
        "id": "01dd203c386ed576be4819b4b11f4da542ec2090",
        "date": "2023-08-28T17:55:06Z",
        "message": "Merge branch 'daniel-wong/governance_upgrade-address-space-overflow' into 'master'\n\nNNS1-2534: Temporarily disable a failing test while we investigate it. To wit, governance_upgrade.\n\n \n\nSee merge request dfinity-lab/public/ic!14428"
      },
      {
        "id": "ee985875dcf5838b3a53db0ec511fb4f330e5b96",
        "date": "2023-08-28T17:55:05Z",
        "message": "NNS1-2534: Temporarily disable a failing test while we investigate it. To wit, governance_upgrade."
      },
      {
        "id": "8cfa646dcb82dcca42a055515a195850fbcdfd0c",
        "date": "2023-08-24T16:39:22Z",
        "message": "Merge branch 'daniel-wong/singletons-stable-neuron-store' into 'master'\n\nfeat: NNS1-2485: Added support for known_neuron_data and transfer (singleton/composite) fields to StableNeuronStore.\n\nCloses 2485. \n\nSee merge request dfinity-lab/public/ic!14290"
      },
      {
        "id": "b64e5f381be2f641992141c8919c2cd9a3595739",
        "date": "2023-08-24T16:39:21Z",
        "message": "feat: NNS1-2485: Added support for known_neuron_data and transfer (singleton/composite) fields to StableNeuronStore."
      },
      {
        "id": "357109d333a07341e9f21cfeba6ece011a91d131",
        "date": "2023-08-24T15:07:35Z",
        "message": "Merge branch 'daniel-wong/support-collections-update-delete-upsert-stable-neurons-store' into 'master'\n\nfeat: NNS1-2503, NNS1-2504: Added collections support to update, delete, and upsert methods in StableNeuronStore.\n\nI changed the schema a little to be more homogenous. This lead to lots of simplification. Specificaly,\n\n```\nrepeated Foo foos = n;\n```\n\nnow maps to\n\n```\nStableBTreeMap<(/* Neuron ID */ u64, /* index */ u64), Foo, Memory>\n```\n\nThis ensures that order is preserved. That property is more important to recent_ballots, but it's also good for hot_keys, even though we don't care about order there because then we can reconstitute Neuron exactly. This will make verification of copying from heap to stable memory easier in the future.\n\nOTOH, this homogenized schema is not so good at answering \"Is P a hotkey of N?\", because now, a range scan is required instead of a point look up -> maybe this schema change is not such a great idea after all?\n\nCloses NNS1-2503.\nCloses NNS1-2504. \n\nCloses NNS1-2503 and NNS1-2504\n\nSee merge request dfinity-lab/public/ic!14230"
      },
      {
        "id": "2e5acfa09887fd010366a13bd4f8c13806881bd5",
        "date": "2023-08-24T15:07:34Z",
        "message": "feat: NNS1-2503, NNS1-2504: Added collections support to update, delete, and upsert methods in StableNeuronStore."
      },
      {
        "id": "03dbb924ad97f19e4425ae773321d3c0c63457db",
        "date": "2023-08-18T17:08:06Z",
        "message": "Merge branch 'daniel-wong/neuron-stable-memory-collections' into 'master'\n\nNNS1-2484: Added collections support to create and read methods in StableNeuronStore.\n\nCloses NNS1-2484. \n\nCloses NNS1-2484\n\nSee merge request dfinity-lab/public/ic!14216"
      },
      {
        "id": "e52ba2f476115def32dfda7e8e70425e1b8774a9",
        "date": "2023-08-18T17:08:06Z",
        "message": "NNS1-2484: Added collections support to create and read methods in StableNeuronStore."
      },
      {
        "id": "3c10c17b3471f85c63c907e3b7d5c949ce9dc007",
        "date": "2023-08-16T20:14:33Z",
        "message": "Merge branch 'daniel-wong/update-delete-upsert-neurons-stable-memory' into 'master'\n\nfeat: NNS1-2488: Added update, delete, and upsert to ic_nns_governance::storage::neurons::Store.\n\ncloses NNS1-2488 \n\nCloses NNS1-2488\n\nSee merge request dfinity-lab/public/ic!14163"
      },
      {
        "id": "ddc0d59ae6f331f9d8579b27e10594f6e7ecb2c0",
        "date": "2023-08-16T20:14:33Z",
        "message": "feat: NNS1-2488: Added update, delete, and upsert to ic_nns_governance::storage::neurons::Store."
      },
      {
        "id": "201fded2f795e7d88380d86cbdacfe4068c6e692",
        "date": "2023-08-14T21:13:41Z",
        "message": "Merge branch 'daniel-wong/neurons-stable-memory-schema' into 'master'\n\nfeat: NNS1-2487: Store abridged Neuron to stable memory.\n\n \n\nSee merge request dfinity-lab/public/ic!14150"
      },
      {
        "id": "603b203c4b2b6db44955e39dfac8abb3bc48b2e1",
        "date": "2023-08-14T21:13:40Z",
        "message": "feat: NNS1-2487: Store abridged Neuron to stable memory."
      },
      {
        "id": "ee8e7b2feefd69134cb43ddf5dca1190e19cf753",
        "date": "2023-08-11T10:01:17Z",
        "message": "Merge branch 'daniel.wong/re-enable-open-sns-token-swap-proposals' into 'master'\n\nfeat: NNS1-2477: Re-enable OpenSnsTokenSwap proposals.\n\nCloses NNS1-2477. \n\nCloses NNS1-2477\n\nSee merge request dfinity-lab/public/ic!14054"
      },
      {
        "id": "c4a4bf95bab11233a9d38b8190e37c0ef6bc6a03",
        "date": "2023-08-11T10:01:16Z",
        "message": "feat: NNS1-2477: Re-enable OpenSnsTokenSwap proposals."
      },
      {
        "id": "ec76aa97aef75e1e692453bb43b1eb3cd8d1863a",
        "date": "2023-08-09T13:08:11Z",
        "message": "Merge branch 'fix-open-sns-token-swap-proposal-uniqueness-enforcement-daniel-wong' into 'master'\n\nfix: NNS1-2464: Fix open sns token swap proposal uniqueness enforcement.\n\ncloses NNS1-2464 \n\nCloses NNS1-2464\n\nSee merge request dfinity-lab/public/ic!14006"
      },
      {
        "id": "606d8836fee31e768bd7c1e60f259e3ec8da08c0",
        "date": "2023-08-09T13:08:10Z",
        "message": "fix: NNS1-2464: Fix open sns token swap proposal uniqueness enforcement."
      }
    ],
    "email": "daniel.wong@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 43,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 21,
    "fixes": 4,
    "feats": 11,
    "non_merge_commits": [
      {
        "id": "fe985aaa3789b52a43ee014cd277bcc1e9d80c69",
        "date": "2023-11-21T17:48:06Z",
        "message": "fix(sns-governance): NNS1-2588, NNS1-2635. Sane-ify rewards in SNS by bringing it more in line with NNS."
      },
      {
        "id": "15512f2cab60a8cff5a3d66a203b556d44bc1d3e",
        "date": "2023-11-15T17:56:40Z",
        "message": "fix(sns-governance): NNS1-2588: Fixed a bug in reward_status."
      },
      {
        "id": "db4e2edd3581f5ed36862cee24d7059fd144e72d",
        "date": "2023-11-15T16:14:56Z",
        "message": "feat(nns-root): NNS1-2690: Exposed various *_nns_canister methods of NNS root."
      },
      {
        "id": "d08abef168bc261868288da0af5b1fd4aa06edfa",
        "date": "2023-11-07T14:28:51Z",
        "message": "test(NNS1-2694): Updated canister versions recorded in WORKSPACE.bazel."
      },
      {
        "id": "973288305e87f04a92083a084a4c1852f506fcd4",
        "date": "2023-11-07T14:14:25Z",
        "message": "feat: Wait for canister to upgrade."
      },
      {
        "id": "fba1ef62acdf900e10c73e6d3934876a9c9c6024",
        "date": "2023-10-26T13:15:22Z",
        "message": "test: NNS1-2676: Test that runs copying of inactive neurons to stable memory during heartbeat, and verifies the copy."
      },
      {
        "id": "016308b1381370c576968028ec38829fb901326e",
        "date": "2023-10-23T08:45:35Z",
        "message": "feat: NNS1-2597: Define \"inactive\" Neuron using only the current time."
      },
      {
        "id": "b7b86c13cc48aeeca0eb9a5e1705e7ef66268b01",
        "date": "2023-10-19T12:57:44Z",
        "message": "docs: Misc edits to NNS release README."
      },
      {
        "id": "bfd56c887402bbbe2239ed7b2afa029493c6a8d8",
        "date": "2023-09-19T14:10:55Z",
        "message": "feat: NNS1-2530: Write inactive neurons through to stable memory when they are modified."
      },
      {
        "id": "30b72fcec436cff73838cdd54d703135687253ce",
        "date": "2023-09-08T17:45:43Z",
        "message": "fix: Fixed a small bug in NNS root protobuf_generator."
      },
      {
        "id": "8c579d7da42fe5502b83166e63dbf8a25ddef0ab",
        "date": "2023-09-05T14:49:09Z",
        "message": "feat: NNS1-2529: Copy inactive neurons to stable memory in heartbeat."
      },
      {
        "id": "4156e76a812952bc219855bd8235075f5a343764",
        "date": "2023-09-05T14:36:41Z",
        "message": "Make neuron fund test run regularly, but not on every MR, because it is crazy slow."
      },
      {
        "id": "354d52af5e0c2db6e6b943bf6424124ea4ba1ed4",
        "date": "2023-09-05T09:12:01Z",
        "message": "feat: NNS1-2527: Copy batch of inactive Neurons to StableNeuronStore."
      },
      {
        "id": "8906670202dad3e686ea85b5f2a56a1ca71f799d",
        "date": "2023-08-29T12:59:22Z",
        "message": "test: NNS1-2525: Added red herring neurons to StableNeuronStore tests."
      },
      {
        "id": "ee985875dcf5838b3a53db0ec511fb4f330e5b96",
        "date": "2023-08-28T17:55:05Z",
        "message": "NNS1-2534: Temporarily disable a failing test while we investigate it. To wit, governance_upgrade."
      },
      {
        "id": "b64e5f381be2f641992141c8919c2cd9a3595739",
        "date": "2023-08-24T16:39:21Z",
        "message": "feat: NNS1-2485: Added support for known_neuron_data and transfer (singleton/composite) fields to StableNeuronStore."
      },
      {
        "id": "2e5acfa09887fd010366a13bd4f8c13806881bd5",
        "date": "2023-08-24T15:07:34Z",
        "message": "feat: NNS1-2503, NNS1-2504: Added collections support to update, delete, and upsert methods in StableNeuronStore."
      },
      {
        "id": "e52ba2f476115def32dfda7e8e70425e1b8774a9",
        "date": "2023-08-18T17:08:06Z",
        "message": "NNS1-2484: Added collections support to create and read methods in StableNeuronStore."
      },
      {
        "id": "ddc0d59ae6f331f9d8579b27e10594f6e7ecb2c0",
        "date": "2023-08-16T20:14:33Z",
        "message": "feat: NNS1-2488: Added update, delete, and upsert to ic_nns_governance::storage::neurons::Store."
      },
      {
        "id": "603b203c4b2b6db44955e39dfac8abb3bc48b2e1",
        "date": "2023-08-14T21:13:40Z",
        "message": "feat: NNS1-2487: Store abridged Neuron to stable memory."
      },
      {
        "id": "c4a4bf95bab11233a9d38b8190e37c0ef6bc6a03",
        "date": "2023-08-11T10:01:16Z",
        "message": "feat: NNS1-2477: Re-enable OpenSnsTokenSwap proposals."
      },
      {
        "id": "606d8836fee31e768bd7c1e60f259e3ec8da08c0",
        "date": "2023-08-09T13:08:10Z",
        "message": "fix: NNS1-2464: Fix open sns token swap proposal uniqueness enforcement."
      }
    ],
    "line_additions": 6538,
    "line_deletions": 2534,
    "lines_effected_total": 9072,
    "rel_comm_add": 16,
    "rel_comm_del": 12,
    "rel_comm_total": 17
  },
  {
    "login": "max-dfinity",
    "id": 100170574,
    "totalContributions": 306,
    "github": "https://github.com/max-dfinity",
    "commits": [
      {
        "id": "421a75c41f3fe469d5cd48b74eb8be62a675299e",
        "date": "2023-11-23T03:48:00Z",
        "message": "Merge branch 'jason/fix-mint-node-provider-rewards' into 'master'\n\nfix: NNS1-2747 Commit node provider rewards minting result right after minting\n\nSee more details in NNS1-2747 and how it's tested in https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16281/diffs#b165743328ffddca493a3891b1bb1b685a8600a8 (and its description) \n\nCloses NNS1-2747\n\nSee merge request dfinity-lab/public/ic!16280"
      },
      {
        "id": "fc1e3cb540ee8069295e224f61cc1dad503764a7",
        "date": "2023-11-23T00:01:31Z",
        "message": "Merge branch 'levsha/chore-IDX-3044-use-more-specific-glob' into 'master'\n\nchore(IDX-3044): use more specific glob\n\nEnsure unrelated files will not be picked up by glob. \n\nSee merge request dfinity-lab/public/ic!16239"
      },
      {
        "id": "05198cac27d4d36f29c58e515c414f178d781988",
        "date": "2023-11-18T00:46:20Z",
        "message": "Merge branch 'NNS1-2628' into 'master'\n\nNNS1-2628: MergeMaturity returns an error\n\nThis makes direct calls to manage_neuron as well as manage_neuron proposals reject MergeMaturity commands with an error.\n\nThis moves us closer to the point where we can entirely remove this code.\n\nMost of the changes are fairly straightforward, but it is helpful to look at the tests side by side, since the git diff is not very helpful in this case. \n\nSee merge request dfinity-lab/public/ic!15953"
      },
      {
        "id": "8be8e9045370ef13ff329ce928609a2741a85abf",
        "date": "2023-11-18T00:46:19Z",
        "message": "NNS1-2628: MergeMaturity returns an error"
      },
      {
        "id": "6005338650ff3796a82ae66d5b1495c4278c5266",
        "date": "2023-11-17T21:22:34Z",
        "message": "Merge branch 'NNS1-2288' into 'master'\n\nfeat: NNS1-2288: Prevent updating ECDSA keys that are already set\n\nWe now check update_subnet requests to make sure that ECDSA keys can only be set the first time, but never modified for a subnet.  This prevents accidental changes. \n\nSee merge request dfinity-lab/public/ic!16135"
      },
      {
        "id": "08de64faa354d9c2689f3de4173edfbcdef25b95",
        "date": "2023-11-17T21:22:34Z",
        "message": "feat: NNS1-2288: Prevent updating ECDSA keys that are already set"
      },
      {
        "id": "947eda7f95e0dd6a190a1580337338c6697f0a82",
        "date": "2023-11-09T04:34:50Z",
        "message": "Merge branch 'jason/NNS1-2510' into 'master'\n\nchore: NNS1-2510 Document the invariant regarding active/inactive neurons\n\nCloses NNS1-2510 \n\nCloses NNS1-2510\n\nSee merge request dfinity-lab/public/ic!15987"
      },
      {
        "id": "efeb737b7313b1ea2574ac479d79c7623d1b30bd",
        "date": "2023-11-04T00:14:25Z",
        "message": "Merge branch 'NNS1-2589-A' into 'master'\n\nrefactor: NNS1-2589: refactor canister management methods\n\nRefactors canister management methods \n\nSee merge request dfinity-lab/public/ic!15865"
      },
      {
        "id": "b204f287e4eb562dfb9c0c3462f88e7ca96ba5de",
        "date": "2023-11-04T00:14:25Z",
        "message": "refactor: NNS1-2589: refactor canister management methods"
      },
      {
        "id": "f4d1a0a93317f5255f5389ce1137909b5ffe1c93",
        "date": "2023-11-02T20:36:18Z",
        "message": "Merge branch '@anchpop/refactor-cascade-2' into 'master'\n\nMove NeuronManagement anti-follow logic elsewhere in vote_and_cascade_follow\n\nThis simplifies the function without changing its behavior in the common case. (The only behavior change is when a neuron is trying to vote on a NeuronManagement proposal but can't for some reason - previously, it would have returned an Error, but now it just does nothing. That brings NeuronManagement in line with the other topics) \n\nSee merge request dfinity-lab/public/ic!15841"
      },
      {
        "id": "53f1eb3fd7ce75b59f75a9e26c9bcccf326ab4f9",
        "date": "2023-11-01T16:48:56Z",
        "message": "Merge branch 'revert-1571ea3e' into 'master'\n\nRevert \"Merge branch '@anchpop/unwrap-verbose-macro' into 'master'\"\n\nThis reverts merge request !15771 \n\nSee merge request dfinity-lab/public/ic!15827"
      },
      {
        "id": "dbccdd5eb6c4e92fc1e8400a3f44921557b02d8e",
        "date": "2023-10-27T12:03:14Z",
        "message": "feat: Simpler SNS testing scripts and fixes"
      },
      {
        "id": "687d7830d3794d499e3d95c7cddc4ada678c4ba1",
        "date": "2023-10-25T19:26:13Z",
        "message": "Merge branch 'rumenov/rmnnssubnetit' into 'master'\n\nfix: ICSUP-3716 don't expose publicly the production NNS_SUBNET_ID\n\nPeople are tempted to use the value directly resulting in incidents like ICSUP-3716.\n\nInstead of the NNS_SUBNET_ID, maybe use the subnet index in the list of subnet records. NNS should be index 0. \n\nCloses ICSUP-3716\n\nSee merge request dfinity-lab/public/ic!15653"
      },
      {
        "id": "6c41c368540f21aa6b6f7b92e2e2d227b939e670",
        "date": "2023-10-19T15:40:05Z",
        "message": "Merge branch 'NNS1-2616-A' into 'master'\n\nfeat: NNS1-2616: Store HeapNeuronsFollowingIndex on heap during upgrades\n\nThis MR creates a method to transition from indexes being build when Governance is created to the index being stored in the heap, so that it does not have to be rebuilt on every upgrade. \n\nSee merge request dfinity-lab/public/ic!15181"
      },
      {
        "id": "34ac22e0a734528e45fc1634f62ee4c10e93697d",
        "date": "2023-10-19T15:40:04Z",
        "message": "feat: NNS1-2616: Store HeapNeuronsFollowingIndex on heap during upgrades"
      },
      {
        "id": "0f40ed718cbf0fa689b5bef75fe07b8778c74a11",
        "date": "2023-10-16T19:19:30Z",
        "message": "Merge branch 'jason/fix-unstake-maturity' into 'master'\n\nfix: Fix a bug with unstake maturity causing high number of instructions per heartbeat\n\n \n\nSee merge request dfinity-lab/public/ic!15374"
      },
      {
        "id": "0dc8f3688b25a6c9973a855ade09059ec2218500",
        "date": "2023-10-13T19:29:22Z",
        "message": "Merge branch 'NNS1-2616-index-dedup-F' into 'master'\n\nrefactror: NNS1-2616: update following index in NeuronStore instead of Governance when removing neurons\n\n[Prev MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15348) \n\nSee merge request dfinity-lab/public/ic!15349"
      },
      {
        "id": "39b697e4aea04b71584992a7d6ba7f07226a8694",
        "date": "2023-10-13T19:29:22Z",
        "message": "refactror: NNS1-2616: update following index in NeuronStore instead of Governance when removing neurons"
      },
      {
        "id": "0ecb212bfaa7c8038990035e3c99c85d69a1e4ec",
        "date": "2023-10-13T18:31:40Z",
        "message": "Merge branch 'NNS1-2616-index-dedup-E' into 'master'\n\nrefactor: NNS1-2616: update following index in NeuronStore instead of Governance when adding neurons\n\n[Prev MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15347) | [Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15349) \n\nSee merge request dfinity-lab/public/ic!15348"
      },
      {
        "id": "0aeffba4913782870bc7aed4edc8299f7521d5bb",
        "date": "2023-10-13T18:31:39Z",
        "message": "refactor: NNS1-2616: update following index in NeuronStore instead of Governance when adding neurons"
      },
      {
        "id": "fb9b519a0bff5c10e1e15333ef7b38efbff9e588",
        "date": "2023-10-13T16:41:34Z",
        "message": "Merge branch 'NNS1-2616-index-dedup-D' into 'master'\n\nrefactor: NNS1-2616: rename upsert to add_neuron and change signature\n\n[Prev MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15347) | [Next MR ](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15348) \n\nSee merge request dfinity-lab/public/ic!15347"
      },
      {
        "id": "859de7e154c6ddbc3622a152e47bad964713b0bf",
        "date": "2023-10-13T16:41:33Z",
        "message": "refactor: NNS1-2616: rename upsert to add_neuron and change signature"
      },
      {
        "id": "11b15a294d0ad3035b50340d150c37d46098d4df",
        "date": "2023-10-12T23:59:57Z",
        "message": "Merge branch 'NNS1-2616-index-dedup-C' into 'master'\n\nrefactor: NNS1-2616: Update following index in NeuronStore instead of Governance when updating neuron\n\nNeuronStore uses correct implementation for updating NeuronFollowingIndex so that if a controller is added and removed as a hotkey, it does not corrupt the index.   Previously, this was a transient error as the index was updated on every upgrade, but that won't be the case soon.\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15325) | [Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15347) \n\nSee merge request dfinity-lab/public/ic!15326"
      },
      {
        "id": "642ddee0d1ec1e7e2e820daa78f2090c230e9426",
        "date": "2023-10-12T23:59:55Z",
        "message": "refactor: NNS1-2616: Update following index in NeuronStore instead of Governance when updating neuron"
      },
      {
        "id": "142ca3fabc0e4460b66f46f9e2500474f3343ba7",
        "date": "2023-10-11T17:17:11Z",
        "message": "Merge branch 'NNS1-2616-index-dedup-B' into 'master'\n\nrefactor: NNS1-2616: Change types of HeapNeuronFollowingIndex to be like StableNeuronFollowingIndex in NeuronStore\n\nImplements NeuronIndex interface for HeapNeuronFollowingIndex, and uses that implementation in NeuronStore so that the heap index will be updated in the same way as the other indexes.\n\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15303) | [Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15326) \n\nSee merge request dfinity-lab/public/ic!15325"
      },
      {
        "id": "caa1ae223e4381d5a2f42304416a092ed4842900",
        "date": "2023-10-11T17:17:11Z",
        "message": "refactor: NNS1-2616: Change types of HeapNeuronFollowingIndex to be like StableNeuronFollowingIndex in NeuronStore"
      },
      {
        "id": "ff31112d3d9828cb0e922d6f1a417fcfc864ca41",
        "date": "2023-10-10T21:14:33Z",
        "message": "Merge branch 'NNS1-2616-index-dedup-A' into 'master'\n\nNNS1-2616: Change names of local types\n\n\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15301) | [Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15325) \n\nSee merge request dfinity-lab/public/ic!15303"
      },
      {
        "id": "1e7e400d492020da4a9ef7249cf66a57f8493b4a",
        "date": "2023-10-10T21:14:33Z",
        "message": "NNS1-2616: Change names of local types"
      },
      {
        "id": "7727e821d962fdcec7207a8fa6663d8a413c037e",
        "date": "2023-10-10T20:28:32Z",
        "message": "Merge branch 'NNS1-2616-index-dedup' into 'master'\n\nrefactor: NNS1-2616: Create update_neuron_indexes method\n\nCreate a simple method to contain everything related to updating indexes inside NeuronStore when neurons change.\n\n[Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15303) \n\nSee merge request dfinity-lab/public/ic!15301"
      },
      {
        "id": "d77d88d1bd7745dd4d88253445ccf04e2906aaf3",
        "date": "2023-10-10T20:28:31Z",
        "message": "refactor: NNS1-2616: Create update_neuron_indexes method"
      },
      {
        "id": "9f1ebf16eec5ea4d9d47a2f6f4427f77c7ca32ff",
        "date": "2023-10-04T22:49:52Z",
        "message": "Merge branch 'NNS1-2616' into 'master'\n\nrefactor: NNS1-2616: NeuronStore can take HeapNeuronFollowingIndex as optional parameter\n\nThis allows us to pass the index in from another source, and if it is not set, it will build it.  \n\nSubsequently, we can start storing the index on heap and using serde in the upgrade path.\n\nCurrently, nothing except a single test actually passes this argument. \n\nSee merge request dfinity-lab/public/ic!15053"
      },
      {
        "id": "74f035b9d6f28d78c4596d155fb10815376665a2",
        "date": "2023-10-04T22:49:52Z",
        "message": "refactor: NNS1-2616: NeuronStore can take HeapNeuronFollowingIndex as optional parameter"
      },
      {
        "id": "6df1f8692093f91e08e2804d99c8bdbdd08d627d",
        "date": "2023-09-27T23:41:26Z",
        "message": "Merge branch 'NNS1-2578' into 'master'\n\nfeat: NNS1-2578: minor optimization for cast_vote_and_cascade_follow\n\nAvoids learning about would-be voting behavior of neurons that don't have ballots for a particular proposal. \n\nSee merge request dfinity-lab/public/ic!14915"
      },
      {
        "id": "b9bc6c6766228a77a630ab9082660869cec894a5",
        "date": "2023-09-27T23:41:26Z",
        "message": "feat: NNS1-2578: minor optimization for cast_vote_and_cascade_follow"
      },
      {
        "id": "34abd6be1bec7c8dd52ec313e2b194b8e6052230",
        "date": "2023-09-26T20:32:32Z",
        "message": "Merge branch 'rename-neuron-indexes-validation' into 'master'\n\nrefactor: rename neuron_indexes_validation to neuron_data_validation\n\nBecause these validators deal with more general classes of validation relating to neurons, renaming to neuron_data_validation to indicate it's not just for indexes. \n\nSee merge request dfinity-lab/public/ic!14992"
      },
      {
        "id": "f6451a2245c429929288e07309d8f52f226c3d0b",
        "date": "2023-09-26T20:32:32Z",
        "message": "refactor: rename neuron_indexes_validation to neuron_data_validation"
      },
      {
        "id": "888640959a82824bb9d928b815bc1ccbd104f54c",
        "date": "2023-09-15T19:58:41Z",
        "message": "Merge branch 'NNS1-2528-B' into 'master'\n\nfeat: Partial validation of neuron copy\n\nThis implements some validation for the neurons copied into stable storage \n\nSee merge request dfinity-lab/public/ic!14791"
      },
      {
        "id": "ae34ec021c6bafa188c2eed62f5fc8177208be50",
        "date": "2023-09-15T19:58:41Z",
        "message": "feat: Partial validation of neuron copy"
      },
      {
        "id": "97460e7b66802d370eb5de5d071575f07acf933e",
        "date": "2023-09-14T22:33:00Z",
        "message": "Merge branch 'fix_typos_in_nns_code' into 'master'\n\nChore: Fix typos in nns code\n\nDone using [this spellchecker](https://github.com/crate-ci/typos). \n\nSee merge request dfinity-lab/public/ic!14810"
      },
      {
        "id": "c5f062a49a288423682ea2ff8741da28ced35b84",
        "date": "2023-09-14T00:57:28Z",
        "message": "Merge branch 'NNS1-2528-A' into 'master'\n\nrefactor: remove indirection of types\n\nMinor refactor to remove unneeded indirection \n\nSee merge request dfinity-lab/public/ic!14790"
      },
      {
        "id": "9ea462f04cce346d374c5392c411dffbdd2f95fd",
        "date": "2023-09-13T18:22:49Z",
        "message": "refactor: remove indirection of types"
      },
      {
        "id": "cf25e38e1f132efbc40cecc4d79b926f25b88ebb",
        "date": "2023-09-08T20:09:34Z",
        "message": "Merge branch 'NNS1-2528' into 'master'\n\nNNS1-2528: Preserve the order of elements in the followees field from StableMemory read\n\nPreserve the order of elements in the followees field. This makes it easier to see that a Neuron has been correctly copied to stable memory, because it lets us use == to compare neurons in heap vs. stable memory, rather than some custom equivalence method. \n\nThis is done simply by storing the index/position of the element in stable memory. This would not be a backwards compatible change, but since we have no data in stable memory, this is fine. \n\nSee merge request dfinity-lab/public/ic!14701"
      },
      {
        "id": "2d4c3811e43e537c3bc4173b9cb03e6ceac8a9ee",
        "date": "2023-09-08T20:09:33Z",
        "message": "NNS1-2528: Preserve the order of elements in the followees field from StableMemory read"
      },
      {
        "id": "448502b8c4926bef51958fb412479ec102747894",
        "date": "2023-09-08T17:45:43Z",
        "message": "Merge branch 'fix-nns-root-protobuf_generator-daniel-wong' into 'master'\n\nfix: Fixed a small bug in NNS root protobuf_generator.\n\n \n\nSee merge request dfinity-lab/public/ic!14698"
      },
      {
        "id": "6d01bcca0002aa99f575d3044b66052ab949b355",
        "date": "2023-09-07T23:40:27Z",
        "message": "Merge branch 'ms/tiny-refactor' into 'master'\n\nrefactor: use specific neuron_store method instead of generic\n\nTiny refactor for more consistency, relying on this method instead of recalculating: \n\n```\n /// List all neuron ids that are in the community fund.\n    pub fn list_community_fund_neuron_ids(&self) -> Vec<NeuronId> {\n        let filter = |n: &Neuron| {\n            n.joined_community_fund_timestamp_seconds\n                .unwrap_or_default()\n                > 0\n        };\n        self.map_heap_neurons_filtered(filter, |n| n.id)\n            .into_iter()\n            .flatten()\n            .collect()\n    }\n``` \n\nSee merge request dfinity-lab/public/ic!14674"
      },
      {
        "id": "7261f963b839d5b924772c31c53fc166f1f0d63a",
        "date": "2023-09-07T22:43:51Z",
        "message": "refactor: use specific neuron_store method instead of generic"
      },
      {
        "id": "53f132ca5ec709b545fc17998144882a389c6258",
        "date": "2023-09-06T17:57:53Z",
        "message": "Merge branch 'NNS1-2498-E' into 'master'\n\nrefactor: remove list_heap_neurons usage from Governance\n\nReplace usages with either heap_neurons().values() (where applicable and nothing better makes sense) or a purposeful filtering function.\n\nOther refactoring also happened in order to simplify some code. \n\nSee merge request dfinity-lab/public/ic!14529"
      },
      {
        "id": "a7dbf74b8d9492b28b2ac0bf8c1d0835bbb77fdd",
        "date": "2023-09-06T17:57:53Z",
        "message": "refactor: remove list_heap_neurons usage from Governance"
      },
      {
        "id": "ea78ff81289a8f636b1e8890a26b45bf4139664b",
        "date": "2023-09-01T17:33:11Z",
        "message": "Merge branch 'NNS1-2498-D' into 'master'\n\nrefactor: more methods to NeuronStore\n\nMigrate has_neuron_with_subaccount and get_neuron_id_by_subaccount out of Governance to NeuronStore.  Replace usage of Governance.contains_neuron with NeuronStore.contains \n\nSee merge request dfinity-lab/public/ic!14528"
      },
      {
        "id": "77a410de8d2cbb221302d680ddb725d7c51726be",
        "date": "2023-09-01T17:33:11Z",
        "message": "refactor: more methods to NeuronStore"
      },
      {
        "id": "e60dfb8db9dec8dc19c171f33ea0f7d4506bb521",
        "date": "2023-09-01T00:21:28Z",
        "message": "Merge branch 'NNS1-2498-C' into 'master'\n\nrefactor: remove get_neuron in favor of with_neuron\n\nThis helps prevent mistakes caused by assuming a reference to a neuron will be a) valid and b) have the same values after an await. \n\nSee merge request dfinity-lab/public/ic!14499"
      },
      {
        "id": "1f94a3d4a891c4b8517e9a29e47aa140ae5cf4ef",
        "date": "2023-09-01T00:21:28Z",
        "message": "refactor: remove get_neuron in favor of with_neuron"
      },
      {
        "id": "69f2dcbedbdeb695a7cb1b8c61260a83db848388",
        "date": "2023-08-31T22:32:27Z",
        "message": "Merge branch 'NNS1-2498-B' into 'master'\n\nrefactor: migrate simple methods into NeuronStore\n\nRemove neurons_len, add_neuron_from_storage, remove_neuron_from_storage from Governance and use NeuronStore equivalent. \n\nSee merge request dfinity-lab/public/ic!14498"
      },
      {
        "id": "7c289f16bb5af29d1679e62d4d843df2de775474",
        "date": "2023-08-31T22:32:26Z",
        "message": "refactor: migrate simple methods into NeuronStore"
      },
      {
        "id": "41e0c1a25a7b57b8e16ccc2823dfff83bb843e5c",
        "date": "2023-08-31T21:27:09Z",
        "message": "Merge branch 'thurau/NNS1-2535' into 'master'\n\nfix(nns): Remove NNS Governance spam log\n\nCloses NNS1-2535 \n\nCloses NNS1-2535\n\nSee merge request dfinity-lab/public/ic!14495"
      },
      {
        "id": "b9949229021c8801c03b38d73d53a9dfb14d5f60",
        "date": "2023-08-30T22:46:21Z",
        "message": "Merge branch 'NNS1-2534' into 'master'\n\nchore: fix broken test\n\nTest did not stop and start the container, leading to memory corruption in NNS Governance. \n\nSee merge request dfinity-lab/public/ic!14497"
      },
      {
        "id": "24b157986fa2124a7fda417996b31e0542d57ba9",
        "date": "2023-08-30T22:46:21Z",
        "message": "chore: fix broken test"
      },
      {
        "id": "e71e3f8d432334b2e150e6cefbf44454816b63f3",
        "date": "2023-08-30T21:44:14Z",
        "message": "Merge branch 'NNS1-2498-A' into 'master'\n\nrefactor: move new_neuron_id into NeuronStore\n\nMoving new_neuron_id into NeuronStore \n\nSee merge request dfinity-lab/public/ic!14407"
      },
      {
        "id": "e73f969e6637c7b3e933bc773175c483e3d223ab",
        "date": "2023-08-25T23:37:04Z",
        "message": "refactor: move new_neuron_id into NeuronStore"
      },
      {
        "id": "aaecb416ff90919c7419e5bf25c5e98b2acd26ea",
        "date": "2023-08-25T23:44:38Z",
        "message": "Merge branch 'NNS1-2498' into 'master'\n\nrefactor: Remove direct usage of heap_neurons_mut()\n\nRemoving direct usages of heap_neurons_mut() so that no external iterators allow neurons to be mutated (which would thus circumvent our post-modification check to determine storage location.\n\nThis also removes some code used to cleanup ages that has already been deployed, and partially migrates Neuron Fund related access patterns during the course of that work, as well as cleaning up some tests.\n\nNexts method to migrate, in further MRs: \n\n1. new_neuron_id from Governance (migrate to the store)\n2. Remove get_neuron from Governance\n3. Remove find_neuron_id from Governance (possibly eliminating the general filtering pattern, as it is not possible to efficiently scan stable storage neurons)\n4. contains_neuron\n5. neurons_len\n6. add_neuron_to_storage\n7. remove_neuron_from_storage\n8. with_neuron\n9. with_neuron_by_neuron_id_or_subaccount\n10. with_neuron_mut\n11. list_heap_neurons\n12. has_neuron_with_subaccount\n13. neuron_can_be_archived \n\nSee merge request dfinity-lab/public/ic!14267"
      },
      {
        "id": "756b59c0aba10afd85e9713a6f54a888290da120",
        "date": "2023-08-25T23:44:38Z",
        "message": "refactor: Remove direct usage of heap_neurons_mut()"
      },
      {
        "id": "10203e214e9bdc73fd4482abf225e3d12a2e59b1",
        "date": "2023-08-18T21:49:23Z",
        "message": "Merge branch 'NNS1-2498-B' into 'master'\n\nNNS1-2498: Make NeuronStore.heap_neurons private\n\nNext step in refactoring, making NeuronStore.heap_neurons private so all access is through the interface \n\nSee merge request dfinity-lab/public/ic!14238"
      },
      {
        "id": "f73bedd542ee792ddbfe0c67d36899f43eb91e2f",
        "date": "2023-08-18T21:49:23Z",
        "message": "NNS1-2498: Make NeuronStore.heap_neurons private"
      },
      {
        "id": "71f636dceca5357f21cc5657bdc40c435765a646",
        "date": "2023-08-18T19:22:40Z",
        "message": "Merge branch 'NNS1-2498A' into 'master'\n\nNNS1-2498: Move NeuronStore to its own file\n\nFirst refactor in a series of refactors to move all neuron operations out of Governance into NeuronStore. \n\nSee merge request dfinity-lab/public/ic!14236"
      },
      {
        "id": "6e8512f1c8f3f26e81c479c362e148da5a354463",
        "date": "2023-08-18T19:22:40Z",
        "message": "NNS1-2498: Move NeuronStore to its own file"
      },
      {
        "id": "ca6d446e081a03b0ae24fa304885c4899ce48436",
        "date": "2023-08-15T22:02:22Z",
        "message": "Merge branch 'jason/NNS1-2411-2' into 'master'\n\nfeat: NNS1-2411 Define a subaccount index for NNS Governance\n\nCloses NNS1-2411 \n\nCloses NNS1-2411\n\nSee merge request dfinity-lab/public/ic!13965"
      }
    ],
    "email": "maximilian.summe@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 66,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 39,
    "fixes": 2,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "08de64faa354d9c2689f3de4173edfbcdef25b95",
        "date": "2023-11-17T21:22:34Z",
        "message": "feat: NNS1-2288: Prevent updating ECDSA keys that are already set"
      },
      {
        "id": "b204f287e4eb562dfb9c0c3462f88e7ca96ba5de",
        "date": "2023-11-04T00:14:25Z",
        "message": "refactor: NNS1-2589: refactor canister management methods"
      },
      {
        "id": "dbccdd5eb6c4e92fc1e8400a3f44921557b02d8e",
        "date": "2023-10-27T12:03:14Z",
        "message": "feat: Simpler SNS testing scripts and fixes"
      },
      {
        "id": "34ac22e0a734528e45fc1634f62ee4c10e93697d",
        "date": "2023-10-19T15:40:04Z",
        "message": "feat: NNS1-2616: Store HeapNeuronsFollowingIndex on heap during upgrades"
      },
      {
        "id": "39b697e4aea04b71584992a7d6ba7f07226a8694",
        "date": "2023-10-13T19:29:22Z",
        "message": "refactror: NNS1-2616: update following index in NeuronStore instead of Governance when removing neurons"
      },
      {
        "id": "0aeffba4913782870bc7aed4edc8299f7521d5bb",
        "date": "2023-10-13T18:31:39Z",
        "message": "refactor: NNS1-2616: update following index in NeuronStore instead of Governance when adding neurons"
      },
      {
        "id": "859de7e154c6ddbc3622a152e47bad964713b0bf",
        "date": "2023-10-13T16:41:33Z",
        "message": "refactor: NNS1-2616: rename upsert to add_neuron and change signature"
      },
      {
        "id": "642ddee0d1ec1e7e2e820daa78f2090c230e9426",
        "date": "2023-10-12T23:59:55Z",
        "message": "refactor: NNS1-2616: Update following index in NeuronStore instead of Governance when updating neuron"
      },
      {
        "id": "caa1ae223e4381d5a2f42304416a092ed4842900",
        "date": "2023-10-11T17:17:11Z",
        "message": "refactor: NNS1-2616: Change types of HeapNeuronFollowingIndex to be like StableNeuronFollowingIndex in NeuronStore"
      },
      {
        "id": "1e7e400d492020da4a9ef7249cf66a57f8493b4a",
        "date": "2023-10-10T21:14:33Z",
        "message": "NNS1-2616: Change names of local types"
      },
      {
        "id": "d77d88d1bd7745dd4d88253445ccf04e2906aaf3",
        "date": "2023-10-10T20:28:31Z",
        "message": "refactor: NNS1-2616: Create update_neuron_indexes method"
      },
      {
        "id": "74f035b9d6f28d78c4596d155fb10815376665a2",
        "date": "2023-10-04T22:49:52Z",
        "message": "refactor: NNS1-2616: NeuronStore can take HeapNeuronFollowingIndex as optional parameter"
      },
      {
        "id": "b9bc6c6766228a77a630ab9082660869cec894a5",
        "date": "2023-09-27T23:41:26Z",
        "message": "feat: NNS1-2578: minor optimization for cast_vote_and_cascade_follow"
      },
      {
        "id": "f6451a2245c429929288e07309d8f52f226c3d0b",
        "date": "2023-09-26T20:32:32Z",
        "message": "refactor: rename neuron_indexes_validation to neuron_data_validation"
      },
      {
        "id": "ae34ec021c6bafa188c2eed62f5fc8177208be50",
        "date": "2023-09-15T19:58:41Z",
        "message": "feat: Partial validation of neuron copy"
      },
      {
        "id": "9ea462f04cce346d374c5392c411dffbdd2f95fd",
        "date": "2023-09-13T18:22:49Z",
        "message": "refactor: remove indirection of types"
      },
      {
        "id": "2d4c3811e43e537c3bc4173b9cb03e6ceac8a9ee",
        "date": "2023-09-08T20:09:33Z",
        "message": "NNS1-2528: Preserve the order of elements in the followees field from StableMemory read"
      },
      {
        "id": "7261f963b839d5b924772c31c53fc166f1f0d63a",
        "date": "2023-09-07T22:43:51Z",
        "message": "refactor: use specific neuron_store method instead of generic"
      },
      {
        "id": "a7dbf74b8d9492b28b2ac0bf8c1d0835bbb77fdd",
        "date": "2023-09-06T17:57:53Z",
        "message": "refactor: remove list_heap_neurons usage from Governance"
      },
      {
        "id": "77a410de8d2cbb221302d680ddb725d7c51726be",
        "date": "2023-09-01T17:33:11Z",
        "message": "refactor: more methods to NeuronStore"
      },
      {
        "id": "1f94a3d4a891c4b8517e9a29e47aa140ae5cf4ef",
        "date": "2023-09-01T00:21:28Z",
        "message": "refactor: remove get_neuron in favor of with_neuron"
      },
      {
        "id": "7c289f16bb5af29d1679e62d4d843df2de775474",
        "date": "2023-08-31T22:32:26Z",
        "message": "refactor: migrate simple methods into NeuronStore"
      },
      {
        "id": "24b157986fa2124a7fda417996b31e0542d57ba9",
        "date": "2023-08-30T22:46:21Z",
        "message": "chore: fix broken test"
      },
      {
        "id": "e73f969e6637c7b3e933bc773175c483e3d223ab",
        "date": "2023-08-25T23:37:04Z",
        "message": "refactor: move new_neuron_id into NeuronStore"
      },
      {
        "id": "756b59c0aba10afd85e9713a6f54a888290da120",
        "date": "2023-08-25T23:44:38Z",
        "message": "refactor: Remove direct usage of heap_neurons_mut()"
      },
      {
        "id": "f73bedd542ee792ddbfe0c67d36899f43eb91e2f",
        "date": "2023-08-18T21:49:23Z",
        "message": "NNS1-2498: Make NeuronStore.heap_neurons private"
      },
      {
        "id": "6e8512f1c8f3f26e81c479c362e148da5a354463",
        "date": "2023-08-18T19:22:40Z",
        "message": "NNS1-2498: Move NeuronStore to its own file"
      }
    ],
    "line_additions": 3103,
    "line_deletions": 1724,
    "lines_effected_total": 4827,
    "rel_comm_add": 23,
    "rel_comm_del": 21,
    "rel_comm_total": 26
  },
  {
    "login": "mraszyk",
    "id": 31483726,
    "totalContributions": 305,
    "github": "https://github.com/mraszyk",
    "commits": [
      {
        "id": "03711b92a56e8749fdc8588dcc7bc2db6196e88b",
        "date": "2023-11-22T15:28:25Z",
        "message": "Merge branch 'mraszyk/pocket-ic-cycle-scaling' into 'master'\n\nfeat: add cycle scaling to PocketIC\n\nThis MR enables cycle scaling in PocketIC so that, e.g., cycles consumed by canisters on fiduciary subnets are proportionally more expensive compared to a regular application subnet. \n\nSee merge request dfinity-lab/public/ic!16267"
      },
      {
        "id": "6d3b5dc060f8a542087a32573fc56dd68ce40832",
        "date": "2023-11-22T15:28:23Z",
        "message": "feat: add cycle scaling to PocketIC"
      },
      {
        "id": "af57e79b12c015d42b92b4a6eb801b2273495c27",
        "date": "2023-11-21T14:12:23Z",
        "message": "Merge branch 'mraszyk/out-of-cycles-error' into 'master'\n\nfix: do not print canister cycle balance in out of cycles error messages\n\nThis MR removes the canister cycle balance and freezing threshold from `CanisterOutOfCyclesError`.\n\nThe canister cycle balance and freezing threshold are supposed to be private (e.g., calling `canister_status` is only permitted to the canister's controllers and the canister itself), but error messages leak the canister cycle balance and freezing threshold. \n\nSee merge request dfinity-lab/public/ic!16235"
      },
      {
        "id": "cd66196224c75b826eb0ea50e48eb8053e9376c8",
        "date": "2023-11-21T09:17:23Z",
        "message": "fix: do not print canister cycle balance in out of cycles error messages"
      },
      {
        "id": "ee99fe24bed637b4b448dba3d16ce5fa277b252e",
        "date": "2023-11-13T09:01:05Z",
        "message": "Merge branch 'mraszyk/sync-ic-did' into 'master'\n\nchore: sync ic.did file with interface-spec repository\n\nThis MR syncs the management canister interface Candid file with the dfinity/interface-spec repository containing the authoritative specification.\n\nThe main change to existing specification compliance tests is the type of the `upgrade` variant for canister installation mode which changed from `null` to `opt record { skip_pre_upgrade : opt bool; }` and thus we use `none` (a.k.a. `Nothing` in Haskell) instead of `null`  for backwards-compatibility.\n\nNew specification compliance tests to cover new management canister API are not added in this MR. \n\nSee merge request dfinity-lab/public/ic!16032"
      },
      {
        "id": "f789586a3502833ed45a1ea78735a74972cdc4c8",
        "date": "2023-11-13T09:01:04Z",
        "message": "chore: sync ic.did file with interface-spec repository"
      },
      {
        "id": "3d26970fcb4e55be423157cf000088de22e9f154",
        "date": "2023-11-10T12:17:31Z",
        "message": "Merge branch 'mraszyk/universal-canister-api' into 'master'\n\nfeat: extend universal canister API to facilitate testing inter-canister calls with large arguments\n\nThis MR facilitates testing inter-canister calls with large arguments using the universal canister. In more detail:\n- this MR adds new operations to the universal canister WASM pushing a large blob of a given length on the canister's stack and computing the length of a blob on the canister's stack (to validate the large argument in the inter-canister calls from the tests);\n- this MR redefines the semantics of the `other_side` field in `CallArgs` in the universal canister API to contain operations for the caller to produce the argument to be executed by the callee (instead of storing the argument to be executed by the callee in the field directly);\n- this MR adds a new function to the universal canister library that computes (succinct) operations for the caller to produce a (large) argument to be executed by the callee (and thus facilitating tests exercising inter-canister call size limits). \n\nSee merge request dfinity-lab/public/ic!16008"
      },
      {
        "id": "8cc48ace1cd650f6fb44f571dba90042e4333ede",
        "date": "2023-11-10T12:17:31Z",
        "message": "feat: extend universal canister API to facilitate testing inter-canister calls with large arguments"
      },
      {
        "id": "d05aa4fc726427081c8f8bbf620d51ac8ea11f98",
        "date": "2023-11-09T12:40:43Z",
        "message": "Merge branch 'mraszyk/inspect-message-instruction-limit' into 'master'\n\nfeat: update inspect_message instruction limit\n\nThis MR updates the `inspect_message` instruction limit to 200M instructions. The motivation for this change is that `inspect_message` calls are supposed to _quickly_ sanitize the incoming ingress message to decide if the canister wants to accept it. Any expensive computation should then happen in the actual update call resulting from an accepted ingress message. \n\nSee merge request dfinity-lab/public/ic!15978"
      },
      {
        "id": "ec357714af1d4c647814f435ab3ec3f9d916599e",
        "date": "2023-11-09T12:40:43Z",
        "message": "feat: update inspect_message instruction limit"
      },
      {
        "id": "319e3c3bb4e356e065bcc0a2b603c167f4bd2e40",
        "date": "2023-11-08T17:56:24Z",
        "message": "Merge branch 'mraszyk/k8s-execution-metrics-ids' into 'master'\n\nfix: make inspect_message execution dashboard ids unique\n\nThis MR fixes links for inspect_message execution dashboards by making their ids unique. \n\nSee merge request dfinity-lab/public/ic!15975"
      },
      {
        "id": "0139ef566c5ba252f73a167e385d557ac2b59099",
        "date": "2023-11-08T16:34:53Z",
        "message": "fix: make inspect_message execution dashboard ids unique"
      },
      {
        "id": "1652f8115e544bb3fe77d7cd18246529f3075cc9",
        "date": "2023-11-06T15:36:28Z",
        "message": "Merge branch 'mraszyk/farm-execution-dashboards' into 'master'\n\nchore: sync execution dashboards with k8s repository\n\nThis MR syncs execution dashboards in Farm-based system tests/testnets with the dfinity/k8s repository sourcing the mainnet dashboards. \n\nSee merge request dfinity-lab/public/ic!15906"
      },
      {
        "id": "f0c9e651aabf508fa252b3ead4d3dd3bdf69412e",
        "date": "2023-11-06T14:48:20Z",
        "message": "chore: sync execution dashboards with k8s repository"
      },
      {
        "id": "c2394009e0a01eba100c24226d32813d7a44a777",
        "date": "2023-11-03T22:33:28Z",
        "message": "Merge branch 'mraszyk/multi-subnet-state-machine-playground' into 'master'\n\nfeat: Support for multi-subnet testing using multiple StateMachines\n\nThis MR enables multi-subnet testing using multiple `StateMachine`s - one `StateMachine` per subnet. In more detail, the following changes are made:\n- extending the mocked registry for `StateMachine` with multiple subnets\n- instantiating `IngressFilter`, `IngressManager`, `XNetPayloadBuilderImpl`, and `PayloadBuilderImpl` in `StateMachine`\n- adding new function `execute_round` to `StateMachine` to execute a round on a subnet represented by a given `StateMachine` with a payload assembled with mainnet-like limits and consisting of ingress messages and xnet messages pulled from all subnets\n- adding new function `submit_ingress_as` to `StateMachine` to submit an ingress message for asynchronous execution in rounds triggered by calling `execute_round`\n- adding new function `build_with_subnets` to `StateMachineBuilder` to build a `StateMachine` for multi-subnet testing\n- adding an integration test demonstrating multi-subnet testing with two universal canisters deployed to two different subnets and calling each other \n\nSee merge request dfinity-lab/public/ic!15376"
      },
      {
        "id": "a5ba77bb8a509c43c7ef3a626f24a4bcdae4c38a",
        "date": "2023-11-03T22:33:27Z",
        "message": "feat: Support for multi-subnet testing using multiple StateMachines"
      },
      {
        "id": "74509d70f94fec891d9c9d329c26f1a5e2b3257a",
        "date": "2023-11-03T10:08:36Z",
        "message": "Merge branch 'mraszyk/deterministic-xnet-payload-builder' into 'master'\n\nchore: enable seeded PRNG in XNetPayloadBuilderImpl\n\nThis MR enables a seeded PRNG in `XNetPayloadBuilderImpl` in addition to the default `thread_rng` so that the functions in `XNetPayloadBuilderImpl` can be made deterministic for the sake of pocketIC (pool refill task is still non-deterministic but a mock implementation will be used in pocketIC). \n\nSee merge request dfinity-lab/public/ic!15780"
      },
      {
        "id": "b362f070e1673d53069df4a58da5e96f3af78223",
        "date": "2023-11-03T10:08:36Z",
        "message": "chore: enable seeded PRNG in XNetPayloadBuilderImpl"
      },
      {
        "id": "9b6b1055af521c0f4682ebaa99a9a3bd4498a1ea",
        "date": "2023-10-31T10:56:30Z",
        "message": "Merge branch 'mraszyk/slice-pool-trait' into 'master'\n\nchore: introduce trait XNetSlicePool\n\nThis MR introduces a new trait `XNetSlicePool` and moves the field `slice_pool` from `XNetPayloadBuilderImpl` into this new trait.\n\nAs part of the pocketIC [feature](https://dfinity.atlassian.net/browse/IC-1538), the T&V team is working on local multi-subnet canister testing using one `StateMachine` per subnet and we'd like to reuse `XNetPayloadBuilderImpl` to conveniently assemble the xnet payloads for the individual `StateMachine`s.\n\nHowever, we can't really use the pinned implementation of `slice_pool` as we don't really want to fetch the remote streams over HTTP when testing locally. So this MR abstracts away the field `slice_pool` from `XNetPayloadBuilderImpl` into a new trait `XNetSlicePool` and provides an implementation `XNetSlicePoolImpl` matching the current implementation of `XNetPayloadBuilderImpl`.\n\nIn a follow-up MR, we'd provide a new implementation of the trait `XNetSlicePool`. \n\nSee merge request dfinity-lab/public/ic!15527"
      },
      {
        "id": "8dbcef6dc7aad4ad85a399a2716775d867e458e7",
        "date": "2023-10-31T10:56:30Z",
        "message": "chore: introduce trait XNetSlicePool"
      },
      {
        "id": "f79049334225c58c1466d7a836c0ba1712ed4f85",
        "date": "2023-10-24T09:33:21Z",
        "message": "Merge branch 'mraszyk/revert-hiding-root-key-in-status' into 'master'\n\nRevert \"fix: hide root key in status HTTP endpoint\"\n\nThis MR reverts [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15356) that touched the function `common::get_root_threshold_public_key` that is used at two places (missing on one of the two occurrences):\n\n* when serving the /api/v2/status endpoint (there the change from the rolled-back MR makes sense)\n* when fetching the subnet delegation from the NNS subnet (there the change from the rolled-back MR breaks the flow) \n\nSee merge request dfinity-lab/public/ic!15596"
      },
      {
        "id": "db8bfa4b88a0bd87b34f5f45bf099abd7631a537",
        "date": "2023-10-24T09:33:21Z",
        "message": "Revert \"fix: hide root key in status HTTP endpoint\""
      },
      {
        "id": "337fc4a3220bc6cad1bb5af5f095c36bfbf70fe1",
        "date": "2023-10-24T08:54:18Z",
        "message": "Merge branch 'mraszyk/consensus-time-trait' into 'master'\n\nchore: introduce trait ConsensusTime\n\nThis MR introduces a new trait `ConsensusTime` and moves the function `fn consensus_time` from the trait `ConsensusPoolCache` into this new trait. This way, we minimize the interface between `ConsensusPoolCache` and `IngressManager` to that single function `consensus_time` required by `IngressManager`. \n\nSee merge request dfinity-lab/public/ic!15516"
      },
      {
        "id": "8e195fe4e713c5153a754990be0fb0557de3d02e",
        "date": "2023-10-24T08:04:12Z",
        "message": "Merge branch 'mraszyk/delay-update-settings-ingress-cost' into 'master'\n\nfix: update conditions on delaying ingress induction cost for update_settings\n\nThis MR restricts the size of update_settings payloads for which the ingress induction cost charge is delayed. This is because the delay was introduced to allow changing settings of frozen canisters and small payloads are sufficient for this use case. \n\nSee merge request dfinity-lab/public/ic!15484"
      },
      {
        "id": "a98a1a22e23f1cf17ee5cc89a18d158442224e77",
        "date": "2023-10-24T08:04:11Z",
        "message": "fix: update conditions on delaying ingress induction cost for update_settings"
      },
      {
        "id": "f2e1a8d4471ab9082f01fb72f1caca80aaf76a16",
        "date": "2023-10-22T17:23:44Z",
        "message": "Merge branch 'mraszyk/charge-ingress-cost-for-stopped-canisters' into 'master'\n\nfix: ingress induction cost for not running canisters should be charged in message scheduling code\n\nThis MR places the check if the receiver of an ingress message is Running after charging the ingress induction cost because the ingress induction cost should particularly cover that the ingress message was processed by consensus and this is independent of whether the canister is Running or not.\n\nIn practice, the HTTP handler and every block validator would reject messages to canisters that are not Running, but due to race conditions it is still possible that an ingress message to a canister that is not Running makes it into a block. In that case, this message should be appropriately charged for and this is what this MR ensures. \n\nSee merge request dfinity-lab/public/ic!15483"
      },
      {
        "id": "a73d14296e4302754fdedf0eed2e6b043af7a88b",
        "date": "2023-10-19T15:53:48Z",
        "message": "chore: introduce trait ConsensusTime"
      },
      {
        "id": "4e08317a4b6669a0b4e87395639f872d91c72938",
        "date": "2023-10-19T06:10:22Z",
        "message": "fix: ingress induction cost for not running canisters should be charged in message scheduling code"
      },
      {
        "id": "a4b648d02521d901dda0c640371b0ee345108d56",
        "date": "2023-10-19T05:33:50Z",
        "message": "Merge branch 'mraszyk/validate-ingress-to-not-running-canisters' into 'master'\n\nfix: IngressManager::validate_ingress checks if target canister is running\n\nThis MR adds a check that a canister receiving an ingress message is Running before the ingress message is successfully validated. This is because update calls to Stopping/Stopped canisters are rejected anyway and thus it doesn't make sense to accept such an ingress message.\n\nIn practice, the HTTP handler of the replica receiving the ingress message would reject such an ingress message with a user-friendly error message and thus the ingress message won't even make it to the unvalidated artifact pool. Hence, this MR will only be effective in the following two cases:\n- a malicious node does not perform all HTTP handler checks; or\n- the condition from this MR is evaluated on a different state height than the condition in the HTTP handler.\n\nIn both cases, the ingress message won't appear in the ingress history and the user client will time out polling for the ingress message.\n\nInterface Specification MR: https://github.com/dfinity/interface-spec/pull/233\n\nNote on an NNS integration test change: the test checks that a canister is `Stopped` by sending an ingress message to the unvalidated artifact pool of the replica (bypassing the HTTP handler). However, the ingress message can never be moved to the validated artifact pool and inducted since it doesn't pass validation (which now also checks that the canister is `Running`). Consequently, the ingress message never appears in the ingress history and polling for it times out. This MR fixes the failing test by making a `canister_status` call and asserting that the canister is indeed `Stopped`. \n\nSee merge request dfinity-lab/public/ic!15335"
      },
      {
        "id": "64aaa46d87d98d047cd935a2c2eb4634f6b27043",
        "date": "2023-10-19T05:33:50Z",
        "message": "fix: IngressManager::validate_ingress checks if target canister is running"
      },
      {
        "id": "45dee0748d41e2514ef31572d7fd123808704f43",
        "date": "2023-10-17T10:46:25Z",
        "message": "Merge branch 'mraszyk/synchronous-ingress-filter' into 'master'\n\nchore: introduce IngressFilter trait\n\nThis MR introduces an `IngressFilter` trait implementing the ingress filter functionality with `Send + Sync`.\n\nThe existing `IngressFilterService` can't be used in objects that need to implement `Send + Sync` and thus this MR provides a synchronous alternative. \n\nSee merge request dfinity-lab/public/ic!15413"
      },
      {
        "id": "c94c1cc52cca0acfcd8ae32b8d0f675007108660",
        "date": "2023-10-17T10:46:25Z",
        "message": "chore: introduce IngressFilter trait"
      },
      {
        "id": "45b78b088e60cc93b54d2089246dd99763749b32",
        "date": "2023-10-17T07:46:34Z",
        "message": "Merge branch 'mraszyk/bump-large-testnet-resources' into 'master'\n\nchore: bump large testnet resources\n\nThis MR updates increases the available disk space on the deployed IC nodes in the large testnet. \n\nSee merge request dfinity-lab/public/ic!15396"
      },
      {
        "id": "6d632bf1011cc45d63930422b2f9954d1f6735b6",
        "date": "2023-10-17T07:46:34Z",
        "message": "chore: bump large testnet resources"
      },
      {
        "id": "5a98cf0b1d8e3088be686e2a78935358338060a8",
        "date": "2023-10-13T12:09:13Z",
        "message": "Merge branch 'mraszyk/hide-root-key-in-status' into 'master'\n\nfix: hide root key in status HTTP endpoint\n\nIt is insecure to fetch the NNS public key from a single replica's HTTP handler and thus this flow should only be used in tests against development IC instances. Hence, this MR hides the NNS public key in the HTTP handler's response for the IC mainnet replicas. \n\nSee merge request dfinity-lab/public/ic!15356"
      },
      {
        "id": "1b9994c2c83aecdc9457852d43e8029ffe04556a",
        "date": "2023-10-12T08:40:54Z",
        "message": "fix: hide root key in status HTTP endpoint"
      },
      {
        "id": "beb5c0482365efc576202bdfd04675e532492d19",
        "date": "2023-10-12T08:21:10Z",
        "message": "Merge branch 'mraszyk/refactor-get-msg-limit' into 'master'\n\nchore: move fn get_msg_limit out of XNetPayloadBuilderImpl\n\nThis MR moves the function `get_msg_limit` out of `XNetPayloadBuilderImpl` so that it can be used when manually creating xnet payloads for tests using `StateMachine`. \n\nSee merge request dfinity-lab/public/ic!15351"
      },
      {
        "id": "516e8900733a14b886b65f4450cd91fbc2df2758",
        "date": "2023-10-12T06:57:53Z",
        "message": "chore: move fn get_msg_limit out of XNetPayloadBuilderImpl"
      },
      {
        "id": "e38ba88abdb7e7c57ea4c4dea03831eafec9ed07",
        "date": "2023-10-11T10:09:25Z",
        "message": "Merge branch 'mraszyk/large-testnet-config' into 'master'\n\nfix: update large testnet topology\n\nThis MR updates the topology of the large Farm testnet. The reason for the update is that some consensus steps are skipped on 2-node subnets which have no fault tolerance (f=0). Hence, it makes sense to have a few 4-node subnets (f=1) and 1-node subnets (f=0). \n\nSee merge request dfinity-lab/public/ic!15328"
      },
      {
        "id": "8e509d8c468619630c2808732ce815a29cefb7c4",
        "date": "2023-10-11T10:09:24Z",
        "message": "fix: update large testnet topology"
      },
      {
        "id": "57bbaee709834474b8a51a083d47ab1c4a210512",
        "date": "2023-10-10T14:54:23Z",
        "message": "Merge branch 'mraszyk/should-accept-ingress-on-not-running' into 'master'\n\ningress messages to canisters that are not running are rejected before consensus\n\nThis MR adds a check that a canister receiving an ingress message is Running before the ingress message is accepted into the ingress pool. This is because update calls to Stopping/Stopped canisters are rejected anyway and thus it doesn't make sense to accept such an ingress message.\n\nInterface Specification MR: https://github.com/dfinity/interface-spec/pull/233 \n\nSee merge request dfinity-lab/public/ic!15241"
      },
      {
        "id": "b9a906d761d4533bfdec0948179d83a46795b66c",
        "date": "2023-10-10T14:54:22Z",
        "message": "ingress messages to canisters that are not running are rejected before consensus"
      },
      {
        "id": "185c7e53613270254191f047157eced0faa4fb95",
        "date": "2023-10-06T16:25:11Z",
        "message": "Merge branch 'mraszyk/candid-0.9.9' into 'master'\n\nchore: bump candid to 0.9.9\n\nBump candid to the latest release 0.9.9. \n\nSee merge request dfinity-lab/public/ic!15212"
      },
      {
        "id": "d30a0e13fc8a78e3d847988156080b56719a062d",
        "date": "2023-10-06T16:25:10Z",
        "message": "chore: bump candid to 0.9.9"
      },
      {
        "id": "374de6a6a3d546b9e70cade14896837016855195",
        "date": "2023-10-06T13:31:07Z",
        "message": "Merge branch 'mraszyk/inspect-message-metrics' into 'master'\n\n[RUN-794] chore: add metrics for canister_inspect message\n\nThis MR adds metrics for `canister_inspect_message` WASM executions.\n\nThe number of all WASM executions of `canister_inspect_message` and, for every WASM execution of `canister_inspect_message`, its duration and consumed instructions are tracked in new `IngressFilterMetrics` and exposed on Farm testnet dashboards. \n\nSee merge request dfinity-lab/public/ic!15254"
      },
      {
        "id": "e4ec45b691edc132a2106d56d3f6660e1860dfd3",
        "date": "2023-10-06T13:31:07Z",
        "message": "[RUN-794] chore: add metrics for canister_inspect message"
      },
      {
        "id": "aa8f8e1ad41368148417ae8b9a23b049d699a789",
        "date": "2023-09-25T11:06:40Z",
        "message": "Merge branch 'mraszyk/stop-canister-reject-code' into 'master'\n\nfix: set stop_canister reject code to CanisterError\n\nThis MR sets the reject code to `CanisterError` (5) for all calls to `stop_canister` for consistency reasons.\n\nBackground: all pending `stop_canister` calls are rejected after calling `start_canister`:\n- ingress calls to `stop_canister` are rejected with error code `CanisterStoppingCancelled` corresponding to `CanisterError` reject code (5),\n- inter-canister calls to `stop_canister` are rejected with reject code `CanisterReject` (4).\n\nThis MR sets the reject code to `CanisterError` (5) for both ingress calls and inter-canister calls so that the reject codes are consistent. The choice of `CanisterError` instead of `CanisterReject` makes sense because `CanisterReject` (4) is characterized as an \"explicit reject by the canister\" in the Interface Specification. \n\nSee merge request dfinity-lab/public/ic!14969"
      },
      {
        "id": "0f60c2df0348f09ebf855990b4ca7ce545f7b5b1",
        "date": "2023-09-25T11:06:40Z",
        "message": "fix: set stop_canister reject code to CanisterError"
      },
      {
        "id": "7832fb0121e347bada11dac90be1fc9dad20604a",
        "date": "2023-09-13T18:33:25Z",
        "message": "Merge branch 'mraszyk/nns-dapp-on-large-testnet' into 'master'\n\nadd nns-dapp to the large testnet\n\nThis MR install the NNS frontend dapp and II onto the large testnet. \n\nSee merge request dfinity-lab/public/ic!14780"
      },
      {
        "id": "581de8adbd297d1e84aa7deea7cf564f39fd11a5",
        "date": "2023-09-13T18:33:25Z",
        "message": "add nns-dapp to the large testnet"
      },
      {
        "id": "68e51ae3fed787d54bc2f26803d9c8de7ddf0fca",
        "date": "2023-09-07T13:59:59Z",
        "message": "Merge branch 'mraszyk/split-up-spec-compliance' into 'master'\n\nspeed up spec_compliance tests by splitting out a group of test scenarios into a new system test\n\n \n\nSee merge request dfinity-lab/public/ic!14651"
      },
      {
        "id": "0360fb3d416a1db4f40c4c46f2c33188463582d5",
        "date": "2023-09-07T13:59:58Z",
        "message": "speed up spec_compliance tests by splitting out a group of test scenarios into a new system test"
      },
      {
        "id": "ebddcb216e42d4d7ffec21dcd6c39ffeaa2d925b",
        "date": "2023-09-06T18:01:52Z",
        "message": "Merge branch 'mraszyk/speed-up-spec-compliance' into 'master'\n\nspeed up spec compliance tests\n\nThis MR speeds up spec_compliance tests by performing the following adjustments:\n- the httpbin server starts after BN (BN takes a lot of time to sync with NNS) to speed up the setup function\n- the replica nodes use 16 vCPUs instead of the default 6 vCPUs\n- the universal canister WASM is gzip compressed\n- the canister history test exercising many changes performs less changes and only checks the history at the end of the test\n\nBenchmark of `ict t //rs/tests/testing_verification:spec_compliance_system_subnet_test`:\n```\n======================= Summary =======================\nTask setup  PASSED  in 150.76s   -- Exited with code 0.\nTask test   PASSED  in 254.55s   -- Exited with code 0.\n=======================================================\n\n2023-09-06 14:31:23.753 INFO[rs/tests/src/driver/group.rs:939:9] Deleting farm group.\n2023-09-06 14:31:23.753 DEBG[rs/tests/src/driver/context.rs:208:9] ProcessContext.new\n2023-09-06 14:31:23.753 DEBG[rs/tests/src/driver/context.rs:110:9] Ensuring directory \"./setup\" exists ...\nTarget //rs/tests/testing_verification:spec_compliance_system_subnet_test up-to-date:\n  bazel-bin/rs/tests/testing_verification/spec_compliance_system_subnet_test/run-test.sh\nINFO: Elapsed time: 611.584s, Critical Path: 610.51s\nINFO: 8 processes: 8 linux-sandbox.\n//rs/tests/testing_verification:spec_compliance_system_subnet_test       PASSED in 509.6s\n``` \n\nSee merge request dfinity-lab/public/ic!14626"
      },
      {
        "id": "0abec2c88391018a54401f94d670c30de7f0e16f",
        "date": "2023-09-06T18:01:51Z",
        "message": "speed up spec compliance tests"
      },
      {
        "id": "a033d30216116523dc495a4d0f3976b5aa47c2c8",
        "date": "2023-09-06T10:48:24Z",
        "message": "Merge branch 'mraszyk/speed-up-progress-check' into 'master'\n\nspeed up install_nns_with_customizations_and_check_progress in system tests\n\nThere's no need to wait for 10s between retrying read_state requests to check system healthiness after installing NNS canisters. Hence, this PR reduces the backoff to 2s. \n\nSee merge request dfinity-lab/public/ic!14618"
      },
      {
        "id": "44e90a73fa51db19f39f1b8f35598725ef516a44",
        "date": "2023-09-06T10:48:24Z",
        "message": "speed up install_nns_with_customizations_and_check_progress in system tests"
      },
      {
        "id": "33f44bb74b2db6414cdf7ed126d4a0da34697f83",
        "date": "2023-09-06T09:48:28Z",
        "message": "parameterize number of app subnets and BNs on large testnet"
      },
      {
        "id": "7421347c60dd828b12fdcf1687d259b62d9fe1c3",
        "date": "2023-08-23T17:54:29Z",
        "message": "Merge branch 'mraszyk/nns-canisters-in-spec-compliance-tests' into 'master'\n\ninstall NNS canisters in spec compliance tests with BN\n\nThis MR moves the \"NNS canisters\" tests from `spec_compliance_{system,application}_subnet_test` to `spec_compliance_system_api_{system,application}_subnet_test` so that\n- `spec_compliance_{system,application}_subnet_test` can install the NNS canisters as part of the setup function so that a BN can use them to fetch the registry\n- `spec_compliance_system_api_{system,application}_subnet_test` run the \"NNS canisters\" tests by reaching out to a node of the test subnet directly (instead of reaching out to a BN).\n\nThe motivation for the change is the API BN code cannot easily fetch the registry from a local directory and thus requires NNS canisters to be installed. However, the \"NNS canisters\" tests rely on the assumption that the NNS subnet starts off without any canisters deployed.\n\nFinally, this MR optimizes spec_compliance system_api tests by not installing the httpbin UVM that is not needed in those tests. \n\nSee merge request dfinity-lab/public/ic!14359"
      },
      {
        "id": "f1b823a6f51e98686174498499e77b244d21737a",
        "date": "2023-08-23T17:54:28Z",
        "message": "install NNS canisters in spec compliance tests with BN"
      },
      {
        "id": "31a6419f2f3fb313da36686d2fabda984a87f914",
        "date": "2023-08-22T16:20:13Z",
        "message": "Merge branch 'mraszyk/whitelist-read-state-nodeid-paths' into 'master'\n\nwhitelist paths ending with node_id in read_state requests\n\nThis MR is a follow up to a recent [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14035) whitelist node paths in read_state requests. Analogously to `/request_status/<request_id>` and `/subnet/<subnet_id>` we should also allow the path `/subnet/<subnet_id>/node/<node_id>` which matches all values for a given node ID. \n\nSee merge request dfinity-lab/public/ic!14313"
      },
      {
        "id": "ad0b05bde421946e659d13b96cffc743ea0a0713",
        "date": "2023-08-22T15:02:25Z",
        "message": "Merge branch 'mraszyk/update-testnet-docs' into 'master'\n\nupdate doc comments of dynamic testnets\n\nThis MR updates the doc comments of dynamic testnets to the new ict output format. It also updates the topology and resource information. \n\nSee merge request dfinity-lab/public/ic!14312"
      },
      {
        "id": "7e312e295d7fb3d57c6fff4619ae9ea5ee0d97b6",
        "date": "2023-08-22T12:08:41Z",
        "message": "whitelist paths ending with node_id in read_state requests"
      },
      {
        "id": "9ce4d4c7c7344215116e218f35a9a8a29e30238b",
        "date": "2023-08-22T12:03:52Z",
        "message": "update doc comments of dynamic testnets"
      },
      {
        "id": "e532d79f20cd6f0670879ae1f7413e737d58590f",
        "date": "2023-08-21T13:23:33Z",
        "message": "Merge branch 'mraszyk/large-testnet' into 'master'\n\nAdd a large dynamic testnet to the available testnet configurations\n\nThis MR adds a new dynamic testnet to the available testnet configurations. This testnet contains one 2-node System and two 2-node Application subnets, single boundary node, and a p8s (with grafana) VM. All replica nodes use the following resources: 64 vCPUs, 480GiB of RAM, and 500 GiB disk. This configuration makes the newly added testnet closer to the production environment compared to the other testnet configurations. \n\nSee merge request dfinity-lab/public/ic!14275"
      },
      {
        "id": "154f3f7d105a4e1948aa84e9c3cbb909858bec08",
        "date": "2023-08-21T13:23:32Z",
        "message": "Add a large dynamic testnet to the available testnet configurations"
      },
      {
        "id": "b66c5acafbb9eea2ad98ca12c2844be5b41124c0",
        "date": "2023-08-21T06:02:20Z",
        "message": "Merge branch 'mraszyk/spec-compliance-api-tests' into 'master'\n\nreenable msg_caller spec_compliance tests\n\nNow that the spec_compliance tests have been migrated from dfinity/ic-hs repository to this repository, we can easily reenable the msg_caller tests. \n\nSee merge request dfinity-lab/public/ic!14269"
      },
      {
        "id": "9c78ac9bf02f925d96f507d3508a36e851d1b425",
        "date": "2023-08-20T11:13:29Z",
        "message": "reenable msg_caller spec_compliance tests"
      },
      {
        "id": "b9ede02682d6cc558212eca00a97e024b7af963d",
        "date": "2023-08-15T20:08:14Z",
        "message": "Move spec_compliance tests from /rs to /hs"
      },
      {
        "id": "e3bf678c478cd68e4917c4e4887a7747baf148f7",
        "date": "2023-08-15T08:38:56Z",
        "message": "Merge branch 'mraszyk/drop-controller-from-state-tree' into 'master'\n\nintroduce new CertificationVersion::V13 dropping deprecated path /canister/<canister_id>/controller\n\nThe HTTP handler now (see [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14073)) disallows requesting the deprecated path `/canister/<canister_id>/controller` so this MR introduces a certification version of the state tree removing the deprecated path from the state tree. \n\nSee merge request dfinity-lab/public/ic!14076"
      },
      {
        "id": "7eb95f89cb9ee6ce3e5fb5ec2727bc55eeff8546",
        "date": "2023-08-10T12:21:10Z",
        "message": "Merge branch 'mraszyk/read-state-subnet-subnet-id' into 'master'\n\nallow requesting /subnet/<subnet_id> path in HTTP read_state requests\n\nThis MR allows requesting the path `/subnet/<subnet_id>` in HTTP `read_state` requests. This allows clients to retrieve all paths relevant for a particular subnet and is consistent with requesting the path `/request_status/<request_id>` to retrieve all paths relevant for a particular request. At the moment, clients need to request the path `/subnet` and get all paths relevant for *all* subnets (which takes unnecessary bandwidth) or list the paths they are after individually. \n\nSee merge request dfinity-lab/public/ic!14084"
      },
      {
        "id": "dbe681e58ac5f75c9807ab306479a7314db17dec",
        "date": "2023-08-10T10:05:00Z",
        "message": "allow requesting /subnet/<subnet_id> path in HTTP read_state requests"
      },
      {
        "id": "0e79cbf3c221996ec611e472958c291a83459060",
        "date": "2023-08-10T07:52:27Z",
        "message": "introduce new CertificationVersion::V13 dropping deprecated path /canister/<canister_id>/controller"
      },
      {
        "id": "e720c13a65313ffdcbabfe04f4283911d425112b",
        "date": "2023-08-09T19:26:57Z",
        "message": "Merge branch 'mraszyk/deprecate-controller-in-read-state' into 'master'\n\ndisallow path containing deprecated controller data in HTTP read_state interface\n\nThis MR makes requesting the path `/canister/<canister_id>/controller` disallowed by the HTTP handler serving the public `read_state` endpoint. The motivation is that the path `/canister/<canister_id>/controller` is long deprecated according to the Interface Specification and the metrics reveal that it is only being used marginally. \n\nSee merge request dfinity-lab/public/ic!14073"
      },
      {
        "id": "b938d6549ec455f8b89325af4728d945339cdce5",
        "date": "2023-08-09T19:26:57Z",
        "message": "disallow path containing deprecated controller data in HTTP read_state interface"
      },
      {
        "id": "23bf3a8347469c1b0f5143deb921fbd62ae753d5",
        "date": "2023-08-09T16:38:01Z",
        "message": "add back retry loop restarting BN in spec_compliance tests"
      },
      {
        "id": "d52c0f40feee648442a3b737492f0d24d362e85d",
        "date": "2023-08-09T16:05:10Z",
        "message": "Merge branch 'mraszyk/ic-ref-test' into 'master'\n\nmigrate tests from dfinity/ic-hs to dfinity/ic\n\nThis MR migrates and bazelifies the compliance tests from the `dfinity/ic-hs` repository to this repository. \n\nSee merge request dfinity-lab/public/ic!13900"
      },
      {
        "id": "7bff0de74178500ccbdfde8aac8070797582776f",
        "date": "2023-08-09T16:05:10Z",
        "message": "migrate tests from dfinity/ic-hs to dfinity/ic"
      },
      {
        "id": "0412c60a4b5b3f05b7c8522c26504fbc68b3f58d",
        "date": "2023-08-04T08:41:49Z",
        "message": "Merge branch 'mraszyk/fix-bn-retry-logic' into 'master'\n\nfix BN healthiness retry logic in spec_compliance tests\n\nThe retry logic for BN healthiness in spec_compliance tests was unsound because we wouldn't restart the control-plane.service if the healthiness check fails with an `Err(...)` (e.g., due to HTTP 503 status code) instead of returning `Ok(false)` to report unhealthy. \n\nSee merge request dfinity-lab/public/ic!13960"
      },
      {
        "id": "d52cc1df35b6bb9809c94ec6e49b98f5fbe8cb18",
        "date": "2023-08-04T08:41:48Z",
        "message": "fix BN healthiness retry logic in spec_compliance tests"
      },
      {
        "id": "e4ff4a5334ed1c6a8abf97e5d00a79efd90ec076",
        "date": "2023-08-03T12:31:21Z",
        "message": "Merge branch 'mraszyk/reject-reserved-exports' into 'master'\n\nEXC-350: Canister modules exporting reserved functions do not validate\n\nThis MR makes canister modules not validate if they export functions whose names start with the prefix `canister_` and these functions are not whitelisted.\n\nNote. According to the logs, it's safe to roll out this MR. \n\nSee merge request dfinity-lab/public/ic!13517"
      },
      {
        "id": "e56f3b2c3d0a09712e592bbce878798e0b8aa72b",
        "date": "2023-08-03T12:31:20Z",
        "message": "EXC-350: Canister modules exporting reserved functions do not validate"
      }
    ],
    "email": "martin.raszyk@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 81,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 39,
    "fixes": 10,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "6d3b5dc060f8a542087a32573fc56dd68ce40832",
        "date": "2023-11-22T15:28:23Z",
        "message": "feat: add cycle scaling to PocketIC"
      },
      {
        "id": "cd66196224c75b826eb0ea50e48eb8053e9376c8",
        "date": "2023-11-21T09:17:23Z",
        "message": "fix: do not print canister cycle balance in out of cycles error messages"
      },
      {
        "id": "f789586a3502833ed45a1ea78735a74972cdc4c8",
        "date": "2023-11-13T09:01:04Z",
        "message": "chore: sync ic.did file with interface-spec repository"
      },
      {
        "id": "8cc48ace1cd650f6fb44f571dba90042e4333ede",
        "date": "2023-11-10T12:17:31Z",
        "message": "feat: extend universal canister API to facilitate testing inter-canister calls with large arguments"
      },
      {
        "id": "ec357714af1d4c647814f435ab3ec3f9d916599e",
        "date": "2023-11-09T12:40:43Z",
        "message": "feat: update inspect_message instruction limit"
      },
      {
        "id": "0139ef566c5ba252f73a167e385d557ac2b59099",
        "date": "2023-11-08T16:34:53Z",
        "message": "fix: make inspect_message execution dashboard ids unique"
      },
      {
        "id": "f0c9e651aabf508fa252b3ead4d3dd3bdf69412e",
        "date": "2023-11-06T14:48:20Z",
        "message": "chore: sync execution dashboards with k8s repository"
      },
      {
        "id": "a5ba77bb8a509c43c7ef3a626f24a4bcdae4c38a",
        "date": "2023-11-03T22:33:27Z",
        "message": "feat: Support for multi-subnet testing using multiple StateMachines"
      },
      {
        "id": "b362f070e1673d53069df4a58da5e96f3af78223",
        "date": "2023-11-03T10:08:36Z",
        "message": "chore: enable seeded PRNG in XNetPayloadBuilderImpl"
      },
      {
        "id": "8dbcef6dc7aad4ad85a399a2716775d867e458e7",
        "date": "2023-10-31T10:56:30Z",
        "message": "chore: introduce trait XNetSlicePool"
      },
      {
        "id": "db8bfa4b88a0bd87b34f5f45bf099abd7631a537",
        "date": "2023-10-24T09:33:21Z",
        "message": "Revert \"fix: hide root key in status HTTP endpoint\""
      },
      {
        "id": "a98a1a22e23f1cf17ee5cc89a18d158442224e77",
        "date": "2023-10-24T08:04:11Z",
        "message": "fix: update conditions on delaying ingress induction cost for update_settings"
      },
      {
        "id": "a73d14296e4302754fdedf0eed2e6b043af7a88b",
        "date": "2023-10-19T15:53:48Z",
        "message": "chore: introduce trait ConsensusTime"
      },
      {
        "id": "4e08317a4b6669a0b4e87395639f872d91c72938",
        "date": "2023-10-19T06:10:22Z",
        "message": "fix: ingress induction cost for not running canisters should be charged in message scheduling code"
      },
      {
        "id": "64aaa46d87d98d047cd935a2c2eb4634f6b27043",
        "date": "2023-10-19T05:33:50Z",
        "message": "fix: IngressManager::validate_ingress checks if target canister is running"
      },
      {
        "id": "c94c1cc52cca0acfcd8ae32b8d0f675007108660",
        "date": "2023-10-17T10:46:25Z",
        "message": "chore: introduce IngressFilter trait"
      },
      {
        "id": "6d632bf1011cc45d63930422b2f9954d1f6735b6",
        "date": "2023-10-17T07:46:34Z",
        "message": "chore: bump large testnet resources"
      },
      {
        "id": "1b9994c2c83aecdc9457852d43e8029ffe04556a",
        "date": "2023-10-12T08:40:54Z",
        "message": "fix: hide root key in status HTTP endpoint"
      },
      {
        "id": "516e8900733a14b886b65f4450cd91fbc2df2758",
        "date": "2023-10-12T06:57:53Z",
        "message": "chore: move fn get_msg_limit out of XNetPayloadBuilderImpl"
      },
      {
        "id": "8e509d8c468619630c2808732ce815a29cefb7c4",
        "date": "2023-10-11T10:09:24Z",
        "message": "fix: update large testnet topology"
      },
      {
        "id": "b9a906d761d4533bfdec0948179d83a46795b66c",
        "date": "2023-10-10T14:54:22Z",
        "message": "ingress messages to canisters that are not running are rejected before consensus"
      },
      {
        "id": "d30a0e13fc8a78e3d847988156080b56719a062d",
        "date": "2023-10-06T16:25:10Z",
        "message": "chore: bump candid to 0.9.9"
      },
      {
        "id": "e4ec45b691edc132a2106d56d3f6660e1860dfd3",
        "date": "2023-10-06T13:31:07Z",
        "message": "[RUN-794] chore: add metrics for canister_inspect message"
      },
      {
        "id": "0f60c2df0348f09ebf855990b4ca7ce545f7b5b1",
        "date": "2023-09-25T11:06:40Z",
        "message": "fix: set stop_canister reject code to CanisterError"
      },
      {
        "id": "581de8adbd297d1e84aa7deea7cf564f39fd11a5",
        "date": "2023-09-13T18:33:25Z",
        "message": "add nns-dapp to the large testnet"
      },
      {
        "id": "0360fb3d416a1db4f40c4c46f2c33188463582d5",
        "date": "2023-09-07T13:59:58Z",
        "message": "speed up spec_compliance tests by splitting out a group of test scenarios into a new system test"
      },
      {
        "id": "0abec2c88391018a54401f94d670c30de7f0e16f",
        "date": "2023-09-06T18:01:51Z",
        "message": "speed up spec compliance tests"
      },
      {
        "id": "44e90a73fa51db19f39f1b8f35598725ef516a44",
        "date": "2023-09-06T10:48:24Z",
        "message": "speed up install_nns_with_customizations_and_check_progress in system tests"
      },
      {
        "id": "33f44bb74b2db6414cdf7ed126d4a0da34697f83",
        "date": "2023-09-06T09:48:28Z",
        "message": "parameterize number of app subnets and BNs on large testnet"
      },
      {
        "id": "f1b823a6f51e98686174498499e77b244d21737a",
        "date": "2023-08-23T17:54:28Z",
        "message": "install NNS canisters in spec compliance tests with BN"
      },
      {
        "id": "7e312e295d7fb3d57c6fff4619ae9ea5ee0d97b6",
        "date": "2023-08-22T12:08:41Z",
        "message": "whitelist paths ending with node_id in read_state requests"
      },
      {
        "id": "9ce4d4c7c7344215116e218f35a9a8a29e30238b",
        "date": "2023-08-22T12:03:52Z",
        "message": "update doc comments of dynamic testnets"
      },
      {
        "id": "154f3f7d105a4e1948aa84e9c3cbb909858bec08",
        "date": "2023-08-21T13:23:32Z",
        "message": "Add a large dynamic testnet to the available testnet configurations"
      },
      {
        "id": "9c78ac9bf02f925d96f507d3508a36e851d1b425",
        "date": "2023-08-20T11:13:29Z",
        "message": "reenable msg_caller spec_compliance tests"
      },
      {
        "id": "b9ede02682d6cc558212eca00a97e024b7af963d",
        "date": "2023-08-15T20:08:14Z",
        "message": "Move spec_compliance tests from /rs to /hs"
      },
      {
        "id": "dbe681e58ac5f75c9807ab306479a7314db17dec",
        "date": "2023-08-10T10:05:00Z",
        "message": "allow requesting /subnet/<subnet_id> path in HTTP read_state requests"
      },
      {
        "id": "0e79cbf3c221996ec611e472958c291a83459060",
        "date": "2023-08-10T07:52:27Z",
        "message": "introduce new CertificationVersion::V13 dropping deprecated path /canister/<canister_id>/controller"
      },
      {
        "id": "b938d6549ec455f8b89325af4728d945339cdce5",
        "date": "2023-08-09T19:26:57Z",
        "message": "disallow path containing deprecated controller data in HTTP read_state interface"
      },
      {
        "id": "23bf3a8347469c1b0f5143deb921fbd62ae753d5",
        "date": "2023-08-09T16:38:01Z",
        "message": "add back retry loop restarting BN in spec_compliance tests"
      },
      {
        "id": "7bff0de74178500ccbdfde8aac8070797582776f",
        "date": "2023-08-09T16:05:10Z",
        "message": "migrate tests from dfinity/ic-hs to dfinity/ic"
      },
      {
        "id": "d52cc1df35b6bb9809c94ec6e49b98f5fbe8cb18",
        "date": "2023-08-04T08:41:48Z",
        "message": "fix BN healthiness retry logic in spec_compliance tests"
      },
      {
        "id": "e56f3b2c3d0a09712e592bbce878798e0b8aa72b",
        "date": "2023-08-03T12:31:20Z",
        "message": "EXC-350: Canister modules exporting reserved functions do not validate"
      }
    ],
    "line_additions": 16397,
    "line_deletions": 1199,
    "lines_effected_total": 17596,
    "rel_comm_add": 28,
    "rel_comm_del": 21,
    "rel_comm_total": 31
  },
  {
    "login": "dfinity-berestovskyy",
    "id": 91958447,
    "totalContributions": 291,
    "github": "https://github.com/dfinity-berestovskyy",
    "commits": [
      {
        "id": "ab116d1cd7fa7d52e700d0c7d164d422485734c0",
        "date": "2023-11-15T18:30:08Z",
        "message": "Merge branch 'andriy/run-814-system-subnets-new-intrumentation' into 'master'\n\nfeat: RUN-814: Enable new instrumentation on system subnets\n\nThe new Wasm instrumentation has been enabled for a month+ on all the subnet types, but not on system subnets. So far so good.\n\nThis MR enables it for all the subnets, including the system subnets.\n\nCloses RUN-814 \n\nCloses RUN-814\n\nSee merge request dfinity-lab/public/ic!16085"
      },
      {
        "id": "b15f32e4ad0163a21f8237b2a948ea3fe8499d04",
        "date": "2023-11-15T18:30:08Z",
        "message": "feat: RUN-814: Enable new instrumentation on system subnets"
      },
      {
        "id": "63d211e115651c818510b28dfeb32e9e7245b801",
        "date": "2023-11-15T10:37:42Z",
        "message": "Merge branch 'andriy/fix-system-api-benchmarks-2' into 'master'\n\nchore: RUN-824: Run System API benchmarks on the latest master\n\nCloses RUN-824 \n\nCloses RUN-824\n\nSee merge request dfinity-lab/public/ic!16087"
      },
      {
        "id": "a3c00aa7ee6d5a91e26c07dc43bea216ce82ea64",
        "date": "2023-11-15T10:37:42Z",
        "message": "chore: RUN-824: Run System API benchmarks on the latest master"
      },
      {
        "id": "6b6b631be0173f49cbb9072b66f1827c0cac39b1",
        "date": "2023-11-08T09:36:03Z",
        "message": "Merge branch 'andriy/run-820-fix-convert-instructions' into 'master'\n\nfix: RUN-820: Fix `convert_instructions_to_cycles()`\n\nThis MR fixes the `convert_instructions_to_cycles()` which charges the canisters up to `ten_update_instructions_execution_fee - 1` cycles more for each execution. The function is defined as:\n\n```\npub fn convert_instructions_to_cycles(&self, num_instructions: NumInstructions) -> Cycles {\n    self.config.ten_update_instructions_execution_fee * (num_instructions.get() / 10)\n}\n```\n\ni.e. it divides by `10` first, and only then multiplies by `ten_update_instructions_execution_fee` (which is `4` at the moment).\n\nFor example, in the `test_subnet_size_execute_heartbeat_default_cost()` a `1` instruction execution incorrectly costs `4` cycles:\n\n1. First, we correctly convert `8B` cycles to `20B` instructions (`8B * 10 / 4 = 20B`).\n2. Then we execute the message and use just `1` instruction.\n3. Then in the `refund_unused_execution_cycles()` we’re incorrectly converting `19_999_999_999` instructions back to `7_999_999_996` cycles.\n\nBecause it’s an integer division, we get:\n\n```\n19_999_999_999 / 10 = 1_999_999_999\n1_999_999_999 * 4 = 7_999_999_996\n```\n\ni.e. `1` used instruction becomes `4` cycles used.\n\nThis MR fixes the `convert_instructions_to_cycles()` so it multiplies first and then divides:\n\n```\n19_999_999_999 * 4 = 79_999_999_996\n79_999_999_996 / 10 = 7_999_999_999\n```\n\ni.e. `1` used instruction is `1` cycle used.\n\nCloses RUN-820 \n\nCloses RUN-820\n\nSee merge request dfinity-lab/public/ic!15623"
      },
      {
        "id": "bf723243d86bb64d675301bd48ddbdfe010b908e",
        "date": "2023-11-08T09:36:03Z",
        "message": "fix: RUN-820: Fix `convert_instructions_to_cycles()`"
      },
      {
        "id": "65a03b4044dc215f4d82f4c510b6d0ea547c4a2c",
        "date": "2023-11-08T09:22:47Z",
        "message": "Merge branch 'andriy/run-724-remove-cpu-complexity' into 'master'\n\nchore: RUN-724: Cleanup CPU complexity\n\nAs the new Wasm instrumentation is enabled on all the application subnets, we don't need anymore the execution complexity limits.\n\nThis MR removes all the corresponding execution complexity types, functionality and tests. There are some minor import fixes on top.\n\nCloses RUN-724 \n\nCloses RUN-724\n\nSee merge request dfinity-lab/public/ic!15936"
      },
      {
        "id": "80859b8780549d86ae1af888c277270e880b64fb",
        "date": "2023-11-08T09:22:46Z",
        "message": "chore: RUN-724: Cleanup CPU complexity"
      },
      {
        "id": "074f6d16f1bc9012daabc3d1aa81b64ccd223659",
        "date": "2023-10-25T20:08:22Z",
        "message": "Merge branch 'andriy/run-785-charge-functions-loops' into 'master'\n\nfix: RUN-785: Set the weight of a Wasm function prologue to 1 instead of 0\n\nThis MR follows up on the `New WASM instrumentation` and partially addresses the recommendation of the security team to avoid 0-weight Wasm instructions.\n\nNote this change should not have any significant impact on the overall cycle consumption of canisters because the cost of a function call is dominated by the existing weights of the `call` instructions.\n\nCloses RUN-785 \n\nCloses RUN-785\n\nSee merge request dfinity-lab/public/ic!15592"
      },
      {
        "id": "488e99fb45a405b12eef2121729ac1d25bc8b00e",
        "date": "2023-10-25T20:08:22Z",
        "message": "fix: RUN-785: Set the weight of a Wasm function prologue to 1 instead of 0"
      },
      {
        "id": "0cb08ab5d2961c9086ea43cc457f5891ab58570b",
        "date": "2023-10-17T16:04:31Z",
        "message": "Merge branch 'andriy/run-588-fix-pages' into 'master'\n\nchore: RUN-588: Fix heap benches throughput\n\nThe `accessed_pages()` should return the number of accessed pages, but it returns the number of accessed bytes. For example, if the `step` is `1` (i.e. we read every byte), the function returns:\n\n```plaintext\npages_in_step = (1 + 4095) / 4096 // == 1;\nreturn 1GiB / 1 // == 1GiB, i.e. bytes, not pages\n```\n\nTo return the number of accessed pages, we should divide the total number of pages in 1GiB by the number of pages in step, i.e.:\n\n```plaintext\npages_in_step = (1 + 4095) / 4096 // == 1;\npages_in_1GiB = 1GiB / 4096;\nreturn pages_in_1GiB / pages_is_step; // == 256K pages\n```\n\nSo the fix is to divide the current return value by the page size, i.e. `4096`. \n\nSee merge request dfinity-lab/public/ic!15404"
      },
      {
        "id": "2e0d370de9ac5e43249444ccb7aeeadace95dc6a",
        "date": "2023-10-17T15:05:25Z",
        "message": "Merge branch 'andriy/fix-system-api-benchmarks' into 'master'\n\nchore: Fix System API benchmarks\n\n \n\nSee merge request dfinity-lab/public/ic!15423"
      },
      {
        "id": "be840730d9618c32abfff6c94f73fbbf48298085",
        "date": "2023-10-17T09:41:31Z",
        "message": "chore: Fix System API benchmarks"
      },
      {
        "id": "b0cacf08feb5dbda410819281609a2965e72a9a1",
        "date": "2023-10-16T15:47:15Z",
        "message": "chore: RUN-588: Fix heap benches throughput"
      },
      {
        "id": "fdab6768920a31228e0e2b1148ef14bd6abfb1f1",
        "date": "2023-10-16T15:24:37Z",
        "message": "Merge branch 'andriy/run-776-perf-counter-query-tests' into 'master'\n\nfeat: RUN-776: Add call context performance counter for queries\n\nThis MR makes the call context performance counter (type 1) functionality reported in queries.\n\nThere is no need to change API types, as we use in queries reply and reject callbacks. Yet, the `instructions_executed` filed was not updated correctly, so we need also to call `on_canister_result()` in `execute_query()` for the tests to pass.\n\nCloses RUN-776\n\nCloses RUN-795 \n\nCloses RUN-776 and RUN-795\n\nSee merge request dfinity-lab/public/ic!15205"
      },
      {
        "id": "56b1b46b52fc0c1a62e0933bb4252a61058ae8b2",
        "date": "2023-10-16T15:24:37Z",
        "message": "feat: RUN-776: Add call context performance counter for queries"
      },
      {
        "id": "c97f75110b289c40dbe913fa5ca1da673256a861",
        "date": "2023-10-13T10:46:03Z",
        "message": "Merge branch 'andriy/run-796-ee-tests-cleanup-inter-update' into 'master'\n\nchore: RUN-796: Cleanup EE tests: use `inter_update`\n\nCloses RUN-796 \n\nCloses RUN-796\n\nSee merge request dfinity-lab/public/ic!15207"
      },
      {
        "id": "778083d9c88139a326b1b3bdab17a988e45c1190",
        "date": "2023-10-13T10:46:02Z",
        "message": "chore: RUN-796: Cleanup EE tests: use `inter_update`"
      },
      {
        "id": "5af138f8eb66002537507525b0f0bcacb6cd46bf",
        "date": "2023-10-12T08:51:01Z",
        "message": "Merge branch 'andriy/run-805-increase-max-globals' into 'master'\n\nRUN-805: Increase max number of globals to `1000`\n\nThe current limit is not enough for C++ and Python languages as discussed on the forum: https://forum.dfinity.org/t/wasm-module-defined-globals-which-exceeds-the-maximum-number-allowed-200/\n\nCloses RUN-805 \n\nCloses RUN-805\n\nSee merge request dfinity-lab/public/ic!15330"
      },
      {
        "id": "6b36538a3c5b170b6a1a367763aa6f336bcebd97",
        "date": "2023-10-11T17:17:22Z",
        "message": "Merge branch 'andriy/run-796-ee-tests-cleanup-gets' into 'master'\n\nchore: RUN-769: Cleanup EE tests: remove `id.get()`s\n\n \n\nSee merge request dfinity-lab/public/ic!15206"
      },
      {
        "id": "f55ac908a84988e8ab37979778d179588a2d7de3",
        "date": "2023-10-11T17:17:21Z",
        "message": "chore: RUN-769: Cleanup EE tests: remove `id.get()`s"
      },
      {
        "id": "f748b850ab766d183533f206ba27a1bb6f56ed38",
        "date": "2023-10-11T16:56:45Z",
        "message": "Merge branch 'andriy/run-803-fix-system-api-benchmarks' into 'master'\n\nRUN-803: Fix System API benchmarks\n\n \n\nSee merge request dfinity-lab/public/ic!15240"
      },
      {
        "id": "987f50c197e0456b3cbeb593ca0cf5e1161db377",
        "date": "2023-10-11T16:56:45Z",
        "message": "RUN-803: Fix System API benchmarks"
      },
      {
        "id": "e2595f074ba52158ad524ab53091bc3ae7b4d436",
        "date": "2023-10-11T12:46:10Z",
        "message": "Merge branch 'andriy/run-770-call-context-counter-on-cleanup' into 'master'\n\nfeat: RUN-770: Add call context performance counter for cleanups\n\nThis MR makes the call context performance counter (type 1) functionality reported in cleanup callbacks.\n\nThe performance counter for queries will be implemented in a subsequent MR.\n\nCloses RUN-770 \n\nCloses RUN-770\n\nSee merge request dfinity-lab/public/ic!14811"
      },
      {
        "id": "c33f248dd329a1992632d3f0155bb04aaa45224d",
        "date": "2023-10-11T12:46:10Z",
        "message": "feat: RUN-770: Add call context performance counter for cleanups"
      },
      {
        "id": "e0bf05bad2f0a3675e7893af96ac6f14aeaa2617",
        "date": "2023-10-11T08:44:32Z",
        "message": "RUN-805: Increase max number of globals to `1000`"
      },
      {
        "id": "a5bc093353e71eb289bb48a6831ecaeaa5537407",
        "date": "2023-10-09T23:32:39Z",
        "message": "Merge branch 'andriy/run-769-call-context-perf-counter' into 'master'\n\nfeat: RUN-769: Add call context performance counter for responses\n\nThis MR enables the call context performance counter (type 1) functionality for WASM programs. The counter is reported in call reply and reject callbacks.\n\nThe performance counter for queries and cleanup handlers will be implemented in the subsequent MRs.\n\nCloses RUN-769 \n\nCloses RUN-769\n\nSee merge request dfinity-lab/public/ic!14793"
      },
      {
        "id": "4fbc9cbc5d68338494510bf8ae9640fbdde2e2d0",
        "date": "2023-10-09T23:32:38Z",
        "message": "feat: RUN-769: Add call context performance counter for responses"
      },
      {
        "id": "f1e5e242d9309b10ae93e4cdd1eee8d3dd193a0f",
        "date": "2023-10-05T05:04:40Z",
        "message": "Merge branch 'andriy/run-653-wasm-benches' into 'master'\n\nfeat: RUN-653: Create WASM instructions benchmarks\n\n \n\nSee merge request dfinity-lab/public/ic!13641"
      },
      {
        "id": "2a7090d6410888080ca075c39a8692846e21d941",
        "date": "2023-10-05T05:04:39Z",
        "message": "feat: RUN-653: Create WASM instructions benchmarks"
      },
      {
        "id": "7b736fc06263fea61e6485af3774cab455f128d4",
        "date": "2023-10-04T10:49:24Z",
        "message": "Merge branch 'andriy/run-768-update-call-context' into 'master'\n\nchore: RUN-768: Update call context `instructions_executed`\n\nFor the performance counter type 1 we need to keep the per call context `instructions_executed` counter updated. This MR makes sure the counter is updated, yet the System API changes will be implemented in later MRs. \n\nSee merge request dfinity-lab/public/ic!14785"
      },
      {
        "id": "017010492f449d46297bc3b73f3d7239b1f10108",
        "date": "2023-10-04T10:49:24Z",
        "message": "chore: RUN-768: Update call context `instructions_executed`"
      },
      {
        "id": "652141a31f5a9825e3fae33c15fc778f27babdf6",
        "date": "2023-09-25T18:18:37Z",
        "message": "Merge branch 'andriy/fix-drun' into 'master'\n\nfix: Fix `use-old-metering` flag in `drun`\n\n \n\nSee merge request dfinity-lab/public/ic!14973"
      },
      {
        "id": "7c64f03e520febc63516aa07ee223d6b811fc436",
        "date": "2023-09-25T09:44:08Z",
        "message": "fix: Fix `use-old-metering` flag in `drun`"
      },
      {
        "id": "143aa39968c2a643c0ff3c9820b83bce1823bf13",
        "date": "2023-09-20T20:23:44Z",
        "message": "Merge branch 'andriy/run-767-add-instructions-executed' into 'master'\n\nchore: RUN-767: Add call context `instructions_executed`\n\nThe total number of instructions executed in the given call context. This value is used for the `ic0.performance_counter` type 1. \n\nSee merge request dfinity-lab/public/ic!14784"
      },
      {
        "id": "c3f82bfb579d4d96787c8c828e78274f47566d88",
        "date": "2023-09-20T20:23:43Z",
        "message": "chore: RUN-767: Add call context `instructions_executed`"
      },
      {
        "id": "e42243f39bec568494e431e05ba43c456a9febd4",
        "date": "2023-09-20T15:34:58Z",
        "message": "Merge branch 'andriy/run-772-fix-system-api-benchmarks' into 'master'\n\nchore: RUN-772: Fix System API benchmarks\n\n* Update the script to use `bazel` instead of `cargo`.\n* Fix the benchmark expected instructions due to the stable memory dirty pages charges.\n* Update the `SYSTEM_API.md` results (comparing old `04f38ce0` to the latest master `178e1678`) \n\nSee merge request dfinity-lab/public/ic!14830"
      },
      {
        "id": "aa53b1df03ad509eea447191733bbf8fffd22e57",
        "date": "2023-09-20T15:34:58Z",
        "message": "chore: RUN-772: Fix System API benchmarks"
      },
      {
        "id": "8b1db4ef3712822dddaa12ea04240f0cd5e80aa0",
        "date": "2023-09-20T13:36:21Z",
        "message": "Merge branch 'andriy/run-755-upgrade-wasmtime-11' into 'master'\n\nfix: RUN-742: Upgrade `wasmtime` to 11.0.2\n\nCloses RUN-742 \n\nCloses RUN-742\n\nSee merge request dfinity-lab/public/ic!14856"
      },
      {
        "id": "a648a3450c26a42ff8809d5de493eef8aa87c8a1",
        "date": "2023-09-20T13:36:20Z",
        "message": "fix: RUN-742: Upgrade `wasmtime` to 11.0.2"
      },
      {
        "id": "a47ac417788315f1b0daf7a5c47f03c944701e7c",
        "date": "2023-09-19T18:50:12Z",
        "message": "Merge branch 'andriy/run-762-call-context-counter-test' into 'master'\n\nchore: RUN-672: Add call context perf counter test\n\nAlso includes Universal Canister changes. \n\nSee merge request dfinity-lab/public/ic!14746"
      },
      {
        "id": "4df0cf694fc7ebc4984412e717df91babcb0227b",
        "date": "2023-09-19T18:50:12Z",
        "message": "chore: RUN-672: Add call context perf counter test"
      },
      {
        "id": "c04368f5f21d30c3933ce3077e3b90dd7a0bb000",
        "date": "2023-09-11T15:47:48Z",
        "message": "Merge branch 'andriy/run-755-upgrade-wasmtime' into 'master'\n\nchore: RUN-755: Upgrade `wasmtime` to `9.0.4`\n\n \n\nSee merge request dfinity-lab/public/ic!14549"
      },
      {
        "id": "e21b9fca001a6668689fa9fe4da1560633bf5489",
        "date": "2023-09-11T14:55:17Z",
        "message": "Merge branch 'andriy/run-669-wasmtime-compilation-test' into 'master'\n\nFOLLOW-1201: Add `wasmtime` repeated instructions compilation test\n\nCloses FOLLOW-1201 \n\nCloses FOLLOW-1201\n\nSee merge request dfinity-lab/public/ic!14318"
      },
      {
        "id": "6a4dbef445dca5fc5b3658c81b77753d8e700b21",
        "date": "2023-09-11T14:55:11Z",
        "message": "Merge branch 'andriy/run-754-add-wasmtime-proposals-test' into 'master'\n\nchore: RUN-754: Add `wasmtime` proposals test\n\n \n\nSee merge request dfinity-lab/public/ic!14548"
      },
      {
        "id": "443655f00e7efbba935bf4a3825c12e7d4d0a685",
        "date": "2023-09-03T19:24:42Z",
        "message": "chore: RUN-755: Upgrade `wasmtime` to `9.0.4`"
      },
      {
        "id": "1ba9cbdef4fca44b9ae4f3bf0da24578dab32545",
        "date": "2023-09-06T13:41:26Z",
        "message": "Merge branch 'andriy/run-748-drun-metering-flag' into 'master'\n\nfeat: RUN-748: Add metering flag to `drun`\n\n \n\nSee merge request dfinity-lab/public/ic!14468"
      },
      {
        "id": "eb12143d925aad8d14365b095f2a0b3368af06b1",
        "date": "2023-09-05T08:07:59Z",
        "message": "Merge branch 'andriy/run-750-fix-tests' into 'master'\n\nchore: RUN-750: Fix scheduler tests\n\nCloses RUN-750 \n\nCloses RUN-750\n\nSee merge request dfinity-lab/public/ic!14544"
      },
      {
        "id": "46abc63d23f84ae85e756308cec08e59aa864fd4",
        "date": "2023-09-03T19:18:57Z",
        "message": "chore: RUN-754: Add `wasmtime` proposals test"
      },
      {
        "id": "b9da56829bdd410a4dfab08c5b24ad5a01dd22e9",
        "date": "2023-09-01T22:04:21Z",
        "message": "chore: RUN-750: Fix scheduler tests"
      },
      {
        "id": "cbbaef4b14241d37797c76ae1f32150409ce2eab",
        "date": "2023-08-22T14:05:29Z",
        "message": "FOLLOW-1201: Add `wasmtime` repeated instructions compilation test"
      },
      {
        "id": "02cd30990c8b1c5531bee2b86ca6aa2a95d7ea5f",
        "date": "2023-08-30T17:48:37Z",
        "message": "Merge branch 'andriy/run-749-lower-call-cost' into 'master'\n\nchore: RUN-749: Wasm Instrumentation Part 5\n\nFor the new Wasm instrumentation to be efficient, several parameters need to be adjusted such as heap pages, Wasm instructions and syscall weights. These parameters improve scheduling and charging fairness between canisters, as well as improve finalization rate stability.\n\nForum post with details: https://forum.dfinity.org/t/new-wasm-instrumentation/22080 \n\nSee merge request dfinity-lab/public/ic!14477"
      },
      {
        "id": "4e46b7ca8db9168656da47692b61f58488825ef1",
        "date": "2023-08-30T17:48:37Z",
        "message": "chore: RUN-749: Wasm Instrumentation Part 5"
      },
      {
        "id": "0773e0b353368a50e9b9373ad749602daabe3a66",
        "date": "2023-08-29T20:23:05Z",
        "message": "feat: RUN-748: Add metering flag to `drun`"
      },
      {
        "id": "6e3bb8100e7724a8ec53dac26faa3426378a6953",
        "date": "2023-08-23T15:24:38Z",
        "message": "Merge branch 'andriy/run-669-downgrade-wasmtime' into 'master'\n\nFOLLOW-1201: Revert \"RUN-706: Upgrade wasmtime to version 10.0.0\"\n\nThis reverts commit f0c1672b6e970eebf342bc31f0732b0448bc360e, reversing changes made to 611c76f4d6e972942bc071df784630b05d930284.\n\nThere are corner case regressions in the `wasmtime` version `10.0.1`. \n\nSee merge request dfinity-lab/public/ic!14319"
      },
      {
        "id": "9ef4e63c151a19116a23c71f95f95df40a81893b",
        "date": "2023-08-23T15:24:38Z",
        "message": "FOLLOW-1201: Revert \"RUN-706: Upgrade wasmtime to version 10.0.0\""
      },
      {
        "id": "1e58bc7a06d7d9a5508815a3a90180b20f42d501",
        "date": "2023-08-16T21:07:03Z",
        "message": "Merge branch 'mk/metering_tests_improvements' into 'master'\n\nchore: RUN-651: instruction counting improvements in tests\n\nThis MR concerns some tests which rely on executing certain number of instructions. It changes the way this condition is handled to be more robust, now requiring less assumptions about metering/specific instruction costs. \n\nSee merge request dfinity-lab/public/ic!14153"
      },
      {
        "id": "e7744ff7b093a26c8ee7c3758e7650012d0c0491",
        "date": "2023-08-16T04:02:29Z",
        "message": "Merge branch 'andriy/run-669-new-wasm-costs' into 'master'\n\nfeat: RUN-669: New Wasm Instrumentation Part 4\n\nFor the new Wasm instrumentation to be efficient, several parameters need to be adjusted such as heap pages, Wasm instructions and syscall weights. These parameters improve scheduling and charging fairness between canisters, as well as improve finalization rate stability.\n\nForum post with details: https://forum.dfinity.org/t/new-wasm-instrumentation/22080 \n\nSee merge request dfinity-lab/public/ic!13638"
      },
      {
        "id": "857978f942e1ad392ae3117dc8c3d6fb1022d4f4",
        "date": "2023-08-16T04:02:29Z",
        "message": "feat: RUN-669: New Wasm Instrumentation Part 4"
      },
      {
        "id": "30d96912965372d2271900cca74a4e3366e149be",
        "date": "2023-08-16T02:54:17Z",
        "message": "Merge branch 'ulan/run-681' into 'master'\n\nfeat: RUN-681: New Wasm Instrumentation Part 3\n\nFor the new Wasm instrumentation to be efficient, several parameters need to be adjusted such as heap pages, Wasm instructions and syscall weights. These parameters improve scheduling and charging fairness between canisters, as well as improve finalization rate stability.\n\nForum post with details: https://forum.dfinity.org/t/new-wasm-instrumentation/22080 \n\nSee merge request dfinity-lab/public/ic!13300"
      },
      {
        "id": "72c08a56e93085ddcb088a3033d1b78d20eeac74",
        "date": "2023-08-16T00:44:29Z",
        "message": "Merge branch 'mk/charge_for_dirty_heap_a' into 'master'\n\nfeat: RUN-654: New Wasm Instrumentation Part 2\n\nFor the new Wasm instrumentation to be efficient, several parameters need to be adjusted such as heap pages, Wasm instructions and syscall weights. These parameters improve scheduling and charging fairness between canisters, as well as improve finalization rate stability.\n\nForum post with details: https://forum.dfinity.org/t/new-wasm-instrumentation/22080 \n\nSee merge request dfinity-lab/public/ic!14031"
      },
      {
        "id": "89b316d320a38a6defaf45ad411087dc25c35422",
        "date": "2023-08-16T00:44:25Z",
        "message": "Merge branch 'andriy/run-682-old-metering-flag' into 'master'\n\nchore: RUN-682: Add `use_old_metering` flag to `starter`\n\nDFX changes: https://github.com/dfinity/sdk/pull/3292\n\nForum post with details: https://forum.dfinity.org/t/new-wasm-instrumentation/22080 \n\nSee merge request dfinity-lab/public/ic!13739"
      },
      {
        "id": "05f70a8025310399a366f38f618e694b75ecb147",
        "date": "2023-08-16T00:44:25Z",
        "message": "chore: RUN-682: Add `use_old_metering` flag to `starter`"
      },
      {
        "id": "3f8187fd554b2a21c5442f91c80456a9a354d3d8",
        "date": "2023-08-08T10:44:05Z",
        "message": "Merge branch 'mk/wasm_metering_a' into 'master'\n\nRUN-328, RUN-633: New Wasm Instrumentation Part 1\n\nThe new instrumentation significantly improves the performance of several applications as well as improves the accuracy of instruction counting in some (corner) cases. \n\nSee merge request dfinity-lab/public/ic!12391"
      }
    ],
    "email": "andriy.berestovskyy@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 64,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 34,
    "fixes": 9,
    "feats": 7,
    "non_merge_commits": [
      {
        "id": "b15f32e4ad0163a21f8237b2a948ea3fe8499d04",
        "date": "2023-11-15T18:30:08Z",
        "message": "feat: RUN-814: Enable new instrumentation on system subnets"
      },
      {
        "id": "a3c00aa7ee6d5a91e26c07dc43bea216ce82ea64",
        "date": "2023-11-15T10:37:42Z",
        "message": "chore: RUN-824: Run System API benchmarks on the latest master"
      },
      {
        "id": "bf723243d86bb64d675301bd48ddbdfe010b908e",
        "date": "2023-11-08T09:36:03Z",
        "message": "fix: RUN-820: Fix `convert_instructions_to_cycles()`"
      },
      {
        "id": "80859b8780549d86ae1af888c277270e880b64fb",
        "date": "2023-11-08T09:22:46Z",
        "message": "chore: RUN-724: Cleanup CPU complexity"
      },
      {
        "id": "488e99fb45a405b12eef2121729ac1d25bc8b00e",
        "date": "2023-10-25T20:08:22Z",
        "message": "fix: RUN-785: Set the weight of a Wasm function prologue to 1 instead of 0"
      },
      {
        "id": "be840730d9618c32abfff6c94f73fbbf48298085",
        "date": "2023-10-17T09:41:31Z",
        "message": "chore: Fix System API benchmarks"
      },
      {
        "id": "b0cacf08feb5dbda410819281609a2965e72a9a1",
        "date": "2023-10-16T15:47:15Z",
        "message": "chore: RUN-588: Fix heap benches throughput"
      },
      {
        "id": "56b1b46b52fc0c1a62e0933bb4252a61058ae8b2",
        "date": "2023-10-16T15:24:37Z",
        "message": "feat: RUN-776: Add call context performance counter for queries"
      },
      {
        "id": "778083d9c88139a326b1b3bdab17a988e45c1190",
        "date": "2023-10-13T10:46:02Z",
        "message": "chore: RUN-796: Cleanup EE tests: use `inter_update`"
      },
      {
        "id": "f55ac908a84988e8ab37979778d179588a2d7de3",
        "date": "2023-10-11T17:17:21Z",
        "message": "chore: RUN-769: Cleanup EE tests: remove `id.get()`s"
      },
      {
        "id": "987f50c197e0456b3cbeb593ca0cf5e1161db377",
        "date": "2023-10-11T16:56:45Z",
        "message": "RUN-803: Fix System API benchmarks"
      },
      {
        "id": "c33f248dd329a1992632d3f0155bb04aaa45224d",
        "date": "2023-10-11T12:46:10Z",
        "message": "feat: RUN-770: Add call context performance counter for cleanups"
      },
      {
        "id": "e0bf05bad2f0a3675e7893af96ac6f14aeaa2617",
        "date": "2023-10-11T08:44:32Z",
        "message": "RUN-805: Increase max number of globals to `1000`"
      },
      {
        "id": "4fbc9cbc5d68338494510bf8ae9640fbdde2e2d0",
        "date": "2023-10-09T23:32:38Z",
        "message": "feat: RUN-769: Add call context performance counter for responses"
      },
      {
        "id": "2a7090d6410888080ca075c39a8692846e21d941",
        "date": "2023-10-05T05:04:39Z",
        "message": "feat: RUN-653: Create WASM instructions benchmarks"
      },
      {
        "id": "017010492f449d46297bc3b73f3d7239b1f10108",
        "date": "2023-10-04T10:49:24Z",
        "message": "chore: RUN-768: Update call context `instructions_executed`"
      },
      {
        "id": "7c64f03e520febc63516aa07ee223d6b811fc436",
        "date": "2023-09-25T09:44:08Z",
        "message": "fix: Fix `use-old-metering` flag in `drun`"
      },
      {
        "id": "c3f82bfb579d4d96787c8c828e78274f47566d88",
        "date": "2023-09-20T20:23:43Z",
        "message": "chore: RUN-767: Add call context `instructions_executed`"
      },
      {
        "id": "aa53b1df03ad509eea447191733bbf8fffd22e57",
        "date": "2023-09-20T15:34:58Z",
        "message": "chore: RUN-772: Fix System API benchmarks"
      },
      {
        "id": "a648a3450c26a42ff8809d5de493eef8aa87c8a1",
        "date": "2023-09-20T13:36:20Z",
        "message": "fix: RUN-742: Upgrade `wasmtime` to 11.0.2"
      },
      {
        "id": "4df0cf694fc7ebc4984412e717df91babcb0227b",
        "date": "2023-09-19T18:50:12Z",
        "message": "chore: RUN-672: Add call context perf counter test"
      },
      {
        "id": "443655f00e7efbba935bf4a3825c12e7d4d0a685",
        "date": "2023-09-03T19:24:42Z",
        "message": "chore: RUN-755: Upgrade `wasmtime` to `9.0.4`"
      },
      {
        "id": "46abc63d23f84ae85e756308cec08e59aa864fd4",
        "date": "2023-09-03T19:18:57Z",
        "message": "chore: RUN-754: Add `wasmtime` proposals test"
      },
      {
        "id": "b9da56829bdd410a4dfab08c5b24ad5a01dd22e9",
        "date": "2023-09-01T22:04:21Z",
        "message": "chore: RUN-750: Fix scheduler tests"
      },
      {
        "id": "cbbaef4b14241d37797c76ae1f32150409ce2eab",
        "date": "2023-08-22T14:05:29Z",
        "message": "FOLLOW-1201: Add `wasmtime` repeated instructions compilation test"
      },
      {
        "id": "4e46b7ca8db9168656da47692b61f58488825ef1",
        "date": "2023-08-30T17:48:37Z",
        "message": "chore: RUN-749: Wasm Instrumentation Part 5"
      },
      {
        "id": "0773e0b353368a50e9b9373ad749602daabe3a66",
        "date": "2023-08-29T20:23:05Z",
        "message": "feat: RUN-748: Add metering flag to `drun`"
      },
      {
        "id": "9ef4e63c151a19116a23c71f95f95df40a81893b",
        "date": "2023-08-23T15:24:38Z",
        "message": "FOLLOW-1201: Revert \"RUN-706: Upgrade wasmtime to version 10.0.0\""
      },
      {
        "id": "857978f942e1ad392ae3117dc8c3d6fb1022d4f4",
        "date": "2023-08-16T04:02:29Z",
        "message": "feat: RUN-669: New Wasm Instrumentation Part 4"
      },
      {
        "id": "05f70a8025310399a366f38f618e694b75ecb147",
        "date": "2023-08-16T00:44:25Z",
        "message": "chore: RUN-682: Add `use_old_metering` flag to `starter`"
      }
    ],
    "line_additions": 4542,
    "line_deletions": 3432,
    "lines_effected_total": 7974,
    "rel_comm_add": 23,
    "rel_comm_del": 18,
    "rel_comm_total": 25
  },
  {
    "login": "alin-at-dfinity",
    "id": 58422065,
    "totalContributions": 289,
    "github": "https://github.com/alin-at-dfinity",
    "commits": [
      {
        "id": "dae13303fc1e6b6b1667ee4f2eccd45a97344c87",
        "date": "2023-11-22T11:16:35Z",
        "message": "Merge branch 'alin/mr-constructor-cleanup' into 'master'\n\nchore: Clean up Message Routing constructors\n\nMove some of the constructor logic into `BatchProcessorImpl::new()` and get rid\nof the awkward `MessageRoutingImpl::new_components()`.\n\nMake `MessageRoutingMetrics` cloneable instead of wrapping it in an `Arc`\n(`prometheus` metrics are already `Arcs` around the actual atomic integers /\nstructs). \n\nSee merge request dfinity-lab/public/ic!16251"
      },
      {
        "id": "5e9a59aea8cd49f7de9695f4d690ad6d03ad8ead",
        "date": "2023-11-22T11:16:35Z",
        "message": "chore: Clean up Message Routing constructors"
      },
      {
        "id": "32fb682de32fa7fcf01d8afc4829684559c57540",
        "date": "2023-11-13T13:29:24Z",
        "message": "Merge branch 'alin/only-compute-memory-usage-once-typo' into 'master'\n\nfix: Typo\n\n \n\nSee merge request dfinity-lab/public/ic!16041"
      },
      {
        "id": "8120764c685851ce1bd93f82f9c26dfd63c1a4d2",
        "date": "2023-11-13T12:36:38Z",
        "message": "fix: Typo"
      },
      {
        "id": "06e56899aa8605ea878868c0a304748ac68e7cf3",
        "date": "2023-11-06T13:02:55Z",
        "message": "Merge branch 'ielashi/fix_broken_invariant' into 'master'\n\nfix: broken invariant on canister\n\nFixes an issue on mainnet where a canister has a broken invariant due to a previous bug in the replica.\n\nThis code is intended to be reverted once it's deployed to mainnet. \n\nSee merge request dfinity-lab/public/ic!15878"
      },
      {
        "id": "c315176e46b90bc1de07b729f46a3a546d197959",
        "date": "2023-11-06T13:02:45Z",
        "message": "Merge branch 'alin/fix-cargo-test' into 'master'\n\nfix: Fix cargo compilation\n\n`ic-canister-client` obviously requires feature `http2` of `hyper-rustls`, but\nthis was not specified. I assume this did not crop up until now because other\ncrates explicitly request the `http2` feature. No idea why it broke now. \n\nSee merge request dfinity-lab/public/ic!15881"
      },
      {
        "id": "682e192fecb6467c76eb3d53ebc8472de8d6f270",
        "date": "2023-11-06T13:02:44Z",
        "message": "fix: Fix cargo compilation"
      },
      {
        "id": "cbf60617d74a6951e19daee6a9f0a99ff783cbb5",
        "date": "2023-11-03T15:20:23Z",
        "message": "Merge branch 'alin/optimize-responses_size_bytes' into 'master'\n\nimprovement: Optimize the accounting of response sizes in streams\n\nMutating streams during induction and routing requires multiple calls to\n`ReplicatedState::take_streams()` followed by `ReplicatedState::put_streams()`.\nThe latter currently updates every single canister's\n`ransient_stream_responses_size_bytes` stat, whether necessary or not.\n\nInstead, only update canisters that currently have or previously had responses\nin streams. This requires keeping around zero values until the caller\n(`ReplicatedState`) has had the opportunity of applying the changes (in\n`put_streams()`). \n\nSee merge request dfinity-lab/public/ic!15848"
      },
      {
        "id": "4b3080dff0cc4ee355e5d818cbb18ac04de2f9a8",
        "date": "2023-11-03T15:20:23Z",
        "message": "improvement: Optimize the accounting of response sizes in streams"
      },
      {
        "id": "deb81ed0829ae28b6b41296bf21cef856054cbc6",
        "date": "2023-11-02T13:17:59Z",
        "message": "Merge branch 'alin/only-compute-memory-usage-once' into 'master'\n\nimprovement: Only compute memory usage once in `StreamHandler`\n\nThis is quite an expensive call for large subnets and there is no need to do it twice. \n\nSee merge request dfinity-lab/public/ic!15684"
      },
      {
        "id": "bae164786b30592c86b413d25e3b699564dc828b",
        "date": "2023-11-02T13:17:58Z",
        "message": "improvement: Only compute memory usage once in `StreamHandler`"
      },
      {
        "id": "3fe289af24169fe076ae7ad2c9b0b36440887cb6",
        "date": "2023-09-29T11:07:46Z",
        "message": "Merge branch 'alin/MR-466-split-height-metric' into 'master'\n\nfeat: [MR-466] Export a `split_height` metric after a subnet split\n\nThis is to allow resetting the synthetic \"subnet consumed cycles\" counters after\na subnet split (when the consumed cycles amounts would drop after being split\namong the two resulting subnets). \n\nSee merge request dfinity-lab/public/ic!15095"
      },
      {
        "id": "5ce262094eb16902c704f335df16bd327dcdcb06",
        "date": "2023-09-29T11:07:45Z",
        "message": "feat: [MR-466] Export a `split_height` metric after a subnet split"
      },
      {
        "id": "c2d4ac1ea96c600eeda5295e0771ae3c6669673b",
        "date": "2023-09-21T16:00:31Z",
        "message": "Merge branch 'alin/MR-483-subnet-splitting-forward-compatibility' into 'master'\n\ntest: [MR-483] Subnet splitting forward compatibility change guard\n\nIntroduce a couple of (dead code) functions consisting of initializers for the\nvarious `ReplicatedState` structs that are relevant to subnet splitting. Any\nstructural changes to these types would require changes to these initializers.\nAnd they are surrounded by big all-caps warnings that they should not be\nmodified without the author or the Message Routing team considering the impact,\nif any, on subnet splitting.\n\nThis is not fool-proof (as one may e.g. change the semantics of a field without\nchanging its type; or Execution may choose to have canisters execute some\nmanagement canister call instead of the subnet) and it may turn out to be\ncumbersome. But it is strictly better than nothing.\n\nCloses MR-483 \n\nCloses MR-483\n\nSee merge request dfinity-lab/public/ic!14900"
      },
      {
        "id": "c5597718af15f9b5285bd7fd93e2baaaf8bb0e24",
        "date": "2023-09-21T16:00:29Z",
        "message": "test: [MR-483] Subnet splitting forward compatibility change guard"
      },
      {
        "id": "79475aaf0222fd7e198669dc35fdf677a9ac57e3",
        "date": "2023-09-20T12:34:24Z",
        "message": "Merge branch 'alin/allow-optional-scalar-renames' into 'master'\n\nfix: Allow optional scalar field renaming\n\n`buf` (used in the protobuf breaking change presubmit test) appears to implement\noptional scalar fields as a `oneof` wrapping a single field, with the `oneof`\nname derived from the field name. As a consequence, renaming an optional scalar\nfield is seen by buf as moving the field from one `oneof` into another. Optional\nscalar fields were introduced mid-way through the proto 3 evolution and\ndifferentiate between `None`/`null` and default valued scalar fields (i.e.\nintegers, floats, strings, booleans; as the \"well-known proto types\" used to)\n\nExcluding this check will obviously also silently allow moving fields from an\nactual `oneof` into another, which may not be backwards compatible. But it is\nalso an unlikely occurrence, as it requires two oneof sections within the same\nmessage to begin with. \n\nSee merge request dfinity-lab/public/ic!14730"
      },
      {
        "id": "e2cf2fe7b6b3e63c473d66853ee875fcd1633af4",
        "date": "2023-09-20T12:34:24Z",
        "message": "fix: Allow optional scalar field renaming"
      },
      {
        "id": "2ea702a7fc1e68b1f67ce63a93651f94a9fd4f3e",
        "date": "2023-09-04T11:53:16Z",
        "message": "fix: Fix protobuf backwards-compatibility presubmit check"
      },
      {
        "id": "02f7941c407104e59965e29cef02f216f84174ae",
        "date": "2023-09-01T01:13:26Z",
        "message": "Merge branch 'alin/MR-479-after_split_drop-install-and-stop-calls' into 'master'\n\nfeat: [MR-479] Drop orphan install_code() and canister_stop() calls after a split\n\nIn the second phase of subnet splitting. have all canisters on subnet B drop\naborted `install_code()` executions and revert `Stopping` states. Otherwise,\nsuch calls would be executed by the canister on subnet B, while a response\n(whether to a canister or to an ingress message) would have to be produced by\nsubnet A'.\n\nThis is only half of the cleanup required for in-progress canister calls. The\nother half (closing the subnet call contexts on subnet A') is being applied in a\nseparate change. \n\nSee merge request dfinity-lab/public/ic!14489"
      },
      {
        "id": "6dc83ce6e289525834cd322a395365487b82ce63",
        "date": "2023-09-01T01:13:25Z",
        "message": "feat: [MR-479] Drop orphan install_code() and canister_stop() calls after a split"
      },
      {
        "id": "b4c90fcb5a5fffd59a6b72bd9afed9bdb0a54f91",
        "date": "2023-08-31T21:35:41Z",
        "message": "Merge branch 'alin/MR-479-reject-management-calls' into 'master'\n\nfeat: [MR-479] Reject management calls targeting migrated canisters after split\n\nIntegrate rejection/failing of in-progress management canister calls targeting\nmigrated canisters in the second phase of subnet splitting. Otherwise, such\ncalls would be executed by the canister on one subnet (\"subnet B\"), while a\nresponse (whether to a canister or to an ingress message) would have to be\nproduced by another subnet (\"subnet A'\").\n\nThis is only half of the cleanup required (closing the subnet call contexts on\nsubnet A'). The other half (silently dropping aborted install calls and rolling\nback `Stopping` canisters to `Running` on subnet B) will be integrated in a\nfollow-up change. \n\nSee merge request dfinity-lab/public/ic!14449"
      },
      {
        "id": "0c5764c75ef2538deba33cd87f6c4473c618f903",
        "date": "2023-08-31T21:35:40Z",
        "message": "feat: [MR-479] Reject management calls targeting migrated canisters after split"
      },
      {
        "id": "6f458d39b6520a5c48b880c621ddc4049f8c6bea",
        "date": "2023-08-29T11:22:30Z",
        "message": "Merge branch 'alin/MR-479-refactor-after_split' into 'master'\n\nchore: [MR-479] Refactor `after_split()` to mutate in place\n\nRefactor the various `after_split()` methods to mutate the respective structures\nin place, while still destructuring them into references of their component\nparts, so that any field addition forces the author to explicitly decide how the\nnew field should be handled during a subnet split.\n\nThis will allow `after_split()` to directly call any `&mut self` method. \n\nSee merge request dfinity-lab/public/ic!14433"
      },
      {
        "id": "cfcac11118761f81ffff5a02dd04c5954ed148d5",
        "date": "2023-08-29T11:22:30Z",
        "message": "chore: [MR-479] Refactor `after_split()` to mutate in place"
      },
      {
        "id": "845f2a35665fc458daac7b9f42324340b0193c67",
        "date": "2023-08-29T10:51:24Z",
        "message": "Merge branch 'alin/deps-cleanup-2' into 'master'\n\nchore: Clean up unused deps, part 2\n\n \n\nSee merge request dfinity-lab/public/ic!14402"
      },
      {
        "id": "dcf13de94667b0d7fb750c14e9525f99708bab55",
        "date": "2023-08-29T10:51:23Z",
        "message": "chore: Clean up unused deps, part 2"
      },
      {
        "id": "f4a023e441fd05d62a962eb79f2553e9b015cb11",
        "date": "2023-08-25T14:00:25Z",
        "message": "Merge branch 'alin/deps-cleanup' into 'master'\n\nchore: Clean up unneeded deps\n\n \n\nSee merge request dfinity-lab/public/ic!14376"
      },
      {
        "id": "047694895ae95fec368cc40bd545d21c4cd294e7",
        "date": "2023-08-25T14:00:24Z",
        "message": "chore: Clean up unneeded deps"
      },
      {
        "id": "b6e6c8e8bfa4696783167614a374e3c405d7528c",
        "date": "2023-08-21T10:32:00Z",
        "message": "Merge branch 'alin/EXC-1456-truncate-reject-response-messages' into 'master'\n\nchore: [EXC-1456] Truncate reject response messages\n\nThere is no good reason to allow absurdly large error messages that will then\nget truncated by Message Routing to a still absurdly large error message. \n\nSee merge request dfinity-lab/public/ic!14249"
      },
      {
        "id": "dba7941a1f8a5c386029aa6d3aa448a3521a6ab7",
        "date": "2023-08-21T10:32:00Z",
        "message": "chore: [EXC-1456] Truncate reject response messages"
      },
      {
        "id": "dd161069c95d60d9fdada0e9520e7919c9c79c12",
        "date": "2023-08-15T15:35:16Z",
        "message": "Merge branch 'alin/MR-477-ensure-monotonic-dsm-time' into 'master'\n\nfeat: [MR-477] Ensure monotonic DSM time\n\nWhile Consensus theoretically produces monotonically increasing block times, it is technically possible (whether due to bugs or after a subnet recovery) for batch times to go backwards. Add protection against this. And a critical error counter so we get notified of any occurrences. \n\nSee merge request dfinity-lab/public/ic!14165"
      },
      {
        "id": "dc07b46f8a666f18f3a7ab8f9ee0ab901603a0ad",
        "date": "2023-08-15T15:35:16Z",
        "message": "feat: [MR-477] Ensure monotonic DSM time"
      },
      {
        "id": "b0d30016e3d7fcc847fee4af509b95b0e4651c7c",
        "date": "2023-08-15T08:39:06Z",
        "message": "Merge branch 'alin/fix-dependency-version' into 'master'\n\nfix: Have `ic-state-machine-tests` depend on version 2.2+ of `ic-test-state-machine-client`\n\nAs is, versions 2.0.x and 2.1.x of `ic-test-state-machine-client` are valid\nfor `cargo` to pick, but they are missing the `Request::VerifyCanisterSig`\nvariant (added in version 2.2.0), so compilation fails. \n\nSee merge request dfinity-lab/public/ic!14151"
      },
      {
        "id": "42b2a051439c6473bcc81efe9cf0218b6b58f76c",
        "date": "2023-08-15T08:39:06Z",
        "message": "fix: Have `ic-state-machine-tests` depend on version 2.2+ of `ic-test-state-machine-client`"
      },
      {
        "id": "9c3ecb6e027e0ccd56a85137e0addde4122f9cfa",
        "date": "2023-08-11T12:01:44Z",
        "message": "Merge branch 'alin/minor-canonical-state-test-fix' into 'master'\n\nchore: Minor `ic-canonical-state` compatibility test fix\n\nTest stream header encoding across all versions up to\n`MAX_SUPPORTED_CERTIFICATION_VERSION`, not just up to `V9`.\n\nAlso document why we have two disjoint ranges with the same generator behind\nthem returned by `arb_valid_system_metadata()`. \n\nSee merge request dfinity-lab/public/ic!14066"
      },
      {
        "id": "837a5a3111fa4bdd674f860b4249b2344fe2d5e9",
        "date": "2023-08-11T12:01:43Z",
        "message": "chore: Minor `ic-canonical-state` compatibility test fix"
      }
    ],
    "email": "alin.sinpalean@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 36,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 18,
    "fixes": 6,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "5e9a59aea8cd49f7de9695f4d690ad6d03ad8ead",
        "date": "2023-11-22T11:16:35Z",
        "message": "chore: Clean up Message Routing constructors"
      },
      {
        "id": "8120764c685851ce1bd93f82f9c26dfd63c1a4d2",
        "date": "2023-11-13T12:36:38Z",
        "message": "fix: Typo"
      },
      {
        "id": "682e192fecb6467c76eb3d53ebc8472de8d6f270",
        "date": "2023-11-06T13:02:44Z",
        "message": "fix: Fix cargo compilation"
      },
      {
        "id": "4b3080dff0cc4ee355e5d818cbb18ac04de2f9a8",
        "date": "2023-11-03T15:20:23Z",
        "message": "improvement: Optimize the accounting of response sizes in streams"
      },
      {
        "id": "bae164786b30592c86b413d25e3b699564dc828b",
        "date": "2023-11-02T13:17:58Z",
        "message": "improvement: Only compute memory usage once in `StreamHandler`"
      },
      {
        "id": "5ce262094eb16902c704f335df16bd327dcdcb06",
        "date": "2023-09-29T11:07:45Z",
        "message": "feat: [MR-466] Export a `split_height` metric after a subnet split"
      },
      {
        "id": "c5597718af15f9b5285bd7fd93e2baaaf8bb0e24",
        "date": "2023-09-21T16:00:29Z",
        "message": "test: [MR-483] Subnet splitting forward compatibility change guard"
      },
      {
        "id": "e2cf2fe7b6b3e63c473d66853ee875fcd1633af4",
        "date": "2023-09-20T12:34:24Z",
        "message": "fix: Allow optional scalar field renaming"
      },
      {
        "id": "2ea702a7fc1e68b1f67ce63a93651f94a9fd4f3e",
        "date": "2023-09-04T11:53:16Z",
        "message": "fix: Fix protobuf backwards-compatibility presubmit check"
      },
      {
        "id": "6dc83ce6e289525834cd322a395365487b82ce63",
        "date": "2023-09-01T01:13:25Z",
        "message": "feat: [MR-479] Drop orphan install_code() and canister_stop() calls after a split"
      },
      {
        "id": "0c5764c75ef2538deba33cd87f6c4473c618f903",
        "date": "2023-08-31T21:35:40Z",
        "message": "feat: [MR-479] Reject management calls targeting migrated canisters after split"
      },
      {
        "id": "cfcac11118761f81ffff5a02dd04c5954ed148d5",
        "date": "2023-08-29T11:22:30Z",
        "message": "chore: [MR-479] Refactor `after_split()` to mutate in place"
      },
      {
        "id": "dcf13de94667b0d7fb750c14e9525f99708bab55",
        "date": "2023-08-29T10:51:23Z",
        "message": "chore: Clean up unused deps, part 2"
      },
      {
        "id": "047694895ae95fec368cc40bd545d21c4cd294e7",
        "date": "2023-08-25T14:00:24Z",
        "message": "chore: Clean up unneeded deps"
      },
      {
        "id": "dba7941a1f8a5c386029aa6d3aa448a3521a6ab7",
        "date": "2023-08-21T10:32:00Z",
        "message": "chore: [EXC-1456] Truncate reject response messages"
      },
      {
        "id": "dc07b46f8a666f18f3a7ab8f9ee0ab901603a0ad",
        "date": "2023-08-15T15:35:16Z",
        "message": "feat: [MR-477] Ensure monotonic DSM time"
      },
      {
        "id": "42b2a051439c6473bcc81efe9cf0218b6b58f76c",
        "date": "2023-08-15T08:39:06Z",
        "message": "fix: Have `ic-state-machine-tests` depend on version 2.2+ of `ic-test-state-machine-client`"
      },
      {
        "id": "837a5a3111fa4bdd674f860b4249b2344fe2d5e9",
        "date": "2023-08-11T12:01:43Z",
        "message": "chore: Minor `ic-canonical-state` compatibility test fix"
      }
    ],
    "line_additions": 1686,
    "line_deletions": 2463,
    "lines_effected_total": 4149,
    "rel_comm_add": 12,
    "rel_comm_del": 10,
    "rel_comm_total": 12
  },
  {
    "login": "dsarlis",
    "id": 2428606,
    "totalContributions": 287,
    "github": "https://github.com/dsarlis",
    "commits": [
      {
        "id": "4ee1803d22f249560618e7a7acff1031b5fb7e31",
        "date": "2023-11-22T14:04:50Z",
        "message": "feat: Time out stop_canister requests"
      },
      {
        "id": "e81d2fef734477c3c1b509981af352d70e01f3e1",
        "date": "2023-10-10T16:02:12Z",
        "message": "Merge branch 'dimitris/message-memory-freezing-threshold' into 'master'\n\nfix: Take message memory into account when calculating the freezing threshold\n\nThis MR fixes a problem where the freezing threshold could be computed incorrectly due to message memory not being included in the resources we take into account, although we do charge for it periodically as we do for other resources (compute and regular memory). Additionally, if we include message memory in the calculation of the freezing threshold, then we should also make sure that we check against the freezing threshold whenever a canister sends a message to ensure that it can be covered. In theory, this could lead to a canister getting uninstalled faster than the freezing threshold suggests, although it's quite unlikely as it would need the canister to be quite low in cycles and a big message memory allocation in the form of sending multiple messages in a single execution.\n\nThe fix contains two main parts:\n1. Making sure that we take message memory into account when computing the freezing threshold. In order to make the code more robust, we use the idle cycles rate computed per resource to both charge and compute the freezing threshold (previously only used for the latter and the former was happening ad-hoc). With this refactoring we should be setup better for the future -- if a new resource is added, both places would properly reflect the new resource.\n2. Similarly to normal memory, in the system api, we make sure that any new message can be sent iff there's enough cycles to cover the new message memory usage, i.e. the new freezing threshold if this message is sent.\n\nThe remaining changes are mostly tests, boilerplate and piping through current message memory usage that's needed for certain computations. A potential follow-up would be to bundle `memory_usage`, `memory_allocation`, `message_memory_usage`, `compute_allocation` in a `ResourceFootprint` (or something like that) as all these values are needed to compute the freezing threshold in various places and it would help make the code more readable by reducing arguments to functions or fields in structs. \n\nSee merge request dfinity-lab/public/ic!15005"
      },
      {
        "id": "daa6f06dd25ef960036acd91bda9c281149b3464",
        "date": "2023-10-10T16:02:11Z",
        "message": "fix: Take message memory into account when calculating the freezing threshold"
      },
      {
        "id": "ee9e5ccf5b23f382a878b2a49b02704962dc5767",
        "date": "2023-10-10T07:55:11Z",
        "message": "Merge branch 'dimitris/require-fields' into 'master'\n\nchore: EXC-1473: Require that certain fields exist for subnet metrics\n\nThese fields should always exist since the code has been rolled out for a couple of weeks. We can make things stricter and require that these fields exist when we deserialize the subnet metrics. \n\nSee merge request dfinity-lab/public/ic!15291"
      },
      {
        "id": "19cd48b7ad9f8d661ce82cd95937a8928ad9642a",
        "date": "2023-10-10T07:55:11Z",
        "message": "chore: EXC-1473: Require that certain fields exist for subnet metrics"
      },
      {
        "id": "2e1b90f2413191be55f573c532315275f17f3304",
        "date": "2023-10-03T14:53:54Z",
        "message": "Merge branch 'dimitris/fix-typos' into 'master'\n\nchore: Fix typos and improve error message\n\nThis MR fixes some typos and missed places where commit https://github.com/dfinity/ic/commit/660899bd2 did not change canister id to principal id as needed. Additionally, a compound check when verifying paths for a canister state read was split in two to be able provide a more specific error message to the user.\n\nThanks to @cyberowl who pointed these out in a replica code review conducted as part of last week's replica version NNS proposal. \n\nSee merge request dfinity-lab/public/ic!15163"
      },
      {
        "id": "84482f44a5950933785da6319e630d6ac7ee5212",
        "date": "2023-10-03T14:32:13Z",
        "message": "Merge branch 'dimitris/end-to-end-tests' into 'master'\n\ntest: EXC-1469: Add end to end tests for subnet read state endpoint\n\nThis MR adds some end to end tests for the newly added subnet read state endpoint in the http handler. The main challenge was to set up properly a certificate with a delegation which could then be returned through the endpoint to allow us to verify that we can retrieve the subnet metrics.\n\nA key design choice here is that the `canister_client` is used to enable this kind of testing. Using the public agent is not possible as we have a chicken and egg problem (the agent needs the endpoint to implement the functionality). The crate is supposed to be deprecated but it was the only option to have some test for now. Once support is there for the public agent, we can convert the test to use that instead. \n\nSee merge request dfinity-lab/public/ic!15001"
      },
      {
        "id": "446092072ecbd6a3006c6da4c258156639bf78d9",
        "date": "2023-10-03T14:32:13Z",
        "message": "test: EXC-1469: Add end to end tests for subnet read state endpoint"
      },
      {
        "id": "f11d014f7c6989dae68d371b19a92074279b48ed",
        "date": "2023-10-03T13:25:09Z",
        "message": "Merge branch 'dimitris/generate-new-canister-id' into 'master'\n\nfix: Handle gracefully if we have exhausted the complete range of canister ids\n\nThis MR makes the generation of canister id code a bit more robust. Specifically, in a very extreme scenario where we have exhausted the entire `u64` range, instead of wrapping the value around, we return that we could not generate a new canister id. The callers already handle the cases where `None` is returned from the function that generates a canister id, so it should create any issues. \n\nSee merge request dfinity-lab/public/ic!15143"
      },
      {
        "id": "7e128ec036c9e60efc9905ed22fa92b0c1aa07b4",
        "date": "2023-10-03T13:15:22Z",
        "message": "chore: Fix typos and improve error message"
      },
      {
        "id": "1b3e58b7a39a398fd60cd304e6ee9eef9ba3aca5",
        "date": "2023-10-03T12:26:37Z",
        "message": "Merge branch 'dimitris/metrics-deprecated-fields' into 'master'\n\nchore: EXC-370: Add metrics to track if deprecated fields in management calls are used\n\nThis MR adds some counters to keep track of whether some deprecated fields of install_code and update_settings are used by anyone. This should help us ensure that we would not break any use cases if we drop them from the interface. \n\nSee merge request dfinity-lab/public/ic!15100"
      },
      {
        "id": "a8f3ef124b9d53ac39c17dff3bcc9aee61a00599",
        "date": "2023-10-03T12:26:36Z",
        "message": "chore: EXC-370: Add metrics to track if deprecated fields in management calls are used"
      },
      {
        "id": "9a4e5f8290dca8ee6fbfc8df40928fcc11e5b6ba",
        "date": "2023-10-03T11:49:22Z",
        "message": "Merge branch 'dimitris/remove-query-allocation' into 'master'\n\nchore: Remove QueryAllocation type\n\nThis MR removes the `QueryAllocation` type which is not really used anymore. Note that the `query_allocation` field is not removed from the interface of the management canister -- this would require updating at least some NNS canisters to stop relying on this field and then drop it (as no other canister should be using it anyway and if they do, it simply does not have any effect as the replica ignores it). \n\nSee merge request dfinity-lab/public/ic!15098"
      },
      {
        "id": "3c23cc3253a37b0d3ba2f574156a698b3b39842f",
        "date": "2023-10-02T14:08:35Z",
        "message": "fix: Handle gracefully if we have exhausted the complete range of canister ids"
      },
      {
        "id": "2e942ad4af420b877e51c7a853a2f63e8750737a",
        "date": "2023-09-29T09:50:56Z",
        "message": "chore: Remove QueryAllocation type"
      },
      {
        "id": "044d76768fb6dbac78df8c686c9c8383718342a6",
        "date": "2023-09-28T15:00:18Z",
        "message": "Merge branch 'dimitris/canister-id' into 'master'\n\nfix: EXC-1469: Handle error when converting to canister id\n\nThis MR makes handling of error when converting from principal id to canister id more robust. The constructor of `CanisterId` actually always returns an `Ok` value in the current implementation, so unwrap'ing is safe but still handling the error is safer in case there are future changes. \n\nCloses EXC-1469\n\nSee merge request dfinity-lab/public/ic!15062"
      },
      {
        "id": "c2cd89927db07d0374f3850e5d60fdcea0373d66",
        "date": "2023-09-28T15:00:16Z",
        "message": "fix: EXC-1469: Handle error when converting to canister id"
      },
      {
        "id": "660899bd20245b19378815b4ef4c90bbc88c3196",
        "date": "2023-09-27T12:49:37Z",
        "message": "Merge branch 'dimitris/subnet-read-state-service' into 'master'\n\nfeat: EXC-1469: Expose subnet metrics through the http api\n\nThis MR implements the new http endpoint to retrieve subnet specific information from the system state tree as specified in https://github.com/dfinity/interface-spec/pull/191. As noted in the spec PR, the canister endpoint supports the existing subnet related paths for backward compatibility reasons. Eventually, these paths will only be accessible through the new subnet endpoint.\n\nThe key changes included:\n1. Introducing a new `SubnetReadStateService` service modelled similarly to the existing `ReadStateService` which is now named `CanisterReadStateService`.\n2. Moving the two services in a sub-module of read_state while keeping some common functions under `read_state.rs`.\n3. The new service differs mainly in `verify_paths` and has some other small differences in `call` compared to the existing service due to certain checks that are not relevant.\n\nThere are some unit tests included to make sure `SubnetReadStateService` correctly responds only to subnet paths requested and end to end tests will be in a follow up MR. \n\nSee merge request dfinity-lab/public/ic!15000"
      },
      {
        "id": "a78d5c5ecd355857be5cf76f40a33a3fb6be6785",
        "date": "2023-09-27T12:49:34Z",
        "message": "feat: EXC-1469: Expose subnet metrics through the http api"
      },
      {
        "id": "906467d69007a4dcd1847d9c74c68ac07ccae4c7",
        "date": "2023-09-26T09:59:27Z",
        "message": "Merge branch 'dimitris/remove-set-controller' into 'master'\n\nchore: EXC-329: Remove deprecated set_controller management api\n\nThe `set_controller` management api has long been deprecated on the interface spec. According to our internal [metrics](https://grafana.mainnet.dfinity.network/d/execution-metrics/execution-metrics?from=now-30d&to=now&var-datasource=IC%20VictoriaMetrics&var-ic=mercury&var-ic_subnet=All&var-instance=All&var-period=$__auto_interval_period&orgId=1&var-node_instance=All&var-heatmap_period=$__auto_interval_heatmap_period&viewPanel=59) no calls have been made to this api in the last month or so (in contrast there are quite a few hits to `update_settings` which supersedes it), so this makes it relatively safe to remove without breaking any canister. \n\nSee merge request dfinity-lab/public/ic!14975"
      },
      {
        "id": "1fb3e549b8e338d28ffc344af04034c40664de9c",
        "date": "2023-09-26T09:59:26Z",
        "message": "chore: EXC-329: Remove deprecated set_controller management api"
      },
      {
        "id": "117db5eb586321cf0a1a49ff03106a0e55502715",
        "date": "2023-09-20T09:12:21Z",
        "message": "Merge branch 'dimitris/bump-cert-version' into 'master'\n\nchore: EXC-1477: Bump certification version to support subnet metrics in the state tree\n\n \n\nSee merge request dfinity-lab/public/ic!14718"
      },
      {
        "id": "275610a5f24efb1699602e7f7d098af816a593f1",
        "date": "2023-09-20T09:12:21Z",
        "message": "chore: EXC-1477: Bump certification version to support subnet metrics in the state tree"
      },
      {
        "id": "bf09c1bf087b7f8af64242464d154b2423c3c774",
        "date": "2023-09-19T10:34:25Z",
        "message": "Merge branch 'dimitris/fix-test' into 'master'\n\nFix canister_lifecycle test\n\n \n\nSee merge request dfinity-lab/public/ic!14870"
      },
      {
        "id": "b35666944ec450b66ef782e5eb68e1584fd1ef9a",
        "date": "2023-09-19T09:56:10Z",
        "message": "Fix canister_lifecycle test"
      },
      {
        "id": "5b135bff1b93eaec418f5d9a8af0adfab936dd34",
        "date": "2023-09-13T11:58:45Z",
        "message": "Merge branch 'EXC-1474-allow-replica-to-receive-canister-install-mode-v-2-in-order-to-use-skip-upgrade-functionality' into 'master'\n\nfeat: Allow replica to receive CanisterInstallModeV2 to use skip_upgrade functionality\n\nThis MR enables canisters to receive CanisterInstallModeV2, hence it enables `skip_pre_upgrade` functionality. This should be included in the release after the next one. It is the last step for [feature](https://dfinity.atlassian.net/browse/EXC-1334) initiated by interface [specs](https://github.com/dfinity/interface-spec/pull/135).\nCloses EXC-1474 \n\nCloses EXC-1474\n\nSee merge request dfinity-lab/public/ic!14479"
      },
      {
        "id": "b1cb0537f3ad8154e469bee9fc6e5be82c372c29",
        "date": "2023-09-08T16:25:00Z",
        "message": "Merge branch 'dimitris/remove-allow' into 'master'\n\nchore: Remove obsolete allow(unused)\n\n \n\nSee merge request dfinity-lab/public/ic!14688"
      },
      {
        "id": "f7de50491c695587869a19cec03480f0d59ec6be",
        "date": "2023-09-08T12:45:15Z",
        "message": "chore: Remove obsolete allow(unused)"
      },
      {
        "id": "d92abacd27118f3f3e0b122243ed7d80307d6147",
        "date": "2023-09-07T10:46:34Z",
        "message": "Merge branch 'dimitris/fix-link' into 'master'\n\nchore: Update links to interface spec\n\n \n\nSee merge request dfinity-lab/public/ic!14620"
      },
      {
        "id": "0ecb948723c823233bf800a63345668ad307cca1",
        "date": "2023-09-07T10:46:33Z",
        "message": "chore: Update links to interface spec"
      },
      {
        "id": "4ac653466b0c57e15e8a9d4ac21ebd96281abc5a",
        "date": "2023-09-06T10:28:22Z",
        "message": "Merge branch 'dimitris/rename-subnet-metrics' into 'master'\n\nchore: Rename subnet metrics\n\nThis MR updates the subnet metrics included in the state tree according to the latest names agreed to in the [spec](https://github.com/dfinity/interface-spec/pull/191). \n\nSee merge request dfinity-lab/public/ic!14540"
      },
      {
        "id": "bcae858aabf2ac4e8a5a812bcac2ff2793271c02",
        "date": "2023-09-06T10:28:22Z",
        "message": "chore: Rename subnet metrics"
      },
      {
        "id": "4417e9b4fab862d23a4c110658f750622a22763d",
        "date": "2023-08-31T15:04:47Z",
        "message": "Merge branch 'dimitris/add-subnet-metrics-to-state-tree' into 'master'\n\nfeat: EXC-1468: Add subnet metrics to state tree\n\nThis MR adds the subnet metrics specified in https://github.com/dfinity/interface-spec/pull/191 in the replicated state as well as exposing them in the state tree under the `subnet/<subnet_id>/metrics` path. This MR only adds the metrics and encodes them in the tree conditionally as long as replicas are running on the corresponding certification version. Follow up MRs will actually bump the certification version and eventually expose the metrics through the proposed new endpoint as per the spec PR. \n\nSee merge request dfinity-lab/public/ic!14438"
      },
      {
        "id": "91a5d1fe730539bd6094659a8e488c2d294ee711",
        "date": "2023-08-31T15:04:47Z",
        "message": "feat: EXC-1468: Add subnet metrics to state tree"
      },
      {
        "id": "126bd7b01796274c7e8b9e17d7c8d0fd3adb5757",
        "date": "2023-08-30T10:17:04Z",
        "message": "Merge branch 'dimitris/reject-composite-queries-replicated-mode' into 'master'\n\nfix: EXC-1470: Reject messages to composite query methods early in replicated mode\n\nComposite query methods are not allowed to be called in replicated mode based on the current interface spec. Such messages are rejected before execution at the moment. We can optimize a bit more and reject at the moment of submitting an ingress messages to such a method as we know it's not allowed. This MR implements this change. \n\nCloses EXC-1470\n\nSee merge request dfinity-lab/public/ic!14474"
      },
      {
        "id": "8d903d98e4483ca6d4060ae86d45edd65dac9d4a",
        "date": "2023-08-30T10:17:03Z",
        "message": "fix: EXC-1470: Reject messages to composite query methods early in replicated mode"
      },
      {
        "id": "f593b17a61694a2ba2222b4b6fe02d6fdee42fcb",
        "date": "2023-08-24T09:51:22Z",
        "message": "Merge branch 'dimitris/log-correct-instructions-consumed' into 'master'\n\nfix: EXC-1462: Log instructions consumed only for each step of install_code\n\nAn `install_code` request involves multiple steps of executing Wasm code. We have logs that are supposed to print the number of instructions consumed per each step (which is useful for debugging/analytical purposes). However, the current implementation actually prints the total number of instructions consumed by all steps so far (the reason is that `InstallCodeHelper::instructions_consumed` calculates the diff between the original message limit and instructions left after the current step).\n\nThis MR fixes this by calculating and returning the number of instructions consumed in `handle_wasm_execution` which is invoked after each step finishes processing. \n\nCloses EXC-1462\n\nSee merge request dfinity-lab/public/ic!14357"
      },
      {
        "id": "4b530820a24948c379ea45935d3f42c512502599",
        "date": "2023-08-24T09:51:22Z",
        "message": "fix: EXC-1462: Log instructions consumed only for each step of install_code"
      },
      {
        "id": "d57aa610b14e74344aa046f8326e0e88d4fc4a88",
        "date": "2023-08-18T11:57:48Z",
        "message": "Merge branch 'dimitris/reject-long-method-names' into 'master'\n\noptimize: EXC-1459: Enforce method_name does not exceed the allowed sum of exported function names\n\nThis MR implements a check when preparing an inter-canister call to enforce that the `method_name` does not exceed the sum of all exported function names that a canister can have, as described in the [interface spec](https://internetcomputer.org/docs/current/references/ic-interface-spec#system-api-module).\n\nThis is mostly an optimization in the sense that we know we can quickly return an error in that case and avoid potentially wasteful processing (including even routing the request to a remote subnet) until it eventually gets rejected as such a long function name would not be possible to exist given the Wasm module validations the IC imposes. \n\nSee merge request dfinity-lab/public/ic!14218"
      },
      {
        "id": "a26fca84b3251874cd6d83290c77756d0ad8b32f",
        "date": "2023-08-18T11:57:48Z",
        "message": "optimize: EXC-1459: Enforce method_name does not exceed the allowed sum of exported function names"
      },
      {
        "id": "707f6b23529e410fe816f00a5fc47e00072e0ae9",
        "date": "2023-08-15T10:25:57Z",
        "message": "Merge branch 'dimitris/warn-log' into 'master'\n\nchore: Convert log about open call contexts to warning\n\nConverting this log from error to warning as it doesn't indicate necessarily a problem with the replica and it might confuse people that there's something wrong with the IC instead of some buggy canister. \n\nSee merge request dfinity-lab/public/ic!14154"
      },
      {
        "id": "10c0ca8744bc24f33f7243eac9615b8966631c4e",
        "date": "2023-08-15T07:24:02Z",
        "message": "Merge branch 'dimitris/remove-ticket-comment' into 'master'\n\nchore: Remove comment about obsolete ticket\n\n \n\nSee merge request dfinity-lab/public/ic!13401"
      },
      {
        "id": "85e792af2058b1c217793aa5031791b98ff1c7ed",
        "date": "2023-08-15T07:07:45Z",
        "message": "chore: Convert log about open call contexts to warning"
      }
    ],
    "email": "dimitris@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 43,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 22,
    "fixes": 7,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "4ee1803d22f249560618e7a7acff1031b5fb7e31",
        "date": "2023-11-22T14:04:50Z",
        "message": "feat: Time out stop_canister requests"
      },
      {
        "id": "daa6f06dd25ef960036acd91bda9c281149b3464",
        "date": "2023-10-10T16:02:11Z",
        "message": "fix: Take message memory into account when calculating the freezing threshold"
      },
      {
        "id": "19cd48b7ad9f8d661ce82cd95937a8928ad9642a",
        "date": "2023-10-10T07:55:11Z",
        "message": "chore: EXC-1473: Require that certain fields exist for subnet metrics"
      },
      {
        "id": "446092072ecbd6a3006c6da4c258156639bf78d9",
        "date": "2023-10-03T14:32:13Z",
        "message": "test: EXC-1469: Add end to end tests for subnet read state endpoint"
      },
      {
        "id": "7e128ec036c9e60efc9905ed22fa92b0c1aa07b4",
        "date": "2023-10-03T13:15:22Z",
        "message": "chore: Fix typos and improve error message"
      },
      {
        "id": "a8f3ef124b9d53ac39c17dff3bcc9aee61a00599",
        "date": "2023-10-03T12:26:36Z",
        "message": "chore: EXC-370: Add metrics to track if deprecated fields in management calls are used"
      },
      {
        "id": "3c23cc3253a37b0d3ba2f574156a698b3b39842f",
        "date": "2023-10-02T14:08:35Z",
        "message": "fix: Handle gracefully if we have exhausted the complete range of canister ids"
      },
      {
        "id": "2e942ad4af420b877e51c7a853a2f63e8750737a",
        "date": "2023-09-29T09:50:56Z",
        "message": "chore: Remove QueryAllocation type"
      },
      {
        "id": "c2cd89927db07d0374f3850e5d60fdcea0373d66",
        "date": "2023-09-28T15:00:16Z",
        "message": "fix: EXC-1469: Handle error when converting to canister id"
      },
      {
        "id": "a78d5c5ecd355857be5cf76f40a33a3fb6be6785",
        "date": "2023-09-27T12:49:34Z",
        "message": "feat: EXC-1469: Expose subnet metrics through the http api"
      },
      {
        "id": "1fb3e549b8e338d28ffc344af04034c40664de9c",
        "date": "2023-09-26T09:59:26Z",
        "message": "chore: EXC-329: Remove deprecated set_controller management api"
      },
      {
        "id": "275610a5f24efb1699602e7f7d098af816a593f1",
        "date": "2023-09-20T09:12:21Z",
        "message": "chore: EXC-1477: Bump certification version to support subnet metrics in the state tree"
      },
      {
        "id": "b35666944ec450b66ef782e5eb68e1584fd1ef9a",
        "date": "2023-09-19T09:56:10Z",
        "message": "Fix canister_lifecycle test"
      },
      {
        "id": "f7de50491c695587869a19cec03480f0d59ec6be",
        "date": "2023-09-08T12:45:15Z",
        "message": "chore: Remove obsolete allow(unused)"
      },
      {
        "id": "0ecb948723c823233bf800a63345668ad307cca1",
        "date": "2023-09-07T10:46:33Z",
        "message": "chore: Update links to interface spec"
      },
      {
        "id": "bcae858aabf2ac4e8a5a812bcac2ff2793271c02",
        "date": "2023-09-06T10:28:22Z",
        "message": "chore: Rename subnet metrics"
      },
      {
        "id": "91a5d1fe730539bd6094659a8e488c2d294ee711",
        "date": "2023-08-31T15:04:47Z",
        "message": "feat: EXC-1468: Add subnet metrics to state tree"
      },
      {
        "id": "8d903d98e4483ca6d4060ae86d45edd65dac9d4a",
        "date": "2023-08-30T10:17:03Z",
        "message": "fix: EXC-1470: Reject messages to composite query methods early in replicated mode"
      },
      {
        "id": "4b530820a24948c379ea45935d3f42c512502599",
        "date": "2023-08-24T09:51:22Z",
        "message": "fix: EXC-1462: Log instructions consumed only for each step of install_code"
      },
      {
        "id": "a26fca84b3251874cd6d83290c77756d0ad8b32f",
        "date": "2023-08-18T11:57:48Z",
        "message": "optimize: EXC-1459: Enforce method_name does not exceed the allowed sum of exported function names"
      },
      {
        "id": "85e792af2058b1c217793aa5031791b98ff1c7ed",
        "date": "2023-08-15T07:07:45Z",
        "message": "chore: Convert log about open call contexts to warning"
      }
    ],
    "line_additions": 3486,
    "line_deletions": 1315,
    "lines_effected_total": 4801,
    "rel_comm_add": 11,
    "rel_comm_del": 9,
    "rel_comm_total": 14
  },
  {
    "login": "eichhorl",
    "id": 99166915,
    "totalContributions": 281,
    "github": "https://github.com/eichhorl",
    "commits": [
      {
        "id": "2e14994b58ca3d587fb5baee8b69a53558fd98ec",
        "date": "2023-10-30T17:08:05Z",
        "message": "Merge branch 'eichhorl/share-retransmission' into 'master'\n\nfeat(consensus): CON-1087 Don't relay shares during retransmissions\n\nFor the redesigned P2P-consensus interface, it is important that consensus respects a certain bound on the number of artifacts it advertizes, otherwise we could get stuck. Relaying shares could make consensus violate the bound, as it was calculated assuming no relaying.\n\nWhile proactive relaying of shares was disabled in https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/12942, they may still be relayed by nodes answering \"retransmission requests\" of other nodes catching up, or coming back online.\n\nWith this MR, shares not signed by the own node are no longer returned from `get_all_validated_by_filter` which excludes them when answering retransmission requests. This requires us to add the own node ID to consensus and certification pools.\n\n**Additionally:**\n- Ensure that overflows when incrementing the filter are handled properly.\n- For certifications, make sure to always take the maximum between the filter and the lowest artifact available. Otherwise we might try to lookup all artifacts between height 0 and the current height, even if those artifacts don't exist.\n- Extend unit test to exercise these edge cases. \n\nSee merge request dfinity-lab/public/ic!15569"
      },
      {
        "id": "111538c251558ddda56f3997b4b37d353a6c8e5c",
        "date": "2023-10-30T17:08:03Z",
        "message": "feat(consensus): CON-1087 Don't relay shares during retransmissions"
      },
      {
        "id": "daeb71b7fafc6250702224143e434a2e274d4c67",
        "date": "2023-10-24T13:26:03Z",
        "message": "Merge branch 'eichhorl/equal-min-chain-length' into 'master'\n\nfix(consensus): Use the same minimum chain length for consensus and certification\n\nThere doesn't appear to be good reason for them to be different. \n\nSee merge request dfinity-lab/public/ic!15597"
      },
      {
        "id": "5c2da37b38272d68a440450fd4cf67cf353f1a4e",
        "date": "2023-10-24T13:26:03Z",
        "message": "fix(consensus): Use the same minimum chain length for consensus and certification"
      },
      {
        "id": "6980ea551ac2df7c27442f59ed36a6f0c48d1dad",
        "date": "2023-10-17T18:58:58Z",
        "message": "Merge branch 'eichhorl/share-retransmission' into 'master'\n\nfeat(consensus): CON-1087 Don't relay shares during retransmissions\n\nFor the redesigned P2P-consensus interface, it is important that consensus respects a certain bound on the number of artifacts it advertizes, otherwise we could get stuck. Relaying shares could make consensus violate the bound, as it was calculated assuming no relaying.\n\nWhile proactive relaying of shares was disabled in https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/12942, they may still be relayed by nodes answering \"retransmission requests\" of other nodes catching up, or coming back online.\n\nWith this MR, shares not signed by the own node are no longer returned from `get_all_validated_by_filter` which excludes them when answering retransmission requests. This requires us to add the own node ID to consensus and certification pools. \n\nSee merge request dfinity-lab/public/ic!14456"
      },
      {
        "id": "d1ac31621fca8d3251b851711d21d98c0f9aaddb",
        "date": "2023-10-17T18:58:56Z",
        "message": "feat(consensus): CON-1087 Don't relay shares during retransmissions"
      },
      {
        "id": "7e65aa74958e54e37c235e673f7f719083c55b60",
        "date": "2023-09-21T13:28:07Z",
        "message": "Merge branch 'eichhorl/testp' into 'master'\n\nfix: delete nightly ingress manager proptest\n\nThis nightly test started failing as it is still built using cargo.\n\nThe same test is also ran on every MR, therefore we can remove it from the nightly pipeline. \n\nSee merge request dfinity-lab/public/ic!14918"
      },
      {
        "id": "cf0015e2f8985763b082db1e7ad7b6dd820bff28",
        "date": "2023-09-21T13:28:07Z",
        "message": "fix: delete nightly ingress manager proptest"
      },
      {
        "id": "9adeb5710860c05d0ace43b751552759a5ef4d84",
        "date": "2023-09-18T12:42:32Z",
        "message": "Merge branch 'eichhorl/fix-comment' into 'master'\n\nfix(consensus): CON-1097 Fix documentation of remove function in DKG pool\n\n \n\nSee merge request dfinity-lab/public/ic!14849"
      },
      {
        "id": "02b1221ad7863af00362bee9a21f4f5aa83da7ad",
        "date": "2023-09-18T12:42:32Z",
        "message": "fix(consensus): CON-1097 Fix documentation of remove function in DKG pool"
      },
      {
        "id": "226a4711f7a05d942468c0f667f6bdc58743a623",
        "date": "2023-09-13T09:33:34Z",
        "message": "Merge branch 'eichhorl/remove-artifact' into 'master'\n\nfeat(consensus): CON-1097 Allow P2P to delete unvalidated artifacts\n\n \n\nSee merge request dfinity-lab/public/ic!14512"
      },
      {
        "id": "8863911a58bc4e6b06f8c23056ec1e3c1ec10d90",
        "date": "2023-09-13T09:33:34Z",
        "message": "feat(consensus): CON-1097 Allow P2P to delete unvalidated artifacts"
      },
      {
        "id": "ffaf050e33df1faf7d529a5e9b09f0b3326d9615",
        "date": "2023-09-05T08:51:54Z",
        "message": "Merge branch 'eichhorl/tecdsa-perftest-updates' into 'master'\n\ntest(tecdsa): CON-1106 Enable optional download of metrics and network modification in tECDSA performance test\n\n \n\nSee merge request dfinity-lab/public/ic!14503"
      },
      {
        "id": "e0a973cbb116ba60fdd62893ed00d0b9cf61a7b6",
        "date": "2023-09-05T08:51:54Z",
        "message": "test(tecdsa): CON-1106 Enable optional download of metrics and network modification in tECDSA performance test"
      },
      {
        "id": "269e97e07164950a615453b852b49e87b1f9a4de",
        "date": "2023-08-09T15:00:30Z",
        "message": "Merge branch 'eichhorl/fp-workload-generator' into 'master'\n\ntest(CON-1096): Enable workload generator to send fractional number of requests per second\n\nThis is needed for tECDSA performance tests. \n\nSee merge request dfinity-lab/public/ic!14055"
      },
      {
        "id": "7ae350d0b55535ce7e0d1511f8954a0885cf0a30",
        "date": "2023-08-09T15:00:30Z",
        "message": "test(CON-1096): Enable workload generator to send fractional number of requests per second"
      }
    ],
    "email": "leo.eichhorn@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 16,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 8,
    "fixes": 3,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "111538c251558ddda56f3997b4b37d353a6c8e5c",
        "date": "2023-10-30T17:08:03Z",
        "message": "feat(consensus): CON-1087 Don't relay shares during retransmissions"
      },
      {
        "id": "5c2da37b38272d68a440450fd4cf67cf353f1a4e",
        "date": "2023-10-24T13:26:03Z",
        "message": "fix(consensus): Use the same minimum chain length for consensus and certification"
      },
      {
        "id": "d1ac31621fca8d3251b851711d21d98c0f9aaddb",
        "date": "2023-10-17T18:58:56Z",
        "message": "feat(consensus): CON-1087 Don't relay shares during retransmissions"
      },
      {
        "id": "cf0015e2f8985763b082db1e7ad7b6dd820bff28",
        "date": "2023-09-21T13:28:07Z",
        "message": "fix: delete nightly ingress manager proptest"
      },
      {
        "id": "02b1221ad7863af00362bee9a21f4f5aa83da7ad",
        "date": "2023-09-18T12:42:32Z",
        "message": "fix(consensus): CON-1097 Fix documentation of remove function in DKG pool"
      },
      {
        "id": "8863911a58bc4e6b06f8c23056ec1e3c1ec10d90",
        "date": "2023-09-13T09:33:34Z",
        "message": "feat(consensus): CON-1097 Allow P2P to delete unvalidated artifacts"
      },
      {
        "id": "e0a973cbb116ba60fdd62893ed00d0b9cf61a7b6",
        "date": "2023-09-05T08:51:54Z",
        "message": "test(tecdsa): CON-1106 Enable optional download of metrics and network modification in tECDSA performance test"
      },
      {
        "id": "7ae350d0b55535ce7e0d1511f8954a0885cf0a30",
        "date": "2023-08-09T15:00:30Z",
        "message": "test(CON-1096): Enable workload generator to send fractional number of requests per second"
      }
    ],
    "line_additions": 1206,
    "line_deletions": 132,
    "lines_effected_total": 1338,
    "rel_comm_add": 3,
    "rel_comm_del": 4,
    "rel_comm_total": 5
  },
  {
    "login": "anchpop",
    "id": 3711047,
    "totalContributions": 277,
    "github": "https://github.com/anchpop",
    "commits": [
      {
        "id": "2a869bb44176c9edfd72ae167a407d524c2435fb",
        "date": "2023-11-20T23:12:19Z",
        "message": "Merge branch '@anchpop/add-more-threshold-data' into 'master'\n\nNNS1-2725: Add minimum_yes_proportion_of_exercised to ProposalData\n\nSimilar to `minimum_yes_proportion_of_total`. This unblocks GIX & Dashboard from working on their end of this.\n\nCloses NNS1-2725 \n\nCloses NNS1-2725\n\nSee merge request dfinity-lab/public/ic!16198"
      },
      {
        "id": "45f81be19e0c78a5c43765df83ff91a901c69975",
        "date": "2023-11-20T23:12:19Z",
        "message": "NNS1-2725: Add minimum_yes_proportion_of_exercised to ProposalData"
      },
      {
        "id": "c7edc72aaac709ef5b6c4c9f9de00f9adaff1caf",
        "date": "2023-11-17T17:42:51Z",
        "message": "Merge branch '@anchpop/refactor-absolute-majority-calculation' into 'master'\n\nNNS1-2724: Refactor absolute majority calculation\n\nThe scope of IC-1634 has changed, and now we will need to change the majority requirement for some proposal types. This MR refactors the calculation of absolute_majority_decision so it does not depend on a particular threshold\n\nCloses NNS1-2724 \n\nCloses NNS1-2724\n\nSee merge request dfinity-lab/public/ic!16050"
      },
      {
        "id": "05c0d682cdca24fee57f2115bd52d46280c6f98d",
        "date": "2023-11-17T17:42:51Z",
        "message": "NNS1-2724: Refactor absolute majority calculation"
      },
      {
        "id": "4075b67a521920684ffaf8c6a1df6cf69a269c99",
        "date": "2023-11-16T22:45:30Z",
        "message": "Merge branch 'arshavir-and-andre/reinto-generic-binary-search-in-interval-find' into 'master'\n\nchore(NF): Reintroduce generic binary search in `Interval::find`\n\nThis MR reintroduces the application of a generic binary search function in `Interval::find` used in the Neurons' Fund implementation. \n\nSee merge request dfinity-lab/public/ic!16157"
      },
      {
        "id": "63608cbbe36fb6227581876215fab2e4e749be5d",
        "date": "2023-11-07T02:36:02Z",
        "message": "Merge branch '@anchpop/voting_eligible_neurons-iter' into 'master'\n\nRefactor voting_eligible_neurons to return an iterator\n\nThis allows us to use all the nice functions that work on iterators instead of needing bespoke neuron_store operations for each combination of fold/map/filter/etc \n\nSee merge request dfinity-lab/public/ic!15921"
      },
      {
        "id": "98fa57ff2811c1b1d5fe08c4a25c4af08c80185b",
        "date": "2023-11-07T01:30:43Z",
        "message": "Refactor voting_eligible_neurons to return an iterator"
      },
      {
        "id": "35d798a97fc1873d4937000177ace48058f64ed2",
        "date": "2023-11-03T00:04:45Z",
        "message": "Merge branch '@anchpop/NNS1-2669' into 'master'\n\nNNS1-2669: Refactor make_proposal\n\nThis unifies the logic, which is nice because you don't need to remember to change the behavior in two places when changing make_proposal. It also makes a lot of things that used to be implicit, explicit (e.g. ManageNeuron has no wait for quiet and no returning of the proposal submission fee). There was also some \"drift\" between the two implementations (different error messages for the same error, etc) that is now corrected.\n\nI highly recommend you review this MR commit-by-commit instead of just looking at all the changes at once. Think about it, it has all the benefit to the reviewer that 10 small atomic MRs would have, with none of the drawbacks. Also, the first commit is actually just !15835\n\nCloses NNS1-2669 \n\nCloses NNS1-2669\n\nSee merge request dfinity-lab/public/ic!15836"
      },
      {
        "id": "84eca851430b5ee4550d137932daa5202938b55e",
        "date": "2023-11-03T00:04:45Z",
        "message": "NNS1-2669: Refactor make_proposal"
      },
      {
        "id": "a28b7904935f9998c034c813700408764ccc27a8",
        "date": "2023-11-02T20:36:16Z",
        "message": "Move NeuronManagement anti-follow logic elsewhere in vote_and_cascade_follow"
      },
      {
        "id": "5860eb390edb281d5193e6e8315c5f97e9a50455",
        "date": "2023-11-02T15:45:28Z",
        "message": "Merge branch 'arshavir/fix-swap-can-commit' into 'master'\n\nfix(SNS): Matched Funding / Ensure Swap's `can_commit` depends only on direct participation amount\n\nThis MR adjusts the `can_commit` function of SNS Swap to use only direct participation amounts (as opposed to total participation amounts).\n\nThis should work for both legacy Neurons' Fund scheme (fixed funding) and for Matched Funding, as in both cases the fields relevant to the check \n(`current_direct_participation_e8s` and `max_direct_participation_e8s`) should be set to appropriate values at all times. \n\nSee merge request dfinity-lab/public/ic!15856"
      },
      {
        "id": "7abc0a3622a70dbdb27fe2c25191a2d45f3fb5f1",
        "date": "2023-11-01T20:11:48Z",
        "message": "Merge branch '@anchpop/refactor-cascade' into 'master'\n\nNNS1-2669: Move NeuronManagement-specific logic to cast_vote_and_cascade_follow\n\nThis deduplicates it (it used to be repeated in make_proposal and register_vote) \n\nSee merge request dfinity-lab/public/ic!15835"
      },
      {
        "id": "56424fdeef85b8f6ce6bdfd6f9e73db3e49b7242",
        "date": "2023-11-01T20:11:48Z",
        "message": "NNS1-2669: Move NeuronManagement-specific logic to cast_vote_and_cascade_follow"
      },
      {
        "id": "64f9ebf6befb95714446ba527ffc450fde554ebf",
        "date": "2023-11-01T16:48:56Z",
        "message": "Revert \"Merge branch '@anchpop/unwrap-verbose-macro' into 'master'\""
      },
      {
        "id": "1571ea3e61e9c35d64305ae08a04c208569a9e62",
        "date": "2023-10-31T18:01:01Z",
        "message": "Merge branch '@anchpop/unwrap-verbose-macro' into 'master'\n\nAdd unwrap_verbose! macro\n\nThe difference compared to `unwrap` is that it prints the expression that failed to unwrap (rather than just the fact that it was None)\n\nrust playground example: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=3a139e736ca17a7b8faed54ba227b265 \n\nSee merge request dfinity-lab/public/ic!15771"
      },
      {
        "id": "0cf879a1a8e701931d9fabef1444631d96995ca8",
        "date": "2023-10-31T18:01:00Z",
        "message": "Add unwrap_verbose! macro"
      },
      {
        "id": "f11364472cc8558b3c9f785153bbe20b8a81cae6",
        "date": "2023-10-31T17:37:25Z",
        "message": "Merge branch 'arshavir/arshavir/NNS1-2555-6' into 'master'\n\nchore(NNS1-2555): Matched Funding / Implement security review suggestions for NNS Governance's Neurons' Fund documentation\n\nThis MR implements some security review suggestions for NNS Governance's Neurons' Fund documentation. \n\nSee merge request dfinity-lab/public/ic!15787"
      },
      {
        "id": "82cd0e0689130fd9613c8b6e6411c31e2c49dcf1",
        "date": "2023-10-30T19:27:53Z",
        "message": "Merge branch '@anchpop/NNS1-2680' into 'master'\n\nfeat(NNS1-2680): Matched Funding / Replace binary search with generic implementation\n\nHow to know that this change is correct:\n\n1. Check out the first commit in this MR and run the tests (they will all pass)\n2. Then compare the first and second commits and see that if the first is correct, the second is also correct\n\nCloses NNS1-2680 \n\nCloses NNS1-2680\n\nSee merge request dfinity-lab/public/ic!15709"
      },
      {
        "id": "22bc417735ad4273012ed66e1fdabba278129ac4",
        "date": "2023-10-30T19:27:53Z",
        "message": "feat(NNS1-2680): Matched Funding / Replace binary search with generic implementation"
      },
      {
        "id": "8a85d331b3da77f2439784b23d944f4a117801bc",
        "date": "2023-10-27T05:53:20Z",
        "message": "Merge branch '@anchpop/NNS1-2590' into 'master'\n\nNNS1-2590: Matched Funding / Disallow (min|max)_icp when matched funding is enabled\n\nWe can tell whether matched funding is enabled in sns-init by looking at `self.neurons_fund_participation.is_some()`\n\nCloses NNS1-2590 \n\nCloses NNS1-2590\n\nSee merge request dfinity-lab/public/ic!15589"
      },
      {
        "id": "d3647f124df932f93f83f16eea6626a6743da7a6",
        "date": "2023-10-27T05:53:19Z",
        "message": "NNS1-2590: Matched Funding / Disallow (min|max)_icp when matched funding is enabled"
      },
      {
        "id": "224ae6023e9abf845c602a5c4cb4ab146c3836b5",
        "date": "2023-10-26T19:21:28Z",
        "message": "Merge branch '@anchpop/optional-min-max' into 'master'\n\nfeat(NNS1-2590): Matched Funding / Make minimum_icp and maximum_icp optional in the CLI\n\nNNS1-2590 says that min_icp and max_icp should be forbidden once MF is enabled. This means you should not have to enter the corresponding fields into the CLI. This MR makes them optional in the CLI (but doesn't change the validation in sns/init, so for now you still need to enter them) \n\nSee merge request dfinity-lab/public/ic!15703"
      },
      {
        "id": "bc52485b6190971615a68de753f59ac5037b8018",
        "date": "2023-10-26T19:21:27Z",
        "message": "feat(NNS1-2590): Matched Funding / Make minimum_icp and maximum_icp optional in the CLI"
      },
      {
        "id": "0aeddd1b1955c488af01cf21e10422de8b634bce",
        "date": "2023-10-26T00:15:03Z",
        "message": "Merge branch '@anchpop/NNS1-2680' into 'master'\n\nfeat(NNS1-2680): Matched Funding / Replace one of the binary search implementations in /rs/nns/governance/src/neurons_fund.rs with the binary search implementation in nervous_system_common\n\nHow to convince yourself this change is correct:\n\n1. Check out the commit with the title with `Use generic binary search function in \"function inverse\" code`\n2. Observe that it will panic if the replacement code gives a worse answer than the old code did\n3. Run the tests and see that it doesn't panic\n\nThis MR improves the readability of the binary_search implementation in nervous_system_common (the change does nothing other than making it more likely to return `(None, None)` if the preconditions are violated) \n\nSee merge request dfinity-lab/public/ic!15625"
      },
      {
        "id": "7a3b5731ea0f7a2cc7073b614fe22b090df9a7cc",
        "date": "2023-10-26T00:15:03Z",
        "message": "feat(NNS1-2680): Matched Funding / Replace one of the binary search implementations in /rs/nns/governance/src/neurons_fund.rs with the binary search implementation in nervous_system_common"
      },
      {
        "id": "f3f69df9fb8015ad1b2d990f12984f4969cf62bf",
        "date": "2023-10-25T19:19:51Z",
        "message": "Merge branch '@anchpop/remove-test-sns-wasm' into 'master'\n\nRemove test version of sns-wasm\n\nThis was added in a previous MR, but Arshavir and I just brainstormed a way that the same goal could be accomplished without adding a test version of sns-wasm. So this MR removes it and implements the solution that Arshavir and I came up with. \n\nSee merge request dfinity-lab/public/ic!15661"
      },
      {
        "id": "cf8b60c1d1eca3fab133874fa17603efcc1afad1",
        "date": "2023-10-25T19:19:51Z",
        "message": "Remove test version of sns-wasm"
      },
      {
        "id": "5130c042b5f5cc27bd10b2f70858a49e63ef9c35",
        "date": "2023-10-23T23:59:48Z",
        "message": "Merge branch '@anchpop/min-max-direct-participation-icp-cli' into 'master'\n\nMatched Funding / Add (min|max)imum_direct_participation_icp to the CLI\n\nIn the future, all SNSes will have to be initialized with this field. For now, we're just adding the field and making it optional. \n\nSee merge request dfinity-lab/public/ic!15587"
      },
      {
        "id": "b5600c469eab5a65b62b87cc1418b1c7ae912d65",
        "date": "2023-10-23T23:59:48Z",
        "message": "Matched Funding / Add (min|max)imum_direct_participation_icp to the CLI"
      },
      {
        "id": "e50525d92a8f395241d6b8a250013ecf835dacd6",
        "date": "2023-10-23T22:27:09Z",
        "message": "Merge branch '@anchpop/optional-tokens' into 'master'\n\nMatched Funding / Add optional_tokens to humanize\n\nMatched funding needs `min_direct_participant` and `max_direct_participant` added to the CLI. These fields can't be required right now, since we don't want to break CLI users before MF is ready. So, we want their types to be `Option<Tokens>`. Unfortunately this requires its own serializer/deserializer implementation, which is contributed in this MR. \n\nSee merge request dfinity-lab/public/ic!15580"
      },
      {
        "id": "572c8a83546355915fe4169ff669aa88712c9f62",
        "date": "2023-10-23T22:27:08Z",
        "message": "Matched Funding / Add optional_tokens to humanize"
      },
      {
        "id": "3984df6746bda872d5da6e4b8af3c81522b45d10",
        "date": "2023-10-23T17:25:03Z",
        "message": "Merge branch '@anchpop/NNS1-2607' into 'master'\n\nNNS1-2607: Add voting threshold information to ProposalData\n\nCloses NNS1-2607 \n\nCloses NNS1-2607\n\nSee merge request dfinity-lab/public/ic!14861"
      },
      {
        "id": "08b26ca3b6a7fca65c63f2fe5398ba2f7890a6bc",
        "date": "2023-10-23T17:25:02Z",
        "message": "NNS1-2607: Add voting threshold information to ProposalData"
      },
      {
        "id": "dd51544944987556c978e774aa7a1992e5c11542",
        "date": "2023-10-19T01:22:33Z",
        "message": "Merge branch '@anchpop/binary-search' into 'master'\n\nAdd binary search to nervous_system_common\n\nThis is needed for various parts of matched funding.\n\nThe nice thing about this implementation is that it is highly general. This is required because the usages of binary search that it will replace have different requirements. One is a traditional binary search within a function, and the other is a usage of binary search to approximate the inverse of a function. This implementation should be able to accommodate both of those usages.\n\nThe general idea with this implementation is that, given a range and a predicate, it finds the highest value where the predicate is false and the lowest value where the predicate is true. (The implementation assumes that the value is false at the beginning of the range, then switches to being true, then stays true for the rest of the range.) \n\nSee merge request dfinity-lab/public/ic!15282"
      },
      {
        "id": "79aca8ede9fccd322e0e01183ee72c0bc3ed2e61",
        "date": "2023-10-19T01:22:33Z",
        "message": "Add binary search to nervous_system_common"
      },
      {
        "id": "78993a337b4abd314a582af947a844e8cb578388",
        "date": "2023-10-19T00:53:42Z",
        "message": "Merge branch '@anchpop/latest-commit-fix' into 'master'\n\nfix: make latest_commit_with_prebuilt_artifacts always get latest commit\n\n## Problem\n\n`latest_commit_with_prebuilt_artifacts` only picks the latest commit that’s on or before the commit you’re currently on, not the latest commit in general. This has almost caused me to select the wrong commit before (when I didn’t realize that my clone was on an old commit). \n\n## Solution\n\nModify `latest_commit_with_prebuilt_artifacts` to pick the latest commit starting from origin/master \n\nSee merge request dfinity-lab/public/ic!13488"
      },
      {
        "id": "bab6c4415bfc314221e58d7f5d8da5477783b998",
        "date": "2023-10-18T02:29:28Z",
        "message": "Merge branch '@anchpop/NNS1-2569' into 'master'\n\nfeat(NNS1-2569): Matched Funding / Add neurons_fund_participation to SnsInitPayload\n\nCloses NNS1-2569\n\nCloses NNS1-2662 \n\nCloses NNS1-2569 and NNS1-2662\n\nSee merge request dfinity-lab/public/ic!15412"
      },
      {
        "id": "e197656657495efa50760176f2ff664c2922339e",
        "date": "2023-10-18T02:29:27Z",
        "message": "feat(NNS1-2569): Matched Funding / Add neurons_fund_participation to SnsInitPayload"
      },
      {
        "id": "0d662cb53d4e6ed8dfb403cc1477c767be06aabc",
        "date": "2023-10-16T18:12:28Z",
        "message": "Merge branch 'revert-5b98a0a9' into 'master'\n\nRevert \"Merge branch '@anchpop/NNS1-2647' into 'master'\"\n\nThis reverts merge request !15391 \n\nSee merge request dfinity-lab/public/ic!15407"
      },
      {
        "id": "887577c5cf9e5906a2f143b24d80f67cf6be0705",
        "date": "2023-10-16T18:12:27Z",
        "message": "Revert \"Merge branch '@anchpop/NNS1-2647' into 'master'\""
      },
      {
        "id": "5b98a0a965f53aa7d0e533b0325052ded0999f34",
        "date": "2023-10-14T01:05:56Z",
        "message": "Merge branch '@anchpop/NNS1-2647' into 'master'\n\nfeat(NNS1-2647): Genesis Neuron Tagging / Add `is_genesis` field to NNS Neurons\n\nCloses NNS1-2647 \n\nCloses NNS1-2647\n\nSee merge request dfinity-lab/public/ic!15391"
      },
      {
        "id": "25904e8f2371bae7a4c22033bf41ec18d75206c7",
        "date": "2023-10-14T01:05:56Z",
        "message": "feat(NNS1-2647): Genesis Neuron Tagging / Add `is_genesis` field to NNS Neurons"
      },
      {
        "id": "014cbf04e2ab854313b78706a4ff75427feae74e",
        "date": "2023-10-13T15:23:06Z",
        "message": "Merge branch '@anchpop/NNS1-2657' into 'master'\n\nfeat(NNS1-2657): Matched Funding / Introduce `neurons_fund_participation : opt bool` to `SwapParameters`\n\nA follow-up MR will add it to the SnsInitPayload (which will also allow it to be validated)\n\nCloses NNS1-2657 \n\nCloses NNS1-2657\n\nSee merge request dfinity-lab/public/ic!15373"
      },
      {
        "id": "d4c3460bfd22d8d55b779600c0d2e000469563cd",
        "date": "2023-10-13T15:23:05Z",
        "message": "feat(NNS1-2657): Matched Funding / Introduce `neurons_fund_participation : opt bool` to `SwapParameters`"
      },
      {
        "id": "8b70a56eedc32ac7d9be06926d87e61063941245",
        "date": "2023-10-11T17:43:21Z",
        "message": "Merge branch '@anchpop/one_proposal_neurons_fund_swap_participation_test-fix' into 'master'\n\nFix //rs/tests/nns/sns:one_proposal_neurons_fund_swap_participation_test\n\nReported by @m4rtinkoenig \n\nSee merge request dfinity-lab/public/ic!15342"
      },
      {
        "id": "b044a15975ca35119d5fdad26f8607c1f5f78556",
        "date": "2023-10-11T17:43:21Z",
        "message": "Fix //rs/tests/nns/sns:one_proposal_neurons_fund_swap_participation_test"
      },
      {
        "id": "15e69667ae983fa92c33794a3954d9ca87518af6",
        "date": "2023-10-10T23:44:26Z",
        "message": "Merge branch '@anchpop/NNS1-2639' into 'master'\n\nfeat(NNS1-2639): Matched Funding / Add `min_direct_icp` and `max_direct_icp` to swap and governance\n\n**Problem**\n\nA requirement of Matched Funding is that `min_direct_icp` and `max_direct_icp` replace `min_icp` and `max_icp`. \n\n**Solution**\n\nThis MR adds support for these fields in NNS Governance and SNS Swap, but doesn't yet extend the CLI to support them. (A follow-up MR will be created for that.)\n\n1. We add `min_direct_icp` and `max_direct_icp` to `CreateServiceNervousSystem`, `SnsInitParameters`, Swap's `Init`, and Swap's `Params`. We also add a comment on `min_icp` and `max_direct_icp` to say they're now deprecated.\n\n2. When a `CreateServiceNervousSystem` proposal is passed, `SnsInitParameters` are created. If `min_direct_icp` and `max_direct_icp` are present, then consistent values for `min_icp` and `max_icp` are computed and used in `SnsInitParameters`, and vice versa.\n\n3. Swap is modified to use `min_direct_icp` and `max_direct_icp`, ignoring `min_icp` and `max_icp` whenever possible. One exception is in `Params::validate`, which doesn't need to be updated as it's not called in the one-proposal flow.\n\nThe effect of this is that, when we upgrade, everyone can keep using their current workflow (e.g. `min_icp` and `max_icp` will still be in `Params`, old versions of the SNS CLI will still work, etc). But the new fields are added to the backend and the old ones can now be easily removed\n\nCloses NNS1-2639 \n\nCloses NNS1-2639\n\nSee merge request dfinity-lab/public/ic!15247"
      },
      {
        "id": "39b03642971cd208d27e181713677754b67a53f2",
        "date": "2023-10-10T23:44:25Z",
        "message": "feat(NNS1-2639): Matched Funding / Add `min_direct_icp` and `max_direct_icp` to swap and governance"
      },
      {
        "id": "09ebccb9984ad3c85fa3ce5e1da687f387f9e919",
        "date": "2023-10-09T20:44:17Z",
        "message": "Merge branch 'thurau/submit-nns-upgrade-script-improvement' into 'master'\n\nchore(nns): Improve the submit-mainnet-nns-upgrade-proposal.sh file to\n\nprint the dashboard link to the proposal after submitting \n\nSee merge request dfinity-lab/public/ic!15302"
      },
      {
        "id": "c522a52d779c557e00bf2a93fd25eb32b6c236b7",
        "date": "2023-09-30T00:16:23Z",
        "message": "Merge branch '@anchpop/token-count-in-proposal' into 'master'\n\nAdd token count to TransferSnsTreasuryFunds proposal rendering\n\nInspired by this comment https://forum.dfinity.org/t/new-sns-ability-to-mint-sns-tokens-revised-thresholds-for-voting/23382/2 \n\nSee merge request dfinity-lab/public/ic!15116"
      },
      {
        "id": "149e49775ce5b57633017c99d667d5013f23773c",
        "date": "2023-09-30T00:16:22Z",
        "message": "Add token count to TransferSnsTreasuryFunds proposal rendering"
      },
      {
        "id": "cb5c900313db4017a776526bb7353cc6e1a2c7cc",
        "date": "2023-09-22T21:28:02Z",
        "message": "Merge branch '@anchpop/NNS1-2612' into 'master'\n\nNNS1-2612: Make the expected values of `direct_participation_icp_e8s` and `neurons_fund_participation_icp_e8s` parametric in system tests\n\nCloses NNS1-2612 \n\nCloses NNS1-2612\n\nSee merge request dfinity-lab/public/ic!14959"
      },
      {
        "id": "e6f06c2d7b7a6c2b93a58c629af925907a0f2bcd",
        "date": "2023-09-22T21:28:02Z",
        "message": "NNS1-2612: Make the expected values of `direct_participation_icp_e8s` and `neurons_fund_participation_icp_e8s` parametric in system tests"
      },
      {
        "id": "1edbaa0959b4cc0192789619ea3f38e2c4280a29",
        "date": "2023-09-13T16:18:09Z",
        "message": "Merge branch '@anchpop/NNS1-2401' into 'master'\n\nNNS1-2401: Remove \"someone called me\" NNS logs in production\n\nThe NNS Governance logs come in handy sometimes when testing, so I persevered them when the canister is built in test mode\n\nCloses NNS1-2401 \n\nCloses NNS1-2401\n\nSee merge request dfinity-lab/public/ic!14758"
      },
      {
        "id": "5b83e267dd58d82a55e397daf7949cfab99222a8",
        "date": "2023-09-13T16:18:09Z",
        "message": "NNS1-2401: Remove \"someone called me\" NNS logs in production"
      },
      {
        "id": "39afe5d33e8fef5f9d0a370dc03436a7c60c4b6d",
        "date": "2023-09-12T20:14:18Z",
        "message": "Merge branch 'arshavir/NNS1-2553' into 'master'\n\nfeat(NNS1-2553): Match Funding / Add new field `Swap.current_neurons_fund_contribution_e8s`\n\nThis MR adds a new field `Swap.current_neurons_fund_contribution_e8s` in rs/sns/swap/proto/ic_sns_swap/pb/v1/swap.proto\n\nThe intention of this field is to provide the Neurons' Fund participation amount (in ICP e8s) into an SNS Swap at a given point in time.\n\nFor now, this is just a stub that will remain unset. \n\nSee merge request dfinity-lab/public/ic!14751"
      },
      {
        "id": "3e2f1a06b6dbf36bb9e927e813ea55eb2a75459d",
        "date": "2023-09-08T18:49:34Z",
        "message": "Merge branch '@anchpop/NNS1-2283' into 'master'\n\nNNS1-2283: Recalculate tallies for SNS proposals if the deadline hasn't passed yet\n\nCloses NNS1-2283 \n\nCloses NNS1-2283\n\nSee merge request dfinity-lab/public/ic!14699"
      },
      {
        "id": "8afad7954725b35dd9d3b12f7dfedb8a9e0e046b",
        "date": "2023-09-08T18:49:33Z",
        "message": "NNS1-2283: Recalculate tallies for SNS proposals if the deadline hasn't passed yet"
      },
      {
        "id": "9e8bb53e3ad64dcb7502af9c7ef98bba7a5c6b6e",
        "date": "2023-09-07T17:08:18Z",
        "message": "Merge branch '@anchpop/NNS1-2552' into 'master'\n\nNNS1-2552: Add test-only mint_tokens SNS api\n\nRequest from GIX team. SNS version of the NNS \"mint tokens\" button in the frontend dapp. As the API is only available in test builds, this is not a security issue. However, I've still asked Andy to review it just in case since obviously this is a sensitive topic.\n\nCloses NNS1-2552 \n\nCloses NNS1-2552\n\nSee merge request dfinity-lab/public/ic!14604"
      },
      {
        "id": "fb5a17354817ea560ecc0f68fa83f5c5e208af87",
        "date": "2023-09-07T17:08:17Z",
        "message": "NNS1-2552: Add test-only mint_tokens SNS api"
      },
      {
        "id": "9c136fa368f12f265b95f3425a1b84c1a71778e5",
        "date": "2023-09-05T23:57:03Z",
        "message": "Merge branch '@anchpop/NNS1-2264' into 'master'\n\nNNS1-2264: Add private_matter_voting_period_seconds for NeuronManagement-topic'd proposals\n\n**Problem**\n\n12 hours is not enough time for worldwide teams to vote on ManageNeuron proposals\n\n**Solution**\n\nThe length of ManageNeuron and ExchangeRate proposals is controlled by `short_voting_period_seconds`. Separate these so `ManageNeuron` is controlled by a new field, `private_matter_voting_period_seconds`, and set that to 48h in `canister_post_upgrade`.\n\n**Limitations**\n\nmedium_voting_period_seconds is not a great name. \n\nCloses NNS1-2264 \n\nCloses NNS1-2264\n\nSee merge request dfinity-lab/public/ic!14525"
      },
      {
        "id": "497a24b75671ef6376f3fe5f90b737174eece5da",
        "date": "2023-09-05T23:57:02Z",
        "message": "NNS1-2264: Add private_matter_voting_period_seconds for NeuronManagement-topic'd proposals"
      },
      {
        "id": "05bec4709c03cd526f4466aecd855cf5b76aee08",
        "date": "2023-08-31T05:13:49Z",
        "message": "Merge branch '@anchpop/NNS1-2278' into 'master'\n\nNNS1-2278: consider wait-for-quiet in closest_proposal_deadline_timestamp_seconds\n\nThe SNS already implements this correctly, so no change is necessary there.\n\nCloses NNS1-2278 \n\nCloses NNS1-2278\n\nSee merge request dfinity-lab/public/ic!14494"
      },
      {
        "id": "e5715da214a9960aed93decb75dcc61a346b5779",
        "date": "2023-08-31T03:47:26Z",
        "message": "NNS1-2278: consider wait-for-quiet in closest_proposal_deadline_timestamp_seconds"
      },
      {
        "id": "fffde48a638ad7cc2beabf1e3b1db76af6b89d9a",
        "date": "2023-08-29T16:36:36Z",
        "message": "Merge branch '@anchpop/NNS1-2426' into 'master'\n\nNNS1-2426: deduplicate error messages\n\nCloses NNS1-2426 \n\nCloses NNS1-2426\n\nSee merge request dfinity-lab/public/ic!14434"
      },
      {
        "id": "5cf6a8f1ab0f84b527648e7822d5970f4d58a2be",
        "date": "2023-08-29T16:36:36Z",
        "message": "NNS1-2426: deduplicate error messages"
      },
      {
        "id": "f6bacef55ffde1d2e139aef06681e2678db42963",
        "date": "2023-08-28T22:39:06Z",
        "message": "Merge branch '@anchpop/NNS1-2515' into 'master'\n\nNNS1-2515: Add `omit_large_fields` option to NNS Governance's list_proposals\n\nContext: This is a GIX request that allows them to ensure that the logo field doesn't cause the response from this API to exceed 2mb. Discussion of a better way to accomplish this would be welcome.\n\nDecisions:\n\n1. Why not just make a `omit_logo` option? Well, we may have more large fields in the future and it would be weird to have a separate option for each one. I also felt like this was a better API (the most common reason to not want to recieve something is because it's big. This will allow us to add big fields and automatically strip them without the GIX team having to make a change)\n2. Why not have an `omit_action` option? (This is technically what the MR asks for.) Because the GIX team uses the action (but not all the info inside it) when rendering the proposals list.\n\nCloses NNS1-2515 \n\nCloses NNS1-2515\n\nSee merge request dfinity-lab/public/ic!14408"
      },
      {
        "id": "b81b338d1047c3a19717ef2ea11b94db68db440c",
        "date": "2023-08-28T22:39:05Z",
        "message": "NNS1-2515: Add `omit_large_fields` option to NNS Governance's list_proposals"
      },
      {
        "id": "0072896ae7b33a57956abb4783c3165e75650f37",
        "date": "2023-08-24T21:11:57Z",
        "message": "Merge branch '@anchpop/NNS1-2439' into 'master'\n\nNNS1-2439: Add test-only endpoint to increase the maturity of an SNS neuron\n\nCloses NNS1-2439 \n\nCloses NNS1-2439\n\nSee merge request dfinity-lab/public/ic!14368"
      },
      {
        "id": "89f0110e87f81f69cbaaf141ca688af0cb825dcf",
        "date": "2023-08-24T21:11:57Z",
        "message": "NNS1-2439: Add test-only endpoint to increase the maturity of an SNS neuron"
      },
      {
        "id": "bd5c6ec4dbc1e2613bcb59891d7d4fc6e72beebf",
        "date": "2023-08-23T18:01:13Z",
        "message": "Merge branch '@anchpop/NNS1-2203' into 'master'\n\nNNS1-2203: Disallow refresh of NF SNS neurons\n\n\"NF SNS neurons\" are defined as neurons where the NNS governance canister is the only canister with the \\`ManagePrincipals\\` permission (and it does). Technically anyone could set the NNS governance canister as the only canister with the \\`ManagePrincipals\\` permission, but who would do that? Meanwhile, all NF neurons should always meet this criteria.\n\nCloses NNS1-2203 \n\nCloses NNS1-2203\n\nSee merge request dfinity-lab/public/ic!14337"
      },
      {
        "id": "1bfef71961c91e57714bb23bb99d948fc0240c19",
        "date": "2023-08-23T18:01:13Z",
        "message": "NNS1-2203: Disallow refresh of NF SNS neurons"
      },
      {
        "id": "bd646cf9385531f0b390b3d3d1f902d90b0c4a15",
        "date": "2023-08-23T01:26:04Z",
        "message": "Merge branch '@anchpop/NNS1-2501' into 'master'\n\nAdd neurons_fund_total_active_neurons to NNS governance metrics\n\n \n\nSee merge request dfinity-lab/public/ic!14264"
      },
      {
        "id": "c8d7a42c40a4a4a9d3171ec208c418a512e3e134",
        "date": "2023-08-23T01:26:03Z",
        "message": "Add neurons_fund_total_active_neurons to NNS governance metrics"
      },
      {
        "id": "ca3b8fca2ddae29297bfaffaf4ff2b2f8fd3b68a",
        "date": "2023-08-18T16:50:35Z",
        "message": "Merge branch '@anchpop/NNS1-2469' into 'master'\n\nCreate a test that verifies that the swap works with 1500 NF neurons\n\nThe real limit is 2085 neurons, but I wanted the test to have some wiggle room so it doesn't break every time we make the canister WASM slightly larger\n\nCloses NNS1-2469 \n\nCloses NNS1-2469\n\nSee merge request dfinity-lab/public/ic!14210"
      },
      {
        "id": "fa235719618d91388164e08137f8e09975c2e37c",
        "date": "2023-08-18T16:50:35Z",
        "message": "Create a test that verifies that the swap works with 1500 NF neurons"
      },
      {
        "id": "cf38e0c4c86187465b2f9f511a975690630aa852",
        "date": "2023-08-14T15:43:59Z",
        "message": "Merge branch '@anchpop/NNS1-2342' into 'master'\n\ntest NNS1-2342: add check of canister ownership after finalization\n\nCloses NNS1-2342 \n\nCloses NNS1-2342\n\nSee merge request dfinity-lab/public/ic!14134"
      },
      {
        "id": "67af9d7cbedbc76fbd9262d428e0fbd2d135a43d",
        "date": "2023-08-14T15:43:59Z",
        "message": "test NNS1-2342: add check of canister ownership after finalization"
      },
      {
        "id": "9b6d33fc0c0b446c96e2e38109f8c74c410f20c1",
        "date": "2023-08-11T07:34:02Z",
        "message": "Merge branch '@anchpop/NNS1-2342' into 'master'\n\nNNS1-2481: Use a system test to check that neuron maturities are deducted according to NF investment\n\nCloses NNS1-2481 \n\nCloses NNS1-2481\n\nSee merge request dfinity-lab/public/ic!14103"
      },
      {
        "id": "4b601da433e4817530715b8f68cbf632d1c0ba7e",
        "date": "2023-08-11T07:34:02Z",
        "message": "NNS1-2481: Use a system test to check that neuron maturities are deducted according to NF investment"
      },
      {
        "id": "14ddc1eb358e897f4e5064e1860647df9aa88af0",
        "date": "2023-08-08T21:03:12Z",
        "message": "Merge branch '@anchpop/remove-explicit-cf' into 'master'\n\nrefactor: deduplicate community fund info in tests\n\n \n\nSee merge request dfinity-lab/public/ic!14027"
      },
      {
        "id": "a4651982dc57be5cacf89799da2bd585f930e407",
        "date": "2023-08-08T20:11:53Z",
        "message": "refactor: deduplicate community fund info in tests"
      },
      {
        "id": "e3c735c67d770b53820efc28297ce3826c748ee5",
        "date": "2023-08-08T17:19:23Z",
        "message": "Merge branch '@anchpop/NNS1-2342' into 'master'\n\ntest NNS1-2472(one proposal): verify swap finalizes correctly when aborted\n\nOne decision made in this MR was to move some finalization-related code from `sns_deployment.rs` into a new file, `swap_finalization.rs`, just to keep things organized.\n\nCloses NNS1-2472 \n\nCloses NNS1-2472\n\nSee merge request dfinity-lab/public/ic!14009"
      },
      {
        "id": "fe9861217a19130c23ab0c72b2aa0236649006f8",
        "date": "2023-08-08T17:19:23Z",
        "message": "test NNS1-2472(one proposal): verify swap finalizes correctly when aborted"
      },
      {
        "id": "ec2a207529353aefdf8c1b8d8b0ce53dc1105c1b",
        "date": "2023-08-04T16:52:06Z",
        "message": "Merge branch '@anchpop/NNS1-2321' into 'master'\n\ntest(one-proposal): [NNS1-2321] Test that dapp canister control is transferred correctly\n\nCloses NNS1-2321 \n\nCloses NNS1-2321\n\nSee merge request dfinity-lab/public/ic!13935"
      },
      {
        "id": "8f0c7e5e28d455ec8da37c6f942b7332b6c4dc0a",
        "date": "2023-08-04T16:52:05Z",
        "message": "test(one-proposal): [NNS1-2321] Test that dapp canister control is transferred correctly"
      },
      {
        "id": "b421f502d0776c57ecb0b95d240e0c8ceb9f9634",
        "date": "2023-08-03T17:24:05Z",
        "message": "Merge branch '@anchpop/NNS1-2455' into 'master'\n\nNNS1-2455: rename neurons_fund_investment → neurons_fund_investment_icp [override-buf-check]\n\nCloses NNS1-2455 \n\nCloses NNS1-2455\n\nSee merge request dfinity-lab/public/ic!13903"
      },
      {
        "id": "46567782475131b1f5a595fc67058e625fb96eff",
        "date": "2023-08-03T17:24:03Z",
        "message": "NNS1-2455: rename neurons_fund_investment → neurons_fund_investment_icp [override-buf-check]"
      },
      {
        "id": "8eee3c0599d99bb5767c5b11e3785ff207fc06b0",
        "date": "2023-08-03T15:51:40Z",
        "message": "Merge branch '@anchpop/override-buf' into 'master'\n\nCI: Add mechanism to temporarily disable the protobuf backwards compatibility check\n\nSimilar to `[override-didc-check]`, this MR allows you to override the buf check with `[override-buf-check]`.\n\nCloses NNS1-2458 \n\nCloses NNS1-2458\n\nSee merge request dfinity-lab/public/ic!13905"
      },
      {
        "id": "5ac35281b348fe5b23adeed09b740f82c10b1f66",
        "date": "2023-08-03T15:51:39Z",
        "message": "CI: Add mechanism to temporarily disable the protobuf backwards compatibility check"
      },
      {
        "id": "5f7a34e417dd6c5dbfe2fb6bbf8d11373b34db5e",
        "date": "2023-08-02T19:13:53Z",
        "message": "NNS1-2459: Make sure restricted_countries is opitonal in sns-cli"
      },
      {
        "id": "1bda6d02d69ccc3a7f009e8407e89bdf7a5add4c",
        "date": "2023-08-02T15:06:05Z",
        "message": "Merge branch '@anchpop/NNS1-2449' into 'master'\n\ntest: [NNS1-2449] Restore the one-proposal payment flow system test\n\nCloses NNS1-2449 \n\nCloses NNS1-2449\n\nSee merge request dfinity-lab/public/ic!13890"
      },
      {
        "id": "4cf3f816cc4a680bbd7e2b41832b8e11ff2be0c9",
        "date": "2023-08-02T15:06:05Z",
        "message": "test: [NNS1-2449] Restore the one-proposal payment flow system test"
      },
      {
        "id": "8c89ebf6dc3d262f0088a8c4e6ba232c1f7955d5",
        "date": "2023-08-02T07:25:06Z",
        "message": "refactor: correct spelling of check-incompabilities"
      }
    ],
    "email": "andre.popovitch@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 94,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 50,
    "fixes": 1,
    "feats": 7,
    "non_merge_commits": [
      {
        "id": "45f81be19e0c78a5c43765df83ff91a901c69975",
        "date": "2023-11-20T23:12:19Z",
        "message": "NNS1-2725: Add minimum_yes_proportion_of_exercised to ProposalData"
      },
      {
        "id": "05c0d682cdca24fee57f2115bd52d46280c6f98d",
        "date": "2023-11-17T17:42:51Z",
        "message": "NNS1-2724: Refactor absolute majority calculation"
      },
      {
        "id": "98fa57ff2811c1b1d5fe08c4a25c4af08c80185b",
        "date": "2023-11-07T01:30:43Z",
        "message": "Refactor voting_eligible_neurons to return an iterator"
      },
      {
        "id": "84eca851430b5ee4550d137932daa5202938b55e",
        "date": "2023-11-03T00:04:45Z",
        "message": "NNS1-2669: Refactor make_proposal"
      },
      {
        "id": "a28b7904935f9998c034c813700408764ccc27a8",
        "date": "2023-11-02T20:36:16Z",
        "message": "Move NeuronManagement anti-follow logic elsewhere in vote_and_cascade_follow"
      },
      {
        "id": "56424fdeef85b8f6ce6bdfd6f9e73db3e49b7242",
        "date": "2023-11-01T20:11:48Z",
        "message": "NNS1-2669: Move NeuronManagement-specific logic to cast_vote_and_cascade_follow"
      },
      {
        "id": "0cf879a1a8e701931d9fabef1444631d96995ca8",
        "date": "2023-10-31T18:01:00Z",
        "message": "Add unwrap_verbose! macro"
      },
      {
        "id": "22bc417735ad4273012ed66e1fdabba278129ac4",
        "date": "2023-10-30T19:27:53Z",
        "message": "feat(NNS1-2680): Matched Funding / Replace binary search with generic implementation"
      },
      {
        "id": "d3647f124df932f93f83f16eea6626a6743da7a6",
        "date": "2023-10-27T05:53:19Z",
        "message": "NNS1-2590: Matched Funding / Disallow (min|max)_icp when matched funding is enabled"
      },
      {
        "id": "bc52485b6190971615a68de753f59ac5037b8018",
        "date": "2023-10-26T19:21:27Z",
        "message": "feat(NNS1-2590): Matched Funding / Make minimum_icp and maximum_icp optional in the CLI"
      },
      {
        "id": "7a3b5731ea0f7a2cc7073b614fe22b090df9a7cc",
        "date": "2023-10-26T00:15:03Z",
        "message": "feat(NNS1-2680): Matched Funding / Replace one of the binary search implementations in /rs/nns/governance/src/neurons_fund.rs with the binary search implementation in nervous_system_common"
      },
      {
        "id": "cf8b60c1d1eca3fab133874fa17603efcc1afad1",
        "date": "2023-10-25T19:19:51Z",
        "message": "Remove test version of sns-wasm"
      },
      {
        "id": "b5600c469eab5a65b62b87cc1418b1c7ae912d65",
        "date": "2023-10-23T23:59:48Z",
        "message": "Matched Funding / Add (min|max)imum_direct_participation_icp to the CLI"
      },
      {
        "id": "572c8a83546355915fe4169ff669aa88712c9f62",
        "date": "2023-10-23T22:27:08Z",
        "message": "Matched Funding / Add optional_tokens to humanize"
      },
      {
        "id": "08b26ca3b6a7fca65c63f2fe5398ba2f7890a6bc",
        "date": "2023-10-23T17:25:02Z",
        "message": "NNS1-2607: Add voting threshold information to ProposalData"
      },
      {
        "id": "79aca8ede9fccd322e0e01183ee72c0bc3ed2e61",
        "date": "2023-10-19T01:22:33Z",
        "message": "Add binary search to nervous_system_common"
      },
      {
        "id": "e197656657495efa50760176f2ff664c2922339e",
        "date": "2023-10-18T02:29:27Z",
        "message": "feat(NNS1-2569): Matched Funding / Add neurons_fund_participation to SnsInitPayload"
      },
      {
        "id": "25904e8f2371bae7a4c22033bf41ec18d75206c7",
        "date": "2023-10-14T01:05:56Z",
        "message": "feat(NNS1-2647): Genesis Neuron Tagging / Add `is_genesis` field to NNS Neurons"
      },
      {
        "id": "d4c3460bfd22d8d55b779600c0d2e000469563cd",
        "date": "2023-10-13T15:23:05Z",
        "message": "feat(NNS1-2657): Matched Funding / Introduce `neurons_fund_participation : opt bool` to `SwapParameters`"
      },
      {
        "id": "b044a15975ca35119d5fdad26f8607c1f5f78556",
        "date": "2023-10-11T17:43:21Z",
        "message": "Fix //rs/tests/nns/sns:one_proposal_neurons_fund_swap_participation_test"
      },
      {
        "id": "39b03642971cd208d27e181713677754b67a53f2",
        "date": "2023-10-10T23:44:25Z",
        "message": "feat(NNS1-2639): Matched Funding / Add `min_direct_icp` and `max_direct_icp` to swap and governance"
      },
      {
        "id": "149e49775ce5b57633017c99d667d5013f23773c",
        "date": "2023-09-30T00:16:22Z",
        "message": "Add token count to TransferSnsTreasuryFunds proposal rendering"
      },
      {
        "id": "e6f06c2d7b7a6c2b93a58c629af925907a0f2bcd",
        "date": "2023-09-22T21:28:02Z",
        "message": "NNS1-2612: Make the expected values of `direct_participation_icp_e8s` and `neurons_fund_participation_icp_e8s` parametric in system tests"
      },
      {
        "id": "5b83e267dd58d82a55e397daf7949cfab99222a8",
        "date": "2023-09-13T16:18:09Z",
        "message": "NNS1-2401: Remove \"someone called me\" NNS logs in production"
      },
      {
        "id": "8afad7954725b35dd9d3b12f7dfedb8a9e0e046b",
        "date": "2023-09-08T18:49:33Z",
        "message": "NNS1-2283: Recalculate tallies for SNS proposals if the deadline hasn't passed yet"
      },
      {
        "id": "fb5a17354817ea560ecc0f68fa83f5c5e208af87",
        "date": "2023-09-07T17:08:17Z",
        "message": "NNS1-2552: Add test-only mint_tokens SNS api"
      },
      {
        "id": "497a24b75671ef6376f3fe5f90b737174eece5da",
        "date": "2023-09-05T23:57:02Z",
        "message": "NNS1-2264: Add private_matter_voting_period_seconds for NeuronManagement-topic'd proposals"
      },
      {
        "id": "e5715da214a9960aed93decb75dcc61a346b5779",
        "date": "2023-08-31T03:47:26Z",
        "message": "NNS1-2278: consider wait-for-quiet in closest_proposal_deadline_timestamp_seconds"
      },
      {
        "id": "5cf6a8f1ab0f84b527648e7822d5970f4d58a2be",
        "date": "2023-08-29T16:36:36Z",
        "message": "NNS1-2426: deduplicate error messages"
      },
      {
        "id": "b81b338d1047c3a19717ef2ea11b94db68db440c",
        "date": "2023-08-28T22:39:05Z",
        "message": "NNS1-2515: Add `omit_large_fields` option to NNS Governance's list_proposals"
      },
      {
        "id": "89f0110e87f81f69cbaaf141ca688af0cb825dcf",
        "date": "2023-08-24T21:11:57Z",
        "message": "NNS1-2439: Add test-only endpoint to increase the maturity of an SNS neuron"
      },
      {
        "id": "1bfef71961c91e57714bb23bb99d948fc0240c19",
        "date": "2023-08-23T18:01:13Z",
        "message": "NNS1-2203: Disallow refresh of NF SNS neurons"
      },
      {
        "id": "c8d7a42c40a4a4a9d3171ec208c418a512e3e134",
        "date": "2023-08-23T01:26:03Z",
        "message": "Add neurons_fund_total_active_neurons to NNS governance metrics"
      },
      {
        "id": "fa235719618d91388164e08137f8e09975c2e37c",
        "date": "2023-08-18T16:50:35Z",
        "message": "Create a test that verifies that the swap works with 1500 NF neurons"
      },
      {
        "id": "67af9d7cbedbc76fbd9262d428e0fbd2d135a43d",
        "date": "2023-08-14T15:43:59Z",
        "message": "test NNS1-2342: add check of canister ownership after finalization"
      },
      {
        "id": "4b601da433e4817530715b8f68cbf632d1c0ba7e",
        "date": "2023-08-11T07:34:02Z",
        "message": "NNS1-2481: Use a system test to check that neuron maturities are deducted according to NF investment"
      },
      {
        "id": "a4651982dc57be5cacf89799da2bd585f930e407",
        "date": "2023-08-08T20:11:53Z",
        "message": "refactor: deduplicate community fund info in tests"
      },
      {
        "id": "fe9861217a19130c23ab0c72b2aa0236649006f8",
        "date": "2023-08-08T17:19:23Z",
        "message": "test NNS1-2472(one proposal): verify swap finalizes correctly when aborted"
      },
      {
        "id": "8f0c7e5e28d455ec8da37c6f942b7332b6c4dc0a",
        "date": "2023-08-04T16:52:05Z",
        "message": "test(one-proposal): [NNS1-2321] Test that dapp canister control is transferred correctly"
      },
      {
        "id": "46567782475131b1f5a595fc67058e625fb96eff",
        "date": "2023-08-03T17:24:03Z",
        "message": "NNS1-2455: rename neurons_fund_investment → neurons_fund_investment_icp [override-buf-check]"
      },
      {
        "id": "5ac35281b348fe5b23adeed09b740f82c10b1f66",
        "date": "2023-08-03T15:51:39Z",
        "message": "CI: Add mechanism to temporarily disable the protobuf backwards compatibility check"
      },
      {
        "id": "5f7a34e417dd6c5dbfe2fb6bbf8d11373b34db5e",
        "date": "2023-08-02T19:13:53Z",
        "message": "NNS1-2459: Make sure restricted_countries is opitonal in sns-cli"
      },
      {
        "id": "4cf3f816cc4a680bbd7e2b41832b8e11ff2be0c9",
        "date": "2023-08-02T15:06:05Z",
        "message": "test: [NNS1-2449] Restore the one-proposal payment flow system test"
      },
      {
        "id": "8c89ebf6dc3d262f0088a8c4e6ba232c1f7955d5",
        "date": "2023-08-02T07:25:06Z",
        "message": "refactor: correct spelling of check-incompabilities"
      }
    ],
    "line_additions": 6336,
    "line_deletions": 1898,
    "lines_effected_total": 8234,
    "rel_comm_add": 42,
    "rel_comm_del": 25,
    "rel_comm_total": 42
  },
  {
    "login": "mbjorkqvist",
    "id": 79091518,
    "totalContributions": 273,
    "github": "https://github.com/mbjorkqvist",
    "commits": [
      {
        "id": "9916d741db78aecb60e40bf92d3e28af4eaf084a",
        "date": "2023-11-21T10:15:57Z",
        "message": "Merge branch 'mathias-CRP-1909-delete-not-after-param-in-gen-tls-key-pair' into 'master'\n\nchore(crypto): CRP-1909: Delete not_after parameter in CspKeyGenerator::gen_tls_key_pair\n\nDelete the `not_after` parameter from the `CspKeyGenerator::gen_tls_key_pair` function. The parameter is removed from the call stack all the way to the `gen_tls_key_pair_internal` method in the `TlsHandshakeCspVault` implementation of the `LocalCspVault`, where the value is hard-coded. \n\nSee merge request dfinity-lab/public/ic!16183"
      },
      {
        "id": "9b6956c3bb4805965e943464122ddb41518ddfee",
        "date": "2023-11-21T10:15:57Z",
        "message": "chore(crypto): CRP-1909: Delete not_after parameter in CspKeyGenerator::gen_tls_key_pair"
      },
      {
        "id": "ae8142d31dd015c6c3567a2b989d0678d52bf1f4",
        "date": "2023-11-17T10:41:57Z",
        "message": "Merge branch 'mathias-CRP-1695-move-threshold-sig-der-helper-functions-to-utility-crate' into 'master'\n\nchore(crypto): CRP-1695: Move threshold sig der conversion functions to utility crate\n\nMove `threshold_sig_public_key_to_der` and `threshold_sig_public_key_from_der` functions to `ic-crypto-utils-threshold-sig-der` utility crate. This allows changing many dependencies from the larger `ic-crypto` crate, to the smaller utility crate. \n\nSee merge request dfinity-lab/public/ic!16152"
      },
      {
        "id": "f876f200f0e9e43a9ebcf2ac24239e5eece9512d",
        "date": "2023-11-17T10:41:56Z",
        "message": "chore(crypto): CRP-1695: Move threshold sig der conversion functions to utility crate"
      },
      {
        "id": "56123a83c3955f26b57f274f552340eab707a6a1",
        "date": "2023-11-17T08:17:52Z",
        "message": "Merge branch 'mathias-CRP-1695-remove-unused-verify-combined-threshold-sig' into 'master'\n\nchore(crypto): CRP-1695: Remove unused verify_combined_threshold_sig function\n\nRemove unused `verify_combined_threshold_sig` function. \n\nSee merge request dfinity-lab/public/ic!16146"
      },
      {
        "id": "3c3eca29964dce91eab3fa044390b796c1520ecf",
        "date": "2023-11-17T08:17:51Z",
        "message": "chore(crypto): CRP-1695: Remove unused verify_combined_threshold_sig function"
      },
      {
        "id": "35803459471e826c447b6deba404c8a0ae6b3f78",
        "date": "2023-11-06T09:39:55Z",
        "message": "Merge branch 'mathias-CRP-2252-canister-sks-lock-acquisitions' into 'master'\n\nfeat(crypto): CRP-2252: Only acquire write lock for the canister secret key store when needed to modify it for retain\n\nBefore acquiring the canister SKS write lock when calling `idkg_retain_active_keys`, first acquire just a read lock and check if the keystore would be modified - if yes, release the read lock, acquire the write lock, and call the retain method. This approach does introduce a race condition - in case there are multiple concurrent callers to `idkg_retain_active_keys`, some additional work may be performed. However, the correctness is not affected.\n\nWith the changes in this MR, running the `tecdsa_performance_colocate` system test that generates tECDSA load, there are a lot of write lock acquisitions to the canister SKS while the load generator is running, but after it finishes, no more write locks are acquired:\n![image](/uploads/2cbe6e30c31ccdc3e5ce2dffd81528dd/image.png)\n\nThere continue to be calls to `idkg_retain_active_keys`, which previously acquired write locks each time:\n![image](/uploads/611a46eaa8b8da1bbcf7f82db33459ac/image.png) \n\nSee merge request dfinity-lab/public/ic!15720"
      },
      {
        "id": "61c7d080e9b26ba85e59a32fd3db5da64c1bc11a",
        "date": "2023-11-06T09:39:54Z",
        "message": "feat(crypto): CRP-2252: Only acquire write lock for the canister secret key store when needed to modify it for retain"
      },
      {
        "id": "5bd3b0dd55d975d0c5086f72c9f5bdda0af37557",
        "date": "2023-11-01T18:13:07Z",
        "message": "Merge branch 'mathias-CRP-1043-remove-nidkg-placeholder-to-delete' into 'master'\n\nchore(crypto): CRP-1043: Remove placeholder_to_delete from CspNiDkgTranscript production code\n\nRemove the `CspNiDkgTranscript::placeholder_to_delete` from the production code. In the places where it was used:\n- In the test utilities, inline the code\n- For the unit tests in the `ic-types` crate, add it as a standalone crate-internal function \n\nSee merge request dfinity-lab/public/ic!15668"
      },
      {
        "id": "e650225a2c5dd1f24a651104c888b4de539c04f5",
        "date": "2023-11-01T18:13:07Z",
        "message": "chore(crypto): CRP-1043: Remove placeholder_to_delete from CspNiDkgTranscript production code"
      },
      {
        "id": "6d3be90c1859bd4f115c161223b5d5e112c605c2",
        "date": "2023-10-23T11:10:31Z",
        "message": "Merge branch 'rename_crypto_internal_function_name_in_docs' into 'master'\n\nchore(crypto): Correct renamed function name in docs\n\nThe `retain_most_recent_idkg_public_keys_up_to_inclusive` function in the `ic_crypto_internal_csp::public_key_store::PublicKeyStore` trait was [recently renamed](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15094#note_1606674190) to `retain_idkg_public_keys_since`, but the old name was still used in the rustdocs for `would_retain_idkg_public_keys_modify_pubkey_store`. This MR fixes the name in the docs. Raised as a review comment in [the forum](https://forum.dfinity.org/t/voting-for-a-new-ic-release-c2e5826/23925/4). \n\nSee merge request dfinity-lab/public/ic!15558"
      },
      {
        "id": "068c12229a8db3d2b4e354f58245ec4826b79eea",
        "date": "2023-10-23T11:10:30Z",
        "message": "chore(crypto): Correct renamed function name in docs"
      },
      {
        "id": "c3db1dc4ccc493543c720052155ceb180492c895",
        "date": "2023-10-19T08:03:53Z",
        "message": "Merge branch 'mathias-CRP-2226-only-acquire-sks-write-lock-when-necessary-for-nidkg-retain' into 'master'\n\nfeat(crypto): CRP-2226: Only acquire SKS write lock when necessary for NI-DKG retain\n\nUse a read lock to check if calling `retain` on the SKS as part of the NI-DKG `retain_threshold_keys_if_present` operation would result in the SKS being modify, and iff so, actually call `retain` on the SKS while holding a write lock.\n\nComparing the number of write lock acquisitions for the SKS over a period of 3h for two static testnets, one deployed using the tip of the master branch, and the other using the branch from this MR, shows the following:\n\nFor master there were [92 SKS write lock acquisitions](https://grafana.testnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1&var-datasource=IC+VictoriaMetrics&var-ic=medium05&var-ic_subnet=hnaoo-7e7xu-qxo42-mh47z-vegg5-bdjny-4qkxn-a7rs2-dyks5-nvomm-fae&var-instance=%5B2602%3Afb2b%3A100%3A10%3A5000%3A8dff%3Afe4e%3A78c3%5D%3A9090&var-instance_host=All&var-dc=All&from=1697215412227&to=1697226212227&viewPanel=31) over a period of 3h for a random node on the application subnet:\n\n![image](/uploads/219453af4e0b55eb4f912a4408c547a6/image.png)\n\nFor this MR branch, there were [88 SKS write lock acquisitions](https://grafana.testnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1&var-datasource=IC+VictoriaMetrics&var-ic=medium09&var-ic_subnet=2gfvn-tvviq-jgrvq-77e2r-df6he-fifhn-hexfl-7dtus-nl2f6-ebiuo-7ae&var-instance=%5B2602%3Afb2b%3A100%3A10%3A5000%3A8aff%3Afe45%3A6ee4%5D%3A9090&var-instance_host=All&var-dc=All&from=1697215387486&to=1697226187486&viewPanel=31) during the same 3h time period for a random node on the application subnet:\n\n![image](/uploads/82661132fad3633f08ab1e5a7a0fc90b/image.png)\n\nIn both cases, the SKS write lock acquisitions occurred in batches of 4 every ~8 minutes. It would seem like this MR has no effect. For the tested scenario, this is true, due to how the methods on the crypto component are called by consensus - at each NI-DKG interval, old keys are deleted (by calling the `retain` API with the key IDs to keep), and new transcripts are loaded. When NI-DKG is successful, there are always keys to delete. If NI-DKG were to fail, then the changes in this MR would result in only a read lock on the SKS being acquired. \n\nSee merge request dfinity-lab/public/ic!15161"
      },
      {
        "id": "e5173bc44556cdefbd51b414ff9360e1741d4fd6",
        "date": "2023-10-19T08:03:52Z",
        "message": "feat(crypto): CRP-2226: Only acquire SKS write lock when necessary for NI-DKG retain"
      },
      {
        "id": "7d93856d8e5bc7086ef8b0c24b7848767bcc6275",
        "date": "2023-10-18T09:48:52Z",
        "message": "Merge branch 'mathias-CRP-2226-only-acquire-sks-write-lock-when-necessary-for-update-fs-epoch' into 'master'\n\nfeat(crypto): CRP-2226, CRP-835: Only acquire SKS write lock when necessary for NI-DKG update_forward_secure_epoch\n\nOnly acquire the SKS write lock when necessary when updating the forward secure epoch. Do this by checking if we should update the epoch or not while holding a read lock, and if necessary, obtain the write lock, recheck the conditions, and update the key in the SKS.\n\nSo, instead of doing the following:\n1. Acquire SKS read lock and get the current FS key\n2. Update the key epoch\n3. Acquire the SKS write lock and write the updated FS key\n\nDo this:\n1. Acquire the SKS read lock and get the current FS key\n2. If the current epoch is equal to or smaller than the key in the SKS, return; if not, do the following:\n  1. Update the key epoch to the current epoch\n  2. Acquire the SKS write lock\n  3. Re-read the FS key from the SKS, and update it iff the current epoch is larger than the key in the SKS\n\nComparing the number of write lock acquisitions for the SKS over a period of 3h for two static testnets, one deployed using the tip of the master branch, and the other using the branch from this MR, shows the following:\n\nFor master, there were [92 SKS write lock acquisitions, 4 roughly every 8 minutes](https://grafana.testnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1&var-datasource=IC+VictoriaMetrics&var-ic=medium05&var-ic_subnet=hnaoo-7e7xu-qxo42-mh47z-vegg5-bdjny-4qkxn-a7rs2-dyks5-nvomm-fae&var-instance=%5B2602%3Afb2b%3A100%3A10%3A5000%3A8dff%3Afe4e%3A78c3%5D%3A9090&var-instance_host=All&var-dc=All&from=1697215412227&to=1697226212227&viewPanel=31):\n![image](/uploads/3602a1c495efeb7ba3538a85330e3e80/image.png)\n\nFor this MR branch, there were [69 SKS write lock acquisitions, 3 roughly every 8 minutes](https://grafana.testnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1&var-datasource=IC+VictoriaMetrics&var-ic=medium10&var-ic_subnet=herun-i747p-nxmne-ni7mj-364yw-oepim-rinhw-y2y7j-htozb-3eygm-gae&var-instance=%5B2602%3Afb2b%3A100%3A10%3A5000%3Ac3ff%3Afe50%3A4397%5D%3A9090&var-instance_host=All&var-dc=All&from=1697215395330&to=1697226195330&viewPanel=31):\n![image](/uploads/97608b180da54af5ec6764f86cf7ed1c/image.png)\n\nIn this case, the drop can be explained by the absence of SKS write lock acquisitions for calls to NI-DKG `update_forward_secure_epoch`. Since there is no workload running on the testnet, the registry version remains unchanged, and therefore also the NI-DKG epoch (since it is derived from the registry version). The changes in this MR therefore eliminate the SKS write lock acquisitions for updating the forward secure epoch, since the check while holding the read lock already determines that no updates to the key is necessary. \n\nSee merge request dfinity-lab/public/ic!15190"
      },
      {
        "id": "bbb05b5f85bddf6f1edae5ca3e278de40108851f",
        "date": "2023-10-18T09:48:52Z",
        "message": "feat(crypto): CRP-2226, CRP-835: Only acquire SKS write lock when necessary for NI-DKG update_forward_secure_epoch"
      },
      {
        "id": "1a01f85fc1994e69dd5ba72b4d87fe9f9c4093ee",
        "date": "2023-10-18T07:22:18Z",
        "message": "Merge branch 'mathias-CRP-2226-use-only-pks-read-lock-when-possible-for-idkg-retain' into 'master'\n\nfeat(crypto): CRP-2226: Use only pks read lock when possible for iDKG retain\n\nCurrently, we acquire write locks for both public and secret key stores at the same time when calling the iDKG retain active keys API. This API is called once per minute by consensus, and usually, there are no changes necessary to the key stores (no old keys to remove). Acquiring write locks for both key stores in this manner, when most of the time there is no need to modify the key stores, means that readers of the key stores need to wait as long as the write locks are held. For metrics on how read and write locks are required, and the waiting times for acquiring them, see the [Lock acquisition times dashboard](https://grafana.mainnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1).\n\nTo improve the situation for readers of the key stores, this MR introduces an initial check in only the public key store, to see if calling the retain API would lead to modifying the public key store - if no, we can simply return early from the retain call. If modifications are required (old keys need to be removed), we acquire write locks for both key stores as before, and make the changes (actually calling the retain API on the key stores).\n\nSimilar changes for other APIs are planned to be introduced in separate MRs of the same ticket.\n\nMetrics from a static testnet deployed using the current master branch shows [290 SKS write lock acquisitions over a 3h period for a single node on an iDKG key rotation enabled app subnet](https://grafana.testnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1&var-datasource=IC+VictoriaMetrics&var-ic=medium08&var-ic_subnet=kqkqs-5j7mz-ae2ya-2jopn-4ssqq-y6vcg-wn5on-55lmp-5jepa-orvka-wae&var-instance=%5B2602%3Afb2b%3A100%3A10%3A5000%3A12ff%3Afe4b%3A87c2%5D%3A9090&var-instance_host=All&var-dc=All&from=1697215379528&to=1697226179528&viewPanel=31):\n![image](/uploads/ee137fc15ded9b98c47ef025f21fd2fe/image.png)\n\nSimilar metrics from another static testnet deployed using this MR branch shows [129 SKS write lock acquisitions over a 3h period for a single node on an iDKG key rotation enabled app subnet](https://grafana.testnet.dfinity.network/d/crypto-lock-acquisition/lock-acquisition-times?orgId=1&var-datasource=IC+VictoriaMetrics&var-ic=medium07&var-ic_subnet=7rym5-ozcas-ewcnb-qbawa-ixo3e-torac-zsz65-gnqh2-k7q5k-25cq6-rqe&var-instance=%5B2602%3Afb2b%3A100%3A10%3A5000%3A46ff%3Afe2b%3A6c83%5D%3A9090&var-instance_host=All&var-dc=All&from=1697215369380&to=1697226169380&viewPanel=31):\n![image](/uploads/65b270fa233744cec5cf693ae68695fb/image.png) \n\nSee merge request dfinity-lab/public/ic!15094"
      },
      {
        "id": "ab5c546e9365b5124de33970193f3ec921bba926",
        "date": "2023-10-18T07:22:17Z",
        "message": "feat(crypto): CRP-2226: Use only pks read lock when possible for iDKG retain"
      },
      {
        "id": "e888feaa43197a65fdf201530dabf9635f87d047",
        "date": "2023-10-10T07:08:57Z",
        "message": "Merge branch 'mathias-CRP-1043-move-dummy-transcript-methods-to-test-utils-crate' into 'master'\n\nchore(crypto): CRP-1043: Move NI-DKG dummy_transcript functions to ic-crypto-test-utils-ni-dkg crate\n\nCopy the `dummy_transcript_for_tests` and `dummy_transcript_for_tests_with_params` from `impl NiDkgTranscript` in the `ic-types` crate, to the `ic-crypto-test-utils-ni-dkg` crate, and adapt the callers to use those functions.\n\nThe reason why this is \"copy\" and not \"move\", is because the `ic-types` unit tests also need to be able to create dummy `NiDkgTranscript` instances. Those tests cannot use the functions moved to the `ic-crypto-test-utils-ni-dkg` crate due to (quasi-)circular dependencies. Since the idea is anyway to change the functions in the `ic-crypto-test-utils-ni-dkg` crate to perform real NI-DKG when creating the transcripts for tests, this (temporary) code duplication should be fine. In the `ic-types` unit tests that require dummy NI-DKG transcripts, it is anyway not possible to run the real NI-DKG protocol. Since the `NiDkgTranscript::dummy_transcript_for_tests` and `NiDkgTranscript::dummy_transcript_for_tests_with_params` are no longer used outside the `ic-types` crate, the whole `impl NiDkgTranscript` block can now be marked as `#[cfg(test)]`. \n\nSee merge request dfinity-lab/public/ic!15133"
      },
      {
        "id": "5b881673d10e537b3abcc27f554df2aef247f0c4",
        "date": "2023-10-10T07:08:56Z",
        "message": "chore(crypto): CRP-1043: Move NI-DKG dummy_transcript functions to ic-crypto-test-utils-ni-dkg crate"
      },
      {
        "id": "1c5e27658f7680fdce606a0545e3ebafbb758310",
        "date": "2023-09-29T16:02:23Z",
        "message": "Merge branch 'mathias-CRP-1043-move-ni-dkg-test-utils-to-subcrate' into 'master'\n\nrefactor(crypto): CRP-1043: Move NI-DKG test utils to ni-dkg test utils subcrate\n\nThe NI-DKG test utilities in the `ic-crypto-test-utils` crate would fit better in the NI-DKG-specific `ic-crypto-test-utils-ni-dkg` crate. This facilitates some planned future work for this ticket [CRP-1043](https://dfinity.atlassian.net/browse/CRP-1043). \n\nSee merge request dfinity-lab/public/ic!15073"
      },
      {
        "id": "943e4044ff3a9694f7473158e7679b3c1e2a31b6",
        "date": "2023-09-29T16:02:23Z",
        "message": "refactor(crypto): CRP-1043: Move NI-DKG test utils to ni-dkg test utils subcrate"
      },
      {
        "id": "1d9e28b0f65b92fbcf15862144cd1af6370e1990",
        "date": "2023-09-28T14:40:43Z",
        "message": "Merge branch 'mathias-remove-unused-crypto-dependencies' into 'master'\n\nchore(crypto): Remove unused dependencies under rs/crypto\n\nLooked for unused dependencies under `/rs/crypto` using `cargo +nightly udeps`. Manually verified which ones were actually not used and removed them. \n\nSee merge request dfinity-lab/public/ic!15059"
      },
      {
        "id": "3bb3d0ac0499b6f4fb04e0d89f94089cdfb3392e",
        "date": "2023-09-28T14:40:43Z",
        "message": "chore(crypto): Remove unused dependencies under rs/crypto"
      },
      {
        "id": "1b93c9976b8c4e7aa214e5f1bf136aa48935a74f",
        "date": "2023-09-26T15:22:20Z",
        "message": "Merge branch 'mathias-CRP-2205-metrics-enum-snakecase-conversions' into 'master'\n\nchore(crypto): CRP-2205: Compile-time formatting of metrics enum variants\n\nImproves the performance of string conversions by two orders of magnitude.\n\nConverting all variants of all enums defined in `rs/crypto/internal/logmon/src/metrics.rs` to a string.  \n- Existing impl using `IntoStaticStr` and dynamically calling `to_case(Case::Snake)`\n   - iterations: 100_000\n      - elapsed time: 71.064902459s\n   - iterations: 10_000\n      - elapsed time: 7.119829917s\n- New impl using `strum::Display` and `#[strum(serialize_all = \"snake_case\")]`\n   - iterations: 100_000\n      - elapsed time: 0.255056459s\n   - iterations: 10_000\n      - elapsed time: 0.024209375s \n\nSee merge request dfinity-lab/public/ic!14944"
      },
      {
        "id": "a71a4b7b1bef0a2833d8fab580b10416fe76906b",
        "date": "2023-09-26T15:22:20Z",
        "message": "chore(crypto): CRP-2205: Compile-time formatting of metrics enum variants"
      },
      {
        "id": "b3529a0d05361a427c4a9647ede8ead8ce3e5768",
        "date": "2023-09-20T12:27:18Z",
        "message": "Merge branch 'mathias-CRP-2189-add-canister-test-for-ic-validator-ingress-message' into 'master'\n\ntest(crypto): CRP-2189: Add canister test for ic-validator-ingress-message\n\nAdd a canister test to verify that `ic-validator-ingress-message` compiles to wasm. This is intended to be a smoke test - to verify that the `ic-validator-ingress-message` crate can be compiled to wasm, and used in a canister. To that end, the interfaces to the canister is not necessarily very useful - the `validate_anonymous_http_request_at_time` query call takes the current time as input, internally creates an anonymous HTTP request, and validates it using the provided time as the `ingress_expiry` time. The test calls this method with two different values, and checks that at the start of the UNIX epoch, the request is invalid, whereas at genesis (the current time of the canister in the `state_machine_test` framework, the request is valid. \n\nSee merge request dfinity-lab/public/ic!14621"
      },
      {
        "id": "fda6b35854f353863bc443d10b9b579d0897467a",
        "date": "2023-09-20T12:27:18Z",
        "message": "test(crypto): CRP-2189: Add canister test for ic-validator-ingress-message"
      },
      {
        "id": "b129d596daee719ecd62959a17b91921cc133e4b",
        "date": "2023-09-19T16:43:10Z",
        "message": "Merge branch 'mathias-CRP-1539-enable-metrics-for-crypto-csp-vault' into 'master'\n\nfeat(crypto): CRP-1539: Enable metrics for crypto csp vault\n\nEnable metrics for the crypto csp vault process by exporting the metrics over a new socket, importing them into the replica, and exposing them with an `adapter_cryptocsp_` prefix on the regular metrics endpoint of the replica. This functionality builds on that already used by the canister HTTP and bitcoin adapters.\n\nThis MR also adds a system test that verifies that the metrics are exported correctly, by starting up a single node, connecting to the replica metrics endpoint, and verifying that metrics with the expected prefix appear. \n\nSee merge request dfinity-lab/public/ic!14773"
      },
      {
        "id": "3ba9857f19cf22b5da85e1268f914f58f66f3d3a",
        "date": "2023-09-19T16:43:10Z",
        "message": "feat(crypto): CRP-1539: Enable metrics for crypto csp vault"
      },
      {
        "id": "c32ba5c6779c4f2e2f69f89d02be3554b8ff6b9a",
        "date": "2023-09-15T06:56:53Z",
        "message": "Merge branch 'mathias-clean-up-validator-fuzz-cargo-lock-file' into 'master'\n\nchore(crypto): Update Cargo.lock file in ic-validator fuzzer\n\nThe `Cargo.lock` file in `rs/validator/fuzz` is not automatically updated when the related `Cargo.toml` file is changed. The `Cargo.lock` file had a number of dependencies that were no longer used, and some were updated. \n\nSee merge request dfinity-lab/public/ic!14806"
      },
      {
        "id": "6e085c1a673d41f700df736dd1a6092dd279aee8",
        "date": "2023-09-15T06:56:53Z",
        "message": "chore(crypto): Update Cargo.lock file in ic-validator fuzzer"
      },
      {
        "id": "a5869c069fe47523aca25f7ac63aa71e1394f4a2",
        "date": "2023-09-14T19:32:09Z",
        "message": "Merge branch 'mathias-CRP-2189-remove-unused-openssl-dependency' into 'master'\n\nchore(crypto): CRP-2189: Remove unused openssl dependency\n\nThe `openssl` dependency in the `BUILD.bazel` file of `rs/crypto/utils/threshold_sig_der` is unused. \n\nSee merge request dfinity-lab/public/ic!14805"
      },
      {
        "id": "0227975d7fcd02fd3ecc01d8c3e2a257470a6f4b",
        "date": "2023-09-14T19:32:08Z",
        "message": "chore(crypto): CRP-2189: Remove unused openssl dependency"
      },
      {
        "id": "a6d4159013996396c84ca33f54dd60f2c5e17ea0",
        "date": "2023-09-11T19:00:57Z",
        "message": "Merge branch 'mathias-CRP-1705-use-repr-u8-for-algorithmid' into 'master'\n\nfeat(crypto): CRP-1705: Improve/add tests to verify that all AlgorithmId discriminants fit into a single u8\n\nUsing `#[repr(u8)]` for `AlgorithmId` was not straight-forward, so in this MR, mitigate the situation by adding tests that verify that conversions for all `AlgorithmId` enum variants succeed, and no discriminant larger than `u8::MAX` is added.\n\nAlso changed from having a `as_u8()` method for `AlgorithmId` that panicked internally, to using `impl TryFrom<AlgorithmId> for u8` as suggested in the ticket. \n\nSee merge request dfinity-lab/public/ic!14418"
      },
      {
        "id": "f1dce1a7cc63d8f7313fda7b1aac226d80527924",
        "date": "2023-09-11T19:00:56Z",
        "message": "feat(crypto): CRP-1705: Improve/add tests to verify that all AlgorithmId discriminants fit into a single u8"
      },
      {
        "id": "b61c0bede6eac3567e5f3731f885f9e9ea169cd3",
        "date": "2023-09-08T21:12:02Z",
        "message": "Merge branch 'mathias-CRP-1324-explicit-tokio-runtime-in-csp-vault' into 'master'\n\nchore(crypto): CRP-1324: Explicitly create tokio runtime for crypto csp vault\n\nExplicitly create tokio runtime for crypto csp vault. \n\nSee merge request dfinity-lab/public/ic!14680"
      },
      {
        "id": "522109330671be3666d6289c5fa8cc0dbcef9c72",
        "date": "2023-09-08T21:12:00Z",
        "message": "chore(crypto): CRP-1324: Explicitly create tokio runtime for crypto csp vault"
      },
      {
        "id": "e4652a86754f66f42c0fad67d0f4ee6080d95539",
        "date": "2023-09-08T20:01:45Z",
        "message": "Merge branch 'mathias-CRP-1539-add-socket-for-crypto-vault-metrics' into 'master'\n\nfeat(crypto): CRP-1539: Add socket for retrieving metrics from crypto csp vault\n\nAdd a new Unix domain socket to allow the replica to retrieve metrics from the crypto CSP vault process. This follows the similar approach taken for the Bitcoin adapters, and the canister HTTP adapter. Adding the Unix domain socket is the first step in enabling metrics to be retrieved from the crypto CSP vault process - the rest of the functionality will be added in follow-up MRs.\n\nThis MR also adds a system test verifying that a socket has been created, and checks that the permission of the metrics socket, as well as the existing socket, are correct. \n\nSee merge request dfinity-lab/public/ic!14634"
      },
      {
        "id": "32f0e6b07881fd705a45a0342d2a39a88f4df5ee",
        "date": "2023-09-08T20:01:45Z",
        "message": "feat(crypto): CRP-1539: Add socket for retrieving metrics from crypto csp vault"
      },
      {
        "id": "d25389035ee089abd5b9e8644c8ec47a674b0d58",
        "date": "2023-09-04T20:30:32Z",
        "message": "Merge branch 'CRP-2169-remove-unneeded-dependency-on-interfaces-from-validator-ingress-message' into 'master'\n\nchore(crypto): CRP-2169: Remove unneeded dependency on ic-interfaces from ic-validator-ingress-message\n\nPrevious MRs have refactored the crate so that code from `ic-interfaces` was no longer needed - this MR removes the dependency from `Cargo.toml` and `BUILD.bazel` in `ic-validator-ingress-message`. \n\nSee merge request dfinity-lab/public/ic!14571"
      },
      {
        "id": "ee9c291585d73659218f166c837fbd66667763ca",
        "date": "2023-09-04T20:30:32Z",
        "message": "chore(crypto): CRP-2169: Remove unneeded dependency on ic-interfaces from ic-validator-ingress-message"
      },
      {
        "id": "246a4a43dc42b72daef16cc51dbb03537650194a",
        "date": "2023-09-04T13:07:32Z",
        "message": "Merge branch 'mathias-CRP-2169-use-of-chrono-in-validator' into 'master'\n\nfeat(crypto): CRP-2169: Do not use chrono in ic-validator\n\nGetting the current time using the `chrono` crate is not compatible with wasm. Using `dfn_core::api::now` instead when building `ic-validator` to wasm would be possible, but would require introducing different targets when building to wasm vs. not, since `ic-replica` cannot depend on `dfn_core`.\n\nThe only place where the local replica time is needed is in the error message of `validate_ingress_expiry`, if the specified `ingress_expiry` is not within the expected range. The local replica time is not even used for the computation. The simplest solution is to simply remove the replica current time from the error message, which is what is now done in this MR. \n\nSee merge request dfinity-lab/public/ic!14475"
      },
      {
        "id": "dce3732f19e682c61c0d92c99cd7198537c85d0b",
        "date": "2023-09-04T13:07:31Z",
        "message": "feat(crypto): CRP-2169: Do not use chrono in ic-validator"
      },
      {
        "id": "61fa3004987b3be2059950478d5197335d1229b2",
        "date": "2023-09-01T13:34:05Z",
        "message": "Merge branch 'mathias-CRP-2169-move-sig-verification-traits' into 'master'\n\nrefactor(crypto): CRP-2169: Move signature verification traits from ic-interfaces to ic-crypto-interfaces-sig-verification\n\nIn an ongoing effort to be able to compile the `ic-validator` crate to wasm, move the `BasicSigVerifierByPublicKey`, `CanisterSigVerifier`, and `IngressSigVerifier` traits from the `ic-interfaces` crate into a new `ic-crypto-interfaces-sig-verification` crate. \n\nSee merge request dfinity-lab/public/ic!14472"
      },
      {
        "id": "91836d593d37fdcea812fefdb4b3f649f4b37bb3",
        "date": "2023-09-01T13:34:04Z",
        "message": "refactor(crypto): CRP-2169: Move signature verification traits from ic-interfaces to ic-crypto-interfaces-sig-verification"
      },
      {
        "id": "b029bf49b688b757be2df46b2b72465726c225fd",
        "date": "2023-09-01T10:49:37Z",
        "message": "Merge branch 'mathias-CRP-2169-use-timeprovider-directly' into 'master'\n\nfeat(crypto): CRP-2169: Use TimeProvider directly internally instead of TimeSource in IngressMessageVerifier\n\nIn an intermediate step of being able to remove the dependency on `ic-interfaces` from `ic-validator`, use `TimeProvider` directly internally instead of `TimeSource` in `IngressMessageVerifier`. \n\nSee merge request dfinity-lab/public/ic!14471"
      },
      {
        "id": "cb338fe0fc735141b5b3ac5a9cb4d11aee0573c9",
        "date": "2023-09-01T10:49:37Z",
        "message": "feat(crypto): CRP-2169: Use TimeProvider directly internally instead of TimeSource in IngressMessageVerifier"
      },
      {
        "id": "c7fca442969f0b6a4546f11a8d5608db172e3b26",
        "date": "2023-08-29T14:08:32Z",
        "message": "Merge branch 'mathias-CRP-1429-fix-should-verify-transcript-reject-transcript-with-a-missing-receiver' into 'master'\n\ntest(crypto): CRP-1429: Fix flaky should_verify_transcript_reject_transcript_with_a_missing_receiver test\n\nThe `should_verify_transcript_reject_transcript_with_a_missing_receiver` test is flaky, since it generates random numbers of (dealers and) receivers, and then tries to remove one receiver. If there initially was only one receiver, it will panic. Observed on [CI](https://gitlab.com/dfinity-lab/public/ic/-/jobs/4973072649). Can be reproduced with the following seed:\n\n`let seed: [u8; 32] = [182, 172, 151, 23, 51, 180, 56, 152, 222, 81, 43, 0, 85, 138, 18, 254, 179, 203, 218, 246, 136, 151, 246, 31, 101, 78, 56, 159, 175, 184, 61, 21];`\n\nThe fix uses a strategy with at least two receivers when selecting dealers and receivers, allowing for one receiver to be removed. \n\nSee merge request dfinity-lab/public/ic!14451"
      },
      {
        "id": "9c865508098f3068a29704ed345d7acd37c8db62",
        "date": "2023-08-29T14:08:31Z",
        "message": "test(crypto): CRP-1429: Fix flaky should_verify_transcript_reject_transcript_with_a_missing_receiver test"
      },
      {
        "id": "07b16c691b33806f472af9abc783d4137363f058",
        "date": "2023-08-29T09:26:41Z",
        "message": "Merge branch 'mathias-CRP-2078-tls-tests' into 'master'\n\ntest(crypto): CRP-2078: Remove duplicate TLS tests and add CSP vault delegation tests\n\nRemove TLS tests that were duplicated at both the CSP and CSP vault level, and add some tests that verify that the delegation from the CSP to the CSP vault is working correctly.\n\nAll tests in `rs/crypto/internal/crypto_service_provider/src/keygen/tests.rs` were duplicates of existing tests in `rs/crypto/internal/crypto_service_provider/src/vault/local_csp_vault/tls/tests.rs`, except for `should_set_cert_not_before_correctly` - this single test was moved.\n\nAdditionally, a handful of delegation tests were added to `rs/crypto/internal/crypto_service_provider/src/keygen/tests.rs`. \n\nSee merge request dfinity-lab/public/ic!14393"
      },
      {
        "id": "f05d9babbe86c348c92a97f6493073add3e90cff",
        "date": "2023-08-29T09:26:40Z",
        "message": "test(crypto): CRP-2078: Remove duplicate TLS tests and add CSP vault delegation tests"
      },
      {
        "id": "e60d6eab37dcba8d3643f9ebb427120ad52fcfcd",
        "date": "2023-08-29T04:23:47Z",
        "message": "Merge branch 'mathias-CRP-2169-remove-dependency-on-interfaces-from-certification-test-utils' into 'master'\n\nchore(crypto): CRP-2169: Remove unneeded dependency on ic-interfaces from ic-certification-test-utils\n\nThe dependency on `ic-interfaces` is unused. \n\nSee merge request dfinity-lab/public/ic!14432"
      },
      {
        "id": "021762424ff640320fae8c3b2495817415b12623",
        "date": "2023-08-29T04:23:47Z",
        "message": "chore(crypto): CRP-2169: Remove unneeded dependency on ic-interfaces from ic-certification-test-utils"
      },
      {
        "id": "532d6b978afe416e8ad6df2301f609226d2ad1e8",
        "date": "2023-08-24T14:47:57Z",
        "message": "Merge branch 'mathias-CRP-2169-remove-crypto-dependency-from-validator' into 'master'\n\nrefactor(crypto): CRP-2169: Remove ic-crypto dependency from ic-validator\n\nRemove the dependency on `ic-crypto` from `ic-validator`, so that it can (eventually) be compiled to wasm. \n\nSee merge request dfinity-lab/public/ic!14279"
      },
      {
        "id": "afe4f8a52f2fd226ca823afce09904cb288c8083",
        "date": "2023-08-24T14:47:57Z",
        "message": "refactor(crypto): CRP-2169: Remove ic-crypto dependency from ic-validator"
      },
      {
        "id": "8f2224d00f1a92e71b019fa5b0ced29e083e4dc8",
        "date": "2023-08-24T10:04:05Z",
        "message": "Merge branch 'mathias-CRP-2169-bump-rsa-version' into 'master'\n\nchore(crypto): CRP-2038: Bump rsa version\n\nThe previous version `rsa = \"0.4.0\"` in `ic-crypto-internal-basic-sig-rsa-pkcs1` depends on an older version on `simple_asn1`, which in turn uses `chrono`, which makes compiling crates to wasm difficult. The `rsa` version `0.6.1`, which is already used elsewhere, depends on a newer version of `simple_asn1`, which doesn't use `chrono`. This MR bumps the version to the latest version `0.9.2`. The `0.9` version also includes a fix for [this bug](https://github.com/RustCrypto/RSA/issues/272), where RSA signatures larger than the modulus are accepted. \n\nSee merge request dfinity-lab/public/ic!14315"
      },
      {
        "id": "536d953dbc10bc2e3c2d9daae5097240de1b9e0a",
        "date": "2023-08-24T10:04:05Z",
        "message": "chore(crypto): CRP-2038: Bump rsa version"
      },
      {
        "id": "07180f2fa4e5434e77c960e4b3f6c5d53e48df48",
        "date": "2023-08-23T15:43:10Z",
        "message": "Merge branch 'mathias-CRP-2004-replace-authentication-try-from' into 'master'\n\nchore(crypto): CRP-2004: Replace Authentication::try_from with private function\n\nReplace `Authentication::try_from` with a private function. \n\nSee merge request dfinity-lab/public/ic!14126"
      },
      {
        "id": "e4c8b3e40b254b7fcedd801b98dea02c5759acfd",
        "date": "2023-08-23T15:43:10Z",
        "message": "chore(crypto): CRP-2004: Replace Authentication::try_from with private function"
      },
      {
        "id": "e2053585d6938e4cc958a0baae2dd4568fe7ec48",
        "date": "2023-08-23T08:26:18Z",
        "message": "Merge branch 'mathias-CRP-2062-add-metrics-for-idkg-load-transcript-failures' into 'master'\n\nfeat(crypto): CRP-2062: Add more detailed metrics for iDKG load_transcript failures\n\nAdd more detailed metrics for iDKG `load_transcript` failures. In case loading key transcripts fails on multiple nodes, there is a risk of losing the key. Metrics are necessary to be able to raise alerts in these cases. Also add a `warn` log in case `load_transcript` fails. \n\nSee merge request dfinity-lab/public/ic!12958"
      },
      {
        "id": "c61767e92da46f8dcdf016ecb3430c669879563d",
        "date": "2023-08-23T08:26:14Z",
        "message": "feat(crypto): CRP-2062: Add more detailed metrics for iDKG load_transcript failures"
      },
      {
        "id": "82970082bbdd324e7bba6f3ee04f87aa4ad000b7",
        "date": "2023-08-21T19:03:06Z",
        "message": "Merge branch 'mathias-CRP-2128-test-usage-of-rootoftrustprovider-in-ingressmessageverifier' into 'master'\n\ntest(crypto): CRP-2128: Test usage of RootOfTrustProvider in IngressMessageVerifier\n\nMake `IngressMessageVerifier` generic over `RootOfTrustProvider`, and add tests for error cases using a `MockRootOfTrustProvider`. \n\nSee merge request dfinity-lab/public/ic!14200"
      },
      {
        "id": "f3f13814a00c2f18c2259d8fd26a435126de1da4",
        "date": "2023-08-21T19:03:06Z",
        "message": "test(crypto): CRP-2128: Test usage of RootOfTrustProvider in IngressMessageVerifier"
      },
      {
        "id": "035cac70527729004a61c749395ad9805c422a08",
        "date": "2023-08-18T11:16:58Z",
        "message": "Merge branch 'mathias-CRP-2169-remove-csp-dependency-from-standalone-sig-verifier' into 'master'\n\nchore(crypto): CRP-2169: Remove unneeded dependency on ic-crypto-internal-csp from standalone-sig-verifier\n\nRemove unneeded dependency on `ic-crypto-internal-csp` from `ic-crypto-standalone-sig-verifier`. \n\nSee merge request dfinity-lab/public/ic!14225"
      },
      {
        "id": "dd7883733fb43b002fe863af6bde1341b7cc87f4",
        "date": "2023-08-18T11:16:58Z",
        "message": "chore(crypto): CRP-2169: Remove unneeded dependency on ic-crypto-internal-csp from standalone-sig-verifier"
      },
      {
        "id": "4cb611b1ddf06286c77308defd79325363fc467e",
        "date": "2023-08-17T18:46:29Z",
        "message": "Merge branch 'mathias-CRP-2117-move-validator-ingress-message-tests' into 'master'\n\ntest(crypto): CRP-2117: Move validator ingress message tests\n\nMove tests in `rs/validator/ingress_message/src/internal/tests.rs` to `rs/validator/ingress_message/tests/validate_request.rs` \n\nSee merge request dfinity-lab/public/ic!14177"
      },
      {
        "id": "824d105099eb08117110480ec5aa4fbbc2a619f1",
        "date": "2023-08-17T18:46:29Z",
        "message": "test(crypto): CRP-2117: Move validator ingress message tests"
      },
      {
        "id": "aac39968560122ce78793eac5f8c71bf8b0fdd3d",
        "date": "2023-08-16T18:55:51Z",
        "message": "Merge branch 'mathias-CRP-2167-fix-benchmark-calls-to-initialidkgdealings-new' into 'master'\n\ntest(crypto): CRP-2167: Fix benchmark calls to InitialIDkgDealings::new\n\nCreate separate environments for dealer and receiver subnets with a shared registry, so that there are disjoint sets of dealers and receivers for `InitialIDkgDealings::new`. This doubles the number of nodes in `bench_verify_initial_dealings` (compared to what is defined in the `TestCase`). However, since the setup (generating keys for twice the amount of nodes, generating the key and XNet re-sharing it) is not part of the benchmarking, the changes should not lead to regressions - the number of dealings to be verified matches the size of the subnet specified in the `TestCase` struct. \n\nSee merge request dfinity-lab/public/ic!14140"
      },
      {
        "id": "a4e7af1a0afcd3c7a08833d973b17d7bee7c31bd",
        "date": "2023-08-16T18:55:51Z",
        "message": "test(crypto): CRP-2167: Fix benchmark calls to InitialIDkgDealings::new"
      },
      {
        "id": "8eee81180ac3e40d755d7dc27571643f69b3787c",
        "date": "2023-08-16T17:45:21Z",
        "message": "Merge branch 'mathias-CRP-1435-add-verify-dealing-private-tests' into 'master'\n\ntest(crypto): CRP-1435: Add tests for iDKG verify_dealing_private\n\nAdd tests for `verify_dealing_private` and related functions:\n- In `ic_crypto_internal_threshold_sig_ecdsa::mega::MEGaCiphertext::decrypt_and_check`, tests for the following error case:\n  - If `check_opening` fails due to the `receiver_index` not matching the provided secret and public keys\n- In `ic_crypto_internal_threshold_sig_ecdsa::dealings::IDkgDealingInternal::privately_verify`, tests for the following error cases:\n  - If the curve of the secret key does not match that of the dealing\n  - If the curve of the public key does not match that of the dealing\n  - If the explicitly passed `curve` variable does not match that of the dealing\n  - If the decryption and check of the internal ciphertext fails due to wrong keys\n- In `ic_crypto_internal_threshold_sig_ecdsa::privately_verify_dealing`, tests for the following error case:\n  - If an unsupported algorithm is passed as a parameter\n- In `mega::mega_cipher_text::decrypt`, tests for the following error cases:\n  - If the wrong secret key is provided, the decryption results in a different plaintext than expected\n  - If the dealer index is wrong, the decryption fails\n  - If the index of the recipient is out of bounds, an error is returned\n  - If the curve of the secret key does not match that of the ciphertext\n- In `ic_crypto::sign::canister_threshold_sig::idkg::dealing::verify_dealing_private`, tests for the following error cases:\n  - If a registry error is returned when trying to retrieve the public key\n  - If CSP errors are propagated correctly \n\nSee merge request dfinity-lab/public/ic!14094"
      },
      {
        "id": "d5f2eed02922bad19c7a10a21f0a0ab32b540d5f",
        "date": "2023-08-16T17:45:21Z",
        "message": "test(crypto): CRP-1435: Add tests for iDKG verify_dealing_private"
      },
      {
        "id": "7ce60d95d9799ddcf32abf438e817922bee06353",
        "date": "2023-08-10T06:42:52Z",
        "message": "Merge branch 'mathias-CRP-2123-verify-dealers-and-receivers-disjoint-in-initialdkgdealings-new' into 'master'\n\nfeat(crypto): CRP-2123: verify that dealers and receivers are disjoint in InitialIDkgDealings::new\n\n`InitialIDkgDealings::new` shall only be used for creating initial IDkg dealings for XNet re-sharing of an existing key. In the case of XNet re-sharing, dealers and receivers shall be disjoint, and this MR adds a check to verify that this is the case for the `IDkgTranscriptParams` passed as input to `InitialIDkgDealings::new`.\n\nSome existing tests passed in `IDkgTranscriptParams` structs where the dealers and receivers (partially) overlapped - typically, the dealers and receivers were actually the same. These existing tests were modified to have disjoint sets of dealers and receivers. Additionally, a test was added to verify that `InitialIDkgDealings::new` fails if the dealers and receivers overlap. \n\nSee merge request dfinity-lab/public/ic!13793"
      },
      {
        "id": "cbdb2472dca90eeaab681139ec02a633e8897a9f",
        "date": "2023-08-10T06:42:51Z",
        "message": "feat(crypto): CRP-2123: verify that dealers and receivers are disjoint in InitialIDkgDealings::new"
      }
    ],
    "email": "mathias.bjorkqvist@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 74,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 37,
    "fixes": 2,
    "feats": 11,
    "non_merge_commits": [
      {
        "id": "9b6956c3bb4805965e943464122ddb41518ddfee",
        "date": "2023-11-21T10:15:57Z",
        "message": "chore(crypto): CRP-1909: Delete not_after parameter in CspKeyGenerator::gen_tls_key_pair"
      },
      {
        "id": "f876f200f0e9e43a9ebcf2ac24239e5eece9512d",
        "date": "2023-11-17T10:41:56Z",
        "message": "chore(crypto): CRP-1695: Move threshold sig der conversion functions to utility crate"
      },
      {
        "id": "3c3eca29964dce91eab3fa044390b796c1520ecf",
        "date": "2023-11-17T08:17:51Z",
        "message": "chore(crypto): CRP-1695: Remove unused verify_combined_threshold_sig function"
      },
      {
        "id": "61c7d080e9b26ba85e59a32fd3db5da64c1bc11a",
        "date": "2023-11-06T09:39:54Z",
        "message": "feat(crypto): CRP-2252: Only acquire write lock for the canister secret key store when needed to modify it for retain"
      },
      {
        "id": "e650225a2c5dd1f24a651104c888b4de539c04f5",
        "date": "2023-11-01T18:13:07Z",
        "message": "chore(crypto): CRP-1043: Remove placeholder_to_delete from CspNiDkgTranscript production code"
      },
      {
        "id": "068c12229a8db3d2b4e354f58245ec4826b79eea",
        "date": "2023-10-23T11:10:30Z",
        "message": "chore(crypto): Correct renamed function name in docs"
      },
      {
        "id": "e5173bc44556cdefbd51b414ff9360e1741d4fd6",
        "date": "2023-10-19T08:03:52Z",
        "message": "feat(crypto): CRP-2226: Only acquire SKS write lock when necessary for NI-DKG retain"
      },
      {
        "id": "bbb05b5f85bddf6f1edae5ca3e278de40108851f",
        "date": "2023-10-18T09:48:52Z",
        "message": "feat(crypto): CRP-2226, CRP-835: Only acquire SKS write lock when necessary for NI-DKG update_forward_secure_epoch"
      },
      {
        "id": "ab5c546e9365b5124de33970193f3ec921bba926",
        "date": "2023-10-18T07:22:17Z",
        "message": "feat(crypto): CRP-2226: Use only pks read lock when possible for iDKG retain"
      },
      {
        "id": "5b881673d10e537b3abcc27f554df2aef247f0c4",
        "date": "2023-10-10T07:08:56Z",
        "message": "chore(crypto): CRP-1043: Move NI-DKG dummy_transcript functions to ic-crypto-test-utils-ni-dkg crate"
      },
      {
        "id": "943e4044ff3a9694f7473158e7679b3c1e2a31b6",
        "date": "2023-09-29T16:02:23Z",
        "message": "refactor(crypto): CRP-1043: Move NI-DKG test utils to ni-dkg test utils subcrate"
      },
      {
        "id": "3bb3d0ac0499b6f4fb04e0d89f94089cdfb3392e",
        "date": "2023-09-28T14:40:43Z",
        "message": "chore(crypto): Remove unused dependencies under rs/crypto"
      },
      {
        "id": "a71a4b7b1bef0a2833d8fab580b10416fe76906b",
        "date": "2023-09-26T15:22:20Z",
        "message": "chore(crypto): CRP-2205: Compile-time formatting of metrics enum variants"
      },
      {
        "id": "fda6b35854f353863bc443d10b9b579d0897467a",
        "date": "2023-09-20T12:27:18Z",
        "message": "test(crypto): CRP-2189: Add canister test for ic-validator-ingress-message"
      },
      {
        "id": "3ba9857f19cf22b5da85e1268f914f58f66f3d3a",
        "date": "2023-09-19T16:43:10Z",
        "message": "feat(crypto): CRP-1539: Enable metrics for crypto csp vault"
      },
      {
        "id": "6e085c1a673d41f700df736dd1a6092dd279aee8",
        "date": "2023-09-15T06:56:53Z",
        "message": "chore(crypto): Update Cargo.lock file in ic-validator fuzzer"
      },
      {
        "id": "0227975d7fcd02fd3ecc01d8c3e2a257470a6f4b",
        "date": "2023-09-14T19:32:08Z",
        "message": "chore(crypto): CRP-2189: Remove unused openssl dependency"
      },
      {
        "id": "f1dce1a7cc63d8f7313fda7b1aac226d80527924",
        "date": "2023-09-11T19:00:56Z",
        "message": "feat(crypto): CRP-1705: Improve/add tests to verify that all AlgorithmId discriminants fit into a single u8"
      },
      {
        "id": "522109330671be3666d6289c5fa8cc0dbcef9c72",
        "date": "2023-09-08T21:12:00Z",
        "message": "chore(crypto): CRP-1324: Explicitly create tokio runtime for crypto csp vault"
      },
      {
        "id": "32f0e6b07881fd705a45a0342d2a39a88f4df5ee",
        "date": "2023-09-08T20:01:45Z",
        "message": "feat(crypto): CRP-1539: Add socket for retrieving metrics from crypto csp vault"
      },
      {
        "id": "ee9c291585d73659218f166c837fbd66667763ca",
        "date": "2023-09-04T20:30:32Z",
        "message": "chore(crypto): CRP-2169: Remove unneeded dependency on ic-interfaces from ic-validator-ingress-message"
      },
      {
        "id": "dce3732f19e682c61c0d92c99cd7198537c85d0b",
        "date": "2023-09-04T13:07:31Z",
        "message": "feat(crypto): CRP-2169: Do not use chrono in ic-validator"
      },
      {
        "id": "91836d593d37fdcea812fefdb4b3f649f4b37bb3",
        "date": "2023-09-01T13:34:04Z",
        "message": "refactor(crypto): CRP-2169: Move signature verification traits from ic-interfaces to ic-crypto-interfaces-sig-verification"
      },
      {
        "id": "cb338fe0fc735141b5b3ac5a9cb4d11aee0573c9",
        "date": "2023-09-01T10:49:37Z",
        "message": "feat(crypto): CRP-2169: Use TimeProvider directly internally instead of TimeSource in IngressMessageVerifier"
      },
      {
        "id": "9c865508098f3068a29704ed345d7acd37c8db62",
        "date": "2023-08-29T14:08:31Z",
        "message": "test(crypto): CRP-1429: Fix flaky should_verify_transcript_reject_transcript_with_a_missing_receiver test"
      },
      {
        "id": "f05d9babbe86c348c92a97f6493073add3e90cff",
        "date": "2023-08-29T09:26:40Z",
        "message": "test(crypto): CRP-2078: Remove duplicate TLS tests and add CSP vault delegation tests"
      },
      {
        "id": "021762424ff640320fae8c3b2495817415b12623",
        "date": "2023-08-29T04:23:47Z",
        "message": "chore(crypto): CRP-2169: Remove unneeded dependency on ic-interfaces from ic-certification-test-utils"
      },
      {
        "id": "afe4f8a52f2fd226ca823afce09904cb288c8083",
        "date": "2023-08-24T14:47:57Z",
        "message": "refactor(crypto): CRP-2169: Remove ic-crypto dependency from ic-validator"
      },
      {
        "id": "536d953dbc10bc2e3c2d9daae5097240de1b9e0a",
        "date": "2023-08-24T10:04:05Z",
        "message": "chore(crypto): CRP-2038: Bump rsa version"
      },
      {
        "id": "e4c8b3e40b254b7fcedd801b98dea02c5759acfd",
        "date": "2023-08-23T15:43:10Z",
        "message": "chore(crypto): CRP-2004: Replace Authentication::try_from with private function"
      },
      {
        "id": "c61767e92da46f8dcdf016ecb3430c669879563d",
        "date": "2023-08-23T08:26:14Z",
        "message": "feat(crypto): CRP-2062: Add more detailed metrics for iDKG load_transcript failures"
      },
      {
        "id": "f3f13814a00c2f18c2259d8fd26a435126de1da4",
        "date": "2023-08-21T19:03:06Z",
        "message": "test(crypto): CRP-2128: Test usage of RootOfTrustProvider in IngressMessageVerifier"
      },
      {
        "id": "dd7883733fb43b002fe863af6bde1341b7cc87f4",
        "date": "2023-08-18T11:16:58Z",
        "message": "chore(crypto): CRP-2169: Remove unneeded dependency on ic-crypto-internal-csp from standalone-sig-verifier"
      },
      {
        "id": "824d105099eb08117110480ec5aa4fbbc2a619f1",
        "date": "2023-08-17T18:46:29Z",
        "message": "test(crypto): CRP-2117: Move validator ingress message tests"
      },
      {
        "id": "a4e7af1a0afcd3c7a08833d973b17d7bee7c31bd",
        "date": "2023-08-16T18:55:51Z",
        "message": "test(crypto): CRP-2167: Fix benchmark calls to InitialIDkgDealings::new"
      },
      {
        "id": "d5f2eed02922bad19c7a10a21f0a0ab32b540d5f",
        "date": "2023-08-16T17:45:21Z",
        "message": "test(crypto): CRP-1435: Add tests for iDKG verify_dealing_private"
      },
      {
        "id": "cbdb2472dca90eeaab681139ec02a633e8897a9f",
        "date": "2023-08-10T06:42:51Z",
        "message": "feat(crypto): CRP-2123: verify that dealers and receivers are disjoint in InitialIDkgDealings::new"
      }
    ],
    "line_additions": 6105,
    "line_deletions": 7487,
    "lines_effected_total": 13592,
    "rel_comm_add": 29,
    "rel_comm_del": 26,
    "rel_comm_total": 32
  },
  {
    "login": "leokazz",
    "id": 112857363,
    "totalContributions": 268,
    "github": "https://github.com/leokazz",
    "commits": [
      {
        "id": "0fe1aad93a68e263d212179eda7378b871cd431b",
        "date": "2023-11-21T08:59:37Z",
        "message": "Merge branch 'gdemay/FI-1057-failed-tx-hash-dashboard' into 'master'\n\nfeat(cketh): add hash of failed transaction to dashboard\n\n(FI-1057): Add the hash of the failed transaction to the displayed reimbursed transactions on the ckETH minter dashboard. \n\nSee merge request dfinity-lab/public/ic!16223"
      },
      {
        "id": "be57cba441dc1539e3e05a12b9f72620135366ba",
        "date": "2023-11-20T12:05:11Z",
        "message": "feat(ckbtc): update_balance returns pending utxos"
      },
      {
        "id": "87b02dac70d11f7ad2b3e3bcaf94bacac98f6399",
        "date": "2023-11-16T15:56:10Z",
        "message": "Merge branch 'leo-cketh-change-provider' into 'master'\n\nfeat(cketh): Add Cloudflare as a mainnet Provider\n\nFollowing https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15879, the Cloudflare event was a very unlikely black swan kind of event. We decided to add back Cloudflare. \n\nSee merge request dfinity-lab/public/ic!16151"
      },
      {
        "id": "3bc92ba40d2e1bc6a043cb9fd4ed7a77a285dce0",
        "date": "2023-11-16T15:56:10Z",
        "message": "feat(cketh): Add Cloudflare as a mainnet Provider"
      },
      {
        "id": "471884b71f6fee9e8c224c6ca215db77884bd909",
        "date": "2023-11-16T14:58:01Z",
        "message": "Merge branch 'leo-cketh-update-contract' into 'master'\n\nfeat(cketh): Limit number of events per block\n\nLimit the number of events emitted per block in the helper smart contract.\n\nDeployed here: https://sepolia.etherscan.io/address/0xa1c979194c33ac5e39d4bdf20169280bd42368bb#code\n\nTested with another contract generating multiple events in the same block: https://sepolia.etherscan.io/address/0x6d70e0aea27fce7b838fe006c3c253f7f8fa006d \n\nSee merge request dfinity-lab/public/ic!16119"
      },
      {
        "id": "a6182f9980912b95cea3530a02fa37c9c44f70c6",
        "date": "2023-11-16T14:57:59Z",
        "message": "feat(cketh): Limit number of events per block"
      },
      {
        "id": "f23b50e805c1233ebfdc1a2d4482700543149a88",
        "date": "2023-11-14T14:43:04Z",
        "message": "Merge branch 'leo-cketh-minter-fix-reimbursed-struct' into 'master'\n\nfix(cketh): Make transaction hash optional in Reimbursed [override-didc-check]\n\nThis comment has been missed https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15680#note_1639320158 \n\nSee merge request dfinity-lab/public/ic!16065"
      },
      {
        "id": "0c1936d5b5dceb3a0fcc73b3d32db8dc7c362f2d",
        "date": "2023-11-14T14:43:04Z",
        "message": "fix(cketh): Make transaction hash optional in Reimbursed [override-didc-check]"
      },
      {
        "id": "71120d37a9a12bb4f054aceece761a8361c14993",
        "date": "2023-11-13T13:20:48Z",
        "message": "Merge branch 'leo-cketh-memo-on-ledger' into 'master'\n\nfeat(cketh): Add data in the ledger memo field [override-didc-check]\n\nThis helps with traceability and shows the data from other chains in the UI.\n\nCloses FI-897. \n\nCloses FI-897\n\nSee merge request dfinity-lab/public/ic!15680"
      },
      {
        "id": "2b976921946ad68874c71cf46c27844ae1738d3a",
        "date": "2023-11-13T13:20:48Z",
        "message": "feat(cketh): Add data in the ledger memo field [override-didc-check]"
      },
      {
        "id": "adcdd4409234c50a7e52cf076a3b8c0377f8d2ea",
        "date": "2023-11-07T15:02:46Z",
        "message": "Merge branch 'leo-cketh-staging-providers' into 'master'\n\nfix(cketh): Change the Mainnet RPC providers\n\nWhile trying to use CloudFlare as an RPC provider we found some issues:\n - Cloudflare only allows to fetch logs in a range of 800 blocks (usually 1024 for other providers).\n - Cloudflare seems to only store logs for the last 128 blocks, https://community.cloudflare.com/t/ethereum-getlogs-and-128-max-entries-limitation/241204. \n\nSee merge request dfinity-lab/public/ic!15879"
      },
      {
        "id": "1c1cea90d00f79a93ed8e1a08d10a9afb117c2d8",
        "date": "2023-11-07T15:02:46Z",
        "message": "fix(cketh): Change the Mainnet RPC providers"
      },
      {
        "id": "fb9054dc9c17c8db2735557f5167c533dfea184d",
        "date": "2023-11-03T10:15:29Z",
        "message": "Merge branch 'leo-cketh-fix-comments' into 'master'\n\nfix(cketh): Update comments to reflect code\n\n \n\nSee merge request dfinity-lab/public/ic!15853"
      },
      {
        "id": "26b6d3b98307dc4b1d4fb20575d3e76e8b1863ac",
        "date": "2023-11-03T10:15:28Z",
        "message": "fix(cketh): Update comments to reflect code"
      },
      {
        "id": "a01da55f0c2a680a645093efa254346be78c4c6e",
        "date": "2023-11-02T10:32:06Z",
        "message": "Merge branch 'leo-cketh-add-reimbursed-tx-to-dashboard' into 'master'\n\nfeat(cketh): Add reimbursements to dashboard\n\nCloses FI-1025. \n\nCloses FI-1025\n\nSee merge request dfinity-lab/public/ic!15676"
      },
      {
        "id": "45948729d4be4406e8a4bbe4c4f97c8e4cbbe137",
        "date": "2023-11-02T10:32:06Z",
        "message": "feat(cketh): Add reimbursements to dashboard"
      },
      {
        "id": "75146033f68b10338ca77101068c786c8a77efdf",
        "date": "2023-11-01T11:23:18Z",
        "message": "Merge branch 'leo-cketh-staging' into 'master'\n\ndocs(cketh): Create ckETH staging canisters\n\nThe smart contract is deployed and available at: https://etherscan.io/address/0x256905f94f067f36fa2747b0fd2167a44ce23e88.\n\nThe minter dashboard is accessible at: https://qbfgx-laaaa-aaaar-qacaa-cai.raw.icp0.io/dashboard.\n\nThe ledger canister ID: https://dashboard.internetcomputer.org/canister/qgead-gyaaa-aaaar-qacaq-cai\n\nCloses FI-1027. \n\nCloses FI-1027\n\nSee merge request dfinity-lab/public/ic!15760"
      },
      {
        "id": "cbc2e2df5f174531cc0b51466ec1bd4cd61b5553",
        "date": "2023-11-01T11:23:18Z",
        "message": "docs(cketh): Create ckETH staging canisters"
      },
      {
        "id": "eb502c6389536e12002e55e5af45aa5dd53452fb",
        "date": "2023-10-27T09:39:15Z",
        "message": "Merge branch 'leo-cketh-logs-removed-always-false' into 'master'\n\nfeat(cketh): Ensures that `LogEntry::removed` is always false\n\nSince we are dealing with finalized blocks when retrieving logs, LogEntry::removed should always be false.\n\nSee https://community.infura.io/t/removed-could-be-true-in-the-response-of-eth-getlogs/5041/6\n\nCloses FI-944. \n\nCloses FI-944\n\nSee merge request dfinity-lab/public/ic!15673"
      },
      {
        "id": "d85d34d1fb5343592c0015645aaa15065e20ffc1",
        "date": "2023-10-27T09:39:14Z",
        "message": "feat(cketh): Ensures that `LogEntry::removed` is always false"
      },
      {
        "id": "69c0d811d7145a52dd3bac7ba4e54619cc674cf0",
        "date": "2023-10-26T08:53:49Z",
        "message": "Merge branch 'leo-cketh-reimburse' into 'master'\n\nfeat(cketh): reimburse if transaction failed [override-didc-check]\n\n1. A transaction may be mined but failed (e.g. out of gas because recipient was a smart contract). Example: [0x31def1190c60569bab69e9856ac396ddacea4f1216b60ffa6ac7cee385c5d414](https://sepolia.etherscan.io/tx/0x31def1190c60569bab69e9856ac396ddacea4f1216b60ffa6ac7cee385c5d414 \"https://sepolia.etherscan.io/tx/0x31def1190c60569bab69e9856ac396ddacea4f1216b60ffa6ac7cee385c5d414\"). \\\n   ![:info:](https://pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/atlassian/info_64.png){width=\"20\" height=\"20\"} Note that this doesn’t impede future transactions\n2. In that case the minter should reimburse the IC principal from which the funds were taken from\n3. ![:warning:](https://pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/atlassian/warning_64.png){width=\"20\" height=\"20\"} the reimbursed amount should be the transaction value (which already takes into account the maximum transaction fee, which covers the effective transaction fee) and not the initial withdrawal amount specified by the user\n4. ![:info:](https://pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/atlassian/info_64.png){width=\"20\" height=\"20\"} Needed to track minter’s pot\n\nCloses FI-940. \n\nCloses FI-940\n\nSee merge request dfinity-lab/public/ic!15471"
      },
      {
        "id": "060bdd26d76afda0beb6ab6ec7db7bd86b31c1f6",
        "date": "2023-10-26T08:53:49Z",
        "message": "feat(cketh): reimburse if transaction failed [override-didc-check]"
      },
      {
        "id": "557b3f0c2a153bbc675e99b0c842b7164cb8dd2b",
        "date": "2023-10-26T08:44:44Z",
        "message": "Merge branch 'leo-update-ssh-testent' into 'master'\n\nfix(testnet-ssh): Update pubkey\n\n \n\nSee merge request dfinity-lab/public/ic!15652"
      },
      {
        "id": "2bd0d1b1da4d1be95fd427e0b23f7ec073f9c124",
        "date": "2023-10-26T08:44:41Z",
        "message": "fix(testnet-ssh): Update pubkey"
      },
      {
        "id": "545dbc8cda6244f4490d89eb30868a7986a5e0e2",
        "date": "2023-10-23T12:09:28Z",
        "message": "Merge branch 'leo-cketh-improve-overlap-scrapping' into 'master'\n\ntest(cketh): Assert there is no missed scrapped log\n\nAssert that `from_block` is exactly `3_957_232_u64` (corresponding to `first_to_block+1`), otherwise, the test does not ensure that there is no missing scrapped block. \n\nSee merge request dfinity-lab/public/ic!15559"
      },
      {
        "id": "438f6a2edd3211bdfb1bc7cb15a4bfedfdd2f2da",
        "date": "2023-10-23T12:09:28Z",
        "message": "test(cketh): Assert there is no missed scrapped log"
      },
      {
        "id": "9b36dbb28cf664789c3b8ed568155d48f9f29d78",
        "date": "2023-10-19T15:26:39Z",
        "message": "Merge branch 'leo-icp-ledger-fix-did' into 'master'\n\nfix(icp-ledger): Update did file to match code\n\n \n\nSee merge request dfinity-lab/public/ic!15507"
      },
      {
        "id": "d3db4ae4726f433098deef384f004c11d676baa8",
        "date": "2023-10-19T15:26:39Z",
        "message": "fix(icp-ledger): Update did file to match code"
      },
      {
        "id": "1965dc52b5ef7e54ad5cb54b8832b8fd9eb13f90",
        "date": "2023-10-18T16:06:41Z",
        "message": "Merge branch 'leo-cketh-fix-scrapping-overlap' into 'master'\n\nfix(cketh): No overlap between two log scrapping\n\nThe minter was blocked because it was panicking while scrapping logs. As we had an overlap between two scrap ranges we were trying to mint twice the same log entry thus crashing. \n\nSee merge request dfinity-lab/public/ic!15384"
      },
      {
        "id": "be38c6dc3a73621aa4b6cfad27951573ee56c6e7",
        "date": "2023-10-18T16:06:40Z",
        "message": "fix(cketh): No overlap between two log scrapping"
      },
      {
        "id": "75c4368a5fd9545034e6f6144f48a76ffdeb3d61",
        "date": "2023-10-13T13:33:55Z",
        "message": "doc(ckbtc) update old flow chart"
      },
      {
        "id": "3fbadcab6eab4ef79e9437b11b3ca3958c9dfd8b",
        "date": "2023-10-11T08:45:39Z",
        "message": "Merge branch 'gdemay/FI-832-do-not-panic' into 'master'\n\nfix(cketh): improve handling of `eth_get_logs`\n\n(FI-832): makes the handling of `eth_get_logs` more robust after having observed some unexpected panics that occurred when the 3rd provider was added ([MR-15571](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15171)) while the minter was catching up to scrap logs:\n1. Avoid panicking when `eth_get_logs` fails\n2. Ensure that `Vec<LogEntry>` are sorted to ensure that consensus can always be reached \n\nSee merge request dfinity-lab/public/ic!15249"
      },
      {
        "id": "90e35b9f3630450b1635a9ae119547ee5afc6bf4",
        "date": "2023-10-09T13:16:01Z",
        "message": "Merge branch 'leo-cketh-some-refactor' into 'master'\n\nrefactor(cketh): consolidate async fn in main.rs\n\nRefactor the main file to only keep methods accessible from did interface.\n\nCloses FI-983. \n\nCloses FI-983\n\nSee merge request dfinity-lab/public/ic!15229"
      },
      {
        "id": "e2352da4ee2adced7d74006ce42ed0630f4a4075",
        "date": "2023-10-09T13:16:00Z",
        "message": "refactor(cketh): consolidate async fn in main.rs"
      },
      {
        "id": "3d5e95d460f95b02a69cc553ff969afa8f101434",
        "date": "2023-10-06T09:32:25Z",
        "message": "Merge branch 'leo-update-readme' into 'master'\n\ndoc(cketh) Update readme\n\n \n\nSee merge request dfinity-lab/public/ic!15220"
      },
      {
        "id": "694ac7b6f517f6d020692caaa16b5449b0c777d7",
        "date": "2023-10-06T09:32:25Z",
        "message": "doc(cketh) Update readme"
      },
      {
        "id": "de98b950d289242058268d6ada50fa170bbf8261",
        "date": "2023-10-05T10:41:33Z",
        "message": "Merge branch 'leo-release-bitcoin-mock' into 'master'\n\nfeat(release): Release the bitcoin mock canister\n\nRelease the bitcoin mock canister to help with NNS automated test setup. \n\nSee merge request dfinity-lab/public/ic!15218"
      },
      {
        "id": "e18e73379ee765840cde79bb3ec4a1a33f6e30ee",
        "date": "2023-10-05T10:41:33Z",
        "message": "feat(release): Release the bitcoin mock canister"
      },
      {
        "id": "b764363a0c0cb0d3f6a4a13e4b8cb3c619847e63",
        "date": "2023-09-29T13:56:14Z",
        "message": "Merge branch 'leo-cketh-fix-lib' into 'master'\n\nfix(cketh): Improve docs of cketh lib\n\nImprove the comments to avoid the two following warnings:\n\n* bare URLs are not automatically turned into clickable links\n* warning: public documentation for `Guard` links to private item `MAX_CONCURRENT` \n\nSee merge request dfinity-lab/public/ic!15093"
      },
      {
        "id": "ed2dfc19a1799ae4f16822c242dc59b0fd7cf964",
        "date": "2023-09-29T13:56:12Z",
        "message": "fix(cketh): Improve docs of cketh lib"
      },
      {
        "id": "857c76d81297c02a68e0fcb39d43c494e9e45649",
        "date": "2023-09-29T09:29:57Z",
        "message": "Merge branch 'leo-cketh-blocklist' into 'master'\n\nfeat(cketh): Block addresses in the OFAC’s SDN list\n\nBlock interactions with the minter from addresses in the OFAC’s SDN list:\n- https://ofac.treasury.gov/faqs/topic/1626\n- https://www.treasury.gov/ofac/downloads/prgrmlst.txt\n\nCloses FI-902. \n\nCloses FI-902\n\nSee merge request dfinity-lab/public/ic!14984"
      },
      {
        "id": "85a80d71b845e859ad1a74b30c63011df83a5506",
        "date": "2023-09-29T09:29:57Z",
        "message": "feat(cketh): Block addresses in the OFAC’s SDN list"
      },
      {
        "id": "534407592c04702bd1d9e93652213b9665bdf130",
        "date": "2023-09-28T08:20:56Z",
        "message": "Merge branch 'leo-cketh-reject-replicated-calls' into 'master'\n\nfeat(cketh): Reject replicated calls to http_request endpoint\n\nReject replicated calls to http_request endpoint.\n\nIntroduces a new endpoint `get_canister_status` to help with canister monitoring. \n\nSee merge request dfinity-lab/public/ic!15037"
      },
      {
        "id": "b3b18b0b52df92f16647888606ad3da47a607150",
        "date": "2023-09-28T08:20:56Z",
        "message": "feat(cketh): Reject replicated calls to http_request endpoint"
      },
      {
        "id": "1b9d03272268d7f97d4334b67a68188eddd80998",
        "date": "2023-09-27T12:49:28Z",
        "message": "Merge branch 'leo-cketh-testnet-readme' into 'master'\n\ndocs(cketh): Add a readme to testnet\n\nAdds a file that describes the interactions and the commands to use with the ckSepoliaETH minter. \n\nSee merge request dfinity-lab/public/ic!15008"
      },
      {
        "id": "0ba28d43ff41375075e269e5f24cea735432259c",
        "date": "2023-09-27T12:49:26Z",
        "message": "docs(cketh): Add a readme to testnet"
      },
      {
        "id": "22f2925ea7c27e5de2224dafa8e916854dd4d14c",
        "date": "2023-09-27T09:53:08Z",
        "message": "Merge branch 'leo-ckbtc-status-endpoint' into 'master'\n\nfeat(ckbtc): Add status endpoint\n\n \n\nSee merge request dfinity-lab/public/ic!15002"
      },
      {
        "id": "efb9d9c543a486ce44e1b3d7f49702736193818c",
        "date": "2023-09-27T09:53:08Z",
        "message": "feat(ckbtc): Add status endpoint"
      },
      {
        "id": "a5d0ecc7fd5c79736127b5ce3421f0e548f0b165",
        "date": "2023-09-22T12:36:34Z",
        "message": "Merge branch 'leo-cketh-state-machine' into 'master'\n\nfeat(cketh): State machine test [override-didc-check]\n\nImplements the basic \"happy path\" for cketh deposit and withdrawal. \n\nSee merge request dfinity-lab/public/ic!14381"
      },
      {
        "id": "7b2db1836381012a2971574479be76c16a4e11fe",
        "date": "2023-09-22T12:36:34Z",
        "message": "feat(cketh): State machine test [override-didc-check]"
      },
      {
        "id": "030816b45b5082171553702a7c0e792095783748",
        "date": "2023-09-20T13:53:14Z",
        "message": "Merge branch 'leo-ckbtc-reject-updates' into 'master'\n\nfix(ckbtc): Reject update calls to the http_request endpoint\n\nThis change help to protect the canister from DoS. \n\nSee merge request dfinity-lab/public/ic!14901"
      },
      {
        "id": "7d7372e5e7a592da6ce5a7e07959c87d8e8f4229",
        "date": "2023-09-20T13:53:14Z",
        "message": "fix(ckbtc): Reject update calls to the http_request endpoint"
      },
      {
        "id": "c4e78291e665b86a08997c640708f8b9a23f7182",
        "date": "2023-09-15T14:55:10Z",
        "message": "Merge branch 'leo-ckbtc-format' into 'master'\n\nfix(ckbtc) format .json file\n\nThis annoyed me a few times while using json files. \n\nSee merge request dfinity-lab/public/ic!14828"
      },
      {
        "id": "d8d9b0076f3bd0f7212099d87239cde1d96bd600",
        "date": "2023-09-15T14:55:10Z",
        "message": "fix(ckbtc) format .json file"
      },
      {
        "id": "3f4baa72f3029f4437d32a5b704734abaeb099d0",
        "date": "2023-09-15T13:09:47Z",
        "message": "Merge branch 'leo-ckbtc-security-review' into 'master'\n\nfix(ckBTC): retrieve flow unpaid fee [override-didc-check]\n\nFunctional issue is that no KYT fee seems to be paid to the API key provider when a tainted address is detected. \n\nSee merge request dfinity-lab/public/ic!14776"
      },
      {
        "id": "71e1f950d06d50a13b5f5161220db455da99a07a",
        "date": "2023-09-15T13:09:47Z",
        "message": "fix(ckBTC): retrieve flow unpaid fee [override-didc-check]"
      },
      {
        "id": "0935a02688dbfe0cf5633b8ac70c6c2d3cdea272",
        "date": "2023-09-13T08:16:23Z",
        "message": "Merge branch 'leo-limit-logs-size' into 'master'\n\nfeat(cketh) Fix the logs endpoint\n\nFix the logs endpoint:\n- Application payload shouldn't be more than 3145728 bytes:\n`Replica Error: reject code CanisterError, reject message IC0504: Canister jzenf-aiaaa-aaaar-qaa7q-cai violated contract: ic0.msg_reply_data_append: application payload size (3288846) cannot be larger than 3145728, error code Some(\"IC0504\")`\n- Sort the logs to first display the latest timestamp. \n\nSee merge request dfinity-lab/public/ic!14614"
      },
      {
        "id": "7bc8836a40853fe4a5a353d8cefee1cc365c0b57",
        "date": "2023-09-13T08:16:23Z",
        "message": "feat(cketh) Fix the logs endpoint"
      },
      {
        "id": "28dc166979e1eb4d11434ae9709539ae986cc288",
        "date": "2023-09-12T14:15:35Z",
        "message": "Merge branch 'leo-cketh-fix-interface' into 'master'\n\nfix(ckETH): Use another type for candid BlockTag\n\nSerialization using candid and serde may differ, we need to use another type for init args. \n\nSee merge request dfinity-lab/public/ic!14740"
      },
      {
        "id": "d61a5c657c19e53a5a053dabc35584a8ff9047a1",
        "date": "2023-09-12T14:15:35Z",
        "message": "fix(ckETH): Use another type for candid BlockTag"
      },
      {
        "id": "23789a6f36d9044ca07992d761de3e071df32997",
        "date": "2023-09-12T13:36:47Z",
        "message": "Merge branch 'leo-fix-index-ng' into 'master'\n\nfix(index-ng) Use last fee if no fee found\n\n \n\nSee merge request dfinity-lab/public/ic!14694"
      },
      {
        "id": "cacbdd8d16c91c09505277c4797c99ec107b632d",
        "date": "2023-09-12T13:36:46Z",
        "message": "fix(index-ng) Use last fee if no fee found"
      },
      {
        "id": "105297ae146dc92a05d01499a3e6641e5b77942b",
        "date": "2023-09-11T09:16:52Z",
        "message": "Merge branch 'leo-fix-ecdsa-state-machine' into 'master'\n\nfix(state-machine): Sign the right message\n\nWe are currently signing hash(hash(message)) but we need to sign hash(message). \n\nSee merge request dfinity-lab/public/ic!14656"
      },
      {
        "id": "b892d09e98a104a811c62f119fd7fb401bb7782b",
        "date": "2023-09-11T09:16:51Z",
        "message": "fix(state-machine): Sign the right message"
      },
      {
        "id": "b4166b9b57b4356ba2807340c7dd43f593cc5a00",
        "date": "2023-09-07T09:23:00Z",
        "message": "Merge branch 'leo-use-versions' into 'master'\n\nfeat(version): use crate version\n\n \n\nSee merge request dfinity-lab/public/ic!14623"
      },
      {
        "id": "107e24d209b1dc02163fce2ad721170a0974e571",
        "date": "2023-09-07T09:23:00Z",
        "message": "feat(version): use crate version"
      },
      {
        "id": "da4badeca4e642ea62235ac25e0526dd4aaf9856",
        "date": "2023-09-05T07:53:52Z",
        "message": "Merge branch 'leo-fix-did' into 'master'\n\nfeat(FI) Improve interface check [override-didc-check]\n\nImprove the sync between the actual interface of a canister and the declared interface in the did file. \n\nSee merge request dfinity-lab/public/ic!13346"
      },
      {
        "id": "2f8973e7d84d3c46fd8037771794123cfc2d7889",
        "date": "2023-09-05T07:53:52Z",
        "message": "feat(FI) Improve interface check [override-didc-check]"
      },
      {
        "id": "d3b96724c0dc99a017d85e30b5fa5aee64666077",
        "date": "2023-08-31T10:16:27Z",
        "message": "Merge branch 'roman-cketh-upgrade-instr' into 'master'\n\nfix(cketh): compute upgrade instruction count correctly\n\nThis change fixes a minor bug where ckETH reports an invalid number of\ninstructions required for an upgrade. \n\nSee merge request dfinity-lab/public/ic!14505"
      },
      {
        "id": "f45e698b1e4c78e91c88f8507f8146adc5c76b66",
        "date": "2023-08-26T19:11:01Z",
        "message": "Merge branch 'leo-cketh-burn' into 'master'\n\nfeat(cketh): burn ckETH on the ledger [override-didc-check]\n\nThis change hooks burning ckETH tokens on the ledger to the ETH withdraw processing logic.\n\nIt also introduces a test to check the compatibility of the did file.\n\nCloses FI-893. \n\nCloses FI-893\n\nSee merge request dfinity-lab/public/ic!14317"
      },
      {
        "id": "a09e9d1af839b75272fa0bb5456b88e872e63966",
        "date": "2023-08-26T19:11:01Z",
        "message": "feat(cketh): burn ckETH on the ledger [override-didc-check]"
      },
      {
        "id": "e7f1eb58240b4728cac232d8735b50cf615f57d1",
        "date": "2023-08-25T08:21:21Z",
        "message": "Merge branch 'leo-ckbtc-icrc2-retrival' into 'master'\n\nfeat(ckBTC): Implement icrc2 retrieve flow [override-didc-check]\n\nIntroduce a new endpoint: `retrieve_btc_with_approval` that implements the icrc2 retrieve btc flow. \nA new task is introduced to handle mint back in case of KYT check failure.\n\nCloses FI-761. \n\nCloses FI-761\n\nSee merge request dfinity-lab/public/ic!14127"
      },
      {
        "id": "be804b3cd13bc0ae6276d474eebc8df49687b30f",
        "date": "2023-08-25T08:21:20Z",
        "message": "feat(ckBTC): Implement icrc2 retrieve flow [override-didc-check]"
      },
      {
        "id": "eb8111c3aea3afe55f81e5d0c28c4a9d31b7ca45",
        "date": "2023-08-21T09:12:12Z",
        "message": "Merge branch 'leo-cketh-logs' into 'master'\n\nfeat(experimental-ckETH): Add logs\n\nLogging what the events happening in the minter is helpful for debugging.  \n\nCloses FI-888. \n\nCloses FI-888\n\nSee merge request dfinity-lab/public/ic!14164"
      },
      {
        "id": "4e33058bfb5947fa9bb8a0f3d213d460c9031f9d",
        "date": "2023-08-21T09:12:11Z",
        "message": "feat(experimental-ckETH): Add logs"
      },
      {
        "id": "dcad7d8c38652ff14769b61c0df1e977583c8e11",
        "date": "2023-08-14T12:03:42Z",
        "message": "Merge branch 'leo-ckbtc-fix-matches' into 'master'\n\nfix(ckBTC): Use assert_matches instead of matches.\n\n \n\nSee merge request dfinity-lab/public/ic!14113"
      },
      {
        "id": "1f71411e590510c2006ee01971503126c441a503",
        "date": "2023-08-14T12:03:42Z",
        "message": "fix(ckBTC): Use assert_matches instead of matches."
      }
    ],
    "email": "leo.kazmierczak@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 77,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 39,
    "fixes": 15,
    "feats": 18,
    "non_merge_commits": [
      {
        "id": "be57cba441dc1539e3e05a12b9f72620135366ba",
        "date": "2023-11-20T12:05:11Z",
        "message": "feat(ckbtc): update_balance returns pending utxos"
      },
      {
        "id": "3bc92ba40d2e1bc6a043cb9fd4ed7a77a285dce0",
        "date": "2023-11-16T15:56:10Z",
        "message": "feat(cketh): Add Cloudflare as a mainnet Provider"
      },
      {
        "id": "a6182f9980912b95cea3530a02fa37c9c44f70c6",
        "date": "2023-11-16T14:57:59Z",
        "message": "feat(cketh): Limit number of events per block"
      },
      {
        "id": "0c1936d5b5dceb3a0fcc73b3d32db8dc7c362f2d",
        "date": "2023-11-14T14:43:04Z",
        "message": "fix(cketh): Make transaction hash optional in Reimbursed [override-didc-check]"
      },
      {
        "id": "2b976921946ad68874c71cf46c27844ae1738d3a",
        "date": "2023-11-13T13:20:48Z",
        "message": "feat(cketh): Add data in the ledger memo field [override-didc-check]"
      },
      {
        "id": "1c1cea90d00f79a93ed8e1a08d10a9afb117c2d8",
        "date": "2023-11-07T15:02:46Z",
        "message": "fix(cketh): Change the Mainnet RPC providers"
      },
      {
        "id": "26b6d3b98307dc4b1d4fb20575d3e76e8b1863ac",
        "date": "2023-11-03T10:15:28Z",
        "message": "fix(cketh): Update comments to reflect code"
      },
      {
        "id": "45948729d4be4406e8a4bbe4c4f97c8e4cbbe137",
        "date": "2023-11-02T10:32:06Z",
        "message": "feat(cketh): Add reimbursements to dashboard"
      },
      {
        "id": "cbc2e2df5f174531cc0b51466ec1bd4cd61b5553",
        "date": "2023-11-01T11:23:18Z",
        "message": "docs(cketh): Create ckETH staging canisters"
      },
      {
        "id": "d85d34d1fb5343592c0015645aaa15065e20ffc1",
        "date": "2023-10-27T09:39:14Z",
        "message": "feat(cketh): Ensures that `LogEntry::removed` is always false"
      },
      {
        "id": "060bdd26d76afda0beb6ab6ec7db7bd86b31c1f6",
        "date": "2023-10-26T08:53:49Z",
        "message": "feat(cketh): reimburse if transaction failed [override-didc-check]"
      },
      {
        "id": "2bd0d1b1da4d1be95fd427e0b23f7ec073f9c124",
        "date": "2023-10-26T08:44:41Z",
        "message": "fix(testnet-ssh): Update pubkey"
      },
      {
        "id": "438f6a2edd3211bdfb1bc7cb15a4bfedfdd2f2da",
        "date": "2023-10-23T12:09:28Z",
        "message": "test(cketh): Assert there is no missed scrapped log"
      },
      {
        "id": "d3db4ae4726f433098deef384f004c11d676baa8",
        "date": "2023-10-19T15:26:39Z",
        "message": "fix(icp-ledger): Update did file to match code"
      },
      {
        "id": "be38c6dc3a73621aa4b6cfad27951573ee56c6e7",
        "date": "2023-10-18T16:06:40Z",
        "message": "fix(cketh): No overlap between two log scrapping"
      },
      {
        "id": "75c4368a5fd9545034e6f6144f48a76ffdeb3d61",
        "date": "2023-10-13T13:33:55Z",
        "message": "doc(ckbtc) update old flow chart"
      },
      {
        "id": "e2352da4ee2adced7d74006ce42ed0630f4a4075",
        "date": "2023-10-09T13:16:00Z",
        "message": "refactor(cketh): consolidate async fn in main.rs"
      },
      {
        "id": "694ac7b6f517f6d020692caaa16b5449b0c777d7",
        "date": "2023-10-06T09:32:25Z",
        "message": "doc(cketh) Update readme"
      },
      {
        "id": "e18e73379ee765840cde79bb3ec4a1a33f6e30ee",
        "date": "2023-10-05T10:41:33Z",
        "message": "feat(release): Release the bitcoin mock canister"
      },
      {
        "id": "ed2dfc19a1799ae4f16822c242dc59b0fd7cf964",
        "date": "2023-09-29T13:56:12Z",
        "message": "fix(cketh): Improve docs of cketh lib"
      },
      {
        "id": "85a80d71b845e859ad1a74b30c63011df83a5506",
        "date": "2023-09-29T09:29:57Z",
        "message": "feat(cketh): Block addresses in the OFAC’s SDN list"
      },
      {
        "id": "b3b18b0b52df92f16647888606ad3da47a607150",
        "date": "2023-09-28T08:20:56Z",
        "message": "feat(cketh): Reject replicated calls to http_request endpoint"
      },
      {
        "id": "0ba28d43ff41375075e269e5f24cea735432259c",
        "date": "2023-09-27T12:49:26Z",
        "message": "docs(cketh): Add a readme to testnet"
      },
      {
        "id": "efb9d9c543a486ce44e1b3d7f49702736193818c",
        "date": "2023-09-27T09:53:08Z",
        "message": "feat(ckbtc): Add status endpoint"
      },
      {
        "id": "7b2db1836381012a2971574479be76c16a4e11fe",
        "date": "2023-09-22T12:36:34Z",
        "message": "feat(cketh): State machine test [override-didc-check]"
      },
      {
        "id": "7d7372e5e7a592da6ce5a7e07959c87d8e8f4229",
        "date": "2023-09-20T13:53:14Z",
        "message": "fix(ckbtc): Reject update calls to the http_request endpoint"
      },
      {
        "id": "d8d9b0076f3bd0f7212099d87239cde1d96bd600",
        "date": "2023-09-15T14:55:10Z",
        "message": "fix(ckbtc) format .json file"
      },
      {
        "id": "71e1f950d06d50a13b5f5161220db455da99a07a",
        "date": "2023-09-15T13:09:47Z",
        "message": "fix(ckBTC): retrieve flow unpaid fee [override-didc-check]"
      },
      {
        "id": "7bc8836a40853fe4a5a353d8cefee1cc365c0b57",
        "date": "2023-09-13T08:16:23Z",
        "message": "feat(cketh) Fix the logs endpoint"
      },
      {
        "id": "d61a5c657c19e53a5a053dabc35584a8ff9047a1",
        "date": "2023-09-12T14:15:35Z",
        "message": "fix(ckETH): Use another type for candid BlockTag"
      },
      {
        "id": "cacbdd8d16c91c09505277c4797c99ec107b632d",
        "date": "2023-09-12T13:36:46Z",
        "message": "fix(index-ng) Use last fee if no fee found"
      },
      {
        "id": "b892d09e98a104a811c62f119fd7fb401bb7782b",
        "date": "2023-09-11T09:16:51Z",
        "message": "fix(state-machine): Sign the right message"
      },
      {
        "id": "107e24d209b1dc02163fce2ad721170a0974e571",
        "date": "2023-09-07T09:23:00Z",
        "message": "feat(version): use crate version"
      },
      {
        "id": "2f8973e7d84d3c46fd8037771794123cfc2d7889",
        "date": "2023-09-05T07:53:52Z",
        "message": "feat(FI) Improve interface check [override-didc-check]"
      },
      {
        "id": "a09e9d1af839b75272fa0bb5456b88e872e63966",
        "date": "2023-08-26T19:11:01Z",
        "message": "feat(cketh): burn ckETH on the ledger [override-didc-check]"
      },
      {
        "id": "be804b3cd13bc0ae6276d474eebc8df49687b30f",
        "date": "2023-08-25T08:21:20Z",
        "message": "feat(ckBTC): Implement icrc2 retrieve flow [override-didc-check]"
      },
      {
        "id": "4e33058bfb5947fa9bb8a0f3d213d460c9031f9d",
        "date": "2023-08-21T09:12:11Z",
        "message": "feat(experimental-ckETH): Add logs"
      },
      {
        "id": "1f71411e590510c2006ee01971503126c441a503",
        "date": "2023-08-14T12:03:42Z",
        "message": "fix(ckBTC): Use assert_matches instead of matches."
      }
    ],
    "line_additions": 5804,
    "line_deletions": 1485,
    "lines_effected_total": 7289,
    "rel_comm_add": 28,
    "rel_comm_del": 19,
    "rel_comm_total": 32
  },
  {
    "login": "MarioDfinity",
    "id": 93518022,
    "totalContributions": 266,
    "github": "https://github.com/MarioDfinity",
    "commits": [
      {
        "id": "08151695911e5c548359e07de318d5d5a658e411",
        "date": "2023-11-20T12:21:06Z",
        "message": "Merge branch 'rosetta_release_1.9.0' into 'master'\n\nchore(icp_rosetta): release 1.9.0\n\n \n\nSee merge request dfinity-lab/public/ic!16142"
      },
      {
        "id": "7f3861942f9c4dbac2e0f8cbe5dee60d7ce5d87f",
        "date": "2023-11-20T12:21:06Z",
        "message": "chore(icp_rosetta): release 1.9.0"
      },
      {
        "id": "36c8ab879ddf705ccff1f928e9ad494131c3d23d",
        "date": "2023-11-20T09:04:11Z",
        "message": "Merge branch 'FI-1062' into 'master'\n\nfix(icp_rosetta): remove https://rosetta-exchanges.ic0.app\n\nCloses FI-1062 \n\nCloses FI-1062\n\nSee merge request dfinity-lab/public/ic!16161"
      },
      {
        "id": "6d73eb531eac56e4920bfb23a5e8e1a4ef7ef5f7",
        "date": "2023-11-16T18:21:20Z",
        "message": "fix(icp_rosetta): remove https://rosetta-exchanges.ic0.app"
      },
      {
        "id": "17350aac94d4913ff92cea64b1b350556535ff85",
        "date": "2023-11-15T18:59:36Z",
        "message": "Merge branch 'mp_lower_icp_index_max_wait_time' into 'master'\n\nfeat(icp_index): change wait time to 2 seconds\n\n \n\nSee merge request dfinity-lab/public/ic!16127"
      },
      {
        "id": "d5bbd2377144d4f92cb3273b599fcffb0aeffce9",
        "date": "2023-11-15T18:05:33Z",
        "message": "feat(icp_index): change wait time to 2 seconds"
      },
      {
        "id": "d6be0e6533b2e238845030d5e61d58b64fa23e33",
        "date": "2023-11-15T14:43:53Z",
        "message": "Merge branch 'mp_fix_icp_index_post_upgrade_start_timer' into 'master'\n\nfix(icp_index): add post_upgrade to restart timer\n\n \n\nSee merge request dfinity-lab/public/ic!16113"
      },
      {
        "id": "a1a1c700f486ff6e1dde074fa10024cfb470ca38",
        "date": "2023-11-15T13:26:14Z",
        "message": "fix(icp_index): add post_upgrade to restart timer"
      },
      {
        "id": "0a39b0cd8730dc9d43e4d6d4db8d101677a1f987",
        "date": "2023-11-15T11:40:28Z",
        "message": "Merge branch 'FI-1050-rosetta-memo' into 'master'\n\nfix(icp_rosetta): return metadata in /construction/parse\n\nCloses FI-1050 \n\nCloses FI-1050\n\nSee merge request dfinity-lab/public/ic!16053"
      },
      {
        "id": "8fc6b1152f8cb4bd3e97d56a2ee80aa79279ac1d",
        "date": "2023-11-15T11:40:24Z",
        "message": "fix(icp_rosetta): return metadata in /construction/parse"
      },
      {
        "id": "5364f8d8cc844418bb4d0addba2d66f3bb275501",
        "date": "2023-11-13T16:33:48Z",
        "message": "Merge branch 'maciej-largeint' into 'master'\n\nfeat(rosetta-api): changing allowance and expected_allowance to TEXT\n\nSync completes successfully. The /block endpoint for the block with u64::MAX allowance returns:\n```\n{\"block\":{\"block_identifier\":{\"index\":6981590,\"hash\":\"bb2675a48854c456c49249e8aead972b0d443b3c7cccc574125b4a989333d09c\"},\"parent_block_identifier\":{\"index\":6981589,\"hash\":\"17ae79d193673e2b482e5998fb867aaac6c1f7adc5543dd4930b6bb7b3acda06\"},\"timestamp\":1698069300714,\"transactions\":[{\"transaction_identifier\":{\"hash\":\"d36b7ae5d4fe0989e55451146e38bf7d3ab0b11cf057a8eda8f73e4ffb07322c\"},\"operations\":[{\"operation_identifier\":{\"index\":0},\"type\":\"APPROVE\",\"status\":\"COMPLETED\",\"account\":{\"address\":\"255ded75d7c689fe1a69801e9353432e4accac19c9f7ca35b4cbd00cd24d455d\"},\"metadata\":{\"allowance\":{\"e8s\":18446744073709551615},\"expected_allowance\":null,\"expires_at\":null,\"from\":\"255ded75d7c689fe1a69801e9353432e4accac19c9f7ca35b4cbd00cd24d455d\",\"spender\":\"b310a8865af2d2953ad35b7aa96355f4516a25e9da7911c0c60ff4ce72a41e4a\"}},{\"operation_identifier\":{\"index\":1},\"type\":\"FEE\",\"status\":\"COMPLETED\",\"account\":{\"address\":\"255ded75d7c689fe1a69801e9353432e4accac19c9f7ca35b4cbd00cd24d455d\"},\"amount\":{\"value\":\"-10000\",\"currency\":{\"symbol\":\"ICP\",\"decimals\":8}}}],\"metadata\":{\"block_height\":6981590,\"memo\":0,\"timestamp\":1698069300714698311}}]}}%\n```\nIn particular `\"metadata\":{\"allowance\":{\"e8s\":18446744073709551615}`... \n\nSee merge request dfinity-lab/public/ic!16013"
      },
      {
        "id": "4935b4cb2508f7c024487601b34a13f3def40f31",
        "date": "2023-11-09T14:01:12Z",
        "message": "Merge branch 'mp_generic_value_hash_test_vectors' into 'master'\n\nchore(icrc-ledger-types): add test vectors for ICRC-3 hash\n\n \n\nSee merge request dfinity-lab/public/ic!15992"
      },
      {
        "id": "e5800aa0e475fa11b1619aea3fd642b310b38066",
        "date": "2023-11-09T14:01:11Z",
        "message": "chore(icrc-ledger-types): add test vectors for ICRC-3 hash"
      },
      {
        "id": "f7835d7fd9f840baf47be237c3b54c9461c47287",
        "date": "2023-10-25T17:17:52Z",
        "message": "Merge branch 'FI-1026' into 'master'\n\nfix: make the ICP Archive did file match the ICP Ledger did file\n\nCloses FI-1026 \n\nCloses FI-1026\n\nSee merge request dfinity-lab/public/ic!15649"
      },
      {
        "id": "a9851c1eefaee817df44d0cd10529a708ac84e77",
        "date": "2023-10-25T17:17:51Z",
        "message": "fix: make the ICP Archive did file match the ICP Ledger did file"
      },
      {
        "id": "7ff53309954f5c58e16d79e7d3a9e243d30ba574",
        "date": "2023-10-17T12:01:51Z",
        "message": "Merge branch 'FI-1013-handle-unknown-accounts-in-icrc-1-index-canister' into 'master'\n\nfix(ICRC-1 index): handling of unknown accounts\n\nThis MR fixes the issue of unnecessary cycle consumption during the lookup of the oldest tx id. \n\nSee merge request dfinity-lab/public/ic!15400"
      },
      {
        "id": "15e957f49766068d71a319e79e643246f5a2e130",
        "date": "2023-10-13T19:47:04Z",
        "message": "Merge branch 'icrc_ledger_types_0.1.3' into 'master'\n\nfeat: Icrc-ledger-types 0.1.3\n\n \n\nSee merge request dfinity-lab/public/ic!15389"
      },
      {
        "id": "023ef017049290b53e97d67091a58e06d3b7716a",
        "date": "2023-10-13T19:47:04Z",
        "message": "feat: Icrc-ledger-types 0.1.3"
      },
      {
        "id": "a3ac44678c98c1fa6471b0e2fb74993f55f98c73",
        "date": "2023-10-13T16:06:02Z",
        "message": "Merge branch 'franzstefan-remove-obsolete-rosetta-api-dependency' into 'master'\n\nchore(crypto): remove obsolete dependency on internal crypto crate\n\nRemoves the rosetta API's dependency on `ic_crypto_internal_threshold_sig_bls12381`, which is a crypto-internal crate that ideally is not (directly) used by production code, by using the DER-conversion functionality from `ic_crypto_utils_threshold_sig_der` which already is a dependency anyway. Internally, the code that does the parsing is the same (namely `ic-crypto-internal-threshold-sig-bls12381-der::public_key_from_der`), so functionally there is no change. \n\nSee merge request dfinity-lab/public/ic!11373"
      },
      {
        "id": "0987038f4c8c95a2f6f094c1bec323328889672e",
        "date": "2023-10-12T18:38:13Z",
        "message": "Merge branch 'FI-975' into 'master'\n\nfeat: add ICRC-3 value schema validator\n\n1. add a new module `generic_value_predicate` to `icrc-ledger-types` containing `ValuePredicate`, that is the type of validator functions for `Value`s\n1. add a new module `icrc3::schema` to `icrc-ledger-types` containing the function `validate(&Value)` which validates a `Value` against the schema of an ICRC-3 `Block`\n1. add a new function `block_encoding_agreed_with_the_icrc3_schema` to `ic_icrc1_ledger_sm_tests` that runs the validate function over random `Block`s similarly to how `block_encoding_agrees_with_the_schema` does for the CDDL\n1. add a new test `block_encoding_agrees_with_the_icrc3_schema` to the ICRC Ledger that calls `ic_icrc1_ledger_sm_tests::block_encoding_agreed_with_the_icrc3_schema`\n1. implement `Display` for `Value` \n\nSee merge request dfinity-lab/public/ic!15184"
      },
      {
        "id": "36fe305f437c85af93e08a6f7f8b0790ee75a115",
        "date": "2023-10-12T18:38:12Z",
        "message": "feat: add ICRC-3 value schema validator"
      },
      {
        "id": "424afdde4dd226319eee781c0aafd39fec2dc4f9",
        "date": "2023-10-12T12:14:48Z",
        "message": "Merge branch 'mp_icrc_ledger_types_version_path' into 'master'\n\nchore: use path for icrc-ledger-types\n\n \n\nSee merge request dfinity-lab/public/ic!15360"
      },
      {
        "id": "6769e31836a06e0315ba298f31d38ca8e7bc51aa",
        "date": "2023-10-12T09:53:11Z",
        "message": "chore: use path for icrc-ledger-types"
      },
      {
        "id": "36e491cf573cc8872864cb96122c1680bbc92524",
        "date": "2023-09-25T11:27:11Z",
        "message": "Merge branch 'icrc_ledger_types_0.1.2' into 'master'\n\nchore: bump icrc-ledger-types to 0.1.2\n\n \n\nSee merge request dfinity-lab/public/ic!14967"
      },
      {
        "id": "754c817734a3695d04f2d40fb5c6f7ecb6e8cc84",
        "date": "2023-09-25T11:27:10Z",
        "message": "chore: bump icrc-ledger-types to 0.1.2"
      },
      {
        "id": "e956d088f8a8da605e53288755f9591315f72a9b",
        "date": "2023-09-14T10:52:55Z",
        "message": "Merge branch 'FI-946' into 'master'\n\nfeat(icp_ledger): add account_identifier endpoint\n\n- add `account_identifier` query endpoint to get the identifier from an account\n- use `AccountIdBlob` instead of `[u8;32]` \n\nSee merge request dfinity-lab/public/ic!14798"
      },
      {
        "id": "def91661e9d7eb18303b850f88a903112b1c6b6a",
        "date": "2023-09-14T10:52:55Z",
        "message": "feat(icp_ledger): add account_identifier endpoint"
      },
      {
        "id": "74c410964d5d7cbae8b158a00479f83a894e1f36",
        "date": "2023-09-07T18:43:46Z",
        "message": "Merge branch 'FI-934' into 'master'\n\nfeat: change ICRC-1 Account to use the standard ICRC-1 Textual Representation\n\nThe ICRC-1 Textual Representation can be found [here](https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-1/TextualEncoding.md) \n\nSee merge request dfinity-lab/public/ic!14648"
      },
      {
        "id": "3af5fdd5d8a0d6a5a1c8ccb5d0da7ad5ccbf3dbc",
        "date": "2023-09-07T18:43:45Z",
        "message": "feat: change ICRC-1 Account to use the standard ICRC-1 Textual Representation"
      },
      {
        "id": "094e888e764ea0d08710bea0b822543cef5176da",
        "date": "2023-09-07T16:19:07Z",
        "message": "Merge branch 'mp_fix_index_ng_strategies_approve' into 'master'\n\nfix: effective_fee in approve blocks and add approve to index-ng tests\n\n1. populate the `effective_fee` field if approve doesn't have the `fee` set\n2. add `approve` to the generated transactions \n\nSee merge request dfinity-lab/public/ic!14661"
      },
      {
        "id": "3c747a28735f3e2fd59dc0e63751781614f79524",
        "date": "2023-09-07T16:19:06Z",
        "message": "fix: effective_fee in approve blocks and add approve to index-ng tests"
      },
      {
        "id": "95787355499f3be929f2ab302ed44cdad7c64061",
        "date": "2023-09-04T18:42:15Z",
        "message": "Merge branch 'mp_fix_index_ng_strategies' into 'master'\n\nfix: fix index-ng testing strategies\n\n- fix `valid_transactions_strategy` to actually return transactions. The strategy was not populating the `transactions` field before\n- add a test for `valid_transactions_strategy` that checks that the strategy produces results\n- limit the amount in txs created by `valid_transactions_strategy` to avoid going over the total supply \n- reduce the number of transactions in tests from 100 to 10\n- fix the test `test_upgrade_index_to_index_ng` \n\nSee merge request dfinity-lab/public/ic!14536"
      },
      {
        "id": "385d7aca7fd5febcda0f83769d839969ed2b46d9",
        "date": "2023-09-04T18:42:14Z",
        "message": "fix: fix index-ng testing strategies"
      },
      {
        "id": "b3f1e813ee31d446e7f12fc28af1ae7b9bb63764",
        "date": "2023-08-03T09:07:49Z",
        "message": "Merge branch 'mp_icrc_ledger_types_pre_first_release' into 'master'\n\nchore(icrc_ledger_types): pre-release cleanup\n\n- remove `ciborium`dependency because unused\n- make `num-traits` optional because not needed by the soon-to-be-published package\n- better CHANGELOG to reflect what is released\n- add `author` \n\nSee merge request dfinity-lab/public/ic!13924"
      },
      {
        "id": "7b8e2ff8fa4cf1526b494767580368be224c4a04",
        "date": "2023-08-03T09:07:49Z",
        "message": "chore(icrc_ledger_types): pre-release cleanup"
      },
      {
        "id": "42b089a81f1c57fac1d0c782d9a007f2214b5a8d",
        "date": "2023-08-02T13:32:30Z",
        "message": "Merge branch 'mp_icrc3_feature_flag' into 'master'\n\nchore(icrc-ledger-types): add experimental-api feature flag\n\n- add `experimental-api` feature flag to the `icrc-ledger-types`\n- disable `experimental-api` feature flag by default in cargo\n- enabled `experimental-api` feature flag in bazel\n- change `ic-icrc1` and `icrc-ledger-agent` libs to depend on `icrc-ledger-types` with the `experimental-api` feature flag enabled \n\nSee merge request dfinity-lab/public/ic!13917"
      },
      {
        "id": "33ec479e039bb394e430de4ec3f9479a99a60bfa",
        "date": "2023-08-02T13:32:30Z",
        "message": "chore(icrc-ledger-types): add experimental-api feature flag"
      }
    ],
    "email": "mario.pastorelli@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 37,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 20,
    "fixes": 6,
    "feats": 6,
    "non_merge_commits": [
      {
        "id": "7f3861942f9c4dbac2e0f8cbe5dee60d7ce5d87f",
        "date": "2023-11-20T12:21:06Z",
        "message": "chore(icp_rosetta): release 1.9.0"
      },
      {
        "id": "6d73eb531eac56e4920bfb23a5e8e1a4ef7ef5f7",
        "date": "2023-11-16T18:21:20Z",
        "message": "fix(icp_rosetta): remove https://rosetta-exchanges.ic0.app"
      },
      {
        "id": "d5bbd2377144d4f92cb3273b599fcffb0aeffce9",
        "date": "2023-11-15T18:05:33Z",
        "message": "feat(icp_index): change wait time to 2 seconds"
      },
      {
        "id": "a1a1c700f486ff6e1dde074fa10024cfb470ca38",
        "date": "2023-11-15T13:26:14Z",
        "message": "fix(icp_index): add post_upgrade to restart timer"
      },
      {
        "id": "8fc6b1152f8cb4bd3e97d56a2ee80aa79279ac1d",
        "date": "2023-11-15T11:40:24Z",
        "message": "fix(icp_rosetta): return metadata in /construction/parse"
      },
      {
        "id": "e5800aa0e475fa11b1619aea3fd642b310b38066",
        "date": "2023-11-09T14:01:11Z",
        "message": "chore(icrc-ledger-types): add test vectors for ICRC-3 hash"
      },
      {
        "id": "a9851c1eefaee817df44d0cd10529a708ac84e77",
        "date": "2023-10-25T17:17:51Z",
        "message": "fix: make the ICP Archive did file match the ICP Ledger did file"
      },
      {
        "id": "023ef017049290b53e97d67091a58e06d3b7716a",
        "date": "2023-10-13T19:47:04Z",
        "message": "feat: Icrc-ledger-types 0.1.3"
      },
      {
        "id": "36fe305f437c85af93e08a6f7f8b0790ee75a115",
        "date": "2023-10-12T18:38:12Z",
        "message": "feat: add ICRC-3 value schema validator"
      },
      {
        "id": "6769e31836a06e0315ba298f31d38ca8e7bc51aa",
        "date": "2023-10-12T09:53:11Z",
        "message": "chore: use path for icrc-ledger-types"
      },
      {
        "id": "754c817734a3695d04f2d40fb5c6f7ecb6e8cc84",
        "date": "2023-09-25T11:27:10Z",
        "message": "chore: bump icrc-ledger-types to 0.1.2"
      },
      {
        "id": "def91661e9d7eb18303b850f88a903112b1c6b6a",
        "date": "2023-09-14T10:52:55Z",
        "message": "feat(icp_ledger): add account_identifier endpoint"
      },
      {
        "id": "3af5fdd5d8a0d6a5a1c8ccb5d0da7ad5ccbf3dbc",
        "date": "2023-09-07T18:43:45Z",
        "message": "feat: change ICRC-1 Account to use the standard ICRC-1 Textual Representation"
      },
      {
        "id": "3c747a28735f3e2fd59dc0e63751781614f79524",
        "date": "2023-09-07T16:19:06Z",
        "message": "fix: effective_fee in approve blocks and add approve to index-ng tests"
      },
      {
        "id": "385d7aca7fd5febcda0f83769d839969ed2b46d9",
        "date": "2023-09-04T18:42:14Z",
        "message": "fix: fix index-ng testing strategies"
      },
      {
        "id": "7b8e2ff8fa4cf1526b494767580368be224c4a04",
        "date": "2023-08-03T09:07:49Z",
        "message": "chore(icrc_ledger_types): pre-release cleanup"
      },
      {
        "id": "33ec479e039bb394e430de4ec3f9479a99a60bfa",
        "date": "2023-08-02T13:32:30Z",
        "message": "chore(icrc-ledger-types): add experimental-api feature flag"
      }
    ],
    "line_additions": 2091,
    "line_deletions": 298,
    "lines_effected_total": 2389,
    "rel_comm_add": 14,
    "rel_comm_del": 6,
    "rel_comm_total": 14
  },
  {
    "login": "zoran-dfinity",
    "id": 95237567,
    "totalContributions": 258,
    "github": "https://github.com/zoran-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "altkdf",
    "id": 108659113,
    "totalContributions": 236,
    "github": "https://github.com/altkdf",
    "commits": [
      {
        "id": "62c52f25a923e08d2bf8312c2bc5726b22450aa7",
        "date": "2023-11-09T14:06:18Z",
        "message": "Merge branch 'alex/rayon-thread-pool-in-vault-worker' into 'master'\n\nperf(crypto): CRP-2263 use rayon thread pool in the vault server worker\n\nReplace `threadpool` with `rayon`'s thread pool, which turned out to be faster by ~60us for executing a job.\n\nBelow are benchmarks for signing with Ed25519 using remote vault in a low-noise environment with a Gen1 CPU.\n| backend    | runtime   | improvement factor (cmp to worst) | improvement absolute (cmp to worst) |\n| ------     | ------    | ----- | ----- |\n| threadpool | 312.05 µs | 1.00x | 0.00 µs | \n| rayon      | 243.20 µs | 1.28x | 68.85 µs |\n| tokio      | 207.24 µs | 1.50x | 104.81 µs |\n\nUsing `tokio` will be considered later where applicable (it can only be used in functions with very low max execution time).\n\nCloses CRP-2263. \n\nCloses CRP-2263\n\nSee merge request dfinity-lab/public/ic!15678"
      },
      {
        "id": "bcf664b29a59d59d90d841f1b6b7ebf249b51b5a",
        "date": "2023-11-09T14:06:17Z",
        "message": "perf(crypto): CRP-2263 use rayon thread pool in the vault server worker"
      },
      {
        "id": "1135be3b5a2c32def1bdbf31d7c44e21d1c4e488",
        "date": "2023-11-08T09:05:30Z",
        "message": "Merge branch 'alex/improvements-suggested-by-codegov' into 'master'\n\nchore(crypto): implement some improvement suggestions from CodeGov\n\n* typo \"wo\" -> \"we\"\n* obsolete `allow` after reducing the number of arguments \n\nSee merge request dfinity-lab/public/ic!15918"
      },
      {
        "id": "2491fb265beb2501b8544952444a21cb03e1649e",
        "date": "2023-11-08T09:05:28Z",
        "message": "chore(crypto): implement some improvement suggestions from CodeGov"
      },
      {
        "id": "5c392939c121615ddb078f14ad31f31e5f173e0d",
        "date": "2023-10-31T18:40:24Z",
        "message": "Merge branch 'alex/add-nidkg-benches-w-remote-vault' into 'master'\n\nperf(crypto): CRP-2232 use remote vault in NI-DKG and threshold_sig benchmarks\n\nAlso, in the threshold_sig benchmark: 1) use both vaults for signing and 2) add benchmarks for 1MB messages. \n\nSee merge request dfinity-lab/public/ic!15520"
      },
      {
        "id": "69775a901d46fc5385c9a463404c1d217db7d4c9",
        "date": "2023-10-31T18:40:22Z",
        "message": "perf(crypto): CRP-2232 use remote vault in NI-DKG and threshold_sig benchmarks"
      },
      {
        "id": "cce4fc2e0d13af7b4b3e7e333cc67bbce43397d6",
        "date": "2023-10-31T18:37:18Z",
        "message": "Merge branch 'alex/efficient-byte-ser-in-rpc-for-vault-2' into 'master'\n\nperf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault\n\nThis is a duplicate of the reverted !15222. See the respective MR description and !15614 for more details. \n\nSee merge request dfinity-lab/public/ic!15764"
      },
      {
        "id": "3a68833eecd34d308b5219616c0a6cc23cbed897",
        "date": "2023-10-31T18:37:18Z",
        "message": "perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault"
      },
      {
        "id": "9474fe89b48f4b1e640ab60b07ca241f51e9c96c",
        "date": "2023-10-30T17:37:13Z",
        "message": "Merge branch 'alex/fix-serialization-metric' into 'master'\n\nchore(crypto): set correct name for the vault's response serialization metric\n\nVault's serialization metric (message size & serialization time) erroneously uploads its data for the \"response\" label to the \"request\" label. This MR sets the right label. \n\nSee merge request dfinity-lab/public/ic!15754"
      },
      {
        "id": "f47bf34200e69b6972ae749fafd56578cd7bbd37",
        "date": "2023-10-30T17:37:12Z",
        "message": "chore(crypto): set correct name for the vault's response serialization metric"
      },
      {
        "id": "4f22c3d0ef1ddf33f8fbeaef2260843e74dad54a",
        "date": "2023-10-30T17:06:19Z",
        "message": "Merge branch 'alex/do-not-deserialize-transcripts-in-idkg' into 'master'\n\nperf(crypto): CRP-2225 do not redundantly deserialize dealings in IDKG\n\nImproves the runtime of `verify_dealing_private` and `load_transcript_*` by 10%-20%, depending on the number of nodes. \n\nSee merge request dfinity-lab/public/ic!15728"
      },
      {
        "id": "d1830277153d41bfb78a7d9dc993932fa6717c26",
        "date": "2023-10-30T17:06:19Z",
        "message": "perf(crypto): CRP-2225 do not redundantly deserialize dealings in IDKG"
      },
      {
        "id": "73c9f946ef99dc683af70c07189f670af974f5c2",
        "date": "2023-10-30T10:10:05Z",
        "message": "Merge branch 'alex/deser-transcripts-in-local-vault-and-do-not-log-pubkey' into 'master'\n\nperf(crypto): CRP-2225 deserialize transcripts internally and remove obsolete logging of public key\n\nAn `IDkgTranscriptInternal` received from a third party requires a redundant serialization roundtrip if passed to the crypto vault. That's because we receive bytes from third parties that first need to be deserialized. Next, an `IDkgTranscriptInternal` passed to the remote vault requires serializing the transcript by the replica and deserializing on the vault's side. This MR removes the redundant serialization roundtrip by passing just bytes to the vault and deserializing them on the vault's side. This improves the total runtime of `sign_share` by ~40% using remote vault. \n\nSee merge request dfinity-lab/public/ic!15699"
      },
      {
        "id": "780aded1dd711f1e9398012e5ee0875925d1a1b4",
        "date": "2023-10-30T10:10:05Z",
        "message": "perf(crypto): CRP-2225 deserialize transcripts internally and remove obsolete logging of public key"
      },
      {
        "id": "e0c11ccab0e6ef0e5da772365de19bb07e02b3ba",
        "date": "2023-10-27T13:18:45Z",
        "message": "Merge branch 'alex/idkg-bench-with-remote-vault' into 'master'\n\nperf(crypto): CRP-2265 add I-DKG benchmarks with remote vault\n\n \n\nSee merge request dfinity-lab/public/ic!15724"
      },
      {
        "id": "37fa44ad05be02bd02a849af3463444242169f1e",
        "date": "2023-10-27T13:18:43Z",
        "message": "perf(crypto): CRP-2265 add I-DKG benchmarks with remote vault"
      },
      {
        "id": "d920580c7cef7eb5904e2d938b415fb3dda3a9ee",
        "date": "2023-10-24T17:48:09Z",
        "message": "Merge branch 'alex/temp-revert-91088ed5' into 'master'\n\nRevert \"perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault\"\n\nThis *temporarily* reverts commit 91088ed56c672f6d7bae392dc834de796eac91a2 with the goal of having a release with additional metrics from d6b7f4a128378e00fea0c64f856453f04c6de542 for better analyzing performance of this change. \n\nSee merge request dfinity-lab/public/ic!15614"
      },
      {
        "id": "dd3b0bb369c12589860a77f31d6f6e2040ab02ee",
        "date": "2023-10-24T17:48:09Z",
        "message": "Revert \"perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault\""
      },
      {
        "id": "255265d149b6e3abaa865bbd125f8142b8e01429",
        "date": "2023-10-19T11:43:10Z",
        "message": "Merge branch 'alex/unique-domain-separators' into 'master'\n\nrefactor(crypto): CRP-256 add DomainSeparator instead of many constants and check for duplicates/prefixes\n\nMove domain separator `const`s to the variants of a new enum `DomainSeparator` and add a test to ensure that there are no duplicates in the domain separators.\n\nCloses CRP-256. \n\nCloses CRP-256\n\nSee merge request dfinity-lab/public/ic!14490"
      },
      {
        "id": "45a2e1ed557051c694b69a439bf437b2572f6a4c",
        "date": "2023-10-19T11:43:09Z",
        "message": "refactor(crypto): CRP-256 add DomainSeparator instead of many constants and check for duplicates/prefixes"
      },
      {
        "id": "9bea5aed90367ea4ef18fa34b5eccdc3778f824f",
        "date": "2023-10-18T09:40:27Z",
        "message": "Merge branch 'alex/efficient-byte-ser-in-rpc-for-vault' into 'master'\n\nperf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault\n\nThe vault API contains variables of type `Vec<u8>`, which is serialized by the `bincode` (due to `serde`) as a sequence of bytes, which likely results in a loop appending bytes to a buffer one after another. This is, however, much slower than appending/copying a buffer as a whole, which is done by `serde`'s `serialize_bytes()`. Experiments showed that the latter is 2 OOM faster than the former. To make use of `serialize_bytes()`, in this MR we replace `Vec<u8>` with `serde_bytes::ByteBuf`, which is serialized efficiently. Benchmarks for Ed25519 signing show that this change yields a drastic efficiency improvement in the serialization of large buffers and a minor improvement for tiny buffers (but still some).\n\nBelow are some runtimes for Ed22519 signing of a 32B and a 1MB message measured after running the benchmark on the `master` branch, which i.a. shows that we spent move than half of the time for signing a 1MB message in serializing it using `bincode`.\n\n```\ncrypto_basicsig_local_vault/Ed25519/sign/32\ntime: [82.224 µs 82.479 µs 82.696 µs]\nchange: [-0.7481% -0.2034% +0.2508%] (p = 0.44 > 0.05)\n\ncrypto_basicsig_remote_vault/Ed25519/sign/32\ntime: [337.22 µs 340.06 µs 343.16 µs]\nchange: [-8.4003% -6.5370% -4.3630%] (p = 0.00 < 0.05)\n\ncrypto_basicsig_remote_vault/Ed25519/sign_ser_and_deser_total/32\ntime: [4.0706 µs 4.1760 µs 4.2861 µs]\nchange: [-16.278% -12.051% -7.6202%] (p = 0.00 < 0.05)\n\ncrypto_basicsig_local_vault/Ed25519/sign/1000000\ntime: [4.4531 ms 4.4658 ms 4.4786 ms]\nchange: [-0.2172% +0.1577% +0.5473%] (p = 0.42 > 0.05)\n\ncrypto_basicsig_remote_vault/Ed25519/sign/1000000\ntime: [5.9558 ms 6.0193 ms 6.0645 ms]\nchange: [-56.704% -55.615% -54.399%] (p = 0.00 < 0.05)\n\ncrypto_basicsig_remote_vault/Ed25519/sign_ser_and_deser_total/1000000\ntime: [364.22 µs 383.94 µs 401.99 µs]\nchange: [-94.898% -94.718% -94.573%] (p = 0.00 < 0.05)\n``` \n\nSee merge request dfinity-lab/public/ic!15222"
      },
      {
        "id": "91088ed56c672f6d7bae392dc834de796eac91a2",
        "date": "2023-10-18T09:40:26Z",
        "message": "perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault"
      },
      {
        "id": "5a874d1e507200d146596ccd898f835f8be4eaa4",
        "date": "2023-10-06T09:56:18Z",
        "message": "Merge branch 'alex/avoid-double-serialization-in-RPC-communication' into 'master'\n\nperf(crypto): CRP-2187 CRP-2224 avoid double serialization in vault RPC communication and add runtime metrics for serialization\n\nThe currently used serializer `tokio_serde::formats::Bincode` calls the `bincode::Options::serialize` function that invokes the serialization twice: once for determining the length of the buffer and once for actually copying the bytes. This is slow for types like `EccPoint` where the serialization involves quite expensive point conversion and is done twice. This MR provides a custom implementation inspired by `tokio_serde::formats::Bincode` that uses `bincode::Options::serialize_into` and thus calls the serialization only once.\n\nAlso, this MR adds metrics for (de)serialization duration to the vault client and server, and metrics for message sizes to the vault server.\n\nThe runtimes of Ed25519 signing via remote vault (with small messages) seems to be very slightly slower due to this change (~3-4% slowdown due to the change). But OTOH the tECDSA signing via remote vault gets much more efficient in total, factor 1.16-1.33.\n```\n------\nbefore\n------\ncrypto_tecdsa_13_nodes/sign_share_remote_vault\n                        time:   [2.5059 ms 2.6602 ms 2.7944 ms]\ncrypto_tecdsa_28_nodes/sign_share_remote_vault\n                        time:   [3.8888 ms 4.2166 ms 4.5528 ms]\n-----\nafter\n-----\ncrypto_tecdsa_13_nodes/sign_share_remote_vault\n                        time:   [2.1312 ms 2.2885 ms 2.4356 ms]\ncrypto_tecdsa_28_nodes/sign_share_remote_vault\n                        time:   [2.8908 ms 3.1541 ms 3.3956 ms]\n```\n\nCloses CRP-2187. \n\nCloses CRP-2187\n\nSee merge request dfinity-lab/public/ic!15086"
      },
      {
        "id": "d6b7f4a128378e00fea0c64f856453f04c6de542",
        "date": "2023-10-06T09:56:18Z",
        "message": "perf(crypto): CRP-2187 CRP-2224 avoid double serialization in vault RPC communication and add runtime metrics for serialization"
      },
      {
        "id": "28b8773cb71c883ab4666261f1ce2bfa0b98f967",
        "date": "2023-09-27T13:59:37Z",
        "message": "Merge branch 'alex/crypto-basic-sig-benches-with-remote-vault' into 'master'\n\nperf(crypto): CRP-1356 add crypto basic sig benchmarks with remote vault\n\n \n\nSee merge request dfinity-lab/public/ic!14531"
      },
      {
        "id": "5af37284f0b553b19782d69b8343ea5138871abf",
        "date": "2023-09-27T13:59:37Z",
        "message": "perf(crypto): CRP-1356 add crypto basic sig benchmarks with remote vault"
      },
      {
        "id": "979e4bd826ce775acd0b3b7839c418de200be13c",
        "date": "2023-09-25T16:44:26Z",
        "message": "Merge branch 'alex/reproducible-types-crypto-tests' into 'master'\n\nrefactor(crypto): CRP-1767 make types crypto tests reproducible\n\n \n\nSee merge request dfinity-lab/public/ic!14939"
      },
      {
        "id": "df93acdfd69d84e8c27c7ab949839be9222388e5",
        "date": "2023-09-25T16:44:25Z",
        "message": "refactor(crypto): CRP-1767 make types crypto tests reproducible"
      },
      {
        "id": "de101b452c81ee48e119a9de9db058e5e2909c30",
        "date": "2023-09-20T09:12:11Z",
        "message": "Merge branch 'alex/external-test-utils-for-csp-types' into 'master'\n\nrefactor(crypto): CRP-995 CRP-2185 move test utils for CSP keys from hex to test utils and test code\n\nRemoves test vectors from the production code. Also fixes some misplaced dependencies.\n\nCloses CRP-995.\n\nCloses CRP-2185. \n\nCloses CRP-995 and CRP-2185\n\nSee merge request dfinity-lab/public/ic!14445"
      },
      {
        "id": "360b42f72c379777d35e55c3019575490343c457",
        "date": "2023-09-20T09:12:11Z",
        "message": "refactor(crypto): CRP-995 CRP-2185 move test utils for CSP keys from hex to test utils and test code"
      },
      {
        "id": "15027e2ee2d9c116ec6accd83497f8eb728f339b",
        "date": "2023-09-19T15:01:27Z",
        "message": "Merge branch 'alex/crypto-tecdsa-benches-with-remote-vault' into 'master'\n\nperf(crypto): CRP-1356 add tECDSA benchmarks with remote vault\n\nOur tECDSA benchmarks use a local CSP vault, but we use a remote vault in production. Therefore, change them to use a remote vault by default, and both vaults in case where the runtime of both differs (only `sign_share`, which is currently 3 times slower using remote vault).\n\nAlso changes the sample size of the more heavy benchmarks to 10 (reduces the total runtime from a few hours to a few dozen minutes). \n\nSee merge request dfinity-lab/public/ic!14755"
      },
      {
        "id": "34bb6f441f6338488c936978aa135060b2fafd73",
        "date": "2023-09-19T15:01:24Z",
        "message": "perf(crypto): CRP-1356 add tECDSA benchmarks with remote vault"
      },
      {
        "id": "fe889d312fa82e752bb38937b98f2ff1dd05f3d1",
        "date": "2023-08-30T16:04:51Z",
        "message": "fix(benchmarks): fix curl arguments for uploading criterion benchmarks to elasticsearch"
      },
      {
        "id": "7ab73cd83d28979d09dd850fea2774fd521f791d",
        "date": "2023-08-30T13:51:12Z",
        "message": "Merge branch 'alex/mut-ref-to-reproducible-rng' into 'master'\n\nchore(crypto): CRP-2087 take mutable reference to RNG\n\nInstead of binding mutably to the owned object and taking a mutable reference when needed\n```\nlet mut rng = reproducible_rng();\nf1(&mut rng);\nf2(&mut rng);\n...\n```\nuse the shorter syntax by binding to a mutable reference as\n```\nlet rng = &mut reproducible_rng();\nf1(rng);\nf2(rng);\n``` \n\nSee merge request dfinity-lab/public/ic!14421"
      },
      {
        "id": "ae6591e84f0c4d1b4e1dd4e2aafb2a73fc2626ef",
        "date": "2023-08-30T13:51:12Z",
        "message": "chore(crypto): CRP-2087 take mutable reference to RNG"
      },
      {
        "id": "8706cddcb9f7439400f0b81dea45a538e8a7dd49",
        "date": "2023-08-29T12:11:51Z",
        "message": "Merge branch 'alex/randomized-tests' into 'master'\n\nchore(crypto): CRP-1791 CRP-1977 replace some fixed-seed tests with randomized ones\n\nAlso replaces some tests that were generating integer seeds using proptest by just a `ReproducibleRng` that's passed to the functions that previously took a seed and instantiated an RNG inside. \n\nSee merge request dfinity-lab/public/ic!14427"
      },
      {
        "id": "da344cb870a6477c677507da8bd6d1b69c1b49fa",
        "date": "2023-08-29T12:11:51Z",
        "message": "chore(crypto): CRP-1791 CRP-1977 replace some fixed-seed tests with randomized ones"
      },
      {
        "id": "a4191e757dbc581cbc8cef9160aea1e852218a1a",
        "date": "2023-08-28T10:18:31Z",
        "message": "Merge branch 'alex/reproducible-arbitrary-csp-types' into 'master'\n\nrefactor(crypto): CRP-2179 make proptest Arbitrary derivation for CSP types reproducible\n\nReplace derivations of `value` that returns something generated with `thread_rng` by `strategy`. \n\nSee merge request dfinity-lab/public/ic!14392"
      },
      {
        "id": "a2fd8c6c71ea18401d4d89ee43c1eb28c188afcd",
        "date": "2023-08-28T10:18:30Z",
        "message": "refactor(crypto): CRP-2179 make proptest Arbitrary derivation for CSP types reproducible"
      },
      {
        "id": "fdc4b6f2d58e65734544dfce4db3f9eeacd24b0f",
        "date": "2023-08-28T09:15:26Z",
        "message": "Merge branch 'alex/reproducible-rs-crypto-tests' into 'master'\n\nrefactor(crypto): CRP-1767 make various crypto tests reproducible\n\n \n\nSee merge request dfinity-lab/public/ic!14397"
      },
      {
        "id": "30144387bbf0beda4a1f0ab10e0392f992bc5af5",
        "date": "2023-08-28T09:15:26Z",
        "message": "refactor(crypto): CRP-1767 make various crypto tests reproducible"
      },
      {
        "id": "6add3d0b656bccb41afc1519df5a7d7d189cdfd2",
        "date": "2023-08-25T09:02:47Z",
        "message": "Merge branch 'alex/make-csp-tests-reproducible' into 'master'\n\nrefactor(crypto): CRP-2180 make CSP tests reproducible\n\n \n\nSee merge request dfinity-lab/public/ic!14387"
      },
      {
        "id": "79224e79051916ae0e699b1a8be973fa30d2532b",
        "date": "2023-08-25T09:02:46Z",
        "message": "refactor(crypto): CRP-2180 make CSP tests reproducible"
      },
      {
        "id": "957121fa30f5ad9c94ad2c853e3e5cbfbf4c7d0d",
        "date": "2023-08-25T08:48:16Z",
        "message": "Merge branch 'alex/reproducible-crypto-benches' into 'master'\n\nrefactor(crypto): CRP-2091 make rs/crypto benches reproducible\n\nCloses CRP-2091. \n\nCloses CRP-2091\n\nSee merge request dfinity-lab/public/ic!14386"
      },
      {
        "id": "79480fa4488c51c287933877f6f143eee6344fea",
        "date": "2023-08-25T08:48:16Z",
        "message": "refactor(crypto): CRP-2091 make rs/crypto benches reproducible"
      },
      {
        "id": "1c3f9883dd2bd6d36b88ddd4bfe434d1d4372d52",
        "date": "2023-08-24T07:56:46Z",
        "message": "Merge branch 'alex/reprod-benches-clib-bls12_381' into 'master'\n\nrefactor(crypto): CRP-2091 make benchmarks in crypto_lib/bls12_381/{type,vetkd} reproducible\n\n \n\nSee merge request dfinity-lab/public/ic!14343"
      },
      {
        "id": "78d3b75fe74e48d37755bfbc6e0da55689a44a18",
        "date": "2023-08-24T07:56:46Z",
        "message": "refactor(crypto): CRP-2091 make benchmarks in crypto_lib/bls12_381/{type,vetkd} reproducible"
      },
      {
        "id": "6b71d353b2be28db3686a0f78a6973d43c99856c",
        "date": "2023-08-23T14:03:21Z",
        "message": "Merge branch 'alex/recursion-depth-limit-in-wg-witness' into 'master'\n\nrefactor(crypto): FOLLOW-1063 add recursion depth limit to WitnessGenerator::{witness,mixed_hash_tree}()\n\nAdds depth checks to recursive functions `WitnessGenerator::{witness,mixed_hash_tree}` to prevent, although practically unlikely, theoretically possible stack overflows, and adds a test for the check.\n\nAlso:\n- Removes the associated type `Tree` on the trait `WitnessBuilder`, since in our code it is always the case that `WitnessBuilder == WitnessBuilder::Tree`. While having `Tree` is a little more expressive, it's redundant and `WitnessBuilder::Tree` doesn't automatically implement `WitnessBuilder`.\n- Makes converting `Witness` to `String` safer. \n\nSee merge request dfinity-lab/public/ic!14306"
      },
      {
        "id": "ae1865d90add837d4659b8b1cab4c0f8779a4824",
        "date": "2023-08-23T14:03:21Z",
        "message": "refactor(crypto): FOLLOW-1063 add recursion depth limit to WitnessGenerator::{witness,mixed_hash_tree}()"
      },
      {
        "id": "2f3d6ae0f787b6c98f8621992c38637df34d8705",
        "date": "2023-08-23T10:33:42Z",
        "message": "Merge branch 'alex/drop-for-labeled-tree' into 'master'\n\nrefactor(crypto): CRP-2148 implement drop for LabeledTree\n\nImplements `Drop` for `LabeledTree` to avoid recursive deallocation. The latter may cause problems like stack overflow, which we don't expect to happen in production, but it's nice to rule out the possibility of that happening completely. \n\nSee merge request dfinity-lab/public/ic!13921"
      },
      {
        "id": "491e018e32659b99be417dd13cb2f05f08f329a0",
        "date": "2023-08-23T10:33:42Z",
        "message": "refactor(crypto): CRP-2148 implement drop for LabeledTree"
      },
      {
        "id": "07bc86580e5a51e5f01eb030888c191e1ea8beec",
        "date": "2023-08-23T08:13:58Z",
        "message": "Merge branch 'alex/reproducible-benches-clib-tsig' into 'master'\n\nrefactor(crypto): CRP-2091 reproducible benchmarks in crypto_lib/threshold_sig\n\n \n\nSee merge request dfinity-lab/public/ic!14316"
      },
      {
        "id": "afe87f7b993191905bab1334b90d4e875d205fe5",
        "date": "2023-08-23T08:13:58Z",
        "message": "refactor(crypto): CRP-2091 reproducible benchmarks in crypto_lib/threshold_sig"
      },
      {
        "id": "7bdbf5790af686013186fb26b783cfb72f2af272",
        "date": "2023-08-22T12:38:40Z",
        "message": "Merge branch 'alex/crp-2084' into 'master'\n\nchore(crypto): CRP-2084 make NIDKG tests and test utils API reproducible\n\n \n\nSee merge request dfinity-lab/public/ic!13010"
      },
      {
        "id": "6d8d3fc13f914268d44e02fa1c5279f0aa94c454",
        "date": "2023-08-22T12:38:39Z",
        "message": "chore(crypto): CRP-2084 make NIDKG tests and test utils API reproducible"
      },
      {
        "id": "d975cfc0d850a4377c02785ed7657214692ff544",
        "date": "2023-08-22T09:32:02Z",
        "message": "Merge branch 'alex/rm-dead-wg--try-from-fn' into 'master'\n\nrefactor(crypto): CRP-2172 remove WitnessGeneratorImpl::try_from(HashTree)\n\nThe said function is only used in tests (mostly own unit tests) and benchmarks. OTOH, a `WitnessGenerator` can be created using `HashTreeBuilder` (which, in contrast to `try_from`, is used in production). Therefore, use `HashTreeBuilder` and remove `WitnessGeneratorImpl::try_from(HashTree)`. \n\nSee merge request dfinity-lab/public/ic!14243"
      },
      {
        "id": "efd953b833d832c448bab1585a18c02af413d555",
        "date": "2023-08-22T09:32:02Z",
        "message": "refactor(crypto): CRP-2172 remove WitnessGeneratorImpl::try_from(HashTree)"
      },
      {
        "id": "6f266edc3040bddcb655dbb50005bf2f166550a0",
        "date": "2023-08-17T15:57:24Z",
        "message": "Merge branch 'alex/abscence-proof-fuzzer' into 'master'\n\ntest(crypto): CRP-2068 implement abscence proof fuzzer\n\nCloses CRP-2068. \n\nCloses CRP-2068\n\nSee merge request dfinity-lab/public/ic!12944"
      },
      {
        "id": "e0b8e8e98bb9aefca94e2abd233679d71d6340df",
        "date": "2023-08-17T15:57:24Z",
        "message": "test(crypto): CRP-2068 implement abscence proof fuzzer"
      },
      {
        "id": "33361db6a7ee59e305f3f6d27a64bcb066d382ae",
        "date": "2023-08-16T17:29:52Z",
        "message": "Merge branch 'alex/tree-hash-subcrate-in-canonical-state' into 'master'\n\nrefactor(canonical_state): move HashTree and LazyTree to a subcrate and create a test utility subcrate\n\nMoves `HashTree` and `LazyTree` to a `canonical_state/tree_hash` subcrate s.t. dependencies that depend only on those are compiled faster.\n\nMoves unit tests for `HashTree` and `LazyTree` to integration tests and creates a `canonical_state/tree_hash/test_utils` subcrate that contains the respective test utility code for 1) faster compilation, 2) less code duplication, and 3) making it less likely that test utilities end up in production binaries. Also cleans up and deduplicates the test utilities in `canonical_state/tree_hash/test_utils` and `crypto/tree_hash/test_utils`.\n\nCloses CRP-2050.\nCloses CRP-2151. \n\nCloses CRP-2050 and CRP-2151\n\nSee merge request dfinity-lab/public/ic!14169"
      },
      {
        "id": "c6ae8962bfb4fc659f5794c2ab3839c8701d9ea1",
        "date": "2023-08-16T17:29:52Z",
        "message": "refactor(canonical_state): move HashTree and LazyTree to a subcrate and create a test utility subcrate"
      },
      {
        "id": "8141b109ef7ea4a4625dd44a4860f4897af7e243",
        "date": "2023-08-15T16:22:36Z",
        "message": "Merge branch 'alex/label-into-vec' into 'master'\n\nperf(crypto): CRP-2019 replace Label::to_vec() with Label::into_vec()\n\nMost use cases need ownership of the label's memory, but we currently copy the memory and deallocate `Label` afterwards. Instead, transfer ownership which replaces `Label::to_vec(&self)` with `Label::into_vec(self)` and changes the copying from `label.to_vec()` to `label.clone().into_vec()`. \n\nSee merge request dfinity-lab/public/ic!14155"
      },
      {
        "id": "8fddb789e8c1734d88bc3789da33a35f09efc248",
        "date": "2023-08-15T16:22:35Z",
        "message": "perf(crypto): CRP-2019 replace Label::to_vec() with Label::into_vec()"
      },
      {
        "id": "a441c2c7a294bf7ded4e0852c5bdc6d18bf1b161",
        "date": "2023-08-15T14:44:35Z",
        "message": "Merge branch 'alex/crp-2126-inline-merge' into 'master'\n\nrefactor(crypto): CRP-2126 inline $witness_type::merge in WitnessBuilder::merge_trees\n\nBoth `Witness` and `MixedHashTree` have a redundant API `Self::merge(lhs, rhs)`, which is used to merge witnesses from the function `merge_trees(lhs, rhs)` in the `WitnessBuilder` trait. This MR inlines the actual implementation in the trait implementation and removes the tests checking that both APIs produce the same outputs.\n\nCloses CRP-2126. \n\nCloses CRP-2126\n\nSee merge request dfinity-lab/public/ic!13990"
      },
      {
        "id": "aab130b93113a24c227bbe13fb7b1a9c349111b7",
        "date": "2023-08-15T14:44:35Z",
        "message": "refactor(crypto): CRP-2126 inline $witness_type::merge in WitnessBuilder::merge_trees"
      },
      {
        "id": "3ab668e46838f023b8099f7e4fab8afc9a64a62d",
        "date": "2023-08-11T08:21:26Z",
        "message": "Merge branch 'alex/witness-merge-unit-tests' into 'master'\n\ntest(crypto): CRP-2071 add unit tests for $witness_type::merge_trees()\n\nAdds the missing unit tests or `Witness::merge_trees()` and `MixedHashTree::merge_trees()`.\n\nAlso adds errors if by merging two `{Witness,MixedHashTree}::Pruned` we encounter different hashes as well as if two `Witness::Node`s have mismatching labels. \n\nSee merge request dfinity-lab/public/ic!14008"
      },
      {
        "id": "5d905419dcd70cc8c4f11166bb9dfe8b3f569f8e",
        "date": "2023-08-11T08:21:25Z",
        "message": "test(crypto): CRP-2071 add unit tests for $witness_type::merge_trees()"
      },
      {
        "id": "865a18f3689bc9d17b23adefff4d00c958ef843c",
        "date": "2023-08-09T09:49:13Z",
        "message": "Merge branch 'alex/iterative-mht-digest' into 'master'\n\nperf(crypto): CRP-2019 iterative MixedHashTree::digest()\n\n`MixedHashTree::digest()` is a recursive function, which, naturally, can produce a stack overflow. Thus we had 2 options to mitigate that: 1) make the function iterative and 2) add a depth check and error handling. This MR implements both and sets 1) to be used in production, whereas 2) turned out to be ~15% less efficient, so let's count this as a performance improvement rather than a fix, since we don't expect to have trees that could produce a stack overflow in production.\n\nThe recursive implementation with error handling is moved to test utils and this MR also adds a new proptest that compares that the outputs of both recursive and iterative functions are equal. \n\nSee merge request dfinity-lab/public/ic!13918"
      },
      {
        "id": "e4c886e7a0b092ed28a48bb4ac064a4a5a3821b3",
        "date": "2023-08-09T09:49:13Z",
        "message": "perf(crypto): CRP-2019 iterative MixedHashTree::digest()"
      },
      {
        "id": "27ee689d96352e941dfc7ef1909b4044047a991a",
        "date": "2023-08-08T06:45:53Z",
        "message": "Merge branch 'alex/crp-1249-tls-grace-perioud' into 'master'\n\nrefactor(crypto): CRP-1249 generate TLS certificates 2 minutes in the past and pass current time as argument\n\nThis change replaces the previous approach of checking if a TLS certificate was at most 2 minutes in the future with generation 2 minutes in the past to account for system clocks eventually not in sync on different nodes. Also, this MR changes the way how we fetch time for checking the validity of certificate from fetching it in the stateless library to passing it as an argument to the stateless library to remove the dependency on the current time in tests. \n\nSee merge request dfinity-lab/public/ic!13151"
      },
      {
        "id": "d3d0809ddf9e07e509e2c22e5caccbf398a239b8",
        "date": "2023-08-08T06:45:53Z",
        "message": "refactor(crypto): CRP-1249 generate TLS certificates 2 minutes in the past and pass current time as argument"
      },
      {
        "id": "dbb31b083dc09423fe77dd22eb78bdef0e6dc4b5",
        "date": "2023-08-03T11:23:07Z",
        "message": "Merge branch 'alex/crypto-tree-hash-absence-proofs' into 'master'\n\nfeat(crypto): CRP-2068 add absence proofs to crypto tree hasher\n\nCloses CRP-426. \n\nCloses CRP-426\n\nSee merge request dfinity-lab/public/ic!12886"
      },
      {
        "id": "e2c74a890bf7920ab5ee69bb075fcd544475291c",
        "date": "2023-08-03T11:23:05Z",
        "message": "feat(crypto): CRP-2068 add absence proofs to crypto tree hasher"
      },
      {
        "id": "329d5f33a5bdd4925b7aa1b1d6c04191095a6d59",
        "date": "2023-08-01T14:39:19Z",
        "message": "Merge branch 'alex/more-efficient-mixed-hash-tree-deserialization' into 'master'\n\nperf(crypto): CRP-2019 more efficient MixedHashTree deserialization in CBOR\n\nAfter #[inline]ing most function in the tree hasher - which didn't bring any noticeable improvement to most of them - inlining the CBOR deserialization (sub)functions turned out to be very useful for improving their efficiency. The runtime improvement is ~22% on average for all currently benchmarked input sizes. \n\nSee merge request dfinity-lab/public/ic!13901"
      },
      {
        "id": "8276857a0dd3e171e290b2898991e54b9057234c",
        "date": "2023-08-01T14:39:18Z",
        "message": "perf(crypto): CRP-2019 more efficient MixedHashTree deserialization in CBOR"
      }
    ],
    "email": "oleksandr.tkachenko@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 75,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 37,
    "fixes": 3,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "bcf664b29a59d59d90d841f1b6b7ebf249b51b5a",
        "date": "2023-11-09T14:06:17Z",
        "message": "perf(crypto): CRP-2263 use rayon thread pool in the vault server worker"
      },
      {
        "id": "2491fb265beb2501b8544952444a21cb03e1649e",
        "date": "2023-11-08T09:05:28Z",
        "message": "chore(crypto): implement some improvement suggestions from CodeGov"
      },
      {
        "id": "69775a901d46fc5385c9a463404c1d217db7d4c9",
        "date": "2023-10-31T18:40:22Z",
        "message": "perf(crypto): CRP-2232 use remote vault in NI-DKG and threshold_sig benchmarks"
      },
      {
        "id": "3a68833eecd34d308b5219616c0a6cc23cbed897",
        "date": "2023-10-31T18:37:18Z",
        "message": "perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault"
      },
      {
        "id": "f47bf34200e69b6972ae749fafd56578cd7bbd37",
        "date": "2023-10-30T17:37:12Z",
        "message": "chore(crypto): set correct name for the vault's response serialization metric"
      },
      {
        "id": "d1830277153d41bfb78a7d9dc993932fa6717c26",
        "date": "2023-10-30T17:06:19Z",
        "message": "perf(crypto): CRP-2225 do not redundantly deserialize dealings in IDKG"
      },
      {
        "id": "780aded1dd711f1e9398012e5ee0875925d1a1b4",
        "date": "2023-10-30T10:10:05Z",
        "message": "perf(crypto): CRP-2225 deserialize transcripts internally and remove obsolete logging of public key"
      },
      {
        "id": "37fa44ad05be02bd02a849af3463444242169f1e",
        "date": "2023-10-27T13:18:43Z",
        "message": "perf(crypto): CRP-2265 add I-DKG benchmarks with remote vault"
      },
      {
        "id": "dd3b0bb369c12589860a77f31d6f6e2040ab02ee",
        "date": "2023-10-24T17:48:09Z",
        "message": "Revert \"perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault\""
      },
      {
        "id": "45a2e1ed557051c694b69a439bf437b2572f6a4c",
        "date": "2023-10-19T11:43:09Z",
        "message": "refactor(crypto): CRP-256 add DomainSeparator instead of many constants and check for duplicates/prefixes"
      },
      {
        "id": "91088ed56c672f6d7bae392dc834de796eac91a2",
        "date": "2023-10-18T09:40:26Z",
        "message": "perf(crypto): CRP-2210 efficient byte vector serialization in RPC with the crypto vault"
      },
      {
        "id": "d6b7f4a128378e00fea0c64f856453f04c6de542",
        "date": "2023-10-06T09:56:18Z",
        "message": "perf(crypto): CRP-2187 CRP-2224 avoid double serialization in vault RPC communication and add runtime metrics for serialization"
      },
      {
        "id": "5af37284f0b553b19782d69b8343ea5138871abf",
        "date": "2023-09-27T13:59:37Z",
        "message": "perf(crypto): CRP-1356 add crypto basic sig benchmarks with remote vault"
      },
      {
        "id": "df93acdfd69d84e8c27c7ab949839be9222388e5",
        "date": "2023-09-25T16:44:25Z",
        "message": "refactor(crypto): CRP-1767 make types crypto tests reproducible"
      },
      {
        "id": "360b42f72c379777d35e55c3019575490343c457",
        "date": "2023-09-20T09:12:11Z",
        "message": "refactor(crypto): CRP-995 CRP-2185 move test utils for CSP keys from hex to test utils and test code"
      },
      {
        "id": "34bb6f441f6338488c936978aa135060b2fafd73",
        "date": "2023-09-19T15:01:24Z",
        "message": "perf(crypto): CRP-1356 add tECDSA benchmarks with remote vault"
      },
      {
        "id": "fe889d312fa82e752bb38937b98f2ff1dd05f3d1",
        "date": "2023-08-30T16:04:51Z",
        "message": "fix(benchmarks): fix curl arguments for uploading criterion benchmarks to elasticsearch"
      },
      {
        "id": "ae6591e84f0c4d1b4e1dd4e2aafb2a73fc2626ef",
        "date": "2023-08-30T13:51:12Z",
        "message": "chore(crypto): CRP-2087 take mutable reference to RNG"
      },
      {
        "id": "da344cb870a6477c677507da8bd6d1b69c1b49fa",
        "date": "2023-08-29T12:11:51Z",
        "message": "chore(crypto): CRP-1791 CRP-1977 replace some fixed-seed tests with randomized ones"
      },
      {
        "id": "a2fd8c6c71ea18401d4d89ee43c1eb28c188afcd",
        "date": "2023-08-28T10:18:30Z",
        "message": "refactor(crypto): CRP-2179 make proptest Arbitrary derivation for CSP types reproducible"
      },
      {
        "id": "30144387bbf0beda4a1f0ab10e0392f992bc5af5",
        "date": "2023-08-28T09:15:26Z",
        "message": "refactor(crypto): CRP-1767 make various crypto tests reproducible"
      },
      {
        "id": "79224e79051916ae0e699b1a8be973fa30d2532b",
        "date": "2023-08-25T09:02:46Z",
        "message": "refactor(crypto): CRP-2180 make CSP tests reproducible"
      },
      {
        "id": "79480fa4488c51c287933877f6f143eee6344fea",
        "date": "2023-08-25T08:48:16Z",
        "message": "refactor(crypto): CRP-2091 make rs/crypto benches reproducible"
      },
      {
        "id": "78d3b75fe74e48d37755bfbc6e0da55689a44a18",
        "date": "2023-08-24T07:56:46Z",
        "message": "refactor(crypto): CRP-2091 make benchmarks in crypto_lib/bls12_381/{type,vetkd} reproducible"
      },
      {
        "id": "ae1865d90add837d4659b8b1cab4c0f8779a4824",
        "date": "2023-08-23T14:03:21Z",
        "message": "refactor(crypto): FOLLOW-1063 add recursion depth limit to WitnessGenerator::{witness,mixed_hash_tree}()"
      },
      {
        "id": "491e018e32659b99be417dd13cb2f05f08f329a0",
        "date": "2023-08-23T10:33:42Z",
        "message": "refactor(crypto): CRP-2148 implement drop for LabeledTree"
      },
      {
        "id": "afe87f7b993191905bab1334b90d4e875d205fe5",
        "date": "2023-08-23T08:13:58Z",
        "message": "refactor(crypto): CRP-2091 reproducible benchmarks in crypto_lib/threshold_sig"
      },
      {
        "id": "6d8d3fc13f914268d44e02fa1c5279f0aa94c454",
        "date": "2023-08-22T12:38:39Z",
        "message": "chore(crypto): CRP-2084 make NIDKG tests and test utils API reproducible"
      },
      {
        "id": "efd953b833d832c448bab1585a18c02af413d555",
        "date": "2023-08-22T09:32:02Z",
        "message": "refactor(crypto): CRP-2172 remove WitnessGeneratorImpl::try_from(HashTree)"
      },
      {
        "id": "e0b8e8e98bb9aefca94e2abd233679d71d6340df",
        "date": "2023-08-17T15:57:24Z",
        "message": "test(crypto): CRP-2068 implement abscence proof fuzzer"
      },
      {
        "id": "c6ae8962bfb4fc659f5794c2ab3839c8701d9ea1",
        "date": "2023-08-16T17:29:52Z",
        "message": "refactor(canonical_state): move HashTree and LazyTree to a subcrate and create a test utility subcrate"
      },
      {
        "id": "8fddb789e8c1734d88bc3789da33a35f09efc248",
        "date": "2023-08-15T16:22:35Z",
        "message": "perf(crypto): CRP-2019 replace Label::to_vec() with Label::into_vec()"
      },
      {
        "id": "aab130b93113a24c227bbe13fb7b1a9c349111b7",
        "date": "2023-08-15T14:44:35Z",
        "message": "refactor(crypto): CRP-2126 inline $witness_type::merge in WitnessBuilder::merge_trees"
      },
      {
        "id": "5d905419dcd70cc8c4f11166bb9dfe8b3f569f8e",
        "date": "2023-08-11T08:21:25Z",
        "message": "test(crypto): CRP-2071 add unit tests for $witness_type::merge_trees()"
      },
      {
        "id": "e4c886e7a0b092ed28a48bb4ac064a4a5a3821b3",
        "date": "2023-08-09T09:49:13Z",
        "message": "perf(crypto): CRP-2019 iterative MixedHashTree::digest()"
      },
      {
        "id": "d3d0809ddf9e07e509e2c22e5caccbf398a239b8",
        "date": "2023-08-08T06:45:53Z",
        "message": "refactor(crypto): CRP-1249 generate TLS certificates 2 minutes in the past and pass current time as argument"
      },
      {
        "id": "e2c74a890bf7920ab5ee69bb075fcd544475291c",
        "date": "2023-08-03T11:23:05Z",
        "message": "feat(crypto): CRP-2068 add absence proofs to crypto tree hasher"
      },
      {
        "id": "8276857a0dd3e171e290b2898991e54b9057234c",
        "date": "2023-08-01T14:39:18Z",
        "message": "perf(crypto): CRP-2019 more efficient MixedHashTree deserialization in CBOR"
      }
    ],
    "line_additions": 9186,
    "line_deletions": 6782,
    "lines_effected_total": 15968,
    "rel_comm_add": 33,
    "rel_comm_del": 32,
    "rel_comm_total": 33
  },
  {
    "login": "Daniel-Bloom-dfinity",
    "id": 82895745,
    "totalContributions": 225,
    "github": "https://github.com/Daniel-Bloom-dfinity",
    "commits": [
      {
        "id": "dafac274d1049b38338d645227ad304eeec5c49b",
        "date": "2023-10-31T20:20:41Z",
        "message": "Merge branch 'dbloom/canary-proxy' into 'master'\n\nfeat(BOUN-866): Add proxy and PAC file to support simple canary usage\n\nThis MR adds a new service `canary-proxy`. This new service:\n\n- forwards all inbound calls to `127.0.0.1` (configurable)\n- is mostly composed of example code from `hyper` repo\n    - copy-pasted here since it uses a bunch of internal helpers\n- unfortunately uses `hyper 1.0-rc` \n\nThis MR also adds a `canary.pac` file which clients can use to utilize this proxy service automagically. We still need to pick a location to host this file, though maybe public github is good enough.\n\nTesting is just the `http_canister` tests, but going through the proxy. It's not that complicated of a service and I didn't want to duplicate all the tests, though maybe it's worth going through and parameterizing all of them. \n\nSee merge request dfinity-lab/public/ic!15375"
      },
      {
        "id": "5779eb379fe1df73eb290a31270c1a6f781b3cab",
        "date": "2023-10-31T20:20:37Z",
        "message": "feat(BOUN-866): Add proxy and PAC file to support simple canary usage"
      },
      {
        "id": "9b3db9b85fc7a6989d1295e28dbf57c30b4eb160",
        "date": "2023-10-05T17:34:23Z",
        "message": "Merge branch 'dbloom/logs' into 'master'\n\nfix(BOUN-905): Add tracing-slog to get registry replicator logs\n\nAlso move tracing setup to the correct location \n\nSee merge request dfinity-lab/public/ic!15178"
      },
      {
        "id": "9acfe319092de4fe8e46ffd17ff4e5566acb8083",
        "date": "2023-10-05T17:34:23Z",
        "message": "fix(BOUN-905): Add tracing-slog to get registry replicator logs"
      },
      {
        "id": "8b2652381cfee113b7e32171cf64f082f7b624ce",
        "date": "2023-09-20T09:40:17Z",
        "message": "fix: fix clippy warning by removing unneeded ref"
      },
      {
        "id": "0dde562aba215ed1d0cb5f5b246ce6286e53d5c9",
        "date": "2023-08-23T08:13:54Z",
        "message": "Merge branch 'dbloom/ic-boundary-lib' into 'master'\n\nrefactor(BOUN-826): Add ic-boundary library mode\n\nThis will make integration tests easier. Trust me.\n\nBasically it just moves everything from `main.rs` into `core.rs`.\n\nThis was our entire `ic-boundary` codebase can be shared across `main.rs` and the newly introduced `lib.rs`. \n\nSee merge request dfinity-lab/public/ic!14329"
      },
      {
        "id": "d40a5fbc4c43e49261d1fd251ce449274a4b8ee9",
        "date": "2023-08-23T08:13:53Z",
        "message": "refactor(BOUN-826): Add ic-boundary library mode"
      },
      {
        "id": "886e5cd9180b48c9b3de8054389e4d21599b365a",
        "date": "2023-08-18T10:53:36Z",
        "message": "feat: improve `icx-proxy` logs"
      },
      {
        "id": "93852572fdce0c9cb8198a42b72445fd9ab15d70",
        "date": "2023-08-07T15:19:39Z",
        "message": "fix(BOUN-838): Add `setup-nginx` to `control-plane`"
      },
      {
        "id": "1877f49e071b253d485be11d5f712356d5bd67e6",
        "date": "2023-08-07T09:40:25Z",
        "message": "fix(BOUN-839): Add NNS root key to status calls"
      }
    ],
    "email": "daniel.bloom@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 10,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 3,
    "fixes": 4,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "5779eb379fe1df73eb290a31270c1a6f781b3cab",
        "date": "2023-10-31T20:20:37Z",
        "message": "feat(BOUN-866): Add proxy and PAC file to support simple canary usage"
      },
      {
        "id": "9acfe319092de4fe8e46ffd17ff4e5566acb8083",
        "date": "2023-10-05T17:34:23Z",
        "message": "fix(BOUN-905): Add tracing-slog to get registry replicator logs"
      },
      {
        "id": "8b2652381cfee113b7e32171cf64f082f7b624ce",
        "date": "2023-09-20T09:40:17Z",
        "message": "fix: fix clippy warning by removing unneeded ref"
      },
      {
        "id": "d40a5fbc4c43e49261d1fd251ce449274a4b8ee9",
        "date": "2023-08-23T08:13:53Z",
        "message": "refactor(BOUN-826): Add ic-boundary library mode"
      },
      {
        "id": "886e5cd9180b48c9b3de8054389e4d21599b365a",
        "date": "2023-08-18T10:53:36Z",
        "message": "feat: improve `icx-proxy` logs"
      },
      {
        "id": "93852572fdce0c9cb8198a42b72445fd9ab15d70",
        "date": "2023-08-07T15:19:39Z",
        "message": "fix(BOUN-838): Add `setup-nginx` to `control-plane`"
      },
      {
        "id": "1877f49e071b253d485be11d5f712356d5bd67e6",
        "date": "2023-08-07T09:40:25Z",
        "message": "fix(BOUN-839): Add NNS root key to status calls"
      }
    ],
    "line_additions": 3685,
    "line_deletions": 944,
    "lines_effected_total": 4629,
    "rel_comm_add": 4,
    "rel_comm_del": 4,
    "rel_comm_total": 4
  },
  {
    "login": "fspreiss",
    "id": 3296673,
    "totalContributions": 220,
    "github": "https://github.com/fspreiss",
    "commits": [
      {
        "id": "4f054509c5dac9f32286a8ac56d42ecbbfd578f6",
        "date": "2023-11-23T06:58:05Z",
        "message": "Merge branch 'franzstefan-CRP-2289-remove-native-tls' into 'master'\n\nrefactor(crypto): CRP-2289: make reqwest use rustls instead of openssl\n\nFurther reduce the usage of OpenSSL in the codebase by ensuring that `reqwest` is actually using Rustls underneath, rather than using OpenSSL.\n\nBy default (i.e, unless explicitly instructed), `reqwest` is using the `hyper-tls` and the `native-tls` crates, which eventually use OpenSSL underneath. Even if [`reqwest`'s `rustls-tls` feature](https://docs.rs/reqwest/0.11.22/reqwest/#optional-features) is enabled, Rustls is not yet used by default, because if both native and Rustls features are enabled, the native-tls takes precedence. This means Rustls is then only used if all of the following are true:\n1. the `rustls-tls` feature is enabled, and\n2. all `native-tls*` features are disabled, which in turn requires that\n2. the `default-features` are disabled.\n\nDespite the huge popularity of the `reqwest` crate, unfortunately the documentation is not very clear about this.\nIn any case, the original Github issue ([github.com/reqwest/issues/378](https://github.com/seanmonstar/reqwest/issues/378)) is mentioning that native-tls takes precedence.\n\nAlso adapts the `cloudflare` and `prometheus-http-query` dependencies, so that their dependence on the `request` crate is such that it is used with Rustls. Various dependencies are moved to the workspace, so that they only have to be specified once. Also removes `reqwest` as dependency from a few crates where it actually isn't used.\n\n### Native (=OS-provided) roots vs. webpki roots\n\nWhen used with Rustls, `reqwest` [supports](https://docs.rs/reqwest/latest/reqwest/#optional-features) the two features `rustls-tls-native-roots` or `rustls-tls-webpki-roots`:\n* With `rustls-tls-native-roots` (or the [equivalent](https://docs.rs/reqwest/latest/reqwest/#optional-features) `rustls-tls`), the root certificates from the `rustls-native-certs` crate are used, which eventually uses the root certificates that come with the underlying operating system, which is the same that happened with the `native-tls` feature (which was used before this MR).\n* With `rustls-tls-webpki-roots`, the root certificates from the `webpki-roots` crate are used. `webpki` (as Nikita Abdullin [nicely put it](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15721#note_1623419268)) is a crate that repacks the Mozilla/CCADB-maintained list of WebPKI certs:\n  * they are more or less hardcoded, when the native ones can be added or updated on the OS level (e.g., via Ubuntu's `ca-certificates` package);\n  * they are much faster updated, although in an interesting way: the `webpki-roots` [crate has a test that pulls fresh certs from the CCADB website](https://github.com/rustls/webpki-roots/blob/main/tests/codegen.rs) (using a hardcoded DigiCert CA matching the chain of that website) and generates sources that you can reproduce against upstream.\n\nLooking at reqwest's source code, it [seems](https://github.com/seanmonstar/reqwest/blob/6792f697fcdb27c47dcbf7bd05f23368d1d4ac80/src/async_impl/client.rs#L465-L503) that the certificates from **both** sources are used with Rustls **if both features are enabled**.\n\nIdeally we would have used only the [`rustls-tls-native-roots` feature](https://docs.rs/reqwest/0.11.22/reqwest/#optional-features) so that the exact same root certificates are used that were also used before this MR (via  the `native-tls` feature). At this point, however, this is not possible because [the `cloudflare` crate's `rustls-tls` feature actually resolves to `reqwest`'s `rustls-tls-webpki-roots` feature](https://github.com/cloudflare/cloudflare-rs/blob/b4fa5ef8bb48415c54974ee3ed11cf9d8397d98b/cloudflare/Cargo.toml#L15), and given how Cargo's feature unification works, where it will use [the *union* of all features enabled](https://doc.rust-lang.org/cargo/reference/features.html#feature-unification) on that dependency when building it, both features would accordingly be enabled.\n\nAs it seems preferable to use the root certificates from a _single_ source rather than from two sources, we opted to use reqwest with the `rustls-tls-webpki-roots`, which seems equally fine/secure. \n\nSee merge request dfinity-lab/public/ic!16165"
      },
      {
        "id": "efe66d16e304dde637f05900e9557b90999b2116",
        "date": "2023-11-23T06:58:04Z",
        "message": "refactor(crypto): CRP-2289: make reqwest use rustls instead of openssl"
      },
      {
        "id": "4ab42130cc5a857f0b229a53c6c44b304b0926e9",
        "date": "2023-11-20T12:09:29Z",
        "message": "Merge branch 'franzstefan-CRP-2264-hyper-rustls-in-tests' into 'master'\n\nrefactor(crypto): CRP-2264: use hyper with Rustls instead of Openssl in tests\n\nUses hyper with Rustls via `hyper-rustls` instead of via `hyper-tls` (which is using OpenSSL under the hood). As this was the only/last remaining usage of `hyper-tls` in the codebase, also removes this dependency from the `external_crates.bzl`.\n\nThis is one more step in the direction of removing openssl from the codebase. \n\nSee merge request dfinity-lab/public/ic!16188"
      },
      {
        "id": "46f74e6346948e622588cb3ce00e752dfa3d1109",
        "date": "2023-11-20T12:09:29Z",
        "message": "refactor(crypto): CRP-2264: use hyper with Rustls instead of Openssl in tests"
      },
      {
        "id": "d6c63119213dd481238d17fe7447221b9c4f7b80",
        "date": "2023-11-20T09:56:11Z",
        "message": "Merge branch 'franzstefan-CRP-2264-outcalls-adapter-socks-rustls' into 'master'\n\nrefactor(crypto): CRP-2264: use rustls instead of OpenSSL in ic-https-outcalls-adapter's socks connector\n\nUse rustls instead of OpenSSL in ic-https-outcalls-adapter's socks connector. See also the related https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15721.\n\nAlso updates to the latest `hyper-socks2` crate in the process. \n\nSee merge request dfinity-lab/public/ic!16180"
      },
      {
        "id": "66596e99510968fe541a64b283b4bbaf44bc30f6",
        "date": "2023-11-20T09:56:10Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in ic-https-outcalls-adapter's socks connector"
      },
      {
        "id": "4bb4c2028027da5a83d5ad95e70134b5ee10734f",
        "date": "2023-11-16T14:52:44Z",
        "message": "Merge branch 'franzstefan-CRP-2242-remove-openssl-from-ic-os-sev' into 'master'\n\nrefactor(crypto): CRP-2242: remove OpenSSL from ic-os-sev\n\nRemoves the `openssl` dependency from `ic-os-sev`.\n\nTo make this possible, the `sev` library was adapted upstream with https://github.com/virtee/sev/pull/111 (which is now included in the new sev 2.0.2 release) so that both an SNP chain and an SNP attestation report can be verified with pure Rust. This was needed because the sev library so far only supported verification with OpenSSL.\n\nAn alternative that was considered was implementing all the verification logic manually (with pure Rust) within the IC repository, but that was also not possible in a clean way because the `Signature` struct's `r` and `s` components were private. In the meanwhile, this was fixed with https://github.com/virtee/sev/pull/112 (which was mainly created as plan B), however. \n\nSee merge request dfinity-lab/public/ic!15605"
      },
      {
        "id": "90d3946c0c7d26c4bfdaded2482cb7e0f32735fc",
        "date": "2023-11-16T14:52:43Z",
        "message": "refactor(crypto): CRP-2242: remove OpenSSL from ic-os-sev"
      },
      {
        "id": "63d03352d83ecc3c8e4e93f02c6185ba7418a480",
        "date": "2023-11-01T16:22:46Z",
        "message": "Merge branch 'franzstefan-CRP-2264-http-utils-rustls' into 'master'\n\nrefactor(crypto): CRP-2264: use rustls instead of OpenSSL in http_utils\n\nUse `hyper-rustls` instead of `hyper-tls` in the `http_utils` so as to make further progress in getting rid of `openssl` being a direct or indirect dependency in the codebase. \n\nSee merge request dfinity-lab/public/ic!15715"
      },
      {
        "id": "0128bff0232e13fd9cbed774748654a7c5508877",
        "date": "2023-11-01T16:22:46Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in http_utils"
      },
      {
        "id": "8c8a973d7a89384f1bb4940e1d1e002ae24cf753",
        "date": "2023-11-01T12:51:46Z",
        "message": "Merge branch 'franzstefan-CRP-2264-https-outcalls-rustls' into 'master'\n\nrefactor(crypto): CRP-2264: use rustls instead of OpenSSL in ic-https-outcalls-adapter\n\nUse `hyper-rustls` instead of `hyper-tls` in the `ic-https-outcalls-adapter` so as to make further progress in getting rid of `openssl` being a direct or indirect dependency in the codebase. \n\nSee merge request dfinity-lab/public/ic!15721"
      },
      {
        "id": "607f601422a3e87da502e6406ed31042ddb89b9e",
        "date": "2023-11-01T12:51:46Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in ic-https-outcalls-adapter"
      },
      {
        "id": "1d9157efe7385a9cb94c98a609e68fe0ce85b4f7",
        "date": "2023-10-27T15:28:06Z",
        "message": "Merge branch 'franzstefan-canister-client-rustls' into 'master'\n\nrefactor(crypto): CRP-2264: use rustls instead of OpenSSL in canister_client\n\nUse `hyper-rustls` instead of `hyper-tls` in the `canister_client` so as to make further progress in getting rid of `openssl` being a direct or indirect dependency in the codebase. \n\nSee merge request dfinity-lab/public/ic!15708"
      },
      {
        "id": "b87257b339a1e2029403fa8d7c3cb6b645a5a10d",
        "date": "2023-10-27T15:28:06Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in canister_client"
      },
      {
        "id": "725fcd29439b14b73e710b3a141e62604cc4179c",
        "date": "2023-10-27T12:48:24Z",
        "message": "Merge branch 'franzstefan-CRP-2264-remove-unused-deps-in-http-endpoints' into 'master'\n\nrefactor(crypto): CRP-2264: remove unused TLS dependencies in ic-http-endpoints-public\n\nRemoves the unused dependencies to `hyper-tls` and `native-tls` in `ic-http-endpoints-public`. \n\nSee merge request dfinity-lab/public/ic!15717"
      },
      {
        "id": "9dc0f6e7a9ee86e610c1248265e6231b3ae90c88",
        "date": "2023-10-27T12:48:22Z",
        "message": "refactor(crypto): CRP-2264: remove unused TLS dependencies in ic-http-endpoints-public"
      },
      {
        "id": "3bd909b324fe3c33d655491d84227397bcaf25fe",
        "date": "2023-10-13T16:06:02Z",
        "message": "chore(crypto): remove obsolete dependency on internal crypto crate"
      },
      {
        "id": "9afbd6dc8fac70895056de06b32353ba0839a03d",
        "date": "2023-10-13T12:31:42Z",
        "message": "refactor(crypto): CRP-2244: remove OpenSSL from httpbin-rs"
      },
      {
        "id": "75ecabadf37be1a49b800555f84826fc8ba60204",
        "date": "2023-10-13T02:08:48Z",
        "message": "Merge branch 'franzstefan-CRP-2198-remove-openssl-in-ic-prep' into 'master'\n\nrefactor(crypto): CRP-2241: remove OpenSSL from ic-prep\n\nRemoves OpenSSL as dependency from ic-prep. \n\nSee merge request dfinity-lab/public/ic!15358"
      },
      {
        "id": "c33f8b7e8676390917d62870501278f5328b6839",
        "date": "2023-10-13T02:08:48Z",
        "message": "refactor(crypto): CRP-2241: remove OpenSSL from ic-prep"
      },
      {
        "id": "695f05aacf69371fc5743fa6d1619f7d9993ea87",
        "date": "2023-10-12T15:15:45Z",
        "message": "Merge branch 'franzstefan-CRP-2198-more-openssl-removal' into 'master'\n\nrefactor(crypto): CRP-2198: remove OpenSSL dependency from crypto tests\n\nRemoves OpenSSL as (direct) dependency from various crypto crates, where openssl was still used as dependency for tests and benchmarks, and from the tests crate. In particular, openssl is removed from\n* `ic-crypto`\n* `ic-crypto-internal-csp`\n* `ic-crypto-node-key-generation`\n* `ic-crypto-sha2`\n* `ic-crypto-standalone-sig-verifier`\n* `ic-crypto-test-utils`\n* `tests` \n\nSee merge request dfinity-lab/public/ic!15311"
      },
      {
        "id": "247f0bae93bffaeb3ef61febd623afc01d35f510",
        "date": "2023-10-12T15:15:45Z",
        "message": "refactor(crypto): CRP-2198: remove OpenSSL dependency from crypto tests"
      },
      {
        "id": "98d7f4a8c4ea63b79824f4c2bacbf683e63edbaa",
        "date": "2023-10-10T19:55:26Z",
        "message": "Merge branch 'franzstefan-CRP-2198-remove-openssl-in-tls-test-utils' into 'master'\n\nrefactor(crypto): CRP-2198: remove OpenSSL from TLS test utils\n\nAdapts the `ic-crypto-test-utils-tls` so that OpenSSL is no longer used. Instead we use the highly configurable `x509-cert` crate to generate X.509 certificates, and Rustls to create customized TLS clients and servers.\n\n#### Notes\n* Created new dedicated types in the `ic-crypto-test-utils-tls` for `KeyPair `, `TlsVersion` and `CipherSuite`, so as not to pollute the API with foreign types.\n* As a side effect, `openssl` was also removed as dependency from\n  * `ic-crypto-tls-interfaces`\n  * `ic-canister-client`\n  * `ic-crypto-tls-cert-validation`\n  * `ic-crypto-tls-interfaces`\n* Rustls' `ConfigBuilder` does not allow to restrict the signature algorithms, so the respective infrastructure (e.g., `with_allowed_signature_algorithms`) and tests (`should_return_error_if_server_does_not_support_ed25519_sig_alg`, `should_return_error_if_client_does_not_support_ed25519_sig_alg`) were removed.\n* `x509-cert` does not allow to explicity set the certificate's version. The version is derived: as soon as extensions are set, v3 is used. Because of this, `set_version` was changed to `set_version_1`, which is sufficient for all tests where `set_version` was used.\n* Whenever randomness is needed (e.g., for generating keys) a reproducible RNG is used. However, the reproducible RNG is created at the spot where it is needed, and it is currently not configurable, because this would have made this big MR even bigger.\n* `CustomClientBuilder::expect_msg_from_server` was removed because it was never used anywhere. \n\nSee merge request dfinity-lab/public/ic!15193"
      },
      {
        "id": "f9c11e9aebef01abd0baa01ebae24c9995864a25",
        "date": "2023-10-10T19:55:26Z",
        "message": "refactor(crypto): CRP-2198: remove OpenSSL from TLS test utils"
      },
      {
        "id": "afaf16ec5b21e3bbf2c2bf6ff7c766542ec52a59",
        "date": "2023-10-06T07:22:33Z",
        "message": "Merge branch 'franzstefan-CRP-2229-fix-broken-doc-link' into 'master'\n\nchore(crypto): CRP-2229: fix broken link in IDKG documentation\n\nFixes a broken link in IDKG documentation, which leads to a warning during compilation. Linking to the crate instead of the private module.\n\nThe fixed warning is `warning: unresolved link to 'ic_crypto_internal_threshold_sig_ecdsa::hash2curve'`. \n\nSee merge request dfinity-lab/public/ic!15239"
      },
      {
        "id": "32495e921827cea89ac5e7095e5de5a806df5cc5",
        "date": "2023-10-05T15:24:51Z",
        "message": "chore(crypto): CRP-2229: fix broken link in IDKG documentation"
      },
      {
        "id": "09c938aa49ffc0e6cafb865386f003d509f67c7a",
        "date": "2023-10-03T08:11:04Z",
        "message": "Merge branch 'franzstefan-CRP-2198-tls-test-utils-crate' into 'master'\n\nrefactor(crypto): CRP-2198: move TLS test utils to own crate\n\nMoves crypto's TLS test utils from `rs/crypto/test_utils/src/tls` to a separate crate located at `rs/crypto/test_utils/tls`. \n\nSee merge request dfinity-lab/public/ic!15140"
      },
      {
        "id": "1de966cf0af2b190dcdf3e96df5bf0abeaefe8da",
        "date": "2023-10-03T08:11:03Z",
        "message": "refactor(crypto): CRP-2198: move TLS test utils to own crate"
      },
      {
        "id": "914b617de5314f76c62b37171f1d9c41588cc2fb",
        "date": "2023-10-02T12:43:32Z",
        "message": "Merge branch 'franzstefan-CRP-2198-initial-cleanup' into 'master'\n\nchore(crypto): CRP-2198: cleanup obsolete TLS test utils\n\nRemoves unused obsolete TLS test utils.\n\nIn particular, it removes various test helpers that are not used anywhere. Also removes `handshakes_against_openssl_implementation` as it turns out it actually isn't testing what it seems to test according to the name, because the `OpenSslServer` and `OpenSslClient` are not using OpenSSL underneath any more. Initially, internally these structs were using OpenSSL but since we did the final cleanup after the move from OpenSSL to rustls, also the `OpenSslServer` and `OpenSslClient` are using rustls underneath. \n\nSee merge request dfinity-lab/public/ic!15124"
      },
      {
        "id": "b067fe0044246e7021a62e60fb9aa309c1e5dfa4",
        "date": "2023-10-02T12:43:30Z",
        "message": "chore(crypto): CRP-2198: cleanup obsolete TLS test utils"
      },
      {
        "id": "e66ec97a5da5de0536abea6c1f53859385a4fd46",
        "date": "2023-09-18T16:20:51Z",
        "message": "Merge branch 'franzstefan-CRP-2186-remove-tls-panics' into 'master'\n\nfeat(crypto): CRP-2186: remove panics in internal TLS key generation logic\n\nReplaces the panics in the internal TLS key generation logic with errors. Note, however, that at the outermost layer in the `ic-crypto-node-key-generation` crate we are still converting the errors to a panic. \n\nSee merge request dfinity-lab/public/ic!14844"
      },
      {
        "id": "0c6fec43c16bc8990a5cd953000024217f8ba2eb",
        "date": "2023-09-18T16:20:51Z",
        "message": "feat(crypto): CRP-2186: remove panics in internal TLS key generation logic"
      },
      {
        "id": "a0bfe171184aa4789d16b7b990888b18b47bb3cf",
        "date": "2023-09-18T12:45:30Z",
        "message": "Merge branch 'franzstefan-CRP-2186-remove-openssl-from-tls-prod' into 'master'\n\nrefactor(crypto): CRP-2186: remove openssl dependency for TLS production code\n\nRemove the `openssl` crate as dependency from all code in `rs/crypto`. This is an intermediate step to remove `openssl` entirely from the crypto code, that is, also as dev-dependency.\n\n# Notes\n- `ic-crypto-internal-tls`\n  - The crate was completely restructured to only have a `lib.rs` and integration tests, and rewritten to not use openssl any more at all, also not in test code.\n  - Everything that was tested before is now also tested (but sometimes in a different form), and now we also test that node key validation passes.\n  - The `generate_tls_key_pair_der` API was kept the same as much as possible to keep the MR as small as possible, but the openssl types for `not_before` and `not_after` had to be changed: the obvious `ic_types::Time` was not an option, however, because this type does not support the year 9999 (which is needed to indicate that a certificate does not expire) so we opted for unix timestamps in `u64` (because also `ic_types::Time` uses `u64`). To keep the API the same, various `expect` calls had to be used in the code. While this is not ideal, for the time being, this is unproblematic, however, because TLS key generation is not used during node operation, but only during node creation. Also, there were various `expects` also previously in the OpenSSL implementation.\n  - The API `generate_tls_key_pair` was only used in tests, so it was removed.\n- The `TlsPublicKeyCert` no longer contains OpenSSL's X509 representation. Unfortunately we could not replace this with the X509 certificate of `x509_parser` because it is generic over the lifetime (as the crate heavily uses zero-copy) and the owned (DER) data would live in the same struct, which is not possible as Rust doesn't support self-referential structs. For now, this is solved by simply decoding to OpenSSL's X509 at all the places where this is _used_, which is only in tests. \n\nSee merge request dfinity-lab/public/ic!14705"
      },
      {
        "id": "c5c620c9268e081599812159f20995040113aa3f",
        "date": "2023-09-18T12:45:30Z",
        "message": "refactor(crypto): CRP-2186: remove openssl dependency for TLS production code"
      },
      {
        "id": "6444e349d8d67955405f5c3ee85cccf35561d90b",
        "date": "2023-09-14T16:05:20Z",
        "message": "Merge branch 'franzstefan-x509-parser-update-fix' into 'master'\n\nchore(crypto): CRP-2186: update x509_parser dependency\n\nUpdates the `x509_parser` dependency. The dependency is specified twice in `external_crates.bzl`, once with and once without the `verify` feature, because the `verify` feature pulls in `ring` as dependency, which causes errors when trying to install canisters with the resulting Wasm. Due to how we currently use Bazel and Cargo, the two specifications cannot have the same version. This will be addressed in CRP-2197. \n\nSee merge request dfinity-lab/public/ic!14741"
      },
      {
        "id": "d8adf37dd3720fee90a0d08331e7f998e58bb0af",
        "date": "2023-09-14T16:05:19Z",
        "message": "chore(crypto): CRP-2186: update x509_parser dependency"
      },
      {
        "id": "17adcbce90f0da5a8ff9586e415af597312190f2",
        "date": "2023-09-06T15:24:02Z",
        "message": "Merge branch 'franzstefan-CRP-2156-shake256' into 'master'\n\nfeat(crypto): CRP-2156 add SHAKE256 impl to ic-crypto-sha3 and use it in internal vetkd lib\n\nAdds a SHAKE256 implementation to the `ic-crypto-sha3` crate and uses it in the internal vetKD library.\n\nTests the implementation based on the [NIST SHA-3 XOF Test Vectors for Byte-Oriented Output (FIPS 202)](https://csrc.nist.gov/Projects/cryptographic-algorithm-validation-program/Secure-Hashing). In particular, uses the \"ShortMsg\" and \"VariableOut\" test vectors, while skipping the \"Monte\" (because they are not trivial to implement) and \"LongMsg\" (because the test vector file is big, and the  \"ShortMsg\" already gives sufficient coverage for our needs).\n\nAlso downgrades `ic-crypto-sha3`'s sha3 dependency to match what is used in bazel to avoid compilation errors in the legacy clippy CI job. \n\nSee merge request dfinity-lab/public/ic!14047"
      },
      {
        "id": "4b505cf4130622ca6503ee6b60815b39bf86177c",
        "date": "2023-09-06T15:24:02Z",
        "message": "feat(crypto): CRP-2156 add SHAKE256 impl to ic-crypto-sha3 and use it in internal vetkd lib"
      },
      {
        "id": "1bba265963253280723bba7e2e01b2ded260d9d5",
        "date": "2023-08-04T18:01:46Z",
        "message": "Merge branch 'franzstefan-CRP-2133-ic-vetkd-utils-cleanup' into 'master'\n\nrefactor(crypto): CRP-2133 cleanup API: take slice not Vec and unify naming\n\nPerforms a small cleanup of the API of `ic-vetkd-utils`: (1) takes slices instead of owned `Vec`tors wherever possible, and (2) unifies the naming of the deserialization functions (all functions taking slices are called `deserialize`, and the function taking a fixed-size array reference is called `deserialize_array`). \n\nSee merge request dfinity-lab/public/ic!13982"
      },
      {
        "id": "76cd8482b358137678b9a5498955865475bcc75e",
        "date": "2023-08-04T18:01:45Z",
        "message": "refactor(crypto): CRP-2133 cleanup API: take slice not Vec and unify naming"
      }
    ],
    "email": "franzstefan@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 40,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 19,
    "fixes": 1,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "efe66d16e304dde637f05900e9557b90999b2116",
        "date": "2023-11-23T06:58:04Z",
        "message": "refactor(crypto): CRP-2289: make reqwest use rustls instead of openssl"
      },
      {
        "id": "46f74e6346948e622588cb3ce00e752dfa3d1109",
        "date": "2023-11-20T12:09:29Z",
        "message": "refactor(crypto): CRP-2264: use hyper with Rustls instead of Openssl in tests"
      },
      {
        "id": "66596e99510968fe541a64b283b4bbaf44bc30f6",
        "date": "2023-11-20T09:56:10Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in ic-https-outcalls-adapter's socks connector"
      },
      {
        "id": "90d3946c0c7d26c4bfdaded2482cb7e0f32735fc",
        "date": "2023-11-16T14:52:43Z",
        "message": "refactor(crypto): CRP-2242: remove OpenSSL from ic-os-sev"
      },
      {
        "id": "0128bff0232e13fd9cbed774748654a7c5508877",
        "date": "2023-11-01T16:22:46Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in http_utils"
      },
      {
        "id": "607f601422a3e87da502e6406ed31042ddb89b9e",
        "date": "2023-11-01T12:51:46Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in ic-https-outcalls-adapter"
      },
      {
        "id": "b87257b339a1e2029403fa8d7c3cb6b645a5a10d",
        "date": "2023-10-27T15:28:06Z",
        "message": "refactor(crypto): CRP-2264: use rustls instead of OpenSSL in canister_client"
      },
      {
        "id": "9dc0f6e7a9ee86e610c1248265e6231b3ae90c88",
        "date": "2023-10-27T12:48:22Z",
        "message": "refactor(crypto): CRP-2264: remove unused TLS dependencies in ic-http-endpoints-public"
      },
      {
        "id": "3bd909b324fe3c33d655491d84227397bcaf25fe",
        "date": "2023-10-13T16:06:02Z",
        "message": "chore(crypto): remove obsolete dependency on internal crypto crate"
      },
      {
        "id": "9afbd6dc8fac70895056de06b32353ba0839a03d",
        "date": "2023-10-13T12:31:42Z",
        "message": "refactor(crypto): CRP-2244: remove OpenSSL from httpbin-rs"
      },
      {
        "id": "c33f8b7e8676390917d62870501278f5328b6839",
        "date": "2023-10-13T02:08:48Z",
        "message": "refactor(crypto): CRP-2241: remove OpenSSL from ic-prep"
      },
      {
        "id": "247f0bae93bffaeb3ef61febd623afc01d35f510",
        "date": "2023-10-12T15:15:45Z",
        "message": "refactor(crypto): CRP-2198: remove OpenSSL dependency from crypto tests"
      },
      {
        "id": "f9c11e9aebef01abd0baa01ebae24c9995864a25",
        "date": "2023-10-10T19:55:26Z",
        "message": "refactor(crypto): CRP-2198: remove OpenSSL from TLS test utils"
      },
      {
        "id": "32495e921827cea89ac5e7095e5de5a806df5cc5",
        "date": "2023-10-05T15:24:51Z",
        "message": "chore(crypto): CRP-2229: fix broken link in IDKG documentation"
      },
      {
        "id": "1de966cf0af2b190dcdf3e96df5bf0abeaefe8da",
        "date": "2023-10-03T08:11:03Z",
        "message": "refactor(crypto): CRP-2198: move TLS test utils to own crate"
      },
      {
        "id": "b067fe0044246e7021a62e60fb9aa309c1e5dfa4",
        "date": "2023-10-02T12:43:30Z",
        "message": "chore(crypto): CRP-2198: cleanup obsolete TLS test utils"
      },
      {
        "id": "0c6fec43c16bc8990a5cd953000024217f8ba2eb",
        "date": "2023-09-18T16:20:51Z",
        "message": "feat(crypto): CRP-2186: remove panics in internal TLS key generation logic"
      },
      {
        "id": "c5c620c9268e081599812159f20995040113aa3f",
        "date": "2023-09-18T12:45:30Z",
        "message": "refactor(crypto): CRP-2186: remove openssl dependency for TLS production code"
      },
      {
        "id": "d8adf37dd3720fee90a0d08331e7f998e58bb0af",
        "date": "2023-09-14T16:05:19Z",
        "message": "chore(crypto): CRP-2186: update x509_parser dependency"
      },
      {
        "id": "4b505cf4130622ca6503ee6b60815b39bf86177c",
        "date": "2023-09-06T15:24:02Z",
        "message": "feat(crypto): CRP-2156 add SHAKE256 impl to ic-crypto-sha3 and use it in internal vetkd lib"
      },
      {
        "id": "76cd8482b358137678b9a5498955865475bcc75e",
        "date": "2023-08-04T18:01:45Z",
        "message": "refactor(crypto): CRP-2133 cleanup API: take slice not Vec and unify naming"
      }
    ],
    "line_additions": 5623,
    "line_deletions": 5013,
    "lines_effected_total": 10636,
    "rel_comm_add": 14,
    "rel_comm_del": 16,
    "rel_comm_total": 17
  },
  {
    "login": "Sawchord",
    "id": 16419975,
    "totalContributions": 218,
    "github": "https://github.com/Sawchord",
    "commits": [
      {
        "id": "fb32e0fc18808214c57febbd5504bfc02dffd4b4",
        "date": "2023-11-22T17:06:07Z",
        "message": "Merge branch 'leon/validator_context' into 'master'\n\nchore(consensus): Introduce ProposalContext to pass into payload validators\n\nFor IC-1454, we need access to the `NodeId` in the `BatchPayloadBuilder` implementations. The data is contained in the `BlockProposal` but never gets passed down to the payload builders.\nThis MR introduces a `ProposalContext` structure, that at the time contains the `NodeId` and the `ValidationContext`.\nIn the future, we might need to pass additional context down to `BatchPayloadBuilder`, so we use this struct to make changes in the future easier, rather than having to change the API every time. \n\nSee merge request dfinity-lab/public/ic!16130"
      },
      {
        "id": "50f7a94f3465201836313fc29ce6f11e0c9ecec2",
        "date": "2023-11-22T17:06:07Z",
        "message": "chore(consensus): Introduce ProposalContext to pass into payload validators"
      },
      {
        "id": "412d6cef0492659ef7a2a4254916dae5d73f5040",
        "date": "2023-11-21T15:54:00Z",
        "message": "Merge branch 'leon/query_stats_delivery3' into 'master'\n\nfeat(CON-1153): Implement query stats delivery\n\nAfter the Feature Gate has merged, it is safe to add the delivery code for the QueryStats feature.\nThis MR implements delivery \n\nSee merge request dfinity-lab/public/ic!16242"
      },
      {
        "id": "a243545800b6323ce75ecedb7e56f8adfa7d0d69",
        "date": "2023-11-21T15:54:00Z",
        "message": "feat(CON-1153): Implement query stats delivery"
      },
      {
        "id": "b5e09340e98b878ac09ad55d90596c0549cb27aa",
        "date": "2023-11-15T13:42:44Z",
        "message": "Merge branch 'leon/validator_fix' into 'master'\n\nfix(CON-1162): Remove share validation optimization\n\nThis MR removes the buggy share validation optimization that prevents `RandomBeacon`s and `RandomTape`s from being built under certain circumstances. \n\nSee merge request dfinity-lab/public/ic!16101"
      },
      {
        "id": "a8ad1fd26c33f1c3a24baca7bd11f125aff87c2c",
        "date": "2023-11-15T13:42:44Z",
        "message": "fix(CON-1162): Remove share validation optimization"
      },
      {
        "id": "a20d616b758938b1fd679ee379ad9f75f94df7b0",
        "date": "2023-11-06T11:41:13Z",
        "message": "Merge branch 'leon/query_stats_feature_gate' into 'master'\n\nFeat(CON-1154): Implement feature gate for QueryStats\n\nThis MR adds a feature gate to the QueryStats payload builder.\n\nIf the gate is set, the QueryStats Payload Builder is always build empty payloads and the QueryStats validator will only accept empty payloads as valid.\nThis disallows QueryStats Payloads to pass Consensus until we have fully implemented and reviewed the payload builder and validator.\nDeactivating this feature in Execution is not sufficient, as a malicious node might propose QueryStats payloads. \n\nSee merge request dfinity-lab/public/ic!15859"
      },
      {
        "id": "0f5d7f3ab487673c0bac258c32085dfecec710ad",
        "date": "2023-11-06T11:41:13Z",
        "message": "Feat(CON-1154): Implement feature gate for QueryStats"
      },
      {
        "id": "ab6ecac25d3fb5290bf56411577e5420452a770f",
        "date": "2023-11-02T12:26:59Z",
        "message": "Merge branch 'leon/small_refactor' into 'master'\n\nRefactor(consensus) Refactor imports of batch.rs\n\n \n\nSee merge request dfinity-lab/public/ic!15830"
      },
      {
        "id": "1d49bebe70f30a696eaf9be5e790aaf713ca7553",
        "date": "2023-11-02T12:26:59Z",
        "message": "Refactor(consensus) Refactor imports of batch.rs"
      },
      {
        "id": "8fafa2dff400de0f4fc3cd582db3711fbbe15879",
        "date": "2023-10-26T18:23:12Z",
        "message": "Merge branch 'leon/canister_http_error_simplification' into 'master'\n\nrefactor(Consensus): CanisterHttp Simplify Error\n\nJust simplifying the errors in CanisterHttpPayloadBuilder a little bit, \n\nSee merge request dfinity-lab/public/ic!15650"
      },
      {
        "id": "30300080e44d6174ba0d25b62a24e7572ca780b9",
        "date": "2023-10-26T18:23:12Z",
        "message": "refactor(Consensus): CanisterHttp Simplify Error"
      },
      {
        "id": "b5e1d02460cdfaebea3f50ad51609cc48be794fa",
        "date": "2023-10-19T11:05:03Z",
        "message": "Merge branch 'leon/orch_process_refactor' into 'master'\n\nrefactor(consensus): Leon/orch process refactor\n\nThis MR if a refactor of the `replica_process.rs` into `process_manager.rs`.\n\nThis is a necessary step to allow the Boundary Node orchestration to reuse the code.\nThe MR abstracts the process management into a `ProcessManager` and the code that is specific to the replica gets abstracted behind the `Process` trait.\n\nThis allows to reuse much of the code for managing other subprocesses, such as the Boundary Node. \n\nSee merge request dfinity-lab/public/ic!15467"
      },
      {
        "id": "6ef9a9c7b4a645ef40116fba3ef9d7f631212371",
        "date": "2023-10-19T11:05:02Z",
        "message": "refactor(consensus): Leon/orch process refactor"
      },
      {
        "id": "7653676cea741cc33031707499b38aa9a935f63c",
        "date": "2023-10-17T18:37:59Z",
        "message": "Merge branch 'leon/query_stats_pb' into 'master'\n\nfeat(CON-1102,CON1103): Implement BatchPayloadBuilder for QueryStats\n\nThis MR implements the payload builder for the `QueryStats` feature including its Unit tests.\n\nThe validator is currently not implemented. Since the size limit is in place and no payloads are being delivered up the stack, this MR does not yet change the behaviour of the IC, even in the presence of malicious nodes.\nSince the collection in stats is currently deactivated in the execution environment, this MR should not change the behaviour of the payload builder either. \n\nSee merge request dfinity-lab/public/ic!14878"
      },
      {
        "id": "13e4a4cdd4eb65381e71550cc5aa9ae6d14ff422",
        "date": "2023-10-17T18:37:59Z",
        "message": "feat(CON-1102,CON1103): Implement BatchPayloadBuilder for QueryStats"
      },
      {
        "id": "20f26143e0fca0cfda549fb7f51474e21c1bae14",
        "date": "2023-10-06T12:13:40Z",
        "message": "Merge branch 'query-stats-rename' into 'master'\n\nchore(CON-1140): Query stats rename\n\nThis MR makes the naming of the QueryStats feature more consistent, and while doing so also improves the documentation. \n\nSee merge request dfinity-lab/public/ic!15131"
      },
      {
        "id": "19292bff2f7e946bb70ab36bb328d1d60cf9fdc9",
        "date": "2023-09-20T15:30:25Z",
        "message": "Merge branch 'leon/query_stats_message' into 'master'\n\nfeat(CON-1134): Implement QueryStatsMessages serialization and deserialization\n\nThis MR adds serialization and deserialization to `EpochStatMessages` that allows to serialize the messages in a way that respects the size limits of consensus. \n\nSee merge request dfinity-lab/public/ic!14854"
      },
      {
        "id": "3569a034ae26ccbbd20c6dd5c3f247d55cb138b8",
        "date": "2023-09-20T15:30:24Z",
        "message": "feat(CON-1134): Implement QueryStatsMessages serialization and deserialization"
      },
      {
        "id": "4880bc103329b848b38d57ef30a1bd3389ddd419",
        "date": "2023-09-06T08:54:42Z",
        "message": "Merge branch 'leon/btc_into_messages' into 'master'\n\nfeat(CON-1061): Impl BatchPayloadBuilder for SelfValidatingPayload\n\nThis MR adds:\n- `IntoMessages` implementation\n- `BatchPayloadBuilder` implementation for `SelfValidatingPayloadBuilder`\n- Adapted unit tests, including replacing one unit test altogether\n- Added a proptest \n\nSee merge request dfinity-lab/public/ic!14062"
      },
      {
        "id": "7e4d2baa4b56756cf1a5754f6cadb77593a8800b",
        "date": "2023-09-06T08:54:42Z",
        "message": "feat(CON-1061): Impl BatchPayloadBuilder for SelfValidatingPayload"
      },
      {
        "id": "f29f22b8063ddec0055c8d13a61a663c7d964a55",
        "date": "2023-09-01T09:38:08Z",
        "message": "Merge branch 'leon/batch_size_margin' into 'master'\n\nChore(consensus): Introduce batch payload size margin\n\nThis MR introduces a 2x Margin on the block size. While an error will be generated, when a block is larger than the block size, we will still accept the block, as long as it is smaller than 2 times the block size.\n\nWith the current changes to the `BatchPayloads`, the `CountBytes` implementation is no longer the definite size measurement. Instead, we are using the serialized size of the payloads.\n\nThis means, that the serialized size now needs to be exact. Since there might be bugs in the payload builders, we introduce this safety margin. \n\nSee merge request dfinity-lab/public/ic!14149"
      },
      {
        "id": "e5d9d9d0fa62f46608bbf46dbb71c4a804cf1928",
        "date": "2023-09-01T09:38:07Z",
        "message": "Chore(consensus): Introduce batch payload size margin"
      },
      {
        "id": "14ac3f42727f2706ae9316d51c9f9c243af43bf3",
        "date": "2023-08-22T12:03:40Z",
        "message": "Merge branch 'leon/canister_http_cleanup' into 'master'\n\nchore(CON-1056): CanisterHttp PayloadBuilder migration cleanup\n\n \n\nSee merge request dfinity-lab/public/ic!14242"
      },
      {
        "id": "d836dd35355b338e0b3211419eeb27802d3c02e1",
        "date": "2023-08-22T12:03:40Z",
        "message": "chore(CON-1056): CanisterHttp PayloadBuilder migration cleanup"
      },
      {
        "id": "93a1dbadeb276a6f3249356664f198a9a4184644",
        "date": "2023-08-15T12:21:57Z",
        "message": "feature(CON-1091,RUN-627): Implement Query Stats Local collector and payload builder stub"
      },
      {
        "id": "7fc805c9c1c70041c25e8b6fd6adc6ec9a42ec22",
        "date": "2023-08-02T13:09:13Z",
        "message": "Merge branch 'leon/btc_serialization_migration' into 'master'\n\nfeat(CON-1061): Bitcoin Payload Builder Migration: Implement BatchPayloadBuilder\n\nThis MR adds the `BatchPayloadBuilder` implementation for the `SelfValidatingPayload`, including a number of helper functions.\n\nThis is not a live change, as the live code still uses the old implementation \n\nSee merge request dfinity-lab/public/ic!13659"
      },
      {
        "id": "c951fb41fedaf3bbaddb6e53c97f94ba498e8bea",
        "date": "2023-08-02T13:09:13Z",
        "message": "feat(CON-1061): Bitcoin Payload Builder Migration: Implement BatchPayloadBuilder"
      }
    ],
    "email": "leon.tan@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 28,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 14,
    "fixes": 1,
    "feats": 7,
    "non_merge_commits": [
      {
        "id": "50f7a94f3465201836313fc29ce6f11e0c9ecec2",
        "date": "2023-11-22T17:06:07Z",
        "message": "chore(consensus): Introduce ProposalContext to pass into payload validators"
      },
      {
        "id": "a243545800b6323ce75ecedb7e56f8adfa7d0d69",
        "date": "2023-11-21T15:54:00Z",
        "message": "feat(CON-1153): Implement query stats delivery"
      },
      {
        "id": "a8ad1fd26c33f1c3a24baca7bd11f125aff87c2c",
        "date": "2023-11-15T13:42:44Z",
        "message": "fix(CON-1162): Remove share validation optimization"
      },
      {
        "id": "0f5d7f3ab487673c0bac258c32085dfecec710ad",
        "date": "2023-11-06T11:41:13Z",
        "message": "Feat(CON-1154): Implement feature gate for QueryStats"
      },
      {
        "id": "1d49bebe70f30a696eaf9be5e790aaf713ca7553",
        "date": "2023-11-02T12:26:59Z",
        "message": "Refactor(consensus) Refactor imports of batch.rs"
      },
      {
        "id": "30300080e44d6174ba0d25b62a24e7572ca780b9",
        "date": "2023-10-26T18:23:12Z",
        "message": "refactor(Consensus): CanisterHttp Simplify Error"
      },
      {
        "id": "6ef9a9c7b4a645ef40116fba3ef9d7f631212371",
        "date": "2023-10-19T11:05:02Z",
        "message": "refactor(consensus): Leon/orch process refactor"
      },
      {
        "id": "13e4a4cdd4eb65381e71550cc5aa9ae6d14ff422",
        "date": "2023-10-17T18:37:59Z",
        "message": "feat(CON-1102,CON1103): Implement BatchPayloadBuilder for QueryStats"
      },
      {
        "id": "3569a034ae26ccbbd20c6dd5c3f247d55cb138b8",
        "date": "2023-09-20T15:30:24Z",
        "message": "feat(CON-1134): Implement QueryStatsMessages serialization and deserialization"
      },
      {
        "id": "7e4d2baa4b56756cf1a5754f6cadb77593a8800b",
        "date": "2023-09-06T08:54:42Z",
        "message": "feat(CON-1061): Impl BatchPayloadBuilder for SelfValidatingPayload"
      },
      {
        "id": "e5d9d9d0fa62f46608bbf46dbb71c4a804cf1928",
        "date": "2023-09-01T09:38:07Z",
        "message": "Chore(consensus): Introduce batch payload size margin"
      },
      {
        "id": "d836dd35355b338e0b3211419eeb27802d3c02e1",
        "date": "2023-08-22T12:03:40Z",
        "message": "chore(CON-1056): CanisterHttp PayloadBuilder migration cleanup"
      },
      {
        "id": "93a1dbadeb276a6f3249356664f198a9a4184644",
        "date": "2023-08-15T12:21:57Z",
        "message": "feature(CON-1091,RUN-627): Implement Query Stats Local collector and payload builder stub"
      },
      {
        "id": "c951fb41fedaf3bbaddb6e53c97f94ba498e8bea",
        "date": "2023-08-02T13:09:13Z",
        "message": "feat(CON-1061): Bitcoin Payload Builder Migration: Implement BatchPayloadBuilder"
      }
    ],
    "line_additions": 2247,
    "line_deletions": 894,
    "lines_effected_total": 3141,
    "rel_comm_add": 11,
    "rel_comm_del": 11,
    "rel_comm_total": 12
  },
  {
    "login": "ielashi",
    "id": 208628,
    "totalContributions": 211,
    "github": "https://github.com/ielashi",
    "commits": [
      {
        "id": "e3a6b3db0a176bed122f49123aef88c0dc504c15",
        "date": "2023-11-22T14:04:50Z",
        "message": "Merge branch 'dimitris/stop-req-timeout' into 'master'\n\nfeat: Time out stop_canister requests\n\nStop canister requests now time out after 5 minutes. See https://github.com/dfinity/interface-spec/pull/229 for more details. \n\nSee merge request dfinity-lab/public/ic!15068"
      },
      {
        "id": "d0477702a3d4be9bfbbae1f382aa4091226215e4",
        "date": "2023-11-06T13:02:54Z",
        "message": "fix: broken invariant on canister"
      },
      {
        "id": "b7deb9cd74d3b1b0402814a8bbad99c47f6fdab5",
        "date": "2023-10-20T14:06:21Z",
        "message": "Merge branch 'ielashi/open_call_context_log' into 'master'\n\nchore: clarify log message\n\nThe log message of having an old open call context printed an origin and a respondent. The terminology of a respondent has always been confusing for many people, myself included, and it's unclear to the reader without context where the call context is open. The log message here is now modified so that it's clear which canister owns the open call context. \n\nSee merge request dfinity-lab/public/ic!15465"
      },
      {
        "id": "18950fe789bb277a32277ebf0cfa43740e9d6c92",
        "date": "2023-10-20T14:06:21Z",
        "message": "chore: clarify log message"
      },
      {
        "id": "047e67b667fa10f1f61e780bcf70e6790f863351",
        "date": "2023-10-13T08:04:27Z",
        "message": "Merge branch 'ielashi/btc_integration_test' into 'master'\n\ntest: additional bitcoin integration tests\n\nAdds additional integration to the `BitcoinGetSuccessors` and `BitcoinSendTransactionInternal` endpoints. In a previous commit the Bitcoin adapter can now return rejects to these responses, and these tests ensure that the replica handles these rejects end-to-end. \n\nCloses EXC-1490\n\nSee merge request dfinity-lab/public/ic!15340"
      },
      {
        "id": "ae5abaf71883fb3bfbe0d2aa3cd3d9009b96f217",
        "date": "2023-10-13T08:04:26Z",
        "message": "test: additional bitcoin integration tests"
      },
      {
        "id": "3137eb3f5ad60808fd73ed917a21d434647f22c4",
        "date": "2023-10-11T17:23:35Z",
        "message": "Merge branch 'exc-1490' into 'master'\n\nfix: EXC-1490: Reject response BitcoinPayloadBuilder\n\nThis MR modifies BitcoinPayloadBuilder to include reject responses on failed requests to the Bitcoin Adapter. \n\nCloses EXC-1490\n\nSee merge request dfinity-lab/public/ic!15317"
      },
      {
        "id": "b84f6a3b80deef9a9645153ea10865bd55ad68c5",
        "date": "2023-09-06T07:58:01Z",
        "message": "Merge branch 'ielashi/bump_stable_memory' into 'master'\n\nfeat: bump stable memory to 96GiB\n\n \n\nSee merge request dfinity-lab/public/ic!14585"
      },
      {
        "id": "cb81c33b8d27c3ea78728e25d8e068376e717fea",
        "date": "2023-09-06T07:58:00Z",
        "message": "feat: bump stable memory to 96GiB"
      },
      {
        "id": "b8da2e5a96cc1903b03e1d0bef1a5223fec5401d",
        "date": "2023-08-10T12:06:22Z",
        "message": "chore: remove aux host from bitcoin testnet"
      }
    ],
    "email": "islam.elashi@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 10,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 5,
    "fixes": 1,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "d0477702a3d4be9bfbbae1f382aa4091226215e4",
        "date": "2023-11-06T13:02:54Z",
        "message": "fix: broken invariant on canister"
      },
      {
        "id": "18950fe789bb277a32277ebf0cfa43740e9d6c92",
        "date": "2023-10-20T14:06:21Z",
        "message": "chore: clarify log message"
      },
      {
        "id": "ae5abaf71883fb3bfbe0d2aa3cd3d9009b96f217",
        "date": "2023-10-13T08:04:26Z",
        "message": "test: additional bitcoin integration tests"
      },
      {
        "id": "cb81c33b8d27c3ea78728e25d8e068376e717fea",
        "date": "2023-09-06T07:58:00Z",
        "message": "feat: bump stable memory to 96GiB"
      },
      {
        "id": "b8da2e5a96cc1903b03e1d0bef1a5223fec5401d",
        "date": "2023-08-10T12:06:22Z",
        "message": "chore: remove aux host from bitcoin testnet"
      }
    ],
    "line_additions": 411,
    "line_deletions": 92,
    "lines_effected_total": 503,
    "rel_comm_add": 2,
    "rel_comm_del": 1,
    "rel_comm_total": 2
  },
  {
    "login": "AlexandraZapuc",
    "id": 61285418,
    "totalContributions": 202,
    "github": "https://github.com/AlexandraZapuc",
    "commits": [
      {
        "id": "4600ce3053b0dbb608922b2d2bf874ae3f448f57",
        "date": "2023-11-21T15:11:34Z",
        "message": "Merge branch 'exc-1499' into 'master'\n\nperf: EXC-1499: Execute postponed raw rand messages\n\nThe MR involves implementing a change that enables the execution of postponed raw rand requests from the previous round.\n\n~~MR based on top of [MR-15598](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15598).~~ Rebased on top of master. \n\nSee merge request dfinity-lab/public/ic!15905"
      },
      {
        "id": "1c1147df66f635b4fabac3a1988174f41a8c70ba",
        "date": "2023-11-21T15:11:34Z",
        "message": "perf: EXC-1499: Execute postponed raw rand messages"
      },
      {
        "id": "fbf09601a5c6a810276bc5fc1737b5ccb893440c",
        "date": "2023-11-21T12:05:50Z",
        "message": "Merge branch 'exc-1500' into 'master'\n\nperf: EXC-1500: Handle raw_rand messages during subnet split\n\nThis MR is part of a series of MRs that refactor code handling the execution of management messages addressed to the same subnet. These changes aim to improve the performance of these types of messages. \n\nScenario: \n* On subnet A, there are in-progress `raw_rand` messages.\n* Subnet split is triggered.\n* Canister X, which has initiated a `raw_rand` request, is migrated from subnet A to subnet B. Reject will be created for the `raw_rand` request after the split of the subnet. \n\n\nAll the in-progress `raw_rand` messages will be rejected for the abovementioned case. This change enforces a successful reply to a `raw_rand` request from the local subnet and ensures that the sender is not located on a remote subnet. \n\nNote: Test can be added after requests are saved in the SubnetCallContextManager. (Will be handled in a different MR.) \n\nSee merge request dfinity-lab/public/ic!15822"
      },
      {
        "id": "b1c44b156621102ddf4cc4cc660e1b584ee830db",
        "date": "2023-11-21T12:05:48Z",
        "message": "perf: EXC-1500: Handle raw_rand messages during subnet split"
      },
      {
        "id": "624ae53f33990fc7a57495ecd82d9e7d213ac929",
        "date": "2023-11-09T09:24:03Z",
        "message": "Merge branch 'exc-1496' into 'master'\n\nperf: EXC-1496: Subnet messages performance -  define raw rand entry in SubnetCallContextManager\n\nThis MR is part of a series of MRs that refactor code handling the execution of management messages addressed to the same subnet. \nThe goal of these changes is to improve the performance of these messages. \n\nNote: We do not need callback IDs to identify specific `raw_rand` requests, as we will iterate through all existing in-progress requests at the beginning of the round and create replies. \n\nSee merge request dfinity-lab/public/ic!15598"
      },
      {
        "id": "363d045c2b3b9cdba036f7710d4b976e0a3e5357",
        "date": "2023-11-09T09:24:03Z",
        "message": "perf: EXC-1496: Subnet messages performance -  define raw rand entry in SubnetCallContextManager"
      },
      {
        "id": "21e2aeea0ea750c72dbbe5a4f04c7d11f7d63211",
        "date": "2023-11-01T15:03:55Z",
        "message": "Merge branch 'alexandra-zapuc-pub-key' into 'master'\n\nUpdate file admin pub key\n\n \n\nSee merge request dfinity-lab/public/ic!15746"
      },
      {
        "id": "0a6ed4c65701e2f156c87eaead314e8a09d795f8",
        "date": "2023-11-01T15:03:54Z",
        "message": "Update file admin pub key"
      },
      {
        "id": "44aaa300ed454d571cbbc33c2afc465b6230dd11",
        "date": "2023-10-11T17:23:33Z",
        "message": "fix: EXC-1490: Reject response BitcoinPayloadBuilder"
      },
      {
        "id": "af7208c249a3bafcc0434f0906de713eb728be07",
        "date": "2023-10-06T13:23:23Z",
        "message": "Merge branch 'exc-1268' into 'master'\n\nchore: EXC-1268: Add new error for failed creation canister operation\n\nAdd new error for failed creation canister operation and critical error. \n\nSee merge request dfinity-lab/public/ic!15092"
      },
      {
        "id": "97ed045c7761739fd2edad3db19223c5e66e2bbe",
        "date": "2023-10-06T13:23:19Z",
        "message": "chore: EXC-1268: Add new error for failed creation canister operation"
      },
      {
        "id": "d1a0e3d8b79007a62ba040871dcb79ac1992e7b8",
        "date": "2023-10-03T12:52:26Z",
        "message": "Merge branch 'exc-1465-debug-asserts' into 'master'\n\nchore: EXC-1465: Add debug asserts for critical errors\n\nAdd debug asserts for critical errors \n\nSee merge request dfinity-lab/public/ic!15040"
      },
      {
        "id": "47463c68e1ebbd9cc617ae5caba3423eed11e25a",
        "date": "2023-10-03T12:52:26Z",
        "message": "chore: EXC-1465: Add debug asserts for critical errors"
      },
      {
        "id": "6762b9166110862721290777e6a932a24224876c",
        "date": "2023-09-28T07:50:21Z",
        "message": "Merge branch 'exc-1465' into 'master'\n\nchore: EXC-1465: Add critical errors when we log `EXC-BUG`.\n\nAdd critical errors for instances where we log errors with the prefix “EXC-BUG” so that notifications can be triggered if they occur. \n\nSee merge request dfinity-lab/public/ic!14942"
      },
      {
        "id": "1ce50f2e841939fc4443c76496933dcc28267c1f",
        "date": "2023-09-28T07:50:21Z",
        "message": "chore: EXC-1465: Add critical errors when we log `EXC-BUG`."
      },
      {
        "id": "010a222a625d7fb3db10ac548b84d78c11ffedc6",
        "date": "2023-09-27T13:46:45Z",
        "message": "chore: EXC-249: Observe metric for stop canister request"
      },
      {
        "id": "09d6aa3d4fcb24ff09f68e3a38c71cbcc38e0fe9",
        "date": "2023-09-25T10:16:49Z",
        "message": "Merge branch 'exc-1446' into 'master'\n\n(chore): EXC-1446: Add critical error for missing install code call\n\nThis MR adds a critical error for the case when an install code call cannot be found based on call ID.\n\nNote: MR stacked on top of [Make call ID of install code call non-optional](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14414). The runbook is updated in a separate MR. \n\nSee merge request dfinity-lab/public/ic!14501"
      },
      {
        "id": "3d536872c1484cac61a67469557dd2c0dc4e6f2f",
        "date": "2023-09-25T10:16:49Z",
        "message": "(chore): EXC-1446: Add critical error for missing install code call"
      },
      {
        "id": "f3e36937e0a5c069bbdb569bd1c566ca9b71bc98",
        "date": "2023-09-20T16:55:23Z",
        "message": "Merge branch 'exc-1454' into 'master'\n\n(chore) EXC-1454: Make call ID of install code call non-optional\n\nThis MR transform call ID of an install code call into an non-optional value. \n\nOnce the metrics are showing that there is no call without call ID, this MR can be merged.\n\n[UPDATE]: There is no install code call without call_id in the metrics. \n\nSee merge request dfinity-lab/public/ic!14414"
      },
      {
        "id": "5c831eb4fe1e9cd36ce8eb980dd574534be7b476",
        "date": "2023-09-20T16:55:23Z",
        "message": "(chore) EXC-1454: Make call ID of install code call non-optional"
      },
      {
        "id": "716d698d76259c3f739870cb14a1cd773588108c",
        "date": "2023-08-29T09:17:04Z",
        "message": "Merge branch 'exc-1444' into 'master'\n\n(chore) EXC-1444: Add metrics to track number of in-progress management calls with missing call_id\n\n\nThis MR adds two metrics to track the number of management calls that are in progress at the checkpoint time, specifically the install code and the stop canister calls. \n\nSee merge request dfinity-lab/public/ic!14412"
      },
      {
        "id": "93b228e7c2606320bbd5e42b46e8c186e40ab3a2",
        "date": "2023-08-29T09:17:04Z",
        "message": "(chore) EXC-1444: Add metrics to track number of in-progress management calls with missing call_id"
      },
      {
        "id": "f83446ef9e37684490a01bc3e55a6b37c3a72189",
        "date": "2023-08-24T14:05:12Z",
        "message": "Merge branch 'exc-1443' into 'master'\n\nfeat: EXC-1443: Reject in-progress management calls during subnet split\n\nThis MR adds the functionality to reject in-progress management calls and clean canister state for migrated canisters. \n\nSee merge request dfinity-lab/public/ic!14286"
      },
      {
        "id": "73812e48475f35d4f3788510928f5bba2f6e17ee",
        "date": "2023-08-24T14:05:11Z",
        "message": "feat: EXC-1443: Reject in-progress management calls during subnet split"
      },
      {
        "id": "49b8cafe0c46e60313577435557799b52d982258",
        "date": "2023-08-18T20:33:56Z",
        "message": "Merge branch 'exc-1431' into 'master'\n\nfeat: EXC-1431: Expose stop canister requests to SubnetCallContextManager\n\nSimilar to [install code](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13955) messages, the motivation behind this change is to make the stop canister requests visible to the subnet so that the requests can be rejected if the canister moves to a different subnet during a subnet split.\n\nThis MR adds the logic which creates a call id to track new stop canister messages. \n\nSee merge request dfinity-lab/public/ic!14007"
      },
      {
        "id": "6260fc53f3f84c49655dcc436688b1a184fdc05f",
        "date": "2023-08-18T20:33:56Z",
        "message": "feat: EXC-1431: Expose stop canister requests to SubnetCallContextManager"
      },
      {
        "id": "36576cb3f345c223769828eb3d0a785625fb144a",
        "date": "2023-08-17T14:26:04Z",
        "message": "Merge branch 'exc-1453' into 'master'\n\nchore: EXC-1453: Add install code request with ingress origin to subnet call context manager\n\nFollowing the internal discussions, we have decided to handle in-progress ingress messages similar to canister requests during a subnet split. \n\nThis MR updates the code to include the ingress message in the `CanisterManagementRequests`. \nIt also renames the appropriate fields or struct from *request to *call to avoid confusion. \n\nSee merge request dfinity-lab/public/ic!14142"
      },
      {
        "id": "85a78b0d60206ce83edf42a9c134e6a5b6e71c35",
        "date": "2023-08-17T14:26:04Z",
        "message": "chore: EXC-1453: Add install code request with ingress origin to subnet call context manager"
      },
      {
        "id": "6eaf942bf4a30a60ac75a3eabfdf4c471e6d0e96",
        "date": "2023-08-10T08:03:59Z",
        "message": "Merge branch 'exc-1431-1' into 'master'\n\nchore: EXC-1431: Move ic_interfaces::messages to ic_types::messages\n\nThis MR moves all the types related to messages(ingresses and inter-canister requests) from `ic_interfaces::messages` to `ic_types::messages`. \nThe change is needed by [Expose stop canister requests to SubnetCallContextManager MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14007). \n\nSee merge request dfinity-lab/public/ic!14018"
      },
      {
        "id": "970c339afbb54830818dc05eccde55febd700921",
        "date": "2023-08-10T08:03:59Z",
        "message": "chore: EXC-1431: Move ic_interfaces::messages to ic_types::messages"
      },
      {
        "id": "ac3616f59975b687fddc2d176805e7304bb54803",
        "date": "2023-08-07T12:11:58Z",
        "message": "Merge branch 'exc-1430-install' into 'master'\n\nchore: EXC-1430: Register and unregister subnet callback_id for install code\n\nThis MR adds the logic which creates a callback id for a new long install code requests at the start of the execution. The motivation behind this change is to make the long running install code visible to the subnet so that the requests can be rejected if the canister moves to a different subnet during a subnet split. \n\nThe pending install_code requests are tracked in a separate field of subnet call context manager. As they do not require work to be done by other IC layers, they are tracked separately.\n\nThis MR does not tackle ingresses because they are handled differently. During a subnet split(let's say old subnet A, and new subnet B), only the terminal states are kept in the ingress history. Non-terminal states are dropped from the subnet A and kept only in subnet B. Thus, once the canister is moved, they will eventually transition to terminal states.  \n\nNote: Closed the previous [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13501?commit_id=cd02e12844ca4386edc180134fc2093b289b4e74) and open this one following our internal discussions. \n\nSee merge request dfinity-lab/public/ic!13955"
      },
      {
        "id": "e818f691f99a65d11e9117c0da71b03b3bd4ae70",
        "date": "2023-08-07T12:11:57Z",
        "message": "chore: EXC-1430: Register and unregister subnet callback_id for install code"
      }
    ],
    "email": "alexandra.zapuc@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 32,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 15,
    "fixes": 1,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "1c1147df66f635b4fabac3a1988174f41a8c70ba",
        "date": "2023-11-21T15:11:34Z",
        "message": "perf: EXC-1499: Execute postponed raw rand messages"
      },
      {
        "id": "b1c44b156621102ddf4cc4cc660e1b584ee830db",
        "date": "2023-11-21T12:05:48Z",
        "message": "perf: EXC-1500: Handle raw_rand messages during subnet split"
      },
      {
        "id": "363d045c2b3b9cdba036f7710d4b976e0a3e5357",
        "date": "2023-11-09T09:24:03Z",
        "message": "perf: EXC-1496: Subnet messages performance -  define raw rand entry in SubnetCallContextManager"
      },
      {
        "id": "0a6ed4c65701e2f156c87eaead314e8a09d795f8",
        "date": "2023-11-01T15:03:54Z",
        "message": "Update file admin pub key"
      },
      {
        "id": "44aaa300ed454d571cbbc33c2afc465b6230dd11",
        "date": "2023-10-11T17:23:33Z",
        "message": "fix: EXC-1490: Reject response BitcoinPayloadBuilder"
      },
      {
        "id": "97ed045c7761739fd2edad3db19223c5e66e2bbe",
        "date": "2023-10-06T13:23:19Z",
        "message": "chore: EXC-1268: Add new error for failed creation canister operation"
      },
      {
        "id": "47463c68e1ebbd9cc617ae5caba3423eed11e25a",
        "date": "2023-10-03T12:52:26Z",
        "message": "chore: EXC-1465: Add debug asserts for critical errors"
      },
      {
        "id": "1ce50f2e841939fc4443c76496933dcc28267c1f",
        "date": "2023-09-28T07:50:21Z",
        "message": "chore: EXC-1465: Add critical errors when we log `EXC-BUG`."
      },
      {
        "id": "010a222a625d7fb3db10ac548b84d78c11ffedc6",
        "date": "2023-09-27T13:46:45Z",
        "message": "chore: EXC-249: Observe metric for stop canister request"
      },
      {
        "id": "3d536872c1484cac61a67469557dd2c0dc4e6f2f",
        "date": "2023-09-25T10:16:49Z",
        "message": "(chore): EXC-1446: Add critical error for missing install code call"
      },
      {
        "id": "5c831eb4fe1e9cd36ce8eb980dd574534be7b476",
        "date": "2023-09-20T16:55:23Z",
        "message": "(chore) EXC-1454: Make call ID of install code call non-optional"
      },
      {
        "id": "93b228e7c2606320bbd5e42b46e8c186e40ab3a2",
        "date": "2023-08-29T09:17:04Z",
        "message": "(chore) EXC-1444: Add metrics to track number of in-progress management calls with missing call_id"
      },
      {
        "id": "73812e48475f35d4f3788510928f5bba2f6e17ee",
        "date": "2023-08-24T14:05:11Z",
        "message": "feat: EXC-1443: Reject in-progress management calls during subnet split"
      },
      {
        "id": "6260fc53f3f84c49655dcc436688b1a184fdc05f",
        "date": "2023-08-18T20:33:56Z",
        "message": "feat: EXC-1431: Expose stop canister requests to SubnetCallContextManager"
      },
      {
        "id": "85a78b0d60206ce83edf42a9c134e6a5b6e71c35",
        "date": "2023-08-17T14:26:04Z",
        "message": "chore: EXC-1453: Add install code request with ingress origin to subnet call context manager"
      },
      {
        "id": "970c339afbb54830818dc05eccde55febd700921",
        "date": "2023-08-10T08:03:59Z",
        "message": "chore: EXC-1431: Move ic_interfaces::messages to ic_types::messages"
      },
      {
        "id": "e818f691f99a65d11e9117c0da71b03b3bd4ae70",
        "date": "2023-08-07T12:11:57Z",
        "message": "chore: EXC-1430: Register and unregister subnet callback_id for install code"
      }
    ],
    "line_additions": 3358,
    "line_deletions": 1202,
    "lines_effected_total": 4560,
    "rel_comm_add": 14,
    "rel_comm_del": 13,
    "rel_comm_total": 14
  },
  {
    "login": "chmllr",
    "id": 649785,
    "totalContributions": 200,
    "github": "https://github.com/chmllr",
    "commits": [
      {
        "id": "8982dfca7af6b28d30771db56a841e7ca4b96635",
        "date": "2023-11-20T16:50:29Z",
        "message": "Merge branch 'chmllr/fix-random-beacon-getter' into 'master'\n\nfix(consensus): try to always return the random beacon\n\nCurrently, the consensus pool reader only returns random beacons for heights above or at the latest CUP height. As a result, after introducing node statistics, a slow node that gets a CUP before it was able to deliver a batch of a lower height cannot advance its state anymore as they cannot find the random beacon. Such nodes have to sync from a new checkpoint before they can continue.\n\nIn this MR we relax the function and make it always return the random beacon from the latest CUP if the specified height matches the CUP height, or whatever we have in the validated pool. \n\nSee merge request dfinity-lab/public/ic!16026"
      },
      {
        "id": "a32229d7e9d0b079052feae0897b7d5cd4e4fab7",
        "date": "2023-11-20T16:50:25Z",
        "message": "fix(consensus): try to always return the random beacon"
      },
      {
        "id": "4a932c06c05ceb1bbfde4079515be4d5fd05f124",
        "date": "2023-11-01T14:12:12Z",
        "message": "test(consensus): use the images directory for permission reference"
      },
      {
        "id": "6179f17e7fa29a67e069477167d5f30b63b86781",
        "date": "2023-10-30T13:49:32Z",
        "message": "test(consensus): sleep longer when waiting for the recovery cup"
      },
      {
        "id": "0150f7ea4e63f0c006be3c136f5d1d93c807ed15",
        "date": "2023-10-30T12:39:14Z",
        "message": "test(consensus):  fix the test by checking all nodes for hash mismatches"
      },
      {
        "id": "ed2bcb996c0ac9848710643f5e4e0ad9d61217d0",
        "date": "2023-10-26T13:33:47Z",
        "message": "Merge branch 'chmllr/metrics-push-timeout' into 'master'\n\nfix(consensus,backup): let metrics call timeout\n\nThere's a suspicion that the call pushing metrics never terminates on one of the backup pods under sub-optimal connectivity conditions. This MR limits each call to 60 seconds. \n\nSee merge request dfinity-lab/public/ic!15679"
      },
      {
        "id": "49c0383dce9b6156b180bf9b657b0514873fbc95",
        "date": "2023-10-26T13:33:46Z",
        "message": "fix(consensus,backup): let metrics call timeout"
      },
      {
        "id": "95203ec952fe193ad5b69547186364f6e02fd3f4",
        "date": "2023-10-24T16:52:07Z",
        "message": "Merge branch 'chmllr/fix-backup-metrics' into 'master'\n\nchore(backup): fix disk metrics\n\nThe current way of pushing metrics overrides certain values. We need to export all values with all labels in one go instead. \n\nSee merge request dfinity-lab/public/ic!15263"
      },
      {
        "id": "84cd70c06e38863f9315ea1ee161a24f18afb5f8",
        "date": "2023-10-24T16:52:07Z",
        "message": "chore(backup): fix disk metrics"
      },
      {
        "id": "76b4dae033e9c90e89c071ae215cc7e12091730f",
        "date": "2023-10-06T10:05:34Z",
        "message": "Merge branch 'chmllr/improve-logging' into 'master'\n\nchore(consensus): use WARN when a download request failed\n\n \n\nSee merge request dfinity-lab/public/ic!15253"
      },
      {
        "id": "9146ce2f9ee440cf18e6b996bda94881188d938a",
        "date": "2023-10-06T10:05:34Z",
        "message": "chore(consensus): use WARN when a download request failed"
      },
      {
        "id": "2eba3e7b16b9e078f19230d59769f887f7c98e53",
        "date": "2023-09-30T06:54:03Z",
        "message": "Merge branch 'chmllr/optimize-ic-replay' into 'master'\n\nchore(consensus,backup): only deserialize one block proposal and one notarizartion\n\nSince the replicas are only storing the finalized block proposals and corresponding notarizations, we only need to deserialize one artifact of each of these types. \n\nSee merge request dfinity-lab/public/ic!15069"
      },
      {
        "id": "2107d7aebb44d6eee1ec3bdcb96f4ca3ff473c2e",
        "date": "2023-09-30T06:54:02Z",
        "message": "chore(consensus,backup): only deserialize one block proposal and one notarizartion"
      },
      {
        "id": "89e04afc284f092ca0a7cbebad6a2a9f5e086dfa",
        "date": "2023-09-29T10:08:58Z",
        "message": "Merge branch 'chmllr/backup-instructions' into 'master'\n\nchores(backup): adds a basic README describing the backup tool installation\n\n \n\nSee merge request dfinity-lab/public/ic!15078"
      },
      {
        "id": "8a8f4785a66cef11f49200b881cd73ad4d87cdad",
        "date": "2023-09-29T10:08:57Z",
        "message": "chores(backup): adds a basic README describing the backup tool installation"
      },
      {
        "id": "acef067633d455c6d7a374ffa489cfb5ebc2ae58",
        "date": "2023-09-28T16:49:00Z",
        "message": "Merge branch 'chmllr/image_download_timeout' into 'master'\n\ntest(orchestrator): increase image download timeout to a minute\n\nIncrease the timeout for ICOS image download to a minute from the default setting of 15 seconds. This seems like a reasonable timeout that will also improve the test flakiness. \n\nSee merge request dfinity-lab/public/ic!15070"
      },
      {
        "id": "1b3f6882c648f7c4f7e1e83304ccfdb713c23dd3",
        "date": "2023-09-28T16:49:00Z",
        "message": "test(orchestrator): increase image download timeout to a minute"
      },
      {
        "id": "fbdecfdeeaa336dc5dfa96aa29c7e3d6f68a0b15",
        "date": "2023-09-15T14:28:57Z",
        "message": "Merge branch 'chmllr/backup-improvements' into 'master'\n\nfeat(backup): improve version reporting and separate warning thresholds for cold and hot storage\n\n- Separates the warning thresholds for cold and hot storage space and inodes usage.\n- Switches to the cargo version and converts it to a numeric metrics. \n\nSee merge request dfinity-lab/public/ic!14808"
      },
      {
        "id": "e237e5e3795bdd63da1e4fbf634ba7dbf4223ec1",
        "date": "2023-09-15T14:28:57Z",
        "message": "feat(backup): improve version reporting and separate warning thresholds for cold and hot storage"
      },
      {
        "id": "90ea5be0b69d138fb83e1b983d12c9056d9e810d",
        "date": "2023-09-14T17:18:51Z",
        "message": "Merge branch 'chmllr/more-caching' into 'master'\n\ntest(consensus): enables caching for all consensus tests\n\n \n\nSee merge request dfinity-lab/public/ic!14116"
      },
      {
        "id": "0dd3705cd5c53436304867b08ff6888f77b731bc",
        "date": "2023-09-14T17:18:50Z",
        "message": "test(consensus): enables caching for all consensus tests"
      },
      {
        "id": "04cc41d348d3cf0f50c3b6c4f763d97ded44b249",
        "date": "2023-09-14T08:43:49Z",
        "message": "Merge branch 'chmllr/cold-storage-metrics' into 'master'\n\nchores(consensus, backup): adds cold storage disk metrics\n\nThis MR extends disk metrics and slack messages with stats from the cold storage partition. Now we would see a warning if the space/inodes allocation in the cold storage is above 75%. \n\nSee merge request dfinity-lab/public/ic!14794"
      },
      {
        "id": "67f15889333614d59a766bad75fc23d0bffd840a",
        "date": "2023-09-14T08:43:49Z",
        "message": "chores(consensus, backup): adds cold storage disk metrics"
      },
      {
        "id": "0a3c17d6132e3d8e0049dc2e00a8b95795d68b73",
        "date": "2023-09-13T15:35:37Z",
        "message": "Merge branch 'CON-1127' into 'master'\n\nfeat(backup, CON-1127): only backup notarizations of finalized chain\n\nWith this change, the replicas will only backup notarizations belonging to the finalized chain. \n\nSee merge request dfinity-lab/public/ic!14658"
      },
      {
        "id": "26849b165effebe77442f65ecfd9201fbe529311",
        "date": "2023-09-13T15:35:37Z",
        "message": "feat(backup, CON-1127): only backup notarizations of finalized chain"
      },
      {
        "id": "df0ff6abdb56adf7938ea67728322f6188fc0db6",
        "date": "2023-09-12T09:55:10Z",
        "message": "Merge branch 'chmllr/remove-test' into 'master'\n\nchore(tests): Remove the legacy NNS state deployment tool and test\n\nSince we have now a Rust based tool that's used regularly, we remove the legacy stuff. \n\nSee merge request dfinity-lab/public/ic!14645"
      },
      {
        "id": "467a7b0227d044adda8bf5d2398d437ce4baaf7b",
        "date": "2023-09-12T09:55:09Z",
        "message": "chore(tests): Remove the legacy NNS state deployment tool and test"
      },
      {
        "id": "d55367c669741aaf081bf0ca030800ce2954f24d",
        "date": "2023-08-09T12:14:28Z",
        "message": "test(consensus): enable caching of consensus tests"
      }
    ],
    "email": "christian@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 28,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 12,
    "fixes": 4,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "a32229d7e9d0b079052feae0897b7d5cd4e4fab7",
        "date": "2023-11-20T16:50:25Z",
        "message": "fix(consensus): try to always return the random beacon"
      },
      {
        "id": "4a932c06c05ceb1bbfde4079515be4d5fd05f124",
        "date": "2023-11-01T14:12:12Z",
        "message": "test(consensus): use the images directory for permission reference"
      },
      {
        "id": "6179f17e7fa29a67e069477167d5f30b63b86781",
        "date": "2023-10-30T13:49:32Z",
        "message": "test(consensus): sleep longer when waiting for the recovery cup"
      },
      {
        "id": "0150f7ea4e63f0c006be3c136f5d1d93c807ed15",
        "date": "2023-10-30T12:39:14Z",
        "message": "test(consensus):  fix the test by checking all nodes for hash mismatches"
      },
      {
        "id": "49c0383dce9b6156b180bf9b657b0514873fbc95",
        "date": "2023-10-26T13:33:46Z",
        "message": "fix(consensus,backup): let metrics call timeout"
      },
      {
        "id": "84cd70c06e38863f9315ea1ee161a24f18afb5f8",
        "date": "2023-10-24T16:52:07Z",
        "message": "chore(backup): fix disk metrics"
      },
      {
        "id": "9146ce2f9ee440cf18e6b996bda94881188d938a",
        "date": "2023-10-06T10:05:34Z",
        "message": "chore(consensus): use WARN when a download request failed"
      },
      {
        "id": "2107d7aebb44d6eee1ec3bdcb96f4ca3ff473c2e",
        "date": "2023-09-30T06:54:02Z",
        "message": "chore(consensus,backup): only deserialize one block proposal and one notarizartion"
      },
      {
        "id": "8a8f4785a66cef11f49200b881cd73ad4d87cdad",
        "date": "2023-09-29T10:08:57Z",
        "message": "chores(backup): adds a basic README describing the backup tool installation"
      },
      {
        "id": "1b3f6882c648f7c4f7e1e83304ccfdb713c23dd3",
        "date": "2023-09-28T16:49:00Z",
        "message": "test(orchestrator): increase image download timeout to a minute"
      },
      {
        "id": "e237e5e3795bdd63da1e4fbf634ba7dbf4223ec1",
        "date": "2023-09-15T14:28:57Z",
        "message": "feat(backup): improve version reporting and separate warning thresholds for cold and hot storage"
      },
      {
        "id": "0dd3705cd5c53436304867b08ff6888f77b731bc",
        "date": "2023-09-14T17:18:50Z",
        "message": "test(consensus): enables caching for all consensus tests"
      },
      {
        "id": "67f15889333614d59a766bad75fc23d0bffd840a",
        "date": "2023-09-14T08:43:49Z",
        "message": "chores(consensus, backup): adds cold storage disk metrics"
      },
      {
        "id": "26849b165effebe77442f65ecfd9201fbe529311",
        "date": "2023-09-13T15:35:37Z",
        "message": "feat(backup, CON-1127): only backup notarizations of finalized chain"
      },
      {
        "id": "467a7b0227d044adda8bf5d2398d437ce4baaf7b",
        "date": "2023-09-12T09:55:09Z",
        "message": "chore(tests): Remove the legacy NNS state deployment tool and test"
      },
      {
        "id": "d55367c669741aaf081bf0ca030800ce2954f24d",
        "date": "2023-08-09T12:14:28Z",
        "message": "test(consensus): enable caching of consensus tests"
      }
    ],
    "line_additions": 419,
    "line_deletions": 601,
    "lines_effected_total": 1020,
    "rel_comm_add": 7,
    "rel_comm_del": 7,
    "rel_comm_total": 8
  },
  {
    "login": "NikolasHai",
    "id": 113891786,
    "totalContributions": 198,
    "github": "https://github.com/NikolasHai",
    "commits": [
      {
        "id": "e4728440f1ebb4de04081e3733dfa79d3a179e62",
        "date": "2023-11-21T09:57:04Z",
        "message": "Merge branch 'FI-1065-remove-icp-index-waiting-time-printin' into 'master'\n\nfeat(icp-index): removed printing of indexed blocks\n\nThis MR removes the printing of index blocks at every round of index building.\nCloses FI-1065. \n\nCloses FI-1065\n\nSee merge request dfinity-lab/public/ic!16232"
      },
      {
        "id": "bea0c322bc534dab204ff8a64940d12f720e58a5",
        "date": "2023-11-21T09:56:40Z",
        "message": "feat(icp-index): removed printing of indexed blocks"
      },
      {
        "id": "598377199b158149218594c3272bb28aa9fd1171",
        "date": "2023-10-30T08:36:29Z",
        "message": "Merge branch 'FI-1020-fix-approve-account-data-icrc-1-index' into 'master'\n\nfeat(FI-1020): add account to account data at Approve\n\nThis MR introduces the following changes:\n1. Add an account to AccountDataMap when it its involved in an Approve transaction. \n\nSee merge request dfinity-lab/public/ic!15508"
      },
      {
        "id": "87ee79c9d3658313b419682c3737ff5076303677",
        "date": "2023-10-30T08:36:29Z",
        "message": "feat(FI-1020): add account to account data at Approve"
      },
      {
        "id": "792e78ba8c0c10030201d0ea6f0b1510d6b29a67",
        "date": "2023-10-20T13:02:45Z",
        "message": "Merge branch 'FI-1019-fix-account-deleting-in-icp-index' into 'master'\n\nfeat(FI-1019): fix deleting of accounts in icrc1 index\n\nThis MR proposes the following changes:\n1. Remove the deleting of empty accounts from the icrc1 canisters\n2. Test that all subaccount of a principal remain in the index memory even after one of the subaccount reaches a balance of 0. \n\nSee merge request dfinity-lab/public/ic!15506"
      },
      {
        "id": "d9b130e2923be400c77805ae7edc4122af20869a",
        "date": "2023-10-20T13:02:45Z",
        "message": "feat(FI-1019): fix deleting of accounts in icrc1 index"
      },
      {
        "id": "be9bfb38f273990e3be8f62c44348c048f650bd7",
        "date": "2023-10-17T12:01:51Z",
        "message": "fix(ICRC-1 index): handling of unknown accounts"
      },
      {
        "id": "2916ef73040bc953c0316df0e264aa8fe832a9ac",
        "date": "2023-10-13T15:12:02Z",
        "message": "Merge branch 'FI-996-handle-non-existing-account-identifier-in-icp-index' into 'master'\n\nfeat(FI-996): Handle non existing account identifier in icp index\n\nProblem description: \nWhenever a user queries an AccountIdentifier at the `get_account_transactions` endpoint and that AccountIdentifier does not exist in the index memory, the query call will throw an error stating that the call is exceeding the instructions limit.\n \nThis MR proposes the following change:\n1. Remove the find iterator and replace it by take_while. This way the iterator will stop looking for a given AccountIdentifier if the upper bound did not find the given AccountIdentifier. \n\nSee merge request dfinity-lab/public/ic!15378"
      },
      {
        "id": "4028858bb0730730a2a512bfdb32c5d56f51c26c",
        "date": "2023-10-13T15:12:02Z",
        "message": "feat(FI-996): Handle non existing account identifier in icp index"
      },
      {
        "id": "462a6fdd8b43d8d1facf9950ed0e85f78e18e8b3",
        "date": "2023-09-21T20:56:44Z",
        "message": "Merge branch 'fix-script-typo' into 'master'\n\nfix(rosetta-api): typo in name of script fle\n\n \n\nSee merge request dfinity-lab/public/ic!14938"
      },
      {
        "id": "13374c772fb8823882231e3fa4bc8baa58e4cdbd",
        "date": "2023-09-21T20:56:43Z",
        "message": "fix(rosetta-api): typo in name of script fle"
      },
      {
        "id": "595c57c815aebc49926a91618e2cde1cb7454973",
        "date": "2023-09-19T08:22:52Z",
        "message": "Merge branch 'FI-936-prop-test-tx-args' into 'master'\n\nfeat(FI-936): Add Proptest fields to TransferArgs\n\nThis MR introduces the following changes:\n1. Change the conversion of `ic_icrc1::Transaction` to `icrc_ledger_types::icrc3::transactions::Transaction` in the index-ng canister to resemble the conversion done in the `get_transactions` endpoint from the icrc-1 ledger.\n2. Fill empty fields in the PropTest Transactions with valid values. \n3. Add test for block coherence between the icrc1-ledger and index-ng canister \n\nSee merge request dfinity-lab/public/ic!14770"
      },
      {
        "id": "dd3aee4eeb38bee404d2719c79f7d8031eeb452f",
        "date": "2023-09-19T08:22:52Z",
        "message": "feat(FI-936): Add Proptest fields to TransferArgs"
      },
      {
        "id": "dee80fad9eea64dc4d4e776a98326a31c0d46032",
        "date": "2023-09-11T11:47:44Z",
        "message": "Merge branch 'FI-925-add-account-based-endpoint-for-icp-index-canister' into 'master'\n\nfeat(FI-925): Add account based endpoints for icp index canister\n\nThis MR introduces the following changes:\n1. Add an account based balance of endpoint\n2. Add an account based get transactions endpoint\n3. Add tests for both endpoints\n4. Edit candid file to account for the two new endpoints \n\nSee merge request dfinity-lab/public/ic!14590"
      },
      {
        "id": "187ae45f6f2790aa7afb9c339267c30ecaf9ce32",
        "date": "2023-09-11T11:47:44Z",
        "message": "feat(FI-925): Add account based endpoints for icp index canister"
      },
      {
        "id": "b17b732a5fd97e185978d9f2b6283de9446ad170",
        "date": "2023-09-11T09:59:12Z",
        "message": "Merge branch 'FI-935-add-fee-in-index-ledger-test' into 'master'\n\nfeat(FI-935): Add fee in index ledger test\n\nThis MR introduces the following changes:\n1. Add tests for each ApproveArg field \n\nSee merge request dfinity-lab/public/ic!14654"
      },
      {
        "id": "0ac2b666569204d1d73509dda7e80d8e90051c98",
        "date": "2023-09-11T09:59:12Z",
        "message": "feat(FI-935): Add fee in index ledger test"
      },
      {
        "id": "28be07144b1440424910eb5a7f7efa41434b7711",
        "date": "2023-08-25T10:45:08Z",
        "message": "Merge branch 'FI-910-add-icrc-1-ledger-download-script' into 'master'\n\nfeat(FI-910): Add icrc1 ledger download script\n\nThis MR adds a script to download the latest versions of the icrc1 ledger wasm and candid file. \nThis is needed to keep the [documentation](https://internetcomputer.org/docs/current/developer-docs/integrations/icrc-1/deploy-new-token) up to date. \n\nSee merge request dfinity-lab/public/ic!14390"
      },
      {
        "id": "5dfa4b1d6926a999f586038ffcf9199bfea884a5",
        "date": "2023-08-25T10:45:08Z",
        "message": "feat(FI-910): Add icrc1 ledger download script"
      },
      {
        "id": "fc9fd54daba93c8f3de24f10110c684bcc8cc8c9",
        "date": "2023-08-24T14:05:01Z",
        "message": "Merge branch 'FI-886-add-icrc-2-support-for-http-layer-of-icp-rosetta' into 'master'\n\nfeat(FI-886): [ICP Rosetta] Add icrc 2 support for http layer of icp rosetta\n\nThis MR introduces the following changes:\n1. Add Approve as an operation in the rosetta api model\n2. test data api and indexer endpoints that involve fetching transactions for Approve Operation compatibility \n\nSee merge request dfinity-lab/public/ic!14201"
      },
      {
        "id": "44c307088e5a5cee3343539cea02e7f3394ad845",
        "date": "2023-08-24T14:05:01Z",
        "message": "feat(FI-886): [ICP Rosetta] Add icrc 2 support for http layer of icp rosetta"
      },
      {
        "id": "29d25c37896b883824e6b6a8adafb2ddf4e80540",
        "date": "2023-08-23T14:51:28Z",
        "message": "Merge branch 'add-icp-index-canister-to-published-canisters' into 'master'\n\nchore(icp-index): publish icp index canister\n\nThis MR adds the icp index canisters to the list of published canisters. \n\nSee merge request dfinity-lab/public/ic!14352"
      },
      {
        "id": "bcaa90def83eed628f3b1e5820e306d28a4107ec",
        "date": "2023-08-23T14:51:28Z",
        "message": "chore(icp-index): publish icp index canister"
      },
      {
        "id": "5f9ee45c99bbe292aaad9a1f81c1d1934907d802",
        "date": "2023-08-15T11:43:39Z",
        "message": "Merge branch 'FI-863-add-icrc-2-support-for-icrc-rosetta-database' into 'master'\n\nfeat(FI-863): [ICRC Rosetta] Add icrc 2 support for icrc rosetta database\n\nThis MR introduces the following changes:\n1. Add table columns to support Approve operations\n2. Add support in the database to store Approve operations\n3. Add approve operations to the possible Operations generated during proptest \n\nSee merge request dfinity-lab/public/ic!14147"
      },
      {
        "id": "88e74e1ff9f61bf32d7f1876f64c15747c1f8faa",
        "date": "2023-08-15T11:43:39Z",
        "message": "feat(FI-863): [ICRC Rosetta] Add icrc 2 support for icrc rosetta database"
      },
      {
        "id": "3821570c3ec6f382914843ece08838e3fae2ecea",
        "date": "2023-08-14T16:24:26Z",
        "message": "Merge branch 'FI-864-add-icrc-2-support-for-icp-rosetta' into 'master'\n\nfeat(FI-864): [ICP Rosetta] add support for ICRC-2 in ICP rosetta\n\nThis MR adds support for the ICRC2 standard to the ICP rosetta. \n1. Add new table entries for Aprrove fields\n2. Add Approve operation to the operations generating during testing \n\nSee merge request dfinity-lab/public/ic!14130"
      },
      {
        "id": "efd1ebb1175fff44d162464fbae3dc18d8318b2a",
        "date": "2023-08-14T16:24:26Z",
        "message": "feat(FI-864): [ICP Rosetta] add support for ICRC-2 in ICP rosetta"
      },
      {
        "id": "94a541568e97718729b25e5c0f08e4ea7c25b63c",
        "date": "2023-08-10T09:25:42Z",
        "message": "Merge branch 'fix-index-error' into 'master'\n\nfeat(FI-882): [Index Canisters] reduce cycle consumption during fitlering\n\nThis MR changes the filtering for transactions given a certain account to reduce the amount of cycles that are consumed. \nThis change is introduced for both the icp and icrc1 index canister. \n\nSee merge request dfinity-lab/public/ic!14077"
      },
      {
        "id": "5ee9f14a37d91a274f6ae2be65b44c875afe5f9f",
        "date": "2023-08-10T09:25:42Z",
        "message": "feat(FI-882): [Index Canisters] reduce cycle consumption during fitlering"
      },
      {
        "id": "17146210226e2e51a1460fd0888f7e38b16d758e",
        "date": "2023-08-08T12:04:22Z",
        "message": "Merge branch 'FI-851-impl-ledger-env-for-state-machine' into 'master'\n\nfeat(FI-851): [ICRC1 Ledger] Impl ledger env for state machine\n\nThis MR introduces the following changes:\n1. Import the ICRC1 test suite to the sm-tests repo\n2. Implement the LedgerEnv trait for the StateMachine\n3. Execute the tests from the test suite in sm-tests with the ICRC1 ledger\n4. Change timestamp comparison in `apply_transaction` to account for `created_at_time` being set to `u64::MAX` \n\nSee merge request dfinity-lab/public/ic!14014"
      },
      {
        "id": "e948a3b74d852751df596af7cb21c7ba4e923fb9",
        "date": "2023-08-08T12:04:21Z",
        "message": "feat(FI-851): [ICRC1 Ledger] Impl ledger env for state machine"
      }
    ],
    "email": "nikolas.haimerl@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 31,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 15,
    "fixes": 3,
    "feats": 13,
    "non_merge_commits": [
      {
        "id": "bea0c322bc534dab204ff8a64940d12f720e58a5",
        "date": "2023-11-21T09:56:40Z",
        "message": "feat(icp-index): removed printing of indexed blocks"
      },
      {
        "id": "87ee79c9d3658313b419682c3737ff5076303677",
        "date": "2023-10-30T08:36:29Z",
        "message": "feat(FI-1020): add account to account data at Approve"
      },
      {
        "id": "d9b130e2923be400c77805ae7edc4122af20869a",
        "date": "2023-10-20T13:02:45Z",
        "message": "feat(FI-1019): fix deleting of accounts in icrc1 index"
      },
      {
        "id": "be9bfb38f273990e3be8f62c44348c048f650bd7",
        "date": "2023-10-17T12:01:51Z",
        "message": "fix(ICRC-1 index): handling of unknown accounts"
      },
      {
        "id": "4028858bb0730730a2a512bfdb32c5d56f51c26c",
        "date": "2023-10-13T15:12:02Z",
        "message": "feat(FI-996): Handle non existing account identifier in icp index"
      },
      {
        "id": "13374c772fb8823882231e3fa4bc8baa58e4cdbd",
        "date": "2023-09-21T20:56:43Z",
        "message": "fix(rosetta-api): typo in name of script fle"
      },
      {
        "id": "dd3aee4eeb38bee404d2719c79f7d8031eeb452f",
        "date": "2023-09-19T08:22:52Z",
        "message": "feat(FI-936): Add Proptest fields to TransferArgs"
      },
      {
        "id": "187ae45f6f2790aa7afb9c339267c30ecaf9ce32",
        "date": "2023-09-11T11:47:44Z",
        "message": "feat(FI-925): Add account based endpoints for icp index canister"
      },
      {
        "id": "0ac2b666569204d1d73509dda7e80d8e90051c98",
        "date": "2023-09-11T09:59:12Z",
        "message": "feat(FI-935): Add fee in index ledger test"
      },
      {
        "id": "5dfa4b1d6926a999f586038ffcf9199bfea884a5",
        "date": "2023-08-25T10:45:08Z",
        "message": "feat(FI-910): Add icrc1 ledger download script"
      },
      {
        "id": "44c307088e5a5cee3343539cea02e7f3394ad845",
        "date": "2023-08-24T14:05:01Z",
        "message": "feat(FI-886): [ICP Rosetta] Add icrc 2 support for http layer of icp rosetta"
      },
      {
        "id": "bcaa90def83eed628f3b1e5820e306d28a4107ec",
        "date": "2023-08-23T14:51:28Z",
        "message": "chore(icp-index): publish icp index canister"
      },
      {
        "id": "88e74e1ff9f61bf32d7f1876f64c15747c1f8faa",
        "date": "2023-08-15T11:43:39Z",
        "message": "feat(FI-863): [ICRC Rosetta] Add icrc 2 support for icrc rosetta database"
      },
      {
        "id": "efd1ebb1175fff44d162464fbae3dc18d8318b2a",
        "date": "2023-08-14T16:24:26Z",
        "message": "feat(FI-864): [ICP Rosetta] add support for ICRC-2 in ICP rosetta"
      },
      {
        "id": "5ee9f14a37d91a274f6ae2be65b44c875afe5f9f",
        "date": "2023-08-10T09:25:42Z",
        "message": "feat(FI-882): [Index Canisters] reduce cycle consumption during fitlering"
      },
      {
        "id": "e948a3b74d852751df596af7cb21c7ba4e923fb9",
        "date": "2023-08-08T12:04:21Z",
        "message": "feat(FI-851): [ICRC1 Ledger] Impl ledger env for state machine"
      }
    ],
    "line_additions": 1150,
    "line_deletions": 302,
    "lines_effected_total": 1452,
    "rel_comm_add": 9,
    "rel_comm_del": 4,
    "rel_comm_total": 9
  },
  {
    "login": "schneiderstefan",
    "id": 31004026,
    "totalContributions": 183,
    "github": "https://github.com/schneiderstefan",
    "commits": [
      {
        "id": "7fd58ada02621e552fe47cc9fba0327b8d6da8ad",
        "date": "2023-11-03T15:46:20Z",
        "message": "Merge branch 'stschnei/subnet_splitting_set_lsmt_flag' into 'master'\n\nfix: Use correct LSMT flag for subnet splitting\n\nWe previously set the recently introduced LSMT feature flag to disabled\nfor subnet splitting. In principle it should not matter, but we now\ndiscoverd some pitfalls, where the flag could affect the handling of\nsome empty files. As we rely on files not changing during subnet\nsplitting, we should keep as many variables the same as regular replica\noperations as possible.\n\nThis MR sets the flag in the same way as the state manager would. Note\nthat the LSMT feature flag is currently always disabled, so no damage\nwas done by this bug. \n\nSee merge request dfinity-lab/public/ic!15826"
      },
      {
        "id": "ea4c05e1eb86b80751e5fca2a9d64afaf70f3951",
        "date": "2023-11-03T15:46:19Z",
        "message": "fix: Use correct LSMT flag for subnet splitting"
      },
      {
        "id": "5ea44375c599ff606c2ce4e80cebd8aad8a24536",
        "date": "2023-10-31T12:20:36Z",
        "message": "Merge branch 'stschnei/lsmt-feature-flag' into 'master'\n\nchore: LSMT feature flag\n\nThis MR introduces a new feature flag for the log structured merge tree\nbased storage. The functionality for enabling it is largely missing at\nthis point, but will be added in upcoming MRs. \n\nSee merge request dfinity-lab/public/ic!15608"
      },
      {
        "id": "ef7cca46f669855d04a43f77dc810ed082fb18bf",
        "date": "2023-10-31T12:20:36Z",
        "message": "chore: LSMT feature flag"
      },
      {
        "id": "77659e877fa1e8a8cc0e0933624d041813a64350",
        "date": "2023-10-24T08:54:23Z",
        "message": "Merge branch 'stschnei/refactor-loading-overlays' into 'master'\n\nchore: Pass overlay files to PageMap::open\n\nIn preparation for the new Log-Structured Merge Tree storage, this MR\npicks up overlay files from the checkpoints and passes them to PageMap.\n\nAs there is no code yet to actually read or write these overlay files,\nwe then assert in PageMap that we are given an empty list of overlays.\n\nThis MR also contains some other light refactoring preparing for LSMT. \n\nSee merge request dfinity-lab/public/ic!15436"
      },
      {
        "id": "afdfb040eea1a3b4a6099cc443e1327f0deac714",
        "date": "2023-10-24T08:54:23Z",
        "message": "chore: Pass overlay files to PageMap::open"
      },
      {
        "id": "3c16de524c6e76d4acea9edf5426bdc2c72d20ea",
        "date": "2023-10-13T10:42:26Z",
        "message": "Merge branch 'stschnei/copy-metric' into 'master'\n\nchore: Metric for copying ReplicatedState\n\nThis MR adds two extra metrics. The first is to isolate the\nReplicatedState::copy part of commit_and_certify, and the second is a\ntip handler variant for the manifest computation (for completeness). \n\nSee merge request dfinity-lab/public/ic!15366"
      },
      {
        "id": "479d06faf67111357c41301fd199b89384bac7a8",
        "date": "2023-10-13T10:42:25Z",
        "message": "chore: Metric for copying ReplicatedState"
      },
      {
        "id": "c7d2f8b39c8cb31fb01cff25117c4ec29083dd34",
        "date": "2023-09-21T14:41:11Z",
        "message": "Merge branch 'stschnei/hardlink-per-default' into 'master'\n\nfeat: [MR-493] Hardlink immutable files\n\nDuring initalize_tip, we currently reflink copy all files.\n\nInstead, we now distinguish which files need to be writeable in the tip,\nand which ones are immutable. The immutable ones are hardlinked.\n\nFor safety, we make sure that we only ever hardlink readonly files, and\ndo not change the permissions of files that have been hardlinked.\n\nThis MR also prepares for the LSMT storage layer, where all files are\nimmutable and therefore can be hardlinked. \n\nSee merge request dfinity-lab/public/ic!14732"
      },
      {
        "id": "fa42be40abaf8e50b221fb36ee409039adfc365b",
        "date": "2023-09-21T14:41:10Z",
        "message": "feat: [MR-493] Hardlink immutable files"
      },
      {
        "id": "b11ec9efd1d9b2f2c8520b2ecd9abd8d207d6c78",
        "date": "2023-09-14T08:08:16Z",
        "message": "Merge branch 'stschnei/single_app_large_node_with_nns' into 'master'\n\ntest: Testnet config with large node plus an NNS\n\nThis MR adds a version of `single_app_large_subnet` that additionally\ninstalls a small NNS subnet.\n\nThis is useful for performance tests that involve replica upgrades or\nsome tests from the scalability framework. \n\nSee merge request dfinity-lab/public/ic!14777"
      },
      {
        "id": "6da179f720051bf73b547d92906a9f3a82b8a7ac",
        "date": "2023-09-14T08:08:16Z",
        "message": "test: Testnet config with large node plus an NNS"
      },
      {
        "id": "3107736b03b4dbdbe47b89ec02236c838bbe60df",
        "date": "2023-09-12T13:29:43Z",
        "message": "test: Fix flaky test"
      },
      {
        "id": "f1f99c7f3701fcc3b4b085c5eb7e295c881919f9",
        "date": "2023-09-04T13:19:31Z",
        "message": "Merge branch 'stschnei/remove-useless-lint-config' into 'master'\n\nchore: Remove outdated lint allow\n\nThe new_without_default lint will no longer trigger, as new takes an\nargument now. \n\nSee merge request dfinity-lab/public/ic!14562"
      },
      {
        "id": "be063c1842d0a4a1fc178a58e6604419e0cb00a5",
        "date": "2023-09-04T13:19:31Z",
        "message": "chore: Remove outdated lint allow"
      },
      {
        "id": "71adba179679a1090baa26cadcceadec311f57b3",
        "date": "2023-08-30T14:48:08Z",
        "message": "Merge branch 'stschnei/state-manager-test-timeout' into 'master'\n\ntest: Increase timeout of state manager tests\n\nThe state manager tests have been flaky lately due to timeouts. This MR\nincreases their timeout as a first attempt at reducing the flakiness. \n\nSee merge request dfinity-lab/public/ic!14478"
      },
      {
        "id": "301125ee520f62f333991933d322ae59c18bee69",
        "date": "2023-08-30T14:48:08Z",
        "message": "test: Increase timeout of state manager tests"
      },
      {
        "id": "8dfd65e3c8475b2f5c5638b087c2fd753910948a",
        "date": "2023-08-21T13:32:49Z",
        "message": "Merge branch 'mr-488-prefetch-metrics' into 'master'\n\nchore: [MR-488] Additional memory tracker metrics\n\nThis MR adds a couple of additional metrics to the memory tracker. In\nparticular:\n\n1. Number of segfaults handled\n2. Number of calls to mmap\n3. Number of calls to mprotect\n4. Number of pages memcopied from page deltas.\n\nThey join the existing metrics of writes before reads, number of\naccessed pages and number of dirtied pages.\n\nAlso changes all uses of AtomicUsize for the existing metrics to\nRelaxed, as we don't really need any ordering guarantees. \n\nSee merge request dfinity-lab/public/ic!14247"
      },
      {
        "id": "0d0a6338b709eab995a90ffcb6d5f98293519ae0",
        "date": "2023-08-21T13:32:48Z",
        "message": "chore: [MR-488] Additional memory tracker metrics"
      },
      {
        "id": "e7a820b62cd63cdfbaff561075d152437c1b4d1a",
        "date": "2023-08-11T14:56:22Z",
        "message": "Merge branch 'stschnei/mr-457-prefetch' into 'master'\n\nfeat: [MR-457] Simplified prefetch logic in the memory tracker\n\nThe interaction between the memory tracker and the underlying PageMap\nused to rely on the function get_memory_region. This function would\nreturn a consecutive region that could either be unprotected or the\ndata of a single delta page. This way, the layout of the delta pages\nwould affect how large a region the memory tracker would unprotect in\none iteration.\n\nThis MR replaces get_memory_region by get_memory_instructions, which\nreturns a sequence of instructions such that the entire input range\ncan be unprotected. This new scheme is both simpler on the memory\ntracker side and avoids cases where the execution performance would\ndeteriorate significantly due to the presence of deltas. \n\nSee merge request dfinity-lab/public/ic!13430"
      },
      {
        "id": "e40e9acb98f1f1e11cf39144207e467bb9faf0d9",
        "date": "2023-08-11T14:56:22Z",
        "message": "feat: [MR-457] Simplified prefetch logic in the memory tracker"
      },
      {
        "id": "12222e4534858dc9ab9b8e7fe985f8731ec1c9f4",
        "date": "2023-08-11T14:49:35Z",
        "message": "chore: Error handling and metrics for hash tree computation"
      },
      {
        "id": "abe51bd872d3ff446ec23c3336698355513daf68",
        "date": "2023-08-04T11:01:45Z",
        "message": "Merge branch 'stschnei/labelrepl' into 'master'\n\nfix: Debug assert small label values\n\nThis MR debug asserts against an potential out-of-bounds error that currently cannot happen due how the values are constructed. \n\nSee merge request dfinity-lab/public/ic!13938"
      },
      {
        "id": "de28fbb8cdb2e96618101579af0be7ffc5600382",
        "date": "2023-08-04T11:01:45Z",
        "message": "fix: Debug assert small label values"
      }
    ],
    "email": "stefan.schneider@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 24,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 11,
    "fixes": 3,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "ea4c05e1eb86b80751e5fca2a9d64afaf70f3951",
        "date": "2023-11-03T15:46:19Z",
        "message": "fix: Use correct LSMT flag for subnet splitting"
      },
      {
        "id": "ef7cca46f669855d04a43f77dc810ed082fb18bf",
        "date": "2023-10-31T12:20:36Z",
        "message": "chore: LSMT feature flag"
      },
      {
        "id": "afdfb040eea1a3b4a6099cc443e1327f0deac714",
        "date": "2023-10-24T08:54:23Z",
        "message": "chore: Pass overlay files to PageMap::open"
      },
      {
        "id": "479d06faf67111357c41301fd199b89384bac7a8",
        "date": "2023-10-13T10:42:25Z",
        "message": "chore: Metric for copying ReplicatedState"
      },
      {
        "id": "fa42be40abaf8e50b221fb36ee409039adfc365b",
        "date": "2023-09-21T14:41:10Z",
        "message": "feat: [MR-493] Hardlink immutable files"
      },
      {
        "id": "6da179f720051bf73b547d92906a9f3a82b8a7ac",
        "date": "2023-09-14T08:08:16Z",
        "message": "test: Testnet config with large node plus an NNS"
      },
      {
        "id": "3107736b03b4dbdbe47b89ec02236c838bbe60df",
        "date": "2023-09-12T13:29:43Z",
        "message": "test: Fix flaky test"
      },
      {
        "id": "be063c1842d0a4a1fc178a58e6604419e0cb00a5",
        "date": "2023-09-04T13:19:31Z",
        "message": "chore: Remove outdated lint allow"
      },
      {
        "id": "301125ee520f62f333991933d322ae59c18bee69",
        "date": "2023-08-30T14:48:08Z",
        "message": "test: Increase timeout of state manager tests"
      },
      {
        "id": "0d0a6338b709eab995a90ffcb6d5f98293519ae0",
        "date": "2023-08-21T13:32:48Z",
        "message": "chore: [MR-488] Additional memory tracker metrics"
      },
      {
        "id": "e40e9acb98f1f1e11cf39144207e467bb9faf0d9",
        "date": "2023-08-11T14:56:22Z",
        "message": "feat: [MR-457] Simplified prefetch logic in the memory tracker"
      },
      {
        "id": "12222e4534858dc9ab9b8e7fe985f8731ec1c9f4",
        "date": "2023-08-11T14:49:35Z",
        "message": "chore: Error handling and metrics for hash tree computation"
      },
      {
        "id": "de28fbb8cdb2e96618101579af0be7ffc5600382",
        "date": "2023-08-04T11:01:45Z",
        "message": "fix: Debug assert small label values"
      }
    ],
    "line_additions": 2179,
    "line_deletions": 690,
    "lines_effected_total": 2869,
    "rel_comm_add": 8,
    "rel_comm_del": 4,
    "rel_comm_total": 9
  },
  {
    "login": "jasonz-dfinity",
    "id": 133917836,
    "totalContributions": 162,
    "github": "https://github.com/jasonz-dfinity",
    "commits": [
      {
        "id": "9852fcfb9796958d32ead2657794be8182af28fe",
        "date": "2023-11-23T03:48:00Z",
        "message": "fix: NNS1-2747 Commit node provider rewards minting result right after minting"
      },
      {
        "id": "36c32d25f60364d5b31a98cfcecc2a76d817f1ab",
        "date": "2023-11-22T23:28:31Z",
        "message": "Merge branch 'jason/fix-nns-governance-heartbeat' into 'master'\n\nfix: Avoid calling with_neuron during validation\n\nPreviously, `with_neuron`:\n1. is called for all neurons on the heap for neuron data validation\n2. reads stable storage when the neuron is inactive\n\nTherefore, for inactive neuron copies on the heap, it tries to read stable storage, which causes the heartbeat to exceed instruction limit. \n\nSee merge request dfinity-lab/public/ic!16230"
      },
      {
        "id": "08482a6a2ade293c01139e57408967a2bedfced4",
        "date": "2023-11-22T23:28:31Z",
        "message": "fix: Avoid calling with_neuron during validation"
      },
      {
        "id": "d01c92ce987e2e01134a11a5c661ba0677e88218",
        "date": "2023-11-17T07:53:16Z",
        "message": "Merge branch 'jason/NNS1-2416-5' into 'master'\n\nfeat: NNS1-2416 Read inactive neuron from stable memory as source of truth\n\n* Step 1: clean up is_copy_inactive_neurons_to_stable_memory_enabled assuming it is true\n* Step 2: clean up inactive neuron copying related code assuming migration status becomes SUCCEEDED\n* Step 3: change NeuronDataValidator to only validate inactive status\n* Step 4: let StableNeuronStore return NeuronStoreError\n* (This MR) Step 5: read inactive neuron from stable memory as source of truth \n\nSome considerations:\n- To avoid unnecessary dirty pages when calling with_neuron_mut without actual modification, an equality check is used to make sure we only update when there is a change\n- StableNeuronStore::upsert was just for mirroring, now that it's done, we use create/upsert according to the scenario\n- NeuronStore::load_neuron becomes the single entry point for reading a neuron (to support with_neuron/with_neuron_mut/remove_neuron) and it can be easily adapted to reading from one source.\n- It would be nice to make sure active->active modification won't touch stable storage. This will be addressed in a following MR if possible.\n- Cow is used so that it can hold either &Neuron (heap) or Neuron (stable). This is mostly just for with_neuron to avoid clone().\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16132) | Next MR \n\nSee merge request dfinity-lab/public/ic!16160"
      },
      {
        "id": "4b4040c7dbffcb64e5d2e669737b4b855fea50c6",
        "date": "2023-11-17T07:53:16Z",
        "message": "feat: NNS1-2416 Read inactive neuron from stable memory as source of truth"
      },
      {
        "id": "f580d6de81e1ef1c0e2a796ad62a513637c822ea",
        "date": "2023-11-16T20:58:45Z",
        "message": "Merge branch 'jason/NNS1-2416-4' into 'master'\n\nfeat: NNS1-2614 Let stable neuron store return NeuronStoreError\n\n* Step 1: clean up is_copy_inactive_neurons_to_stable_memory_enabled assuming it is true\n* Step 2: clean up inactive neuron copying related code assuming migration status becomes SUCCEEDED\n* Step 3: change NeuronDataValidator to only validate inactive status\n* (This MR) Step 4: let StableNeuronStore return NeuronStoreError\n\nNote: a lot of changes are just making clippy happy as I removed `#[!allow(unused]`\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16093) | [Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16160) \n\nSee merge request dfinity-lab/public/ic!16132"
      },
      {
        "id": "13e7d5e324f90dd8409a091b127429f478b6c5df",
        "date": "2023-11-16T20:58:44Z",
        "message": "feat: NNS1-2614 Let stable neuron store return NeuronStoreError"
      },
      {
        "id": "e0f9c89def8d5e95dcb321cf4bb9e53bb67eec73",
        "date": "2023-11-15T20:40:53Z",
        "message": "Merge branch 'jason/NNS1-2416-3' into 'master'\n\nfeat: NNS1-2719 Change NeuronDataValidator to only validate inactive status\n\n- Step 1: clean up is_copy_inactive_ne1. urons_to_stable_memory_enabled assuming it is true\n- Step 2: clean up inactive neuron copying related code assuming migration status becomes SUCCEEDED\n- (This MR): Step 3: change NeuronDataValidator to only validate inactive status\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16057) | Next MR \n\nSee merge request dfinity-lab/public/ic!16093"
      },
      {
        "id": "9c26d52b5ec13cd5aa62407e374ee08313266dde",
        "date": "2023-11-15T20:40:53Z",
        "message": "feat: NNS1-2719 Change NeuronDataValidator to only validate inactive status"
      },
      {
        "id": "3fbc7430e654e0e4114e9befa14621e40cb6c32a",
        "date": "2023-11-15T19:15:04Z",
        "message": "Merge branch 'jason/NNS1-2416-2' into 'master'\n\nfeat: NNS1-2416 Clean up code related to copying inactive neuron assuming migration status is SUCCEEDED\n\n- Step 1: clean up is_copy_inactive_ne1. urons_to_stable_memory_enabled assuming it is true\n- (This MR) Step 2: clean up inactive neuron copying related code assuming migration status becomes SUCCEEDED\n\n[Previous MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16055) | [Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16093) \n\nSee merge request dfinity-lab/public/ic!16057"
      },
      {
        "id": "0d9ae394865a3920ace4a0e40165484ca0788114",
        "date": "2023-11-15T19:15:04Z",
        "message": "feat: NNS1-2416 Clean up code related to copying inactive neuron assuming migration status is SUCCEEDED"
      },
      {
        "id": "89ee77e2f77e44b8a7268070a246bcd36f81c041",
        "date": "2023-11-15T17:48:38Z",
        "message": "Merge branch 'jason/NNS1-2416-1' into 'master'\n\nfeat: NNS1-2416 Clean up is_copy_inactive_neurons_to_stable_memory_enabled assuming copying is done\n\nStep 1: clean up is_copy_inactive_neurons_to_stable_memory_enabled assuming it is true\n\n[Next MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16057) \n\nSee merge request dfinity-lab/public/ic!16055"
      },
      {
        "id": "629454b6946c8088ced49ae32e9630155f7fa826",
        "date": "2023-11-15T17:48:38Z",
        "message": "feat: NNS1-2416 Clean up is_copy_inactive_neurons_to_stable_memory_enabled assuming copying is done"
      },
      {
        "id": "643a4f242fadf2cc6210a0916e2fbdba38302c92",
        "date": "2023-11-14T22:28:13Z",
        "message": "Merge branch 'jason/NNS1-2705-1' into 'master'\n\nchore: Update precondition check for update_neuron\n\nThe precondition checks related to indexes are no longer needed because indexes are updated by change-detection \n\nSee merge request dfinity-lab/public/ic!16054"
      },
      {
        "id": "bd9d7dd5dc232e4da4c9ae45cd3945bda34d84e3",
        "date": "2023-11-14T22:28:13Z",
        "message": "chore: Update precondition check for update_neuron"
      },
      {
        "id": "510259e9fb4c6a2c79bb0e62fefd210dea735408",
        "date": "2023-11-14T01:54:06Z",
        "message": "Merge branch 'jason/NNS1-2705' into 'master'\n\nchore: NNS1-2705 Clean up use_neuron_stable_indexes\n\nCloses NNS1-2705 \n\nCloses NNS1-2705\n\nSee merge request dfinity-lab/public/ic!15988"
      },
      {
        "id": "bc127c5b09d5c88cf732ce5e8be5b3634f0ddf7e",
        "date": "2023-11-14T01:54:05Z",
        "message": "chore: NNS1-2705 Clean up use_neuron_stable_indexes"
      },
      {
        "id": "99a9ef5065396804f1833f68177bc72681622453",
        "date": "2023-11-09T19:56:36Z",
        "message": "Merge branch 'jason/NNS1-2551' into 'master'\n\nfeat: NNS1-2551 Turn on inactive neuron copying\n\nCloses NNS1-2551 \n\nCloses NNS1-2551\n\nSee merge request dfinity-lab/public/ic!15986"
      },
      {
        "id": "50441680435656bb3e3c687c8791654bdad11bb1",
        "date": "2023-11-09T19:56:36Z",
        "message": "feat: NNS1-2551 Turn on inactive neuron copying"
      },
      {
        "id": "5b318a1ad95dbba3b8658282b4ba4c7f0cafc9b6",
        "date": "2023-11-09T19:26:24Z",
        "message": "Merge branch 'jason/remove-inactive-neuron-cardinality' into 'master'\n\nfeat: Remove inactive neuron cardinality validation\n\nSince the inactive neuron definition depends on the time, we cannot guarantee every inactive neuron is always in the stable storage. Therefore we should not validate the cardinality.\n\nAlternatives considered:\n1. Instead of validating `heap == stable`, validate `heap >= stable`. However, this is already guaranteed by checking every neuron in stable storage has an entry in heap and is inactive.\n2. Validate `heap - stable <= C`. It's difficult to come up with `C`, and in this phase it's easy to check whether the cardinality in the stable neuron store (through `governance_stable_memory_neuron_count` metric) is reasonable. The `NeuronCopyValidator` will have to be removed shortly anyway, because we won't have a copy of inactive neurons in the heap. \n\nSee merge request dfinity-lab/public/ic!15977"
      },
      {
        "id": "061a5c6ecadf550e871a71448aad0e407172ee4f",
        "date": "2023-11-09T19:26:22Z",
        "message": "feat: Remove inactive neuron cardinality validation"
      },
      {
        "id": "55c62cee3869891a92502eeb879aa962c4cde37a",
        "date": "2023-11-09T04:34:50Z",
        "message": "chore: NNS1-2510 Document the invariant regarding active/inactive neurons"
      },
      {
        "id": "08a3e4c16558f04ce3a55f5a2b61bc47493df053",
        "date": "2023-11-08T23:55:19Z",
        "message": "Merge branch 'jason/NNS1-2704' into 'master'\n\nfeat: NNS1-2704 Clean up neuron indexes migration\n\nCloses NNS1-2704 \n\nCloses NNS1-2704\n\nSee merge request dfinity-lab/public/ic!15956"
      },
      {
        "id": "74c51690ff4505d5537f08a842ceb316ecff8c4e",
        "date": "2023-11-08T23:55:19Z",
        "message": "feat: NNS1-2704 Clean up neuron indexes migration"
      },
      {
        "id": "da7ae6597670e9f33e7957d3c979453a66dc93ef",
        "date": "2023-11-08T01:43:24Z",
        "message": "Merge branch 'jason/NNS1-2622' into 'master'\n\nfeat: NNS1-2622 Change followees storage schema to allow duplicates\n\n1. Verified that the updated test fails without the schema change: https://dash.sf1-idx1.dfinity.network/invocation/a5266c38-0523-4060-8968-20fb9bf026ed\n2. The change of stable storage schema is safe because the feature has not been enabled, so no data with this schema has been added to stable storage. \n\nSee merge request dfinity-lab/public/ic!15947"
      },
      {
        "id": "f2a7e93a18189bae3b530051705b25bce3f2f4f7",
        "date": "2023-11-08T01:43:24Z",
        "message": "feat: NNS1-2622 Change followees storage schema to allow duplicates"
      },
      {
        "id": "960ef2762d3342328a465ce092126115cf4b1fdc",
        "date": "2023-11-07T22:11:31Z",
        "message": "Merge branch 'jason/NNS1-2618' into 'master'\n\nfeat: NNS1-2618 Implement NeuronStore logic to add/remove neurons from stable neuron store if needed\n\nCloses NNS1-2618 \n\nCloses NNS1-2618\n\nSee merge request dfinity-lab/public/ic!15922"
      },
      {
        "id": "8daa989e765bc21de914b699779f823cbacb0793",
        "date": "2023-11-07T22:11:30Z",
        "message": "feat: NNS1-2618 Implement NeuronStore logic to add/remove neurons from stable neuron store if needed"
      },
      {
        "id": "cc831acf45220ac5ef4e0fa7aa149e2643c7bcad",
        "date": "2023-11-02T22:16:16Z",
        "message": "Merge branch 'jason/NNS1-2414-4' into 'master'\n\nfeat: NNS-2414 Start using subaccount, principal and known neuron indexes in stable storage\n\nCloses NNS1-2414 \n\nCloses NNS1-2414\n\nSee merge request dfinity-lab/public/ic!15861"
      },
      {
        "id": "7214e3a50c20f16880767e0aa7f7b19b896fe9e0",
        "date": "2023-11-02T22:16:16Z",
        "message": "feat: NNS-2414 Start using subaccount, principal and known neuron indexes in stable storage"
      },
      {
        "id": "aa354de4f4e70e4aecc2009ef4e2cb56338e1913",
        "date": "2023-11-02T20:35:25Z",
        "message": "Merge branch 'jason/NNS1-2696' into 'master'\n\nfeat: NNS1-2696 Allow stable structure objects to be reset for testing\n\nCloses NNS1-2696 \n\nCloses NNS1-2696\n\nSee merge request dfinity-lab/public/ic!15839"
      },
      {
        "id": "81d7b9667d8a67cdaf07648bf78386ad5a368aa8",
        "date": "2023-11-02T20:35:24Z",
        "message": "feat: NNS1-2696 Allow stable structure objects to be reset for testing"
      },
      {
        "id": "1ed725440fcbf17d6dbe307e7f9a9a5b6578b0bc",
        "date": "2023-11-02T17:03:46Z",
        "message": "feat: NNS1-2414 Differentiate new() and restore() for NNS Governance and its NeuronStore"
      },
      {
        "id": "dbb870d6830fd9d85deb67e100abf6a730adc6ec",
        "date": "2023-10-27T00:13:18Z",
        "message": "Merge branch 'jason/misc-comment-on-validator' into 'master'\n\nchore: Add a comment about cardinality and range validator\n\n \n\nSee merge request dfinity-lab/public/ic!15551"
      },
      {
        "id": "d7c3191f5a5cd87b1338a56db26ec0c62564006d",
        "date": "2023-10-27T00:13:18Z",
        "message": "chore: Add a comment about cardinality and range validator"
      },
      {
        "id": "d191e57a18cc146b9aa57722adcd4db007f4df5a",
        "date": "2023-10-26T22:35:01Z",
        "message": "Merge branch 'jason/NNS1-2681-2' into 'master'\n\nfix: NNS1-2681 Fix the Buf::advance overflow issue for SNS Governance/Root\n\nThis MR fixes the issue for SNS Governance/Root. \n\nCloses NNS1-2681\n\nSee merge request dfinity-lab/public/ic!15664"
      },
      {
        "id": "31723f22f3ec6d88cc1dc3948b54f81459641f43",
        "date": "2023-10-26T22:35:01Z",
        "message": "fix: NNS1-2681 Fix the Buf::advance overflow issue for SNS Governance/Root"
      },
      {
        "id": "8d80b3b3703988645a604641f8d600d525bb5c21",
        "date": "2023-10-26T01:08:10Z",
        "message": "Merge branch 'jason/stable-memory-32-bit-api' into 'master'\n\nchore: Change swap to call the nervous_system_common API to get stable memory size\n\n \n\nSee merge request dfinity-lab/public/ic!15482"
      },
      {
        "id": "8e4aa083e1be79061728f0bffe4acf046ca05861",
        "date": "2023-10-26T01:08:09Z",
        "message": "chore: Change swap to call the nervous_system_common API to get stable memory size"
      },
      {
        "id": "4bffb82f79bdae7b9d2fa9c8e89865ee91baa784",
        "date": "2023-10-25T23:41:47Z",
        "message": "Merge branch 'jason/NNS1-2414-1' into 'master'\n\nrefactor: Move existing feature flags for migrations and define a new flag\n\n \n\nSee merge request dfinity-lab/public/ic!15583"
      },
      {
        "id": "3b1d18bdaca5cbb067d31b963db5888353e57d4c",
        "date": "2023-10-25T23:41:47Z",
        "message": "refactor: Move existing feature flags for migrations and define a new flag"
      },
      {
        "id": "4ee6971d99024a38e06e4ab72119d0139dd6dd85",
        "date": "2023-10-25T22:41:26Z",
        "message": "Merge branch 'jason/NNS1-2681-1' into 'master'\n\nfix: Fix an issue preventing NNS Governance from rolling back to an older version\n\nThis MR fixes the issue for NNS Governance. Will have another one for SNS Governance/Root \n\nSee merge request dfinity-lab/public/ic!15628"
      },
      {
        "id": "c9489b79ca106661523e3c14921decf28cb2aefd",
        "date": "2023-10-25T22:41:23Z",
        "message": "fix: Fix an issue preventing NNS Governance from rolling back to an older version"
      },
      {
        "id": "c5da765b887ecc4b02af9d6b9610c551b317f765",
        "date": "2023-10-23T09:54:12Z",
        "message": "chore: Disable neuron copy validator before copying inactive neuron is turned on"
      },
      {
        "id": "28825eafe3f8af7c87129887030fd3501bfc0b92",
        "date": "2023-10-20T23:58:02Z",
        "message": "Merge branch 'jason/fix-following-index-cardinality' into 'master'\n\nfix: Fix neuron following index cardinality calculation in validation\n\nNeed to count topic_followee_pairs instead of all followees from each topic because followees can have duplicates. \n\nSee merge request dfinity-lab/public/ic!15554"
      },
      {
        "id": "671d9268206d127b5133b2f38ea7c82cc157569e",
        "date": "2023-10-20T23:58:02Z",
        "message": "fix: Fix neuron following index cardinality calculation in validation"
      },
      {
        "id": "cf79e1284dacc30be9877da17f4bf73a47391073",
        "date": "2023-10-20T00:35:57Z",
        "message": "Merge branch 'jason/NNS1-2654' into 'master'\n\nfeat: Reserve 4GiB for UPGRADES_MEMORY\n\nChanges in this MR in addition to the main purpose:\n1. We were using 32-bit API for getting stable memory size for metrics, this needs to be changed to using the 64-bit API and change the types to u64\n2. In a couple integration tests we were having an assumption that governance canister should be allocated with 4GB memory and this needs to be changed\n3. Setting up the governance canister with the right IDs since the memory allocation is based on canister ids. \n\nSee merge request dfinity-lab/public/ic!15473"
      },
      {
        "id": "b4fe75a8e353ef970a8318a37b1ad4bb7348789e",
        "date": "2023-10-20T00:35:57Z",
        "message": "feat: Reserve 4GiB for UPGRADES_MEMORY"
      },
      {
        "id": "84d28437849ed58d2786a9c86ee7e69aa9dae7b7",
        "date": "2023-10-19T21:38:12Z",
        "message": "Merge branch 'jason/flip-indexes-migration-flag' into 'master'\n\nfeat: NNS1-2417 Turn neuron_stable_indexes_building_is_enabled to true\n\n \n\nSee merge request dfinity-lab/public/ic!15521"
      },
      {
        "id": "54665574a8760b7710a9f1d55187c5c88e6e7117",
        "date": "2023-10-19T21:38:11Z",
        "message": "feat: NNS1-2417 Turn neuron_stable_indexes_building_is_enabled to true"
      },
      {
        "id": "b0c53feea9336b925360a8e67fedcddca174b86f",
        "date": "2023-10-19T20:25:48Z",
        "message": "Merge branch 'jason/NNS1-2644' into 'master'\n\nfeat: NNS1-2644 Change neuron indexes migration state machine test to check validation and involve neuron operations\n\nCloses NNS1-2644 \n\nCloses NNS1-2644\n\nSee merge request dfinity-lab/public/ic!15350"
      },
      {
        "id": "2d655b4c28e54616c311511b810cb75390e327bd",
        "date": "2023-10-19T20:25:48Z",
        "message": "feat: NNS1-2644 Change neuron indexes migration state machine test to check validation and involve neuron operations"
      },
      {
        "id": "b24f708ee094a66dd284edb73c6794c1c2133851",
        "date": "2023-10-19T18:13:59Z",
        "message": "Merge branch 'jason/fix-last-neuron-id-saturating-add' into 'master'\n\nfix: Use saturating add so that neuron migration does not wrap around\n\n \n\nSee merge request dfinity-lab/public/ic!15518"
      },
      {
        "id": "ad1e198d67702f74edeadcf35d55d3e639568e12",
        "date": "2023-10-19T18:13:59Z",
        "message": "fix: Use saturating add so that neuron migration does not wrap around"
      },
      {
        "id": "9e89d7e034db1610ff9063be9de5bffcac70d4dc",
        "date": "2023-10-19T16:26:01Z",
        "message": "Merge branch 'jason/NNS1-2417' into 'master'\n\nfeat: NNS1-2417 Tune batch sizes for neuron indexes migration and validation\n\nThe goal is to limit the # of instructions per heartbeat to ~60M - similar to what we are already consuming. Tested with mainnet state to make sure there is no drop in the finalization rate.\n\nNote that we do rely on the assumptions of the average cardinalities of followees/principals per neuron (12 followees && 2 principals). \n\nSee merge request dfinity-lab/public/ic!15440"
      },
      {
        "id": "2c9d9108f3a293b8883c47763ce4cf8e79f2edd9",
        "date": "2023-10-19T16:26:01Z",
        "message": "feat: NNS1-2417 Tune batch sizes for neuron indexes migration and validation"
      },
      {
        "id": "98eb213581b239c3829eee7076bea74acad9937b",
        "date": "2023-10-18T23:45:24Z",
        "message": "Merge branch 'jason/check-heap-potential-for-validations' into 'master'\n\nfeat: Check heap growth potential before running validations\n\n \n\nSee merge request dfinity-lab/public/ic!15480"
      },
      {
        "id": "0cf7f9be0eece49572b67ac52c224826b5e5463d",
        "date": "2023-10-18T23:45:21Z",
        "message": "feat: Check heap growth potential before running validations"
      },
      {
        "id": "02847da7f46a3293716a9f5b7fc9cc3f5c0d3760",
        "date": "2023-10-17T20:11:14Z",
        "message": "Increase recovered_mainnet_nns timeout to 1h"
      },
      {
        "id": "5df24ab6a1494bbfd4d150245e2afa41c75df3cb",
        "date": "2023-10-16T19:19:30Z",
        "message": "fix: Fix a bug with unstake maturity causing high number of instructions per heartbeat"
      },
      {
        "id": "f07e62b69937e87d25e228661dadf2ee1ebc4865",
        "date": "2023-10-11T16:44:55Z",
        "message": "Merge branch 'jason/NNS1-2482' into 'master'\n\nfeat: NNS1-2482 Expose neuron data validation summary through a canister query method\n\nKey idea: we have a list of `ValidationIssue` coming in from each heartbeat and we need to summarize them so that they don't take too much space in (1) heap, while executing (2) response, while being returned through query method. We maintain a `HashMap<Discriminant<ValidationIssue>, Vec<ValidationIssue>` so that grouping & truncation can happen within groups. An alternative is to create explicit fields for each validation, which seems repetitive and unnecessary. Given that we only expect human readers to consume this response, the only issue with the current approach seems to be more awkward tests (need to look through all groups to assert)\n\nOther decisions:\n- not exposing this new method to `canister.did`, to help ensure nobody depends on it\n- `ValidationIssue::NeuronStoreError` now contains `String`, for candid derive to more easily work\n- Might be able to create another type instead of using `Discriminant`, but that seems repetitive\n- Other maps with more stable ordering might make tests look better, but: (1) no `Ord` for Discriminant, so we would need to implement Ord/PartialOrd ourselves in order to use BTreeMap (2) indexmap let us use insertion order, but indexmap is not commonly used in IC, and I'm not keen on introducing another dependency\n\nSize increase: \n- governance: 2593646 -> 2607044 (13398B)\n- governance_test: 2773058 -> 2800000 (26942B) \n\nSee merge request dfinity-lab/public/ic!15248"
      },
      {
        "id": "225a7ec6270768d10b126f3611be9e7e153d9276",
        "date": "2023-10-11T16:44:55Z",
        "message": "feat: NNS1-2482 Expose neuron data validation summary through a canister query method"
      },
      {
        "id": "a290a6dc6ec9055dc5901ce211d5cedbd1f4fa71",
        "date": "2023-10-05T00:49:34Z",
        "message": "Merge branch 'jason/NNS1-2413-4' into 'master'\n\nfeat: NNS1-2413 Call NeuronDataValidator::maybe_validate within heartbeat\n\nNotes:\n1. No validation will be run when any migration is in progress. The condition might be too broad in the future, but it seems necessary now, otherwise if we start immediately then we need to wait almost 1 more day to see an accurate validation summary\n2. A 'validation summary' is defined but to be completed in the next ticket NNS1-2487 for exposing it to a canister query method\n3. We need Governance and all its parts to be Send+Sync, so since we have `Box<dyn ValidationTask>`, the `ValidationTask` trait needs to be Send+Sync hence all its impl \n\nSee merge request dfinity-lab/public/ic!15022"
      },
      {
        "id": "eb39eefd3fe2760544b8b90dd80766e463b286b4",
        "date": "2023-10-05T00:49:32Z",
        "message": "feat: NNS1-2413 Call NeuronDataValidator::maybe_validate within heartbeat"
      },
      {
        "id": "62d3763d1e9aa640ed4ee643879537141f8c7e0d",
        "date": "2023-09-27T20:07:58Z",
        "message": "Merge branch 'jason/NNS1-2413-3' into 'master'\n\nfeat: NNS1-2413 Implement validation logic for neuron indexes\n\nOn `NeuronStore::new_for_test`: in most tests we would want to have a NeuronStore that initializes all the indexes correctly. It is not needed for production code because the indexes in the stable storage would be persisted.\n\nNext step: expose 'issue summary' as a `pub` method from the validator. \n\nSee merge request dfinity-lab/public/ic!14956"
      },
      {
        "id": "892af36a434ea4d8ba889b997aee37ada4fba582",
        "date": "2023-09-27T20:07:58Z",
        "message": "feat: NNS1-2413 Implement validation logic for neuron indexes"
      },
      {
        "id": "37bbfa69c8e780d00e653f4fccda07a6540a51c7",
        "date": "2023-09-25T19:32:48Z",
        "message": "Merge branch 'jason/NNS1-2520-2' into 'master'\n\nfeat: NNS1-2520 Apply neuron mutations based on migration progress\n\nCloses NNS1-2520 \n\nCloses NNS1-2520\n\nSee merge request dfinity-lab/public/ic!14887"
      },
      {
        "id": "05a81701d49b646335645004efbfd5132e529ae6",
        "date": "2023-09-25T19:32:47Z",
        "message": "feat: NNS1-2520 Apply neuron mutations based on migration progress"
      },
      {
        "id": "4414b017ad8203e457967ae1282b2d96e4ba6e4a",
        "date": "2023-09-21T23:37:16Z",
        "message": "Merge branch 'NNS1-2581' into 'master'\n\nfix(nns): Correctly enforce the minimum_icp_xdr_rate when rewarding node providers\n\nAt the surface, this change only requires a few lines of code in the `get_monthly_node_provider_rewards method`. However, properly testing it necessitated many more lines of changes. The changes can be summarized as follows:\n\n1. The methods `get_node_providers_monthly_xdr_rewards` and `get_average_icp_xdr_conversion_rate` were initially using the raw dfn core APIs instead of the governance's `env` trait. They have been updated to use the env trait to enable the mocking of inter-canister calls to properly test the core changes.\n2. The test `test_automated_node_provider_remuneration` had been disabled during the launch of the exchange rate canister due to the inability to backfill exchange rate data. To ensure that the refactors I was making would not break other code, I had to re-enable this test. To achieve this, I converted the integration test to use a StateMachine, which is a worthy refactor even when considered separately from the task at hand. This allowed all canisters to have their internal clocks accelerated when needed.\n\nCloses NNS1-2581 \n\nCloses NNS1-2581\n\nSee merge request dfinity-lab/public/ic!14913"
      },
      {
        "id": "bdd2068898a1f41b69e112755939885ba33d1b89",
        "date": "2023-09-20T21:06:11Z",
        "message": "Merge branch 'jason/NNS1-2520' into 'master'\n\nfeat: NNS1-2520 Internalize index migration status into neuron store so that neuron store can use it for deciding whether to apply neuron mutations\n\nNotes:\n1. In order for neuron store to determine whether an index is migrated, it needs to know the migration progress. Therefore, in this MR we make the progress internal to the neuron store.\n2. The migration progress is reported to the global state for every heartbeat. Theoretically it only needs to do so during upgrade (so success/failure state can be persisted), but this approach is not taken as the split-reassemble of a subfield of `migrations` seems overly complicated.\n\nNext [MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14887) will apply neuron mutations \n\nSee merge request dfinity-lab/public/ic!14813"
      },
      {
        "id": "20bbdc57bc34ee26feb9c551637b59ca18253900",
        "date": "2023-09-20T21:06:11Z",
        "message": "feat: NNS1-2520 Internalize index migration status into neuron store so that neuron store can use it for deciding whether to apply neuron mutations"
      },
      {
        "id": "c901dc220a70e6f963918f45fa2905664d7490cf",
        "date": "2023-09-20T16:19:19Z",
        "message": "Merge branch 'jason/NNS1-2599' into 'master'\n\nfeat: NNS1-2599 Run neuron indexes migration in a state machine test and observe effect\n\nCloses NNS1-2599 \n\nCloses NNS1-2599\n\nSee merge request dfinity-lab/public/ic!14787"
      },
      {
        "id": "be81e23265e1c4680cb6b148fa56daa5200d43f9",
        "date": "2023-09-20T16:19:19Z",
        "message": "feat: NNS1-2599 Run neuron indexes migration in a state machine test and observe effect"
      },
      {
        "id": "c0e47dd2f0ee68827e39d20130602eba67cedc1d",
        "date": "2023-09-14T00:41:55Z",
        "message": "Merge branch 'jason/fix-known-neuron-index-clobber' into 'master'\n\nfeat: Improve known neuron index removal logic\n\nReason: when something unexpected happens with indexes - it goes out of sync with primary data (e.g. removing known_neuron_name->neuron_id, when such a known neuron name does not exist, or worse, known_neuron_name exists for another neuron_id), when the update is related to neuron_id_1, any index update should NOT change anything about a different neuron_id_2. This is already the case for neuron subaccount index. This MR addresses this issue for known neuron index. \n\nSee merge request dfinity-lab/public/ic!14756"
      },
      {
        "id": "b1e0ae46f82781ff49b1908a209b7604cbc02556",
        "date": "2023-09-14T00:41:55Z",
        "message": "feat: Improve known neuron index removal logic"
      },
      {
        "id": "dbc5c3baf63e209f3e5c330f4c26e87968692fde",
        "date": "2023-09-13T16:18:03Z",
        "message": "Merge branch 'jason/NNS1-2507-3' into 'master'\n\nfeat: NNS1-2507 Implement StableNeuronIndexes::update_neuron with change detection\n\nNotes:\n- It might be controversial to use InternalError instead of more specific error types. Each case can be a separate enum case (NeuronStoreError) but I'm not sure if it's worth it\n- We currently don't have a good way of ensuring a neuron's account cannot be updated. We are validating it in StableNeuronIndexes::update_neuron to have a good vicinity (to the place where we need this assumption - subaccount index update) \n\nSee merge request dfinity-lab/public/ic!14725"
      },
      {
        "id": "ce655e3f651b050b786700ba45ff7cd15b9a85f1",
        "date": "2023-09-13T16:18:03Z",
        "message": "feat: NNS1-2507 Implement StableNeuronIndexes::update_neuron with change detection"
      },
      {
        "id": "739149c382ef42625c9646ee37ffc834070cfb6e",
        "date": "2023-09-11T20:54:31Z",
        "message": "Merge branch 'jason/NNS1-2490' into 'master'\n\nfix: NNS1-2490 Deduplicating principal ids from a neuron because controller can be hot key\n\nNote to reviewers: this method being updated is only used by building/updating heap indexes. In both cases the ordering should not matter. \n\nCloses NNS1-2490\n\nSee merge request dfinity-lab/public/ic!14724"
      },
      {
        "id": "625b0455924060b248dbe4b96097b344dc3da85f",
        "date": "2023-09-11T20:54:31Z",
        "message": "fix: NNS1-2490 Deduplicating principal ids from a neuron because controller can be hot key"
      },
      {
        "id": "ff56278490537b07d9201e1526ae0f3f843573c3",
        "date": "2023-09-09T00:28:20Z",
        "message": "Merge branch 'jason/NNS1-2507-2' into 'master'\n\nfeat: NNS1-2507 Implement StableNeuronIndexes::remove_neuron\n\n \n\nSee merge request dfinity-lab/public/ic!14700"
      },
      {
        "id": "b3075ca939e4a8e253e9a6a491fe843e019a62f9",
        "date": "2023-09-09T00:28:20Z",
        "message": "feat: NNS1-2507 Implement StableNeuronIndexes::remove_neuron"
      },
      {
        "id": "c7094ec38010a5e55cd49c3e001acba2f903e00c",
        "date": "2023-09-08T23:03:47Z",
        "message": "Merge branch 'jason/NNS1-2507-1' into 'master'\n\nfeat: NNS1-2507 Move add_neuron towards unified index access\n\nDefine a unified NeuronIndex trait for stable indexes and refactor add_neuron to iterating through the indexes. \n\nSee merge request dfinity-lab/public/ic!14640"
      },
      {
        "id": "3a74188a5cec38b40bddde9f7dbf35e4837b7147",
        "date": "2023-09-08T23:03:47Z",
        "message": "feat: NNS1-2507 Move add_neuron towards unified index access"
      },
      {
        "id": "523112999cead7d88561ab9fde6f758ccdca44c1",
        "date": "2023-09-08T17:49:49Z",
        "message": "Merge branch 'jason/NNS1-2413-2' into 'master'\n\nfeat: NNS1-2413 Implement a way to validate neuron indexes in different heartbeats\n\n \n\nSee merge request dfinity-lab/public/ic!14605"
      },
      {
        "id": "396c29c05a86916c480e33774884f7f047018e69",
        "date": "2023-09-08T17:49:47Z",
        "message": "feat: NNS1-2413 Implement a way to validate neuron indexes in different heartbeats"
      },
      {
        "id": "0121feff23386846ef2b53adf4ba374bb573141b",
        "date": "2023-09-07T00:47:01Z",
        "message": "Merge branch 'jason/NNS1-2413-1' into 'master'\n\nfeat: NNS1-2413 Define len() and contains() methods for indexes for validation\n\n \n\nSee merge request dfinity-lab/public/ic!14606"
      },
      {
        "id": "40451155e16a141835400298b46762c3d90d4a67",
        "date": "2023-09-07T00:47:01Z",
        "message": "feat: NNS1-2413 Define len() and contains() methods for indexes for validation"
      },
      {
        "id": "43c85184884cf0a23ecee4c28177b359579d0fea",
        "date": "2023-09-06T22:36:09Z",
        "message": "Merge branch 'jason/misc-heap-governance-data' into 'master'\n\nchore: Add unit tests for HeapGovernanceData to ensure split-reassemble equivalence\n\n \n\nSee merge request dfinity-lab/public/ic!14638"
      },
      {
        "id": "e5ae55bbc30209d68e11ab6bba73a79c9294f1f8",
        "date": "2023-09-06T22:36:09Z",
        "message": "chore: Add unit tests for HeapGovernanceData to ensure split-reassemble equivalence"
      },
      {
        "id": "b39b7a59e40def37e77c218b0d1e2da71d01596d",
        "date": "2023-08-31T17:29:23Z",
        "message": "Merge branch 'jason/NNS1-2499' into 'master'\n\nrefactor: NNS1-2499 Move index related methods into NeuronStore\n\nCloses NNS1-2499 \n\nCloses NNS1-2499\n\nSee merge request dfinity-lab/public/ic!14366"
      },
      {
        "id": "533fe8b02050dd23eed089813bdbb73a88246fb5",
        "date": "2023-08-31T17:29:23Z",
        "message": "refactor: NNS1-2499 Move index related methods into NeuronStore"
      },
      {
        "id": "daf0ca78bc2ff611ec8565d9738ab3d537ed9176",
        "date": "2023-08-28T23:47:01Z",
        "message": "Merge branch 'jason/NNS1-2409-2' into 'master'\n\nfeat: NNS1-2409 Add migration state and add neuron indexes based on the state\n\nThe goal is to create a way to build stable neuron indexes in batches, and it's done with 2 parts:\n\n* ([Last MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14292)): implement `StableNeuronIndexes and` `NeuronStore::batch_add_heap_neurons_to_stable_indexes`\n* (This MR): add migrations into `GovernanceProto` and call `batch_add_heap_neurons_to_stable_indexes` based on the migration progress\n\nNote: nothing is called in `run_periodic_tasks` yet, so there shouldn't be any behavior change causing security concern. \n\nSee merge request dfinity-lab/public/ic!14296"
      },
      {
        "id": "6de7e82bd56d1790fa3686ba4fd35ec32de8b455",
        "date": "2023-08-28T23:47:01Z",
        "message": "feat: NNS1-2409 Add migration state and add neuron indexes based on the state"
      },
      {
        "id": "d118a5aa9490d195267dbb8f82d00a8a5faefacb",
        "date": "2023-08-24T22:21:15Z",
        "message": "Merge branch 'jason/NNS1-2409-1' into 'master'\n\nfeat: NNS1-2409 Implement StableNeuronIndexes and batch_add_heap_neurons_to_stable_indexes\n\nThe goal is to create a way to build stable neuron indexes in batches, and it's done with 2 parts:\n- (This MR): implement `StableNeuronIndexes and` `NeuronStore::batch_add_heap_neurons_to_stable_indexes`\n- (Next MR): add migrations into `GovernanceProto` and call `batch_add_heap_neurons_to_stable_indexes` based on the migration progress\n\n\nNote that StableNeuronIndexes is made to be consistent with the styles of [StableNeuronStore](https://sourcegraph.com/github.com/dfinity/ic/-/blob/rs/nns/governance/src/storage/neurons.rs). \n\nSee merge request dfinity-lab/public/ic!14292"
      },
      {
        "id": "9be75b5d5b5ded227639abab1e0aaf3d5f5c2239",
        "date": "2023-08-24T22:21:15Z",
        "message": "feat: NNS1-2409 Implement StableNeuronIndexes and batch_add_heap_neurons_to_stable_indexes"
      },
      {
        "id": "1b1b6e2f868d12fa6e465668c9ac52fe647feae5",
        "date": "2023-08-17T00:24:38Z",
        "message": "Merge branch 'jason/NNS1-2474-1' into 'master'\n\nrefactor: NNS1-2474 Separate structs for GovernanceProto on the heap\n\nNotes for reviewers: \n\nOverall structure: NNS1-2474 changes the structure of `Governance` data on the heap (while it does not change its serialization format `GovernanceProto` (More details in [this section of the doc](https://docs.google.com/document/d/1iVNOfXTgQ0CzRuuT_4vLrllQzMmG6a7uluudc24EBjM/edit#heading=h.pd3a4gkxa42z))This is a relatively large refactoring effort, so it's broken down into a few steps to make reviews easier:\n1. (This MR) Define HeapGovernanceData and NeuronStore, do conversion between them and GovernanceProto, while everything else is mostly a replacement:`.proto.neurons` -> `.neuron_store.neurons`\n2. Move neuron-related methods in the `Governance` into `NeuronStore`\n3. Move `NeuronStore` into a new file and create a neuron sub-directory and move neuron-related components into it\n4. Refactor NNSState to contain `heap_data` and `neurons` separately, currently it still contains `governance_proto` just for parity - it makes less sense to use `governance_proto` to represent 'NNS State' since `GovernanceProto` represents heap memory, and 'NNS State' should contain stable memory too.\n\nChoices made in this MR:\n1. The concept 'database' in my mind tie too much to a traditional database usually outside of the application, which is not the case for data stored in heap/stable memory. 'NeuronStore' seems a better name.\n2. `HeapGovernanceData` seems to capture its meaning better than 'GovernanceProtoWithoutNeurons' or 'LiveGovernanceProto' - 'Proto' is avoided since it's not a `prost::Message` by design - it cannot be serialized.\n3. Test coverage: the following tests fail if I intentionally break pre_upgrade by not serializing proposals: //rs/nns/integration_tests:integration_tests_test_src/governance_memory_migration_test, //rs/nns/integration_tests:integration_tests_test_src/root, //rs/nns/integration_tests:integration_tests_test_src/reinstall_and_upgrade \n\nSee merge request dfinity-lab/public/ic!14028"
      },
      {
        "id": "63637476c1022b603825154844f04447b13f429e",
        "date": "2023-08-17T00:24:38Z",
        "message": "refactor: NNS1-2474 Separate structs for GovernanceProto on the heap"
      },
      {
        "id": "67680ed506195fc4cf3aecc2b46c9613d06ba5bb",
        "date": "2023-08-15T22:02:22Z",
        "message": "feat: NNS1-2411 Define a subaccount index for NNS Governance"
      },
      {
        "id": "52f89cf22c71be9874c5a48b65796e91a4ea5177",
        "date": "2023-08-15T18:44:57Z",
        "message": "Merge branch 'jason/NNS1-2479' into 'master'\n\nfeat: NNS1-2479 Change NNS Governance neurons from HashMap to BTreeMap\n\nWhy this is needed: a well-defined iteration order makes neuron/indexes migration easier - we can use a key as a marker for the migration progress. In general, any work on all neurons can be more easily batched with a BTreeMap.\n\nWhy this is safe:\n1. There is no change in .proto - their wire format should be the same\n2. The iteration order is different, but no code should be relying on HashMap iteration order anyway.\n3. Lookup time changed from O(1) -> O(log(n)), 20% penalty measure [here](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14105) \n\nSee merge request dfinity-lab/public/ic!14104"
      },
      {
        "id": "2dddc461c72b65a863b62e0429a907dfceef2fd1",
        "date": "2023-08-15T18:44:57Z",
        "message": "feat: NNS1-2479 Change NNS Governance neurons from HashMap to BTreeMap"
      },
      {
        "id": "b0e21bf7d26e2de1f1f6d99d34fb16c6363fa2ff",
        "date": "2023-08-07T23:03:19Z",
        "message": "Add Jason Zhu's credentials to testnet config"
      },
      {
        "id": "b266d83e1bd03f7bc95e8725b5e5c9035c4c67bf",
        "date": "2023-08-07T21:38:41Z",
        "message": "Merge branch 'jason/NNS1-2377-3' into 'master'\n\nfeat: NNS1-2377 Migrate more neuron access to new pattern\n\nNotes:\n- After this MR, the only accesses to proto.neurons will be: (1) 3 tasks split out from NNS1-2377 as they are more challenging: NNS1-2452, NNS1-2453, NNS1-2457 (2) heap index building, which will go away in NNS1-2414 (3) a handful of methods grouped together in the `Governance` struct (e.g. with_neuron(_mut)) which will bridge between stable/heap storage for neurons\n- `validate_default_followees` and `compute_cached_metrics` are only moved and have the accessors changed (`self.proto` -> `self`, `self.neurons.contains_key` -> `self.contains_neuron`)\n- `Neuron::neuron_managers` is changed from returning reference to returning copies, since we cannot obtain references into stable storage. It should be OK since there can only be 15 entries within the `Vec<NeuronId>` \n\nSee merge request dfinity-lab/public/ic!13899"
      },
      {
        "id": "f6e0c6f0d71f9acf37c55944598b3797ad2837c8",
        "date": "2023-08-07T21:38:41Z",
        "message": "feat: NNS1-2377 Migrate more neuron access to new pattern"
      },
      {
        "id": "3ae40dbfd32be70eff0941d7d793856d45c28fc0",
        "date": "2023-08-06T18:48:23Z",
        "message": "Merge branch 'jason/NNS1-2398-3' into 'master'\n\nrefactor: NNS1-2398 Address comments from !13701 to the neuron-principal index too\n\nSee !13701 \n\nSee merge request dfinity-lab/public/ic!13733"
      },
      {
        "id": "40a579a7087796fc211d0e5b77352f2e53865140",
        "date": "2023-08-06T18:48:22Z",
        "message": "refactor: NNS1-2398 Address comments from !13701 to the neuron-principal index too"
      },
      {
        "id": "674e16c8d7c442afe66adfd263974061dcfed51b",
        "date": "2023-08-04T23:19:18Z",
        "message": "Merge branch 'jason/NNS1-2411-1' into 'master'\n\nchore: NNS-2411 Consolidates Neuron::account->Subaccount logic in NNS Governance\n\nNotes:\n- Moving `subaccount_from_slice` to `impl Neuron`\n- We somehow treated '0 length' as Ok, but always do ok_or_else() on 0-length subaccount, which doesn't make sense. Perhaps there were other code paths treating empty subaccount as normal while those got removed?\n- In `Governance::validate` we are already validating every neuron has a valid `[u8; 32]` subaccount \n\nSee merge request dfinity-lab/public/ic!13909"
      },
      {
        "id": "a959cdc20ee5c382c688978ee09ea7d682d46e06",
        "date": "2023-08-04T23:19:18Z",
        "message": "chore: NNS-2411 Consolidates Neuron::account->Subaccount logic in NNS Governance"
      },
      {
        "id": "c04abf0b0be433961d45f2daa5f1c5c12228dfdf",
        "date": "2023-08-04T17:23:46Z",
        "message": "Merge branch 'jason/cleanup-with-neuron-modifier' into 'master'\n\nchore: Give the closure in with_neuron(_mut) more meaningful names\n\n \n\nSee merge request dfinity-lab/public/ic!13963"
      },
      {
        "id": "806ae1ceb3e49e31aaf96189c1f77781f2c4e077",
        "date": "2023-08-04T17:23:46Z",
        "message": "chore: Give the closure in with_neuron(_mut) more meaningful names"
      },
      {
        "id": "f15913f88b6eed7ee980547a4c0d55968a02a8a4",
        "date": "2023-08-03T21:25:09Z",
        "message": "Merge branch 'jason/NNS1-2412-2' into 'master'\n\nchore: NNS1-2412 Refactor NNS Governance - bring index update methods close together\n\n- Also removes a couple of unnecessary `pub`\n- Adding TODOs to make the future plan clearer \n\nSee merge request dfinity-lab/public/ic!13908"
      },
      {
        "id": "79cacb70c8660e5bd18c5b417d8273ada98e8151",
        "date": "2023-08-03T21:25:08Z",
        "message": "chore: NNS1-2412 Refactor NNS Governance - bring index update methods close together"
      },
      {
        "id": "d82838435fbae69b338cb6eebdf687ce550d0878",
        "date": "2023-08-03T21:21:46Z",
        "message": "Merge branch 'jason/NNS1-2412-1' into 'master'\n\nfeat: NNS1-2412 Define a known neuron index based on stable memory\n\nNotes to reviewer:\n1. Unlike the previous 2 indexes, there is not enough benefit to also define a heap version of the index since its interface is relatively simpler\n2. Also no need to define it in rs/nervous_system/governance, since SNS does not have known neurons \n\nSee merge request dfinity-lab/public/ic!13906"
      },
      {
        "id": "a2d1a7c230f3bd2ac36e25eb3fd7ef9cb31af3dc",
        "date": "2023-08-03T21:21:46Z",
        "message": "feat: NNS1-2412 Define a known neuron index based on stable memory"
      }
    ],
    "email": "jason.zhu@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 113,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 53,
    "fixes": 8,
    "feats": 37,
    "non_merge_commits": [
      {
        "id": "9852fcfb9796958d32ead2657794be8182af28fe",
        "date": "2023-11-23T03:48:00Z",
        "message": "fix: NNS1-2747 Commit node provider rewards minting result right after minting"
      },
      {
        "id": "08482a6a2ade293c01139e57408967a2bedfced4",
        "date": "2023-11-22T23:28:31Z",
        "message": "fix: Avoid calling with_neuron during validation"
      },
      {
        "id": "4b4040c7dbffcb64e5d2e669737b4b855fea50c6",
        "date": "2023-11-17T07:53:16Z",
        "message": "feat: NNS1-2416 Read inactive neuron from stable memory as source of truth"
      },
      {
        "id": "13e7d5e324f90dd8409a091b127429f478b6c5df",
        "date": "2023-11-16T20:58:44Z",
        "message": "feat: NNS1-2614 Let stable neuron store return NeuronStoreError"
      },
      {
        "id": "9c26d52b5ec13cd5aa62407e374ee08313266dde",
        "date": "2023-11-15T20:40:53Z",
        "message": "feat: NNS1-2719 Change NeuronDataValidator to only validate inactive status"
      },
      {
        "id": "0d9ae394865a3920ace4a0e40165484ca0788114",
        "date": "2023-11-15T19:15:04Z",
        "message": "feat: NNS1-2416 Clean up code related to copying inactive neuron assuming migration status is SUCCEEDED"
      },
      {
        "id": "629454b6946c8088ced49ae32e9630155f7fa826",
        "date": "2023-11-15T17:48:38Z",
        "message": "feat: NNS1-2416 Clean up is_copy_inactive_neurons_to_stable_memory_enabled assuming copying is done"
      },
      {
        "id": "bd9d7dd5dc232e4da4c9ae45cd3945bda34d84e3",
        "date": "2023-11-14T22:28:13Z",
        "message": "chore: Update precondition check for update_neuron"
      },
      {
        "id": "bc127c5b09d5c88cf732ce5e8be5b3634f0ddf7e",
        "date": "2023-11-14T01:54:05Z",
        "message": "chore: NNS1-2705 Clean up use_neuron_stable_indexes"
      },
      {
        "id": "50441680435656bb3e3c687c8791654bdad11bb1",
        "date": "2023-11-09T19:56:36Z",
        "message": "feat: NNS1-2551 Turn on inactive neuron copying"
      },
      {
        "id": "061a5c6ecadf550e871a71448aad0e407172ee4f",
        "date": "2023-11-09T19:26:22Z",
        "message": "feat: Remove inactive neuron cardinality validation"
      },
      {
        "id": "55c62cee3869891a92502eeb879aa962c4cde37a",
        "date": "2023-11-09T04:34:50Z",
        "message": "chore: NNS1-2510 Document the invariant regarding active/inactive neurons"
      },
      {
        "id": "74c51690ff4505d5537f08a842ceb316ecff8c4e",
        "date": "2023-11-08T23:55:19Z",
        "message": "feat: NNS1-2704 Clean up neuron indexes migration"
      },
      {
        "id": "f2a7e93a18189bae3b530051705b25bce3f2f4f7",
        "date": "2023-11-08T01:43:24Z",
        "message": "feat: NNS1-2622 Change followees storage schema to allow duplicates"
      },
      {
        "id": "8daa989e765bc21de914b699779f823cbacb0793",
        "date": "2023-11-07T22:11:30Z",
        "message": "feat: NNS1-2618 Implement NeuronStore logic to add/remove neurons from stable neuron store if needed"
      },
      {
        "id": "7214e3a50c20f16880767e0aa7f7b19b896fe9e0",
        "date": "2023-11-02T22:16:16Z",
        "message": "feat: NNS-2414 Start using subaccount, principal and known neuron indexes in stable storage"
      },
      {
        "id": "81d7b9667d8a67cdaf07648bf78386ad5a368aa8",
        "date": "2023-11-02T20:35:24Z",
        "message": "feat: NNS1-2696 Allow stable structure objects to be reset for testing"
      },
      {
        "id": "1ed725440fcbf17d6dbe307e7f9a9a5b6578b0bc",
        "date": "2023-11-02T17:03:46Z",
        "message": "feat: NNS1-2414 Differentiate new() and restore() for NNS Governance and its NeuronStore"
      },
      {
        "id": "d7c3191f5a5cd87b1338a56db26ec0c62564006d",
        "date": "2023-10-27T00:13:18Z",
        "message": "chore: Add a comment about cardinality and range validator"
      },
      {
        "id": "31723f22f3ec6d88cc1dc3948b54f81459641f43",
        "date": "2023-10-26T22:35:01Z",
        "message": "fix: NNS1-2681 Fix the Buf::advance overflow issue for SNS Governance/Root"
      },
      {
        "id": "8e4aa083e1be79061728f0bffe4acf046ca05861",
        "date": "2023-10-26T01:08:09Z",
        "message": "chore: Change swap to call the nervous_system_common API to get stable memory size"
      },
      {
        "id": "3b1d18bdaca5cbb067d31b963db5888353e57d4c",
        "date": "2023-10-25T23:41:47Z",
        "message": "refactor: Move existing feature flags for migrations and define a new flag"
      },
      {
        "id": "c9489b79ca106661523e3c14921decf28cb2aefd",
        "date": "2023-10-25T22:41:23Z",
        "message": "fix: Fix an issue preventing NNS Governance from rolling back to an older version"
      },
      {
        "id": "c5da765b887ecc4b02af9d6b9610c551b317f765",
        "date": "2023-10-23T09:54:12Z",
        "message": "chore: Disable neuron copy validator before copying inactive neuron is turned on"
      },
      {
        "id": "671d9268206d127b5133b2f38ea7c82cc157569e",
        "date": "2023-10-20T23:58:02Z",
        "message": "fix: Fix neuron following index cardinality calculation in validation"
      },
      {
        "id": "b4fe75a8e353ef970a8318a37b1ad4bb7348789e",
        "date": "2023-10-20T00:35:57Z",
        "message": "feat: Reserve 4GiB for UPGRADES_MEMORY"
      },
      {
        "id": "54665574a8760b7710a9f1d55187c5c88e6e7117",
        "date": "2023-10-19T21:38:11Z",
        "message": "feat: NNS1-2417 Turn neuron_stable_indexes_building_is_enabled to true"
      },
      {
        "id": "2d655b4c28e54616c311511b810cb75390e327bd",
        "date": "2023-10-19T20:25:48Z",
        "message": "feat: NNS1-2644 Change neuron indexes migration state machine test to check validation and involve neuron operations"
      },
      {
        "id": "ad1e198d67702f74edeadcf35d55d3e639568e12",
        "date": "2023-10-19T18:13:59Z",
        "message": "fix: Use saturating add so that neuron migration does not wrap around"
      },
      {
        "id": "2c9d9108f3a293b8883c47763ce4cf8e79f2edd9",
        "date": "2023-10-19T16:26:01Z",
        "message": "feat: NNS1-2417 Tune batch sizes for neuron indexes migration and validation"
      },
      {
        "id": "0cf7f9be0eece49572b67ac52c224826b5e5463d",
        "date": "2023-10-18T23:45:21Z",
        "message": "feat: Check heap growth potential before running validations"
      },
      {
        "id": "02847da7f46a3293716a9f5b7fc9cc3f5c0d3760",
        "date": "2023-10-17T20:11:14Z",
        "message": "Increase recovered_mainnet_nns timeout to 1h"
      },
      {
        "id": "5df24ab6a1494bbfd4d150245e2afa41c75df3cb",
        "date": "2023-10-16T19:19:30Z",
        "message": "fix: Fix a bug with unstake maturity causing high number of instructions per heartbeat"
      },
      {
        "id": "225a7ec6270768d10b126f3611be9e7e153d9276",
        "date": "2023-10-11T16:44:55Z",
        "message": "feat: NNS1-2482 Expose neuron data validation summary through a canister query method"
      },
      {
        "id": "eb39eefd3fe2760544b8b90dd80766e463b286b4",
        "date": "2023-10-05T00:49:32Z",
        "message": "feat: NNS1-2413 Call NeuronDataValidator::maybe_validate within heartbeat"
      },
      {
        "id": "892af36a434ea4d8ba889b997aee37ada4fba582",
        "date": "2023-09-27T20:07:58Z",
        "message": "feat: NNS1-2413 Implement validation logic for neuron indexes"
      },
      {
        "id": "05a81701d49b646335645004efbfd5132e529ae6",
        "date": "2023-09-25T19:32:47Z",
        "message": "feat: NNS1-2520 Apply neuron mutations based on migration progress"
      },
      {
        "id": "20bbdc57bc34ee26feb9c551637b59ca18253900",
        "date": "2023-09-20T21:06:11Z",
        "message": "feat: NNS1-2520 Internalize index migration status into neuron store so that neuron store can use it for deciding whether to apply neuron mutations"
      },
      {
        "id": "be81e23265e1c4680cb6b148fa56daa5200d43f9",
        "date": "2023-09-20T16:19:19Z",
        "message": "feat: NNS1-2599 Run neuron indexes migration in a state machine test and observe effect"
      },
      {
        "id": "b1e0ae46f82781ff49b1908a209b7604cbc02556",
        "date": "2023-09-14T00:41:55Z",
        "message": "feat: Improve known neuron index removal logic"
      },
      {
        "id": "ce655e3f651b050b786700ba45ff7cd15b9a85f1",
        "date": "2023-09-13T16:18:03Z",
        "message": "feat: NNS1-2507 Implement StableNeuronIndexes::update_neuron with change detection"
      },
      {
        "id": "625b0455924060b248dbe4b96097b344dc3da85f",
        "date": "2023-09-11T20:54:31Z",
        "message": "fix: NNS1-2490 Deduplicating principal ids from a neuron because controller can be hot key"
      },
      {
        "id": "b3075ca939e4a8e253e9a6a491fe843e019a62f9",
        "date": "2023-09-09T00:28:20Z",
        "message": "feat: NNS1-2507 Implement StableNeuronIndexes::remove_neuron"
      },
      {
        "id": "3a74188a5cec38b40bddde9f7dbf35e4837b7147",
        "date": "2023-09-08T23:03:47Z",
        "message": "feat: NNS1-2507 Move add_neuron towards unified index access"
      },
      {
        "id": "396c29c05a86916c480e33774884f7f047018e69",
        "date": "2023-09-08T17:49:47Z",
        "message": "feat: NNS1-2413 Implement a way to validate neuron indexes in different heartbeats"
      },
      {
        "id": "40451155e16a141835400298b46762c3d90d4a67",
        "date": "2023-09-07T00:47:01Z",
        "message": "feat: NNS1-2413 Define len() and contains() methods for indexes for validation"
      },
      {
        "id": "e5ae55bbc30209d68e11ab6bba73a79c9294f1f8",
        "date": "2023-09-06T22:36:09Z",
        "message": "chore: Add unit tests for HeapGovernanceData to ensure split-reassemble equivalence"
      },
      {
        "id": "533fe8b02050dd23eed089813bdbb73a88246fb5",
        "date": "2023-08-31T17:29:23Z",
        "message": "refactor: NNS1-2499 Move index related methods into NeuronStore"
      },
      {
        "id": "6de7e82bd56d1790fa3686ba4fd35ec32de8b455",
        "date": "2023-08-28T23:47:01Z",
        "message": "feat: NNS1-2409 Add migration state and add neuron indexes based on the state"
      },
      {
        "id": "9be75b5d5b5ded227639abab1e0aaf3d5f5c2239",
        "date": "2023-08-24T22:21:15Z",
        "message": "feat: NNS1-2409 Implement StableNeuronIndexes and batch_add_heap_neurons_to_stable_indexes"
      },
      {
        "id": "63637476c1022b603825154844f04447b13f429e",
        "date": "2023-08-17T00:24:38Z",
        "message": "refactor: NNS1-2474 Separate structs for GovernanceProto on the heap"
      },
      {
        "id": "67680ed506195fc4cf3aecc2b46c9613d06ba5bb",
        "date": "2023-08-15T22:02:22Z",
        "message": "feat: NNS1-2411 Define a subaccount index for NNS Governance"
      },
      {
        "id": "2dddc461c72b65a863b62e0429a907dfceef2fd1",
        "date": "2023-08-15T18:44:57Z",
        "message": "feat: NNS1-2479 Change NNS Governance neurons from HashMap to BTreeMap"
      },
      {
        "id": "b0e21bf7d26e2de1f1f6d99d34fb16c6363fa2ff",
        "date": "2023-08-07T23:03:19Z",
        "message": "Add Jason Zhu's credentials to testnet config"
      },
      {
        "id": "f6e0c6f0d71f9acf37c55944598b3797ad2837c8",
        "date": "2023-08-07T21:38:41Z",
        "message": "feat: NNS1-2377 Migrate more neuron access to new pattern"
      },
      {
        "id": "40a579a7087796fc211d0e5b77352f2e53865140",
        "date": "2023-08-06T18:48:22Z",
        "message": "refactor: NNS1-2398 Address comments from !13701 to the neuron-principal index too"
      },
      {
        "id": "a959cdc20ee5c382c688978ee09ea7d682d46e06",
        "date": "2023-08-04T23:19:18Z",
        "message": "chore: NNS-2411 Consolidates Neuron::account->Subaccount logic in NNS Governance"
      },
      {
        "id": "806ae1ceb3e49e31aaf96189c1f77781f2c4e077",
        "date": "2023-08-04T17:23:46Z",
        "message": "chore: Give the closure in with_neuron(_mut) more meaningful names"
      },
      {
        "id": "79cacb70c8660e5bd18c5b417d8273ada98e8151",
        "date": "2023-08-03T21:25:08Z",
        "message": "chore: NNS1-2412 Refactor NNS Governance - bring index update methods close together"
      },
      {
        "id": "a2d1a7c230f3bd2ac36e25eb3fd7ef9cb31af3dc",
        "date": "2023-08-03T21:21:46Z",
        "message": "feat: NNS1-2412 Define a known neuron index based on stable memory"
      }
    ],
    "line_additions": 8568,
    "line_deletions": 5132,
    "lines_effected_total": 13700,
    "rel_comm_add": 45,
    "rel_comm_del": 34,
    "rel_comm_total": 50
  },
  {
    "login": "stiegerc",
    "id": 7004483,
    "totalContributions": 161,
    "github": "https://github.com/stiegerc",
    "commits": [
      {
        "id": "bf9533b643666979af58080c204e1c3c065d0d15",
        "date": "2023-11-10T17:50:21Z",
        "message": "Merge branch 'fix_blockmaker_metrics_pruning_logic' into 'master'\n\nFix: Fix BlockmakerMetricsTimeSeries pruning logic\n\nThe pruning now happens just before a new snapshot is inserted. If a node ID's stats are equal in this new snapshot compared to the previous snapshot, it is pruned. Since such a node ID is now missing from at least one snapshot (even if it reappears right after pruning) and the pruning process only ever involves two consecutive snapshots, it is no longer possible to have a pruning process mixing up two different series (i.e. with a restart somewhere in between).\n\nPreviously, the pruning process was only triggered once the metrics reached full capacity, but since pruning no longer involves the first and last element, this requirement is dropped. As a consequence, it was also possible to simplify both the production code and the pruning test. \n\nSee merge request dfinity-lab/public/ic!16018"
      },
      {
        "id": "cc6c6e08a766b7e0509121c75f6f7946c467cb9a",
        "date": "2023-11-10T17:50:21Z",
        "message": "Fix: Fix BlockmakerMetricsTimeSeries pruning logic"
      },
      {
        "id": "3d2cded5751b72fcdec6ecf26639c27864a66f43",
        "date": "2023-11-09T19:21:05Z",
        "message": "Merge branch 'add_aggregated_node_metrics_to_state' into 'master'\n\nFeat: [MR-516] Add aggregated node metrics to state\n\n \n\nSee merge request dfinity-lab/public/ic!15556"
      },
      {
        "id": "72930ba9d4d045c47d8daf93d54fef54136b96a2",
        "date": "2023-11-09T19:21:04Z",
        "message": "Feat: [MR-516] Add aggregated node metrics to state"
      },
      {
        "id": "b897d4ab20ed17da5b29e9034e596f98142dc5df",
        "date": "2023-11-09T12:18:07Z",
        "message": "Merge branch 'fix_output_queue_proptest' into 'master'\n\nFix: Fixes a proptest that was missing it's test clause.\n\nThe test was essentially attempting to verify the production's logic with itself. It was bugged, which wasn't noticed due to the missing `#[test]` clause.\n\nThe test is kept conceptually as it was before except there is an additional `prop_assert!` for the invariants at the bottom to ensure the test won't just silently pass if the production code is modified in such a way that the invariants are violated and the implicit check for them was removed at the bottom of `OutputQueue::push_request()`. \n\nSee merge request dfinity-lab/public/ic!15993"
      },
      {
        "id": "f0cd7b0e589d4f96e5bb4dab4085993d1acd2b35",
        "date": "2023-11-09T12:18:07Z",
        "message": "Fix: Fixes a proptest that was missing it's test clause."
      },
      {
        "id": "2ce19a0b5227f25fe36571a7852d213d16d93380",
        "date": "2023-10-07T00:11:05Z",
        "message": "Merge branch 'rotate_ssh_key' into 'master'\n\nRotate SSH key for Christian Stieger\n\n \n\nSee merge request dfinity-lab/public/ic!15283"
      },
      {
        "id": "e2bb6b6c529b2a4d0353245bfd6a50dc09dcfbd2",
        "date": "2023-10-07T00:11:04Z",
        "message": "Rotate SSH key for Christian Stieger"
      },
      {
        "id": "c003706ecc4f33698f641f471970ea301a8f6393",
        "date": "2023-09-18T14:57:24Z",
        "message": "Merge branch 'fix_typos_in_crypto_code' into 'master'\n\nChore: Fix typos in crypto code\n\nDone using [this spellchecker](https://github.com/crate-ci/typos). \n\nSee merge request dfinity-lab/public/ic!14812"
      },
      {
        "id": "dd0c4284c0b6e306a09e58c4cf167d7de7575560",
        "date": "2023-09-18T14:57:23Z",
        "message": "Chore: Fix typos in crypto code"
      },
      {
        "id": "8b3c322f9ff41c3ff1c3fd4e3dea5549a0e66434",
        "date": "2023-09-18T14:21:21Z",
        "message": "Merge branch 'fix_remaining_typos_in_rs_folder' into 'master'\n\nChore: Fix remaining typos in ic/rs folder.\n\nThis is the last MR fixing typos. \n\nSee merge request dfinity-lab/public/ic!14822"
      },
      {
        "id": "f70aae269cb81b7f662445ca8a8c290b5683960a",
        "date": "2023-09-18T14:21:21Z",
        "message": "Chore: Fix remaining typos in ic/rs folder."
      },
      {
        "id": "0162431cbf2106369323bce6e9b8d73b9ef39b41",
        "date": "2023-09-18T13:19:52Z",
        "message": "Merge branch 'fix_typos_in_networking_code' into 'master'\n\nChore: Fix typos in networking code and `rs/tests`.\n\nDone using [this spellchecker](https://github.com/crate-ci/typos). \n\nSee merge request dfinity-lab/public/ic!14800"
      },
      {
        "id": "c58cdb65bf34ccbeb75a6d3a8e9246ab8cec1421",
        "date": "2023-09-18T13:19:50Z",
        "message": "Chore: Fix typos in networking code and `rs/tests`."
      },
      {
        "id": "e1fa752e85e8c8646d041d0e0322b54a0974ae13",
        "date": "2023-09-18T10:45:01Z",
        "message": "Merge branch 'fix_typos_in_runtime_code' into 'master'\n\nChore: Fix typos in runtime, boundary node and node code\n\n \n\nSee merge request dfinity-lab/public/ic!14819"
      },
      {
        "id": "faa61b58976f3fd5d1e5958957871d61616c3060",
        "date": "2023-09-18T10:45:01Z",
        "message": "Chore: Fix typos in runtime, boundary node and node code"
      },
      {
        "id": "8b3323c1e0e819bdea4bcb196451ca304cbbf55f",
        "date": "2023-09-14T22:32:59Z",
        "message": "Chore: Fix typos in nns code"
      },
      {
        "id": "47091553fad2abcc234cb84614f72fed50057d83",
        "date": "2023-09-14T11:46:53Z",
        "message": "Merge branch 'fix_typos_in_consensus_code' into 'master'\n\nChore: Fix typos in consensus code.\n\nFixes typos in subfolders of `rs` that have at least one file in them belonging to the consensus team (according to CODEOWNERS). \n\nSee merge request dfinity-lab/public/ic!14797"
      },
      {
        "id": "6537d77cd0b51581caf0084cbce670eec2ab0614",
        "date": "2023-09-14T11:46:52Z",
        "message": "Chore: Fix typos in consensus code."
      },
      {
        "id": "db4058499e924199e6a403563735fdc1c7f88a6f",
        "date": "2023-09-13T15:21:54Z",
        "message": "Merge branch 'fix_typos_in_ic_folder' into 'master'\n\nChore: [MR-498] Fix typos in files in ic folder (without ic/rs)\n\nI gave [this spellchecker](https://github.com/crate-ci/typos) a try. It creates a fair bit of false positives, but this is what it found in the `ic` folder. \n\nSee merge request dfinity-lab/public/ic!14704"
      },
      {
        "id": "111c4b8602641be32cdc5905ad316e6fd8454f40",
        "date": "2023-09-13T15:21:53Z",
        "message": "Chore: [MR-498] Fix typos in files in ic folder (without ic/rs)"
      },
      {
        "id": "5dbf93729e8c164a134d4aeaeddb190617375151",
        "date": "2023-09-13T09:54:54Z",
        "message": "Merge branch 'fix_typos_in_execution_code' into 'master'\n\nChore: Fix typos in execution code\n\nFixes typos in 'execution code', i.e. in all folders in `ic/rs` that have at least one file belonging to the execution team (according to CODEOWNERS).\n\nOnly what [this spellchecker](https://github.com/crate-ci/typos) was able to find. \n\nSee merge request dfinity-lab/public/ic!14717"
      },
      {
        "id": "3d2744747080b7ccb06ba8d4e620677c55804d7f",
        "date": "2023-09-13T09:54:54Z",
        "message": "Chore: Fix typos in execution code"
      },
      {
        "id": "c3b0d6941fd3cc9eb42141fd353dccdcc1c75a2b",
        "date": "2023-09-11T07:55:28Z",
        "message": "Merge branch 'fix_typos_in_mr_code' into 'master'\n\nFix: Typos in MR code.\n\nGave [typos](https://github.com/crate-ci/typos) a spin. \n\nSee merge request dfinity-lab/public/ic!14706"
      },
      {
        "id": "eea9ad6f029c0e21052373cb9f943f1cb5af3964",
        "date": "2023-09-11T07:55:28Z",
        "message": "Fix: Typos in MR code."
      },
      {
        "id": "472134b6682d1b84d6ecd7368784bf3c3340c55e",
        "date": "2023-09-07T15:34:55Z",
        "message": "Merge branch 'more_concise_traverse_tests' into 'master'\n\nTest: [MR-492] Extend traverse tests in canonical state to encompass all supported certification versions.\n\n \n\nSee merge request dfinity-lab/public/ic!14607"
      },
      {
        "id": "bdfa2915e9b07101c253850eeef2e2cdd798cb90",
        "date": "2023-09-07T15:34:55Z",
        "message": "Test: [MR-492] Extend traverse tests in canonical state to encompass all supported certification versions."
      },
      {
        "id": "dcc5badecf0f3ce3723c9b32f0a71d7673e07836",
        "date": "2023-09-06T11:10:48Z",
        "message": "Merge branch 'fix_some_engrish' into 'master'\n\nFix: Removes some bad spelling.\n\n \n\nSee merge request dfinity-lab/public/ic!14616"
      },
      {
        "id": "4c04053ff96b369830a10c51790444b4d72c1250",
        "date": "2023-09-06T11:10:48Z",
        "message": "Fix: Removes some bad spelling."
      },
      {
        "id": "2039a8708883912fb46ec8947c174b7b487ffb48",
        "date": "2023-09-05T11:43:23Z",
        "message": "Merge branch 'bump_certification_version_for_request_metadata' into 'master'\n\nFeat: Bump certification version to V14\n\n \n\nSee merge request dfinity-lab/public/ic!14410"
      },
      {
        "id": "38d7961b96b7de645494766e5175e49661e998ed",
        "date": "2023-09-05T11:43:23Z",
        "message": "Feat: Bump certification version to V14"
      },
      {
        "id": "58b363b173b8efa5164f5c3ead8cc1e7d9be027b",
        "date": "2023-08-29T08:31:00Z",
        "message": "Merge branch 'fix_debug_printer_for_request' into 'master'\n\nFix: Fixes the debug printer for `Request`.\n\nCurly brace is in the wrong place. \n\nSee merge request dfinity-lab/public/ic!14424"
      },
      {
        "id": "aa37a9cbc3ce93bf129c13c6c62a91005795252c",
        "date": "2023-08-29T08:30:59Z",
        "message": "Fix: Fixes the debug printer for `Request`."
      },
      {
        "id": "bd9a11823b0e675e2a168cabcfd7df06318e4add",
        "date": "2023-08-25T13:20:12Z",
        "message": "Merge branch 'fix_typo_in_subnet_call_context' into 'master'\n\nChore: Fix a typo in `SubnetCallContext`.\n\n \n\nSee merge request dfinity-lab/public/ic!14391"
      },
      {
        "id": "faaa49de7ad9fdcefdc9f9d781d9a8e5ba80d2ac",
        "date": "2023-08-25T13:20:12Z",
        "message": "Chore: Fix a typo in `SubnetCallContext`."
      },
      {
        "id": "b445bba62ac51208993a4f04b9136868a55fd9bd",
        "date": "2023-08-23T19:23:51Z",
        "message": "Merge branch 'add_call_graph_depth_field_for_requests' into 'master'\n\nFeat: MR-485 Define optional `metadata` field in `Request`, not yet populated.\n\nThis adds a new field `metadata` to `Request`, which is intended as a container for current and future metadata. For now it holds `call_tree_depth`, `call_tree_start_time` and `call_subtree_deadline`.\n\nDue to the rather cumbersome rollout nature of adding new fields to messages, these fields are what we think could be useful in the foreseeable future. The next step would be to have them set on inception and then use them for metrics to provide a clearer picture as to which steps should be undertaken downstream. \n\nSee merge request dfinity-lab/public/ic!13591"
      },
      {
        "id": "53fd83117aaeab9aa41cd57e98434dcc76f530ce",
        "date": "2023-08-23T19:23:51Z",
        "message": "Feat: MR-485 Define optional `metadata` field in `Request`, not yet populated."
      },
      {
        "id": "2ebea9fe7dea38cf9e1a0d7a63cc147acad184d1",
        "date": "2023-08-03T13:14:13Z",
        "message": "Merge branch 'fix_typo_in_bitcoin' into 'master'\n\nChore: Fixes a typo\n\n \n\nSee merge request dfinity-lab/public/ic!13930"
      },
      {
        "id": "37a63b3cd4f6dd888c012b8515be9d92c10ab564",
        "date": "2023-08-03T13:14:12Z",
        "message": "Chore: Fixes a typo"
      }
    ],
    "email": "christian.stieger@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 39,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 19,
    "fixes": 15,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "cc6c6e08a766b7e0509121c75f6f7946c467cb9a",
        "date": "2023-11-10T17:50:21Z",
        "message": "Fix: Fix BlockmakerMetricsTimeSeries pruning logic"
      },
      {
        "id": "72930ba9d4d045c47d8daf93d54fef54136b96a2",
        "date": "2023-11-09T19:21:04Z",
        "message": "Feat: [MR-516] Add aggregated node metrics to state"
      },
      {
        "id": "f0cd7b0e589d4f96e5bb4dab4085993d1acd2b35",
        "date": "2023-11-09T12:18:07Z",
        "message": "Fix: Fixes a proptest that was missing it's test clause."
      },
      {
        "id": "e2bb6b6c529b2a4d0353245bfd6a50dc09dcfbd2",
        "date": "2023-10-07T00:11:04Z",
        "message": "Rotate SSH key for Christian Stieger"
      },
      {
        "id": "dd0c4284c0b6e306a09e58c4cf167d7de7575560",
        "date": "2023-09-18T14:57:23Z",
        "message": "Chore: Fix typos in crypto code"
      },
      {
        "id": "f70aae269cb81b7f662445ca8a8c290b5683960a",
        "date": "2023-09-18T14:21:21Z",
        "message": "Chore: Fix remaining typos in ic/rs folder."
      },
      {
        "id": "c58cdb65bf34ccbeb75a6d3a8e9246ab8cec1421",
        "date": "2023-09-18T13:19:50Z",
        "message": "Chore: Fix typos in networking code and `rs/tests`."
      },
      {
        "id": "faa61b58976f3fd5d1e5958957871d61616c3060",
        "date": "2023-09-18T10:45:01Z",
        "message": "Chore: Fix typos in runtime, boundary node and node code"
      },
      {
        "id": "8b3323c1e0e819bdea4bcb196451ca304cbbf55f",
        "date": "2023-09-14T22:32:59Z",
        "message": "Chore: Fix typos in nns code"
      },
      {
        "id": "6537d77cd0b51581caf0084cbce670eec2ab0614",
        "date": "2023-09-14T11:46:52Z",
        "message": "Chore: Fix typos in consensus code."
      },
      {
        "id": "111c4b8602641be32cdc5905ad316e6fd8454f40",
        "date": "2023-09-13T15:21:53Z",
        "message": "Chore: [MR-498] Fix typos in files in ic folder (without ic/rs)"
      },
      {
        "id": "3d2744747080b7ccb06ba8d4e620677c55804d7f",
        "date": "2023-09-13T09:54:54Z",
        "message": "Chore: Fix typos in execution code"
      },
      {
        "id": "eea9ad6f029c0e21052373cb9f943f1cb5af3964",
        "date": "2023-09-11T07:55:28Z",
        "message": "Fix: Typos in MR code."
      },
      {
        "id": "bdfa2915e9b07101c253850eeef2e2cdd798cb90",
        "date": "2023-09-07T15:34:55Z",
        "message": "Test: [MR-492] Extend traverse tests in canonical state to encompass all supported certification versions."
      },
      {
        "id": "4c04053ff96b369830a10c51790444b4d72c1250",
        "date": "2023-09-06T11:10:48Z",
        "message": "Fix: Removes some bad spelling."
      },
      {
        "id": "38d7961b96b7de645494766e5175e49661e998ed",
        "date": "2023-09-05T11:43:23Z",
        "message": "Feat: Bump certification version to V14"
      },
      {
        "id": "aa37a9cbc3ce93bf129c13c6c62a91005795252c",
        "date": "2023-08-29T08:30:59Z",
        "message": "Fix: Fixes the debug printer for `Request`."
      },
      {
        "id": "faaa49de7ad9fdcefdc9f9d781d9a8e5ba80d2ac",
        "date": "2023-08-25T13:20:12Z",
        "message": "Chore: Fix a typo in `SubnetCallContext`."
      },
      {
        "id": "53fd83117aaeab9aa41cd57e98434dcc76f530ce",
        "date": "2023-08-23T19:23:51Z",
        "message": "Feat: MR-485 Define optional `metadata` field in `Request`, not yet populated."
      },
      {
        "id": "37a63b3cd4f6dd888c012b8515be9d92c10ab564",
        "date": "2023-08-03T13:14:12Z",
        "message": "Chore: Fixes a typo"
      }
    ],
    "line_additions": 5744,
    "line_deletions": 2279,
    "lines_effected_total": 8023,
    "rel_comm_add": 14,
    "rel_comm_del": 12,
    "rel_comm_total": 16
  },
  {
    "login": "pakhomov-dfinity",
    "id": 111274088,
    "totalContributions": 156,
    "github": "https://github.com/pakhomov-dfinity",
    "commits": [
      {
        "id": "2d057c3ce02cd42f9d579a156675fb5cacc0bd8a",
        "date": "2023-11-09T15:08:48Z",
        "message": "Merge branch 'pakhomov/manifest_inodes' into 'master'\n\nfeat: Use inode to account for unchanged files in incremental manifest computation\n\nWe can reuse hashes of read-only files, the caveat is we need to be sure we didn't remove and recreate them. Instead of trying to figure out wether we did, we can leverage the fact that we hard-link them from the previous checkpoint to the new one (via tip). If a file in old checkpoint and in new checkpoint points to the same data, we may skip rehashing. The way to check if two files are hard links to the same data is checking their inode number + device number to be extra sure they are on the same filesystem. \n\nSee merge request dfinity-lab/public/ic!15834"
      },
      {
        "id": "815b0a8b1e70ff8d1a05334a0b38c553cf0070e6",
        "date": "2023-11-09T15:08:48Z",
        "message": "feat: Use inode to account for unchanged files in incremental manifest computation"
      },
      {
        "id": "b3168e25fce9e42deae2dbcb505fb1fd48c315ab",
        "date": "2023-10-17T12:44:48Z",
        "message": "Merge branch 'pakhomov/state_manager_check_tip_thread' into 'master'\n\nfix: Check liveness of the Tip thread in debug\n\nIf the Tip thread panics, the tests may succeed unless they try to communicate with it. Which leads to tests that fail a debug assertion, print a panic and succeed. Now we check for liveness of the Tip thread in StateManager Drop \n\nSee merge request dfinity-lab/public/ic!15418"
      },
      {
        "id": "7681824292c9b93773bcaac838f0ed37104e3d7e",
        "date": "2023-10-17T12:44:48Z",
        "message": "fix: Check liveness of the Tip thread in debug"
      },
      {
        "id": "9a3e702a6bb59479a3c4ee1b134421af556f0888",
        "date": "2023-09-28T16:56:14Z",
        "message": "Merge branch 'pakhomov/tip_debug_assertions' into 'master'\n\nfix: Use cfg(debug_assertions) instead of non-existing cfg(debug_assert)\n\n \n\nSee merge request dfinity-lab/public/ic!15082"
      },
      {
        "id": "cd945b867fef4b828e290de0865edb1d745a7336",
        "date": "2023-09-28T16:56:14Z",
        "message": "fix: Use cfg(debug_assertions) instead of non-existing cfg(debug_assert)"
      },
      {
        "id": "479a06bdd0e74e8d4d64e733156ce79a365ad93f",
        "date": "2023-09-12T13:29:43Z",
        "message": "Merge branch 'stschnei/skip_flushing_flaky_test' into 'master'\n\ntest: Fix flaky test\n\nThis fixes a potientially flaky test in a test for the skipping of\nflushes to disk. In this test, we expect no skips to happen. In order to\nguarantee that, we however need to wait for each flush before triggering\nthe next. \n\nSee merge request dfinity-lab/public/ic!14737"
      },
      {
        "id": "5bd7fa05178486429012bc339bad49537debcadb",
        "date": "2023-08-17T12:34:58Z",
        "message": "Merge branch 'pakohmov/syncfs_duration_farm' into 'master'\n\nfeart: [MR-471] Syncfs Panel for Farm\n\n \n\nSee merge request dfinity-lab/public/ic!14203"
      },
      {
        "id": "a3659818850358ed63f9a2152fd69c2379cbe22f",
        "date": "2023-08-17T12:34:58Z",
        "message": "feart: [MR-471] Syncfs Panel for Farm"
      },
      {
        "id": "736c901206ff5b6b06b251f99861c8a78ad58d4e",
        "date": "2023-08-17T08:56:49Z",
        "message": "Merge branch 'pakhomov/checkpoint_time_duration_farm' into 'master'\n\nfeat: Checkpoint Step Duration for farm [MR-471]\n\n \n\nSee merge request dfinity-lab/public/ic!14057"
      },
      {
        "id": "07981217ad2744075e4d67283b1e719c266a708b",
        "date": "2023-08-17T08:56:48Z",
        "message": "feat: Checkpoint Step Duration for farm [MR-471]"
      },
      {
        "id": "492b7d09dce7668ef01e95c9debf67facc732db7",
        "date": "2023-08-17T08:49:10Z",
        "message": "Merge branch 'pakhomov/skips_farm' into 'master'\n\nfeat: [MR-471] Page Delta Flush Skips for farm\n\n \n\nSee merge request dfinity-lab/public/ic!14202"
      },
      {
        "id": "c923f22c3d45fabb3b8167e10728875bdca3fdcd",
        "date": "2023-08-17T08:49:10Z",
        "message": "feat: [MR-471] Page Delta Flush Skips for farm"
      },
      {
        "id": "f6a29f9be66154c8ed7f236b2ab0116c66ff6a93",
        "date": "2023-08-09T13:49:51Z",
        "message": "Merge branch 'pakhomov/mr-482' into 'master'\n\nfeat: [MR-482] Log syncfs time\n\n \n\nSee merge request dfinity-lab/public/ic!14043"
      },
      {
        "id": "c47997f33d9004334e458a9dbb6cd1504dcfd1bc",
        "date": "2023-08-09T13:49:51Z",
        "message": "feat: [MR-482] Log syncfs time"
      },
      {
        "id": "8bf2afb976840561927849ad7a19ac379c21e743",
        "date": "2023-08-09T12:24:23Z",
        "message": "Merge branch 'pakhomov/fix-checkpoint-metrics' into 'master'\n\nfix: Make checkpoint step metrics exhaustive\n\nWe used to have functionality not tracked by any checkpoint step timer, leading to misleading stats. \n\nSee merge request dfinity-lab/public/ic!14045"
      },
      {
        "id": "9c3de0dc9edad7a0b0b0d27d53de524bd07ad505",
        "date": "2023-08-09T12:24:23Z",
        "message": "fix: Make checkpoint step metrics exhaustive"
      }
    ],
    "email": "aleksandr.pakhomov@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 17,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 9,
    "fixes": 3,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "815b0a8b1e70ff8d1a05334a0b38c553cf0070e6",
        "date": "2023-11-09T15:08:48Z",
        "message": "feat: Use inode to account for unchanged files in incremental manifest computation"
      },
      {
        "id": "7681824292c9b93773bcaac838f0ed37104e3d7e",
        "date": "2023-10-17T12:44:48Z",
        "message": "fix: Check liveness of the Tip thread in debug"
      },
      {
        "id": "cd945b867fef4b828e290de0865edb1d745a7336",
        "date": "2023-09-28T16:56:14Z",
        "message": "fix: Use cfg(debug_assertions) instead of non-existing cfg(debug_assert)"
      },
      {
        "id": "a3659818850358ed63f9a2152fd69c2379cbe22f",
        "date": "2023-08-17T12:34:58Z",
        "message": "feart: [MR-471] Syncfs Panel for Farm"
      },
      {
        "id": "07981217ad2744075e4d67283b1e719c266a708b",
        "date": "2023-08-17T08:56:48Z",
        "message": "feat: Checkpoint Step Duration for farm [MR-471]"
      },
      {
        "id": "c923f22c3d45fabb3b8167e10728875bdca3fdcd",
        "date": "2023-08-17T08:49:10Z",
        "message": "feat: [MR-471] Page Delta Flush Skips for farm"
      },
      {
        "id": "c47997f33d9004334e458a9dbb6cd1504dcfd1bc",
        "date": "2023-08-09T13:49:51Z",
        "message": "feat: [MR-482] Log syncfs time"
      },
      {
        "id": "9c3de0dc9edad7a0b0b0d27d53de524bd07ad505",
        "date": "2023-08-09T12:24:23Z",
        "message": "fix: Make checkpoint step metrics exhaustive"
      }
    ],
    "line_additions": 852,
    "line_deletions": 172,
    "lines_effected_total": 1024,
    "rel_comm_add": 5,
    "rel_comm_del": 2,
    "rel_comm_total": 5
  },
  {
    "login": "ninegua",
    "id": 1549364,
    "totalContributions": 156,
    "github": "https://github.com/ninegua",
    "commits": [
      {
        "id": "13bafa5846fe8f639d965f47f72adcc3f41d590e",
        "date": "2023-11-16T18:42:29Z",
        "message": "Merge branch 'paulliu/ingress-handler-use-time-source' into 'master'\n\nfix: Replace current_time with time_source so that it can be mocked properly in benchmark\n\nThe handle_ingress benchmark relies on mocked time in order to measure the right thing (ingress messages properly validated and become part of ingress history). Unfortunately it was never noticed because our CI do not catch benchmark anomalies.\n\nThis MR fixes the problem by replacing current_time with time_source that can be controlled in a test or benchmark setup. \n\nSee merge request dfinity-lab/public/ic!15962"
      },
      {
        "id": "e755fc991498cdadac33aa2f165bdbab40fda1da",
        "date": "2023-11-16T18:42:28Z",
        "message": "fix: Replace current_time with time_source so that it can be mocked properly in benchmark"
      },
      {
        "id": "d10873a68591878717baadacec32a48e5e9d44c4",
        "date": "2023-08-29T14:33:23Z",
        "message": "Merge branch 'paulliu/disable-multiple-nodes-are-deterministic-test' into 'master'\n\ntest(consensus): Disable multiple_nodes_are_determinstic test\n\nThe test still occasionally fails, and the problem should be investigated and fixed before enabling it again. \n\nSee merge request dfinity-lab/public/ic!14452"
      },
      {
        "id": "8515fd9ab9c81c639fa41848fa1b71130b8bdbde",
        "date": "2023-08-29T13:15:46Z",
        "message": "test(consensus): Disable multiple_nodes_are_determinstic test"
      },
      {
        "id": "dab0e5b30daad872cb2f51279fe633cd183c1b85",
        "date": "2023-08-29T09:26:47Z",
        "message": "Merge branch 'paulliu/re-enable-determinstic-consensus-test' into 'master'\n\ntest(consensus): Re-enable multiple_nodes_are_deterministic test\n\nRe-enable determinstic consensus test after !13010 is merged. \n\nSee merge request dfinity-lab/public/ic!14429"
      },
      {
        "id": "1de43a954fda155ee5e79078a2b83d2ea5f3f05c",
        "date": "2023-08-28T16:41:47Z",
        "message": "test(consensus): Re-enable multiple_nodes_are_deterministic test"
      },
      {
        "id": "b900678abff13c3a76ba23b324da55ffb977d327",
        "date": "2023-08-09T07:51:23Z",
        "message": "Merge branch 'paulliu/consensus-cache-finalized-blocks' into 'master'\n\nfeat(consensus): use cached finalized blocks in chain iterator\n\nUse cached finalized block chain when iterating blocks, which saves block loading and deserialization time.\n\nA new interface `chain_iterator(..)` is added to the `ConsensusPoolCache` trait, and `CachedChainIterator` is implemented as looking up cached finalized blocks before looking up blocks in the pool.\n\nRemove `BlockChainIterator` and replace it usage by the old `ChainIterator` interface (so that cached implementation can be used).\n\nOptimize the usage of `BlockPayload` by always using the `AsRef` instance, and eliminated the use of `From` instance. \n\nSee merge request dfinity-lab/public/ic!13576"
      },
      {
        "id": "906a80ab13695eb6fc3d71c63426126958caa316",
        "date": "2023-08-09T07:51:23Z",
        "message": "feat(consensus): use cached finalized blocks in chain iterator"
      }
    ],
    "email": "paul@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 8,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 4,
    "fixes": 1,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "e755fc991498cdadac33aa2f165bdbab40fda1da",
        "date": "2023-11-16T18:42:28Z",
        "message": "fix: Replace current_time with time_source so that it can be mocked properly in benchmark"
      },
      {
        "id": "8515fd9ab9c81c639fa41848fa1b71130b8bdbde",
        "date": "2023-08-29T13:15:46Z",
        "message": "test(consensus): Disable multiple_nodes_are_determinstic test"
      },
      {
        "id": "1de43a954fda155ee5e79078a2b83d2ea5f3f05c",
        "date": "2023-08-28T16:41:47Z",
        "message": "test(consensus): Re-enable multiple_nodes_are_deterministic test"
      },
      {
        "id": "906a80ab13695eb6fc3d71c63426126958caa316",
        "date": "2023-08-09T07:51:23Z",
        "message": "feat(consensus): use cached finalized blocks in chain iterator"
      }
    ],
    "line_additions": 30,
    "line_deletions": 24,
    "lines_effected_total": 54,
    "rel_comm_add": 1,
    "rel_comm_del": 1,
    "rel_comm_total": 1
  },
  {
    "login": "dfinity-ryancroote",
    "id": 74929618,
    "totalContributions": 154,
    "github": "https://github.com/dfinity-ryancroote",
    "commits": [
      {
        "id": "6fb76e274024b45c5963cb76a73d8396049f5bc8",
        "date": "2023-11-07T15:02:51Z",
        "message": "Merge branch 'rc/FI-1014' into 'master'\n\nfeat(FI-1014): Add /block/transaction\n\nThis MR adds the `/block/transaction` endpoint to the ICRC Rosetta.\n\nCloses FI-1014 \n\nCloses FI-1014\n\nSee merge request dfinity-lab/public/ic!15863"
      },
      {
        "id": "5c83425b01dbfe6a51a3f07bcf5190bba4791857",
        "date": "2023-11-07T15:02:51Z",
        "message": "feat(FI-1014): Add /block/transaction"
      },
      {
        "id": "2e7c0f1cd00f7fd0803ab3f3e11753dcbe82e72a",
        "date": "2023-11-02T11:52:53Z",
        "message": "Merge branch 'rc/FI-995-icrc-rosetta-block-endpoint' into 'master'\n\nfeat(FI-995): Add /block endpoint\n\nThis MR adds the `/block` endpoint to the ICRC Rosetta.\n\nCloses FI-995 \n\nCloses FI-995\n\nSee merge request dfinity-lab/public/ic!15324"
      },
      {
        "id": "77a32d45564202dd3e35bbc489d467fa2c566bf6",
        "date": "2023-11-02T11:52:53Z",
        "message": "feat(FI-995): Add /block endpoint"
      },
      {
        "id": "e764454a8ca3c0f7d40a418f18ebab814ff4c2b2",
        "date": "2023-10-16T16:04:03Z",
        "message": "Merge branch 'FI-1001-sync-ledger-metadata' into 'master'\n\nfeat(FI-1001): Sync ledger metadata into table\n\nThe MR completes the following:\n- Sync the metadata from the ledger canister to a `metadata` table in online mode.\n- In offline mode, two new arguments are required (`icrc1-symbol` and `icrc1-decimals`) in order to be able to create a `Currency` object.\n- If the node was previously online and then switched to offline mode, the arguments are compared against the metadata found in the `metadata` table to ensure correctness. \n\nSee merge request dfinity-lab/public/ic!15327"
      },
      {
        "id": "11c70fec09d686431fd5d709d98975c63289ccd2",
        "date": "2023-10-16T16:04:03Z",
        "message": "feat(FI-1001): Sync ledger metadata into table"
      },
      {
        "id": "198e0f7fb4c716381e322a8c6c6bb0e6f0137484",
        "date": "2023-10-09T16:26:35Z",
        "message": "Merge branch 'rc/network-status' into 'master'\n\nfeat(FI-966): Add network status endpoint to ICRC Rosetta\n\nThis MR introduces the following changes:\n1. Adds a `timestamp` field to the `blocks` table.\n2. Adds a `/network/status` endpoint to the ICRC Rosetta.\n3. Adds a test for `/network/status`.\n\nThe `sync_status` field portion is not implemented as this will require a discussion on how to report the current sync status. \n\nSee merge request dfinity-lab/public/ic!14994"
      },
      {
        "id": "bfd86f9f2074483763c557c7957051b77e982436",
        "date": "2023-10-09T16:26:35Z",
        "message": "feat(FI-966): Add network status endpoint to ICRC Rosetta"
      },
      {
        "id": "ce358abe42cf9dfd2fb0bdc96cab6ca918eab04c",
        "date": "2023-10-04T00:11:59Z",
        "message": "Merge branch 'rc/backwards-compatible-tx-hash' into 'master'\n\nMake transaction hashes backwards compatible\n\nWhile implementing ICRC-2, it was noticed by the dashboard team that the transaction hashes for burns and transfers no longer matched to what current available versions of Rosetta and the dashboard report. The addition of the `spender` field caused a new hash to be generated for older blocks. This MR addresses this by making a few minor changes:\n\n1. Skip serializing the new field.\n2. Move the field's position in the struct to the last field.\n\nWithout these changes, the CBOR encode takes the following shape (transaction from block 106117):\n\n```\n{\n    0: {\n        2: {\n            0: \"e7a879ea563d273c46dd28c1584eaa132fad6f3e316615b3eb657d067f3519b5\",\n            1: \"207ec07185bedd0f2176ec2760057b8b7bc619a94d60e70fbc91af322a9f7e93\",\n            2: null,\n            3: {0: 11541900000_3},\n            4: {0: 10000_1},\n        },\n    },\n    1: 5432845643782906771_3,\n    2: {0: 1621901572293430780_3},\n}\n\n```\n\nWith these changes, the CBOR encode reverts back to the expected shape:\n```\n{\n    0: {\n        2: {\n            0: \"e7a879ea563d273c46dd28c1584eaa132fad6f3e316615b3eb657d067f3519b5\",\n            1: \"207ec07185bedd0f2176ec2760057b8b7bc619a94d60e70fbc91af322a9f7e93\",\n            2: {0: 11541900000_3},\n            3: {0: 10000_1},\n        },\n    },\n    1: 5432845643782906771_3,\n    2: {0: 1621901572293430780_3},\n}\n``` \n\nCloses ICRC-2\n\nSee merge request dfinity-lab/public/ic!15177"
      },
      {
        "id": "51dafe5b6c0cf8f8f813938da24f95a311757ba3",
        "date": "2023-10-04T00:11:58Z",
        "message": "Make transaction hashes backwards compatible"
      }
    ],
    "email": "ryan.croote@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 10,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 5,
    "fixes": 0,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "5c83425b01dbfe6a51a3f07bcf5190bba4791857",
        "date": "2023-11-07T15:02:51Z",
        "message": "feat(FI-1014): Add /block/transaction"
      },
      {
        "id": "77a32d45564202dd3e35bbc489d467fa2c566bf6",
        "date": "2023-11-02T11:52:53Z",
        "message": "feat(FI-995): Add /block endpoint"
      },
      {
        "id": "11c70fec09d686431fd5d709d98975c63289ccd2",
        "date": "2023-10-16T16:04:03Z",
        "message": "feat(FI-1001): Sync ledger metadata into table"
      },
      {
        "id": "bfd86f9f2074483763c557c7957051b77e982436",
        "date": "2023-10-09T16:26:35Z",
        "message": "feat(FI-966): Add network status endpoint to ICRC Rosetta"
      },
      {
        "id": "51dafe5b6c0cf8f8f813938da24f95a311757ba3",
        "date": "2023-10-04T00:11:58Z",
        "message": "Make transaction hashes backwards compatible"
      }
    ],
    "line_additions": 2115,
    "line_deletions": 58,
    "lines_effected_total": 2173,
    "rel_comm_add": 3,
    "rel_comm_del": 3,
    "rel_comm_total": 3
  },
  {
    "login": "yvonneanne",
    "id": 46541899,
    "totalContributions": 153,
    "github": "https://github.com/yvonneanne",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "qj-yu",
    "id": 79867586,
    "totalContributions": 148,
    "github": "https://github.com/qj-yu",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "cgundy",
    "id": 47304080,
    "totalContributions": 145,
    "github": "https://github.com/cgundy",
    "commits": [
      {
        "id": "8af053b7f4cefabdebc496a8888228e5eb8fdd28",
        "date": "2023-11-20T17:46:47Z",
        "message": "chore(IDX): remove requirements from checksum"
      },
      {
        "id": "c49e34eb9e4f8befb51c3fee98810b5d4eaab3b9",
        "date": "2023-11-20T13:58:05Z",
        "message": "Merge branch 'create-warning-that-legacy-container-will-be-deprecated' into 'master'\n\nIDX(chore): add warning to legacy image\n\n \n\nSee merge request dfinity-lab/public/ic!16210"
      },
      {
        "id": "c8fb56ca93948ddef3a05a530a4149f0081149a3",
        "date": "2023-11-20T13:58:05Z",
        "message": "IDX(chore): add warning to legacy image"
      },
      {
        "id": "af102369661054c052df458ad052f05974464f1b",
        "date": "2023-11-16T15:25:56Z",
        "message": "Merge branch 'levsha/chore-update-rules_python-to-0-26-0' into 'master'\n\nchore: update rules_python to 0.26.0\n\n \n\nSee merge request dfinity-lab/public/ic!16140"
      },
      {
        "id": "f31aeff65ecd6989b2a381bcea863d1c161637f0",
        "date": "2023-11-15T12:46:49Z",
        "message": "Merge branch 'move-build-determinism-off-legacy-image' into 'master'\n\nchore(IDX): move build-determinism-release off legacy image\n\n \n\nSee merge request dfinity-lab/public/ic!16069"
      },
      {
        "id": "cc47d31ca93f93efa8347f9910c55ce59ea4d68a",
        "date": "2023-11-15T12:46:49Z",
        "message": "chore(IDX): move build-determinism-release off legacy image"
      },
      {
        "id": "6b336a39d86ef768a99ca2076e8db92f9224125e",
        "date": "2023-11-15T07:55:20Z",
        "message": "Merge branch 'move-benchmark-tests-off-legacy-image' into 'master'\n\nchore(IDX): move benchmark tests off legacy image [benchmark]\n\nAs far as I can tell everything required to run the benchmark jobs should be available in the base image. It failed when I tested it on a single job, but I think that might be because the image sha is not available. If the scheduled pipeline fails, I will revert this change. \n\nSee merge request dfinity-lab/public/ic!15960"
      },
      {
        "id": "117110fa8cb38efbe31aca65fa97e80fa82f02c4",
        "date": "2023-11-15T07:55:20Z",
        "message": "chore(IDX): move benchmark tests off legacy image [benchmark]"
      },
      {
        "id": "4892711f952a890733a60a3cd254595a4b16dd49",
        "date": "2023-11-14T13:09:32Z",
        "message": "Merge branch 'move-deps-check-off-legacy-image' into 'master'\n\nchore(IDX): move dep-check off legacy image\n\n \n\nSee merge request dfinity-lab/public/ic!16060"
      },
      {
        "id": "35bb2a426610c695e97561a34ed2e86755a02657",
        "date": "2023-11-14T13:09:31Z",
        "message": "chore(IDX): move dep-check off legacy image"
      },
      {
        "id": "66ba086b53ccdbe7fa66be1240ccd368b8c25c53",
        "date": "2023-11-13T17:22:16Z",
        "message": "chore(IDX): remove cargo-audit"
      },
      {
        "id": "05a1adebea1d30ce27987bf6e0678bc1ab7b1417",
        "date": "2023-11-08T11:15:22Z",
        "message": "Refactor: move base image build off legacy image"
      },
      {
        "id": "2678f61ca6affb82bb94649a4503f82c7d94e46d",
        "date": "2023-11-06T10:11:50Z",
        "message": "Move build base images off legacy job"
      },
      {
        "id": "ce223c728d9aec62c28a0130c95c75d5c63b99ec",
        "date": "2023-11-01T18:17:27Z",
        "message": "Merge branch 'simplify-ci-pipeline' into 'master'\n\nchore(IDX): simplify CI pipeline\n\n \n\nSee merge request dfinity-lab/public/ic!15824"
      },
      {
        "id": "10772181a6a8e8c56a70f8fac3d3906cc740fc51",
        "date": "2023-11-01T18:17:25Z",
        "message": "chore(IDX): simplify CI pipeline"
      },
      {
        "id": "0157d68d05ccd13bfbce3f37e5e7a18887e4e2f1",
        "date": "2023-11-01T16:22:52Z",
        "message": "Merge branch 'move-container-autobuild-protected-off-legacy' into 'master'\n\nchore(IDX): move container-autobuild-protected off legacy image\n\n \n\nSee merge request dfinity-lab/public/ic!15823"
      },
      {
        "id": "ed56f1c3f41888517bdf8059fdb6ec575c1f6af1",
        "date": "2023-11-01T16:22:51Z",
        "message": "chore(IDX): move container-autobuild-protected off legacy image"
      },
      {
        "id": "5844250c9e60a792618fab783a20352fc9ffba51",
        "date": "2023-11-01T09:54:22Z",
        "message": "Merge branch 'levsha/refactor-simplify-conditional-logic-' into 'master'\n\nrefactor: simplify conditional logic.\n\nConstructions like `if not ...` are often confusing and therefore\nerrorprone, especially in combination with `not ( ... or ... )` or\n`not ( ... and ... )`. \n\nSee merge request dfinity-lab/public/ic!15808"
      },
      {
        "id": "a9b6e2c51438be057d1e98e05aeaac29eceabd82",
        "date": "2023-10-31T16:04:10Z",
        "message": "Merge branch 'IDX-3013-change-recommended-extensions' into 'master'\n\nResolve IDX-3013 \"Add Buildifier to devenv\"\n\nThis adds `stackbuild.bazel-stack-vscode` to recommended extensions which includes `buildifier` because `bazelbuild.vscode-bazel` expects buildifier to be installed.\n\nCloses IDX-3013 \n\nCloses IDX-3013\n\nSee merge request dfinity-lab/public/ic!15677"
      },
      {
        "id": "ba349abae91603d69586ae4ac3cb27b1755d1491",
        "date": "2023-10-31T16:04:09Z",
        "message": "Resolve IDX-3013 \"Add Buildifier to devenv\""
      },
      {
        "id": "dc499acc1d533413b0c19831992d1a5e16983fec",
        "date": "2023-10-31T09:35:29Z",
        "message": "Merge branch 'move-fuzzers-off-legacy-image' into 'master'\n\nRefactor move bazel-build-fuzzers off legacy image\n\n \n\nSee merge request dfinity-lab/public/ic!15433"
      },
      {
        "id": "ba58f2d40df6dd16fa060701ff11953826644b93",
        "date": "2023-10-31T09:35:28Z",
        "message": "Refactor move bazel-build-fuzzers off legacy image"
      },
      {
        "id": "92a800e7569e9250bbf20484f0305730ef410cfa",
        "date": "2023-10-27T15:44:55Z",
        "message": "Fix: replace merge base with target branch HEAD sha for candid checks"
      },
      {
        "id": "475912d94043fa0ea0690c3a67cd09afaa46f863",
        "date": "2023-10-27T12:45:14Z",
        "message": "Merge branch 'levsha/refactor-IDX-3017-update-pretty_assertions-and-move-to-the-workspace-' into 'master'\n\nrefactor(IDX-3017) update pretty_assertions and move to the workspace.\n\n \n\nSee merge request dfinity-lab/public/ic!15714"
      },
      {
        "id": "c5b72c817263d78d69dfc1a4496087f50c36b32c",
        "date": "2023-10-26T15:48:33Z",
        "message": "Merge branch 'move-cargo-jobs-off-legacy-image' into 'master'\n\nRefactor: remove cargo-ubuntu-k8s [benchmark]\n\nThis should have no functional impact. Just cleaning up CI jobs to make them simpler. Let me know if I missed something, but it didn't look like the RUSTFLAGS were being used for anything in the benchmark tests. \n\nSee merge request dfinity-lab/public/ic!15594"
      },
      {
        "id": "d133687aa7f35a379d0a9bea41017a2d0db2d3d9",
        "date": "2023-10-26T15:48:32Z",
        "message": "Refactor: remove cargo-ubuntu-k8s [benchmark]"
      },
      {
        "id": "4c51e8326112bc712c8d1908c495518539bc41bc",
        "date": "2023-10-25T20:49:41Z",
        "message": "Fix: remove python requirements from bazel-test-all-rebuild"
      },
      {
        "id": "00c012e30a189ad25eb7d440b64f0f84d9854800",
        "date": "2023-10-25T16:46:19Z",
        "message": "Merge branch 'IDX-3023-remove-candid-check-from-python' into 'master'\n\nRefactor: remove candid checks from python\n\nCloses IDX-3023 \n\nCloses IDX-3023\n\nSee merge request dfinity-lab/public/ic!15421"
      },
      {
        "id": "ebde3eadde39772be4c2324e843a00775f220b57",
        "date": "2023-10-25T16:46:17Z",
        "message": "Refactor: remove candid checks from python"
      },
      {
        "id": "b800a0d386a5ffea46b1686c1628ccdc02925e2b",
        "date": "2023-10-25T10:29:22Z",
        "message": "fix: IDX replace file reference with target"
      },
      {
        "id": "7b929ba726dea93a1e8a14cd3ae31e4f0b2f1abb",
        "date": "2023-10-24T18:23:30Z",
        "message": "Merge branch 'marko-fix-python-pkg-issues' into 'master'\n\nfix(python): pkgs deps\n\n \n\nSee merge request dfinity-lab/public/ic!15618"
      },
      {
        "id": "3d6ce2d092aa34f66212d703adb06aef13911e6c",
        "date": "2023-10-24T14:25:57Z",
        "message": "Merge branch 'IDX-2987-remove-python-deps-from-docker-image-2' into 'master'\n\nRefactor: IDX remove python deps from docker image\n\nBazel can run into conflicts when the dependencies are pre-installed in the CI image. This is why we are removing them again and installing them in every CI job that runs python. This is an incentive to bazelify more things!\n\nCloses IDX-2987 \n\nCloses IDX-2987\n\nSee merge request dfinity-lab/public/ic!15567"
      },
      {
        "id": "ff77aece9492e18d233eb385d22268ec11f44130",
        "date": "2023-10-24T14:25:57Z",
        "message": "Refactor: IDX remove python deps from docker image"
      },
      {
        "id": "697bcee2cf2021a8ec5ddfddc7ef327ede36d604",
        "date": "2023-10-24T08:36:39Z",
        "message": "Merge branch 'IDX-3022-add-did-git-test' into 'master'\n\nResolve IDX-3022 \"Add did git test\"\n\nThis change adds `did_git_test` to the `rust_canister` macro. This ensures that all `did` files are checked for backwards-compatibility. This test was previously executed in python where we grepped for all `.did` files and checked them, but this allows checks to be run directly as part of bazel targets that use `.did` files.\n\nTests executed:\n![Screenshot_2023-10-23_at_14.34.29](/uploads/5c86f6f8d7f32968f8e42b577716e7a6/Screenshot_2023-10-23_at_14.34.29.png)\n\nCloses IDX-3022 \n\nCloses IDX-3022\n\nSee merge request dfinity-lab/public/ic!15468"
      },
      {
        "id": "231b1977282bf3f1d8af15be4698fc9a0f508846",
        "date": "2023-10-24T08:36:39Z",
        "message": "Resolve IDX-3022 \"Add did git test\""
      },
      {
        "id": "e77d54cbae2c8cecbd51f2faacbebabb00d56b14",
        "date": "2023-10-23T15:55:31Z",
        "message": "Merge branch 'move-more-jobs-off-legacy-image' into 'master'\n\nmove more jobs off legacy image\n\nI cannot see any apparent reason why these jobs needed the legacy image, nor the Rust flags. But let me know if I'm missing something. \n\nSee merge request dfinity-lab/public/ic!15571"
      },
      {
        "id": "71a1fc37142c3f0543b612380b4fc4c5f4045056",
        "date": "2023-10-23T15:55:30Z",
        "message": "move more jobs off legacy image"
      },
      {
        "id": "2230bd4ce4950ec66de58a8a2bf7f5e3f6ace5e2",
        "date": "2023-10-23T14:33:04Z",
        "message": "Merge branch 'change-autobuild-image' into 'master'\n\nreplace auto-build with new image\n\nTested it out and it worked without any issues. As far as I can tell there weren't any specific reasons why this was run on the legacy image. \n\nSee merge request dfinity-lab/public/ic!15458"
      },
      {
        "id": "af82986a9b6a6ff9a2b03e65de0d657eddbd2700",
        "date": "2023-10-23T14:33:02Z",
        "message": "replace auto-build with new image"
      },
      {
        "id": "1ab06486af6d86fefb55e9ace2286528ad826f3e",
        "date": "2023-10-19T15:15:00Z",
        "message": "Merge branch 'candid-check-improvements' into 'master'\n\nCandid check improvements\n\nThis adds more documentation to the `candid` bazel function and removes the CI title override. After some discussion, `also-reverse` is very rarely used and may even be completely deprecated. For this reason we don't need to keep the CI title override logic, as it only makes things complex. The `also-reverse` check can be enabled with the flag `enable_also_reverse`. \n\nSee merge request dfinity-lab/public/ic!15487"
      },
      {
        "id": "d0ff6a7885847ef874938b72590e732ce784449f",
        "date": "2023-10-19T15:15:00Z",
        "message": "Candid check improvements"
      },
      {
        "id": "a6e451a9fadf0a8c2df542a6b0e756d916ea75af",
        "date": "2023-10-18T08:02:19Z",
        "message": "move check-bins-linux off legacy image"
      },
      {
        "id": "a7d4bf3ee6e7567b48d95244efab1d8631203699",
        "date": "2023-10-17T18:54:09Z",
        "message": "Merge branch 'IDX-rename-build-steps' into 'master'\n\nRefactor: IDX clean up pipeline related to legacy-image jobs\n\nThe main change is renaming `.ubuntu-k8s` to `.build-k8s-legacy` to make it more obvious which jobs still depend on the legacy image. This will make moving to a single image easier later on. It also cleans up some complexity in the pipeline.\n\n**Important**: no functional changes have been made to the pipeline. You can see this by reviewing the `zz_generated` file and checking that no functionality of the pipeline has been altered. \n\nSee merge request dfinity-lab/public/ic!15425"
      },
      {
        "id": "16744381e924ce63206d6646670fc73cde3cded6",
        "date": "2023-10-17T18:54:09Z",
        "message": "Refactor: IDX clean up pipeline related to legacy-image jobs"
      },
      {
        "id": "eaf70cc18fb7edbb57fa673f1d8f1eb5d0117269",
        "date": "2023-10-17T16:41:32Z",
        "message": "Merge branch 'IDX-enable-also-reverse-candid-checks' into 'master'\n\nRefactor: Idx enable also reverse candid checks\n\nBased on feedback `also-reverse` is not used very often. To avoid unnecessary confusion and breaking things, I will set the default to `False` with the option of setting it to `True` for a given test. It might not be necessary to still have the `[override-also-reverse]` but we can keep it for consistency. \n\nSee merge request dfinity-lab/public/ic!15354"
      },
      {
        "id": "7e48292b09b95e1ab5bdb9b26bd137a60f9e35c9",
        "date": "2023-10-17T16:41:32Z",
        "message": "Refactor: Idx enable also reverse candid checks"
      },
      {
        "id": "1156bacf438b09e5b54216f6c02e4df6410bd6fa",
        "date": "2023-10-17T14:56:30Z",
        "message": "Merge branch 'IDX-remove-fuzzers-yaml' into 'master'\n\nRefactor: IDX remove fuzzers.yml\n\nRemove file as all the jobs are in `main.yaml` and it creates unnecessary duplication. \n\nSee merge request dfinity-lab/public/ic!15426"
      },
      {
        "id": "f89d420326183ab65edaf5aa71291d98c5834c35",
        "date": "2023-10-17T14:56:30Z",
        "message": "Refactor: IDX remove fuzzers.yml"
      },
      {
        "id": "8be68bc88db7332dd39a26509ddf62c564ca3415",
        "date": "2023-10-11T13:23:47Z",
        "message": "Merge branch 'IDX-add-didc-override-option' into 'master'\n\nadd override options for didc check\n\nThis keeps previous features to allow for an override via CI. \n\nSee merge request dfinity-lab/public/ic!15337"
      },
      {
        "id": "4c34cabf97b4f49db362a262a348906897065bef",
        "date": "2023-10-11T13:23:45Z",
        "message": "add override options for didc check"
      },
      {
        "id": "71cce2f24a02e83449ce79f7d0b7600892d022f2",
        "date": "2023-10-11T10:21:02Z",
        "message": "Merge branch 'move-did-backwards-compatibility-test-out-of-python' into 'master'\n\nRefactor: Move did backwards compatibility test out of python\n\nThis is the first of several MRs to migrate `candid_backward_compatibility` checks out of python to bazel.\n\n1. Rewrite [integration tests](https://gitlab.com/dfinity-lab/public/ic/-/blob/master/gitlab-ci/src/checks/candid_changes_are_backwards_compatible_test.py?ref_type=heads) to use `did_git_test`\n2. Add functionality for `also-reverse` to `did_git_test`\n3. Run `did_git_test` on all .did files\n4. Remove python code \n\nSee merge request dfinity-lab/public/ic!15169"
      },
      {
        "id": "7b2e06570fb9ce25e6db83abc67946ab5a854166",
        "date": "2023-10-11T10:21:01Z",
        "message": "Refactor: Move did backwards compatibility test out of python"
      },
      {
        "id": "7ef652bc8b1480dd710678586d020f26434b1938",
        "date": "2023-10-06T13:54:34Z",
        "message": "Merge branch 'levsha/fix-Make-candid-test-always-working-' into 'master'\n\nfix: Make candid test always working.\n\nThe test requires .git to be available. It has it as a side effect of\n--aspects=@rules_rust//rust:defs.bzl%rust_clippy_aspect in CI, but\ndoesn't when run locally (and it shouldn't rely on side effects).\nThis change adds .git as dependency explicitly. \n\nSee merge request dfinity-lab/public/ic!15267"
      },
      {
        "id": "f4aeeebe10c5d4e5af2b859a08fea9b7694f5cce",
        "date": "2023-10-03T08:11:09Z",
        "message": "Merge branch 'levsha/-IC-1490-Update-and-synchronise-hex-literal-version-' into 'master'\n\n[IC-1490] Update and synchronise hex-literal version.\n\nThis is required to simplify switching to use Cargo.tompl as source of\ntruth. \n\nSee merge request dfinity-lab/public/ic!15141"
      },
      {
        "id": "f0adf9a7a07487906e0600a39ca0673a94d0e7dc",
        "date": "2023-10-02T08:20:11Z",
        "message": "Merge branch 'revert-9120114f' into 'master'\n\nRevert \"Merge branch 'levsha/Limit-bazel-jobs-in-master-pipeline-' into 'master'\"\n\nThis change causes master pipeline to fail quite often because jobs take too long.\nFarm has enough capacity now after enabling overprovision.\nThis reverts merge request !15039 \n\nSee merge request dfinity-lab/public/ic!15109"
      },
      {
        "id": "e6f880144e8e48c4c72d8840b59594c3e489b103",
        "date": "2023-09-15T12:03:01Z",
        "message": "Merge branch 'bazilify-python-ci-jobs' into 'master'\n\nBazilify gitlab-ci-config-validation\n\nFirst step to remove python dependencies from the CI container. \n\nSee merge request dfinity-lab/public/ic!14660"
      },
      {
        "id": "52e1671324a67249ddd2bc986a74169d15ffdb0b",
        "date": "2023-09-15T12:03:01Z",
        "message": "Bazilify gitlab-ci-config-validation"
      },
      {
        "id": "127be8fcae14e16ebff4b4a2b56ea7a464f23663",
        "date": "2023-09-14T13:44:32Z",
        "message": "Merge branch 'rewrite-gitlab-login' into 'master'\n\nonly login to gitlab when it is needed\n\n \n\nSee merge request dfinity-lab/public/ic!14801"
      },
      {
        "id": "725478f772a73e2bd373bb9deb598f89f6c4e4fe",
        "date": "2023-09-14T11:41:48Z",
        "message": "only login to gitlab when it is needed"
      },
      {
        "id": "a96f5147d788824577be8cf4d788daa650b7d79f",
        "date": "2023-09-13T11:18:57Z",
        "message": "Merge branch 'rewrite-gitlab-config-validation' into 'master'\n\nPass in zz-generated for gitlab validation\n\n \n\nSee merge request dfinity-lab/public/ic!14763"
      },
      {
        "id": "43859044d5a47d37b63fb91a84dabdfc5b095b1e",
        "date": "2023-09-13T11:18:55Z",
        "message": "Pass in zz-generated for gitlab validation"
      },
      {
        "id": "35e4f9919735e248db542883901cbce4018a2e34",
        "date": "2023-09-07T09:38:06Z",
        "message": "Merge branch 'simplify-ci-pipeline-8' into 'master'\n\nsimplify ci pipeline continued\n\n \n\nSee merge request dfinity-lab/public/ic!14644"
      },
      {
        "id": "91e1b8a9a9555dd45ce78903ca6dba96ca632bb2",
        "date": "2023-09-07T09:38:05Z",
        "message": "simplify ci pipeline continued"
      },
      {
        "id": "2c574fd5c19186808e0580aaf4ad3cbd4841c05f",
        "date": "2023-09-06T14:35:59Z",
        "message": "Merge branch 'simplify-ci-pipeline-6' into 'master'\n\nsimplify pipeline rules\n\n \n\nSee merge request dfinity-lab/public/ic!14576"
      },
      {
        "id": "abf356e3197707e9cfa7adefb3e5ad6f88a0c6f9",
        "date": "2023-09-06T14:35:59Z",
        "message": "simplify pipeline rules"
      },
      {
        "id": "fcc7ecffb8e3ac19aee7d63924e5a4a80dd55a48",
        "date": "2023-09-06T08:24:27Z",
        "message": "Merge branch 'simplify-ci-pipeline-4' into 'master'\n\nremove bazel-build-k8s\n\n \n\nSee merge request dfinity-lab/public/ic!14558"
      },
      {
        "id": "f64415cec9718888b9b12f0a0c3b55a3900eade9",
        "date": "2023-09-06T08:24:26Z",
        "message": "remove bazel-build-k8s"
      },
      {
        "id": "0706f92eafef260a23ed133306eb4d584b3303c8",
        "date": "2023-09-05T10:45:36Z",
        "message": "Merge branch 'simplify-ci-pipeline-5' into 'master'\n\nreplace bazel-rules-pipeline\n\nIt makes no sense to use custom bazel rules with bazel variables for non-bazel jobs. It makes more sense to define a set of default rules and have bazel jobs use their own custom rules.\n\nFor now just changing `.bazel-rules-pipeline` - will look at the other bazel rules in the next MR. \n\nSee merge request dfinity-lab/public/ic!14559"
      },
      {
        "id": "5fbc5cd40e1de666d1d78b562766fd3a9ced1737",
        "date": "2023-09-05T10:45:36Z",
        "message": "replace bazel-rules-pipeline"
      },
      {
        "id": "820e8344bb3d4398983762c7b47203facdab4d0e",
        "date": "2023-09-04T11:03:56Z",
        "message": "Merge branch 'simplify-bazel-rules-3' into 'master'\n\nsimplify CI pipeline continued\n\n \n\nSee merge request dfinity-lab/public/ic!14555"
      },
      {
        "id": "2d82cc810b1970d035d1f5f4b05eeda2923fb070",
        "date": "2023-09-04T11:03:55Z",
        "message": "simplify CI pipeline continued"
      },
      {
        "id": "9b478c4b44dcb5b89efbd3b19bae600918910a22",
        "date": "2023-09-04T09:53:37Z",
        "message": "Merge branch 'simplify-bazel-CI-rules-2' into 'master'\n\nsimplify CI pipeline\n\n \n\nSee merge request dfinity-lab/public/ic!14552"
      },
      {
        "id": "795132bfc01d96a8e86b781473d847b3f1126312",
        "date": "2023-09-04T09:53:36Z",
        "message": "simplify CI pipeline"
      },
      {
        "id": "8583b634c1d32e535dac6689545cf1a84ad5662f",
        "date": "2023-09-04T08:19:19Z",
        "message": "Merge branch 'simplify-bazel-CI-rules' into 'master'\n\nsimplify bazel rules\n\n \n\nSee merge request dfinity-lab/public/ic!14550"
      },
      {
        "id": "bff2b48b1de088a6b6c75ee624c3e1d3ad71b819",
        "date": "2023-09-04T08:19:18Z",
        "message": "simplify bazel rules"
      },
      {
        "id": "e10a577ad665f8143abf3958a0162bd321bbf68a",
        "date": "2023-08-31T16:01:45Z",
        "message": "Merge branch 'IDX-2978-replace-image-tag-with-specific-version' into 'master'\n\nreplace docker image with specific version\n\nCloses IDX-2978 \n\nCloses IDX-2978\n\nSee merge request dfinity-lab/public/ic!14439"
      },
      {
        "id": "740baa4c3bfd2586f1c838842d0f8945ccdc9ef5",
        "date": "2023-08-31T16:01:45Z",
        "message": "replace docker image with specific version"
      },
      {
        "id": "145627c5f66b33f73cc4def33cf21e65ce89d375",
        "date": "2023-08-28T14:00:04Z",
        "message": "Merge branch 'IDX-2801-remove-testnet-test' into 'master'\n\nremove testnet test\n\nNow that testnets aren't used in the release pipeline anymore (see here: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13914/pipelines) we can remove this test. I will add `small14` back to the pool for Dee.\n\nCloses IDX-2801 \n\nCloses IDX-2801\n\nSee merge request dfinity-lab/public/ic!14417"
      },
      {
        "id": "5285363ae3b7b91351dd723d232cd53566679cf0",
        "date": "2023-08-28T14:00:03Z",
        "message": "remove testnet test"
      },
      {
        "id": "247476cbc090bec4075c59fc8c1e9fc8128e731e",
        "date": "2023-08-17T12:13:14Z",
        "message": "Merge branch 'revert-b66493c9' into 'master'\n\nRevert REGISTRY_AUTH_FILE\n\nLooks like it doesn't work. Rolling back to the mitigation for now.\nThis reverts merge request !14204 \n\nSee merge request dfinity-lab/public/ic!14219"
      },
      {
        "id": "106dc5abc15bb4d719525f33693f765e11053056",
        "date": "2023-08-15T10:12:32Z",
        "message": "Merge branch 'test-network-offloading' into 'master'\n\nremove network offloading step\n\nDid not work. Will try something else. \n\nSee merge request dfinity-lab/public/ic!14156"
      },
      {
        "id": "0011e92aa70f1634ed703233cf324608ce796044",
        "date": "2023-08-15T10:12:32Z",
        "message": "remove network offloading step"
      },
      {
        "id": "1ed4b32f1b8e71303de44edf0f865469f8816637",
        "date": "2023-08-14T13:50:51Z",
        "message": "Merge branch 'try-to-fix-network-flakiness' into 'master'\n\ntry to fix github runners network flakiness\n\nAccording to https://github.com/actions/runner-images/issues/1187#issuecomment-686735760 disabling network offloading can help with github runner network flakiness. \n\nSee merge request dfinity-lab/public/ic!14097"
      },
      {
        "id": "452897cad04e952d4214ea702763b2bde9c96901",
        "date": "2023-08-14T13:50:51Z",
        "message": "try to fix github runners network flakiness"
      },
      {
        "id": "f8dcd0f52a2593417346a0b290321a24cd1f779b",
        "date": "2023-08-11T12:23:51Z",
        "message": "Merge branch 'run-shellcheck-separately-from-validator-scrip' into 'master'\n\nchore(IDX-2979): split out validator commands into 3 separate commands\n\nThis splits out the config validator into 3 separate commands to allow them to be run separately. Previously they were all run as part of `--cfg-validate`.\n\nIt also changes the gitlab linter to lint the file produced from zz-generated instead of `main.yaml`. This is relevant for [adding reusable CI rules](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/13870/diffs) since it cannot correctly parse the `!reference` tags. \n\nSee merge request dfinity-lab/public/ic!14122"
      },
      {
        "id": "90dd72ab9cc4be2e04825e4558fd71e246be0cb8",
        "date": "2023-08-11T12:23:50Z",
        "message": "chore(IDX-2979): split out validator commands into 3 separate commands"
      },
      {
        "id": "fffa8e2a68d1a2be77978fb90e813db18d32e107",
        "date": "2023-08-10T14:38:21Z",
        "message": "Merge branch 're-enable-bazel-tests' into 'master'\n\nre-enable trigger on merges\n\n \n\nSee merge request dfinity-lab/public/ic!14093"
      },
      {
        "id": "48fa5458bfd4be2049f65f64192cc2d89286b801",
        "date": "2023-08-10T13:26:12Z",
        "message": "re-enable trigger on merges"
      },
      {
        "id": "f6b67969e42ce20276697f8e233fb0f8ecac9b7b",
        "date": "2023-08-07T16:08:29Z",
        "message": "Merge branch 'disable-github-workflow' into 'master'\n\ndisable workflow on push\n\nDisable running this on all push and merge events until we have correctly set resources for github runners. Allow `workflow_dispatch` for manual testing. \n\nSee merge request dfinity-lab/public/ic!14005"
      },
      {
        "id": "6b8b17ff3b7a9d7385736fbca99a8a0e8eeb9301",
        "date": "2023-08-07T15:26:10Z",
        "message": "disable workflow on push"
      }
    ],
    "email": "carlene.gundy@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 90,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 45,
    "fixes": 4,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "8af053b7f4cefabdebc496a8888228e5eb8fdd28",
        "date": "2023-11-20T17:46:47Z",
        "message": "chore(IDX): remove requirements from checksum"
      },
      {
        "id": "c8fb56ca93948ddef3a05a530a4149f0081149a3",
        "date": "2023-11-20T13:58:05Z",
        "message": "IDX(chore): add warning to legacy image"
      },
      {
        "id": "cc47d31ca93f93efa8347f9910c55ce59ea4d68a",
        "date": "2023-11-15T12:46:49Z",
        "message": "chore(IDX): move build-determinism-release off legacy image"
      },
      {
        "id": "117110fa8cb38efbe31aca65fa97e80fa82f02c4",
        "date": "2023-11-15T07:55:20Z",
        "message": "chore(IDX): move benchmark tests off legacy image [benchmark]"
      },
      {
        "id": "35bb2a426610c695e97561a34ed2e86755a02657",
        "date": "2023-11-14T13:09:31Z",
        "message": "chore(IDX): move dep-check off legacy image"
      },
      {
        "id": "66ba086b53ccdbe7fa66be1240ccd368b8c25c53",
        "date": "2023-11-13T17:22:16Z",
        "message": "chore(IDX): remove cargo-audit"
      },
      {
        "id": "05a1adebea1d30ce27987bf6e0678bc1ab7b1417",
        "date": "2023-11-08T11:15:22Z",
        "message": "Refactor: move base image build off legacy image"
      },
      {
        "id": "2678f61ca6affb82bb94649a4503f82c7d94e46d",
        "date": "2023-11-06T10:11:50Z",
        "message": "Move build base images off legacy job"
      },
      {
        "id": "10772181a6a8e8c56a70f8fac3d3906cc740fc51",
        "date": "2023-11-01T18:17:25Z",
        "message": "chore(IDX): simplify CI pipeline"
      },
      {
        "id": "ed56f1c3f41888517bdf8059fdb6ec575c1f6af1",
        "date": "2023-11-01T16:22:51Z",
        "message": "chore(IDX): move container-autobuild-protected off legacy image"
      },
      {
        "id": "ba349abae91603d69586ae4ac3cb27b1755d1491",
        "date": "2023-10-31T16:04:09Z",
        "message": "Resolve IDX-3013 \"Add Buildifier to devenv\""
      },
      {
        "id": "ba58f2d40df6dd16fa060701ff11953826644b93",
        "date": "2023-10-31T09:35:28Z",
        "message": "Refactor move bazel-build-fuzzers off legacy image"
      },
      {
        "id": "92a800e7569e9250bbf20484f0305730ef410cfa",
        "date": "2023-10-27T15:44:55Z",
        "message": "Fix: replace merge base with target branch HEAD sha for candid checks"
      },
      {
        "id": "d133687aa7f35a379d0a9bea41017a2d0db2d3d9",
        "date": "2023-10-26T15:48:32Z",
        "message": "Refactor: remove cargo-ubuntu-k8s [benchmark]"
      },
      {
        "id": "4c51e8326112bc712c8d1908c495518539bc41bc",
        "date": "2023-10-25T20:49:41Z",
        "message": "Fix: remove python requirements from bazel-test-all-rebuild"
      },
      {
        "id": "ebde3eadde39772be4c2324e843a00775f220b57",
        "date": "2023-10-25T16:46:17Z",
        "message": "Refactor: remove candid checks from python"
      },
      {
        "id": "b800a0d386a5ffea46b1686c1628ccdc02925e2b",
        "date": "2023-10-25T10:29:22Z",
        "message": "fix: IDX replace file reference with target"
      },
      {
        "id": "ff77aece9492e18d233eb385d22268ec11f44130",
        "date": "2023-10-24T14:25:57Z",
        "message": "Refactor: IDX remove python deps from docker image"
      },
      {
        "id": "231b1977282bf3f1d8af15be4698fc9a0f508846",
        "date": "2023-10-24T08:36:39Z",
        "message": "Resolve IDX-3022 \"Add did git test\""
      },
      {
        "id": "71a1fc37142c3f0543b612380b4fc4c5f4045056",
        "date": "2023-10-23T15:55:30Z",
        "message": "move more jobs off legacy image"
      },
      {
        "id": "af82986a9b6a6ff9a2b03e65de0d657eddbd2700",
        "date": "2023-10-23T14:33:02Z",
        "message": "replace auto-build with new image"
      },
      {
        "id": "d0ff6a7885847ef874938b72590e732ce784449f",
        "date": "2023-10-19T15:15:00Z",
        "message": "Candid check improvements"
      },
      {
        "id": "a6e451a9fadf0a8c2df542a6b0e756d916ea75af",
        "date": "2023-10-18T08:02:19Z",
        "message": "move check-bins-linux off legacy image"
      },
      {
        "id": "16744381e924ce63206d6646670fc73cde3cded6",
        "date": "2023-10-17T18:54:09Z",
        "message": "Refactor: IDX clean up pipeline related to legacy-image jobs"
      },
      {
        "id": "7e48292b09b95e1ab5bdb9b26bd137a60f9e35c9",
        "date": "2023-10-17T16:41:32Z",
        "message": "Refactor: Idx enable also reverse candid checks"
      },
      {
        "id": "f89d420326183ab65edaf5aa71291d98c5834c35",
        "date": "2023-10-17T14:56:30Z",
        "message": "Refactor: IDX remove fuzzers.yml"
      },
      {
        "id": "4c34cabf97b4f49db362a262a348906897065bef",
        "date": "2023-10-11T13:23:45Z",
        "message": "add override options for didc check"
      },
      {
        "id": "7b2e06570fb9ce25e6db83abc67946ab5a854166",
        "date": "2023-10-11T10:21:01Z",
        "message": "Refactor: Move did backwards compatibility test out of python"
      },
      {
        "id": "52e1671324a67249ddd2bc986a74169d15ffdb0b",
        "date": "2023-09-15T12:03:01Z",
        "message": "Bazilify gitlab-ci-config-validation"
      },
      {
        "id": "725478f772a73e2bd373bb9deb598f89f6c4e4fe",
        "date": "2023-09-14T11:41:48Z",
        "message": "only login to gitlab when it is needed"
      },
      {
        "id": "43859044d5a47d37b63fb91a84dabdfc5b095b1e",
        "date": "2023-09-13T11:18:55Z",
        "message": "Pass in zz-generated for gitlab validation"
      },
      {
        "id": "91e1b8a9a9555dd45ce78903ca6dba96ca632bb2",
        "date": "2023-09-07T09:38:05Z",
        "message": "simplify ci pipeline continued"
      },
      {
        "id": "abf356e3197707e9cfa7adefb3e5ad6f88a0c6f9",
        "date": "2023-09-06T14:35:59Z",
        "message": "simplify pipeline rules"
      },
      {
        "id": "f64415cec9718888b9b12f0a0c3b55a3900eade9",
        "date": "2023-09-06T08:24:26Z",
        "message": "remove bazel-build-k8s"
      },
      {
        "id": "5fbc5cd40e1de666d1d78b562766fd3a9ced1737",
        "date": "2023-09-05T10:45:36Z",
        "message": "replace bazel-rules-pipeline"
      },
      {
        "id": "2d82cc810b1970d035d1f5f4b05eeda2923fb070",
        "date": "2023-09-04T11:03:55Z",
        "message": "simplify CI pipeline continued"
      },
      {
        "id": "795132bfc01d96a8e86b781473d847b3f1126312",
        "date": "2023-09-04T09:53:36Z",
        "message": "simplify CI pipeline"
      },
      {
        "id": "bff2b48b1de088a6b6c75ee624c3e1d3ad71b819",
        "date": "2023-09-04T08:19:18Z",
        "message": "simplify bazel rules"
      },
      {
        "id": "740baa4c3bfd2586f1c838842d0f8945ccdc9ef5",
        "date": "2023-08-31T16:01:45Z",
        "message": "replace docker image with specific version"
      },
      {
        "id": "5285363ae3b7b91351dd723d232cd53566679cf0",
        "date": "2023-08-28T14:00:03Z",
        "message": "remove testnet test"
      },
      {
        "id": "0011e92aa70f1634ed703233cf324608ce796044",
        "date": "2023-08-15T10:12:32Z",
        "message": "remove network offloading step"
      },
      {
        "id": "452897cad04e952d4214ea702763b2bde9c96901",
        "date": "2023-08-14T13:50:51Z",
        "message": "try to fix github runners network flakiness"
      },
      {
        "id": "90dd72ab9cc4be2e04825e4558fd71e246be0cb8",
        "date": "2023-08-11T12:23:50Z",
        "message": "chore(IDX-2979): split out validator commands into 3 separate commands"
      },
      {
        "id": "48fa5458bfd4be2049f65f64192cc2d89286b801",
        "date": "2023-08-10T13:26:12Z",
        "message": "re-enable trigger on merges"
      },
      {
        "id": "6b8b17ff3b7a9d7385736fbca99a8a0e8eeb9301",
        "date": "2023-08-07T15:26:10Z",
        "message": "disable workflow on push"
      }
    ],
    "line_additions": 1519,
    "line_deletions": 1856,
    "lines_effected_total": 3375,
    "rel_comm_add": 24,
    "rel_comm_del": 24,
    "rel_comm_total": 32
  },
  {
    "login": "eust-dfinity",
    "id": 58423352,
    "totalContributions": 143,
    "github": "https://github.com/eust-dfinity",
    "commits": [
      {
        "id": "d0951df7f7c901a9737c632a196fd195b2d960b8",
        "date": "2023-11-08T11:46:37Z",
        "message": "Merge branch 'mk/improve_validation' into 'master'\n\nchore: RUN-836: Update validation of global section\n\nImprove validation of global section to account for newly added types \n\nSee merge request dfinity-lab/public/ic!15924"
      },
      {
        "id": "cdaaeb6bc354cb2fb36b90228447e2dd31544d6c",
        "date": "2023-11-08T11:46:35Z",
        "message": "chore: RUN-836: Update validation of global section"
      },
      {
        "id": "f426cf3a7c4b081942d160df419a7d66520bc121",
        "date": "2023-10-26T08:13:42Z",
        "message": "Merge branch 'mk/api_charge_unittest' into 'master'\n\nchore: RUN-784: Unittest for handling overflows in system api charge calculations\n\nUnit tests for overflows in charge calculations \n\nSee merge request dfinity-lab/public/ic!15666"
      },
      {
        "id": "e0e9c2de4356c82dc391abfc8d1cb575f4dada08",
        "date": "2023-10-26T08:13:42Z",
        "message": "chore: RUN-784: Unittest for handling overflows in system api charge calculations"
      },
      {
        "id": "6b1ab91040892a688e1603d1db7dc82314bb31b5",
        "date": "2023-10-25T23:52:07Z",
        "message": "Merge branch 'mk/system_api_improvements3' into 'master'\n\nchore: RUN-521: Additional system api simplifications\n\nWith this MR we end up with three functions for charging for api calls:\n\ncharge_for_cpu - which is used in cases where we only have cpu cost\n\ncharge_for_cpu_and_mem - which is used in cases where we touch memory\n\ncharge_for_stable_write - which name is self explanatory\n\nAdditionally, minor improvements and refactors. Among others, some shuffling around allowed to reduce the number of times system_api is extracted from store (which unwraps the option) \n\nSee merge request dfinity-lab/public/ic!15627"
      },
      {
        "id": "023cfe84513a5b9db9a1a966336fa01cd9d06ae0",
        "date": "2023-10-25T23:52:07Z",
        "message": "chore: RUN-521: Additional system api simplifications"
      },
      {
        "id": "bae0f8a22c45f5a370a24e3f777e01356144397d",
        "date": "2023-10-23T11:02:15Z",
        "message": "Merge branch 'mk/runtime_cleanups' into 'master'\n\nRUN-813: Remove unnecessary panic in wasmtime embedder\n\nThis MR makes the code more robust by replacing a panic with a proper error result. \n\nSee merge request dfinity-lab/public/ic!15525"
      },
      {
        "id": "192c052169d3342e8b22d787293bf4a003e2c777",
        "date": "2023-10-23T11:02:15Z",
        "message": "RUN-813: Remove unnecessary panic in wasmtime embedder"
      },
      {
        "id": "7353e3e80dd5b26adabc9ed42e3557f46bd0e021",
        "date": "2023-10-19T08:48:16Z",
        "message": "Merge branch 'mk/system_api_improvements2' into 'master'\n\nRUN-521, RUN-783: Change arguments of system_api host functions to unsigned\n\nIn this MR we change arguments of system_api host functions to unsigned where applicable.\nThe underlying motivation is to reduce a risk of incorrect casts (e.g. from i32 to u64).\nThese args are meant to be unsigned in the first place.\n\nAdditionally removing a \"convenience cast\" to u64 in the macro, to make it more explicit at call site what conversions are happening. \n\nSee merge request dfinity-lab/public/ic!15453"
      },
      {
        "id": "2900dc4c73a8ccfb2a81913be0d5d38300a262d7",
        "date": "2023-10-19T08:48:10Z",
        "message": "RUN-521, RUN-783: Change arguments of system_api host functions to unsigned"
      },
      {
        "id": "0829c9e2e8bf1c545dfdb7c17715733c286775d0",
        "date": "2023-10-18T06:07:24Z",
        "message": "Merge branch 'mk/system_api_improvements' into 'master'\n\nRUN-521: Refactor non native stable write charges and checks\n\nThis MR refactors how we process non-native stable write charging.\nIt moves the relevant checks out of the common path, so that they are no longer executed in all the other system api calls.\ndirty_stable_pages counter has been removed from ExecutionComplexity and is stored explicitly in StoreData. (used only in non-native mode).\n\nAs non-native stable is disabled by default, I added a few tests that explicitly check non-native mode. \n\nSee merge request dfinity-lab/public/ic!15411"
      },
      {
        "id": "5d73b2951044116fe8729508d7dec93360e77070",
        "date": "2023-10-18T06:07:24Z",
        "message": "RUN-521: Refactor non native stable write charges and checks"
      },
      {
        "id": "dd2169158980318939091920dc9deb7d56d45186",
        "date": "2023-10-17T11:38:14Z",
        "message": "Merge branch 'mk/inst_pre' into 'master'\n\nRUN-791: Pre instantiate wasm instances during compilation\n\nThis enables pre instantiation in wasmtime, which allows to do the linking against system api functions during compilation (instead of instantiation).\nhttps://docs.wasmtime.dev/api/wasmtime/struct.InstancePre.html\n\nAdditional explanation:\nWasmtime `Module` represents a compiled wasm module. To create a Wasmtime `Instance` of the module, additionally a `Store` with runtime data needs to be provided. To create a wasmtime `Instance`, wasmtime `Linker` is used, which links precompiled wasmtime module and optionally other modules, in our case system api host functions. `InstancePre` is a structure that represents an instance just before it was instantiated, after all type-checking and imports have been resolved. The only thing left to do for this instance is to actually run the process of instantiation. By creating `InstancePre`, and storing it in embedders cache instead of wasmtime `Module`, we save time on importing/linking/type checking system_api functions during actual instantiation.\n\nBenchmarks as well as testnet experiments show 30-40% improvement in execution time of very light wasm functions (like counter canister) \n\nSee merge request dfinity-lab/public/ic!15029"
      },
      {
        "id": "3caa40299c9cfd49168ce51eb38a6f3c3acd2f9b",
        "date": "2023-10-17T11:38:14Z",
        "message": "RUN-791: Pre instantiate wasm instances during compilation"
      },
      {
        "id": "1b11accafade884ec12f29592001cce4f3b95620",
        "date": "2023-10-04T10:23:55Z",
        "message": "[RUN-792] Enable new WASM metering on Application subnets"
      },
      {
        "id": "be94787cb924ccd2884cb02d73c535c4c7ebf234",
        "date": "2023-09-28T09:35:29Z",
        "message": "Merge branch 'mk/RUN-782_missing_tests' into 'master'\n\nRUN-782: Additional tests for declaring/accessing memory beyond limit\n\nCloses RUN-782\n\non top of tests added in this MR, the coverage on cases mentioned in RUN-782 is realized in already present tests:\n```\ngrow_memory_beyond_max_size_1\ngrow_memory_beyond_max_size_2\ngrow_memory_beyond_32_bit_limit_fails\n``` \n\nCloses RUN-782\n\nSee merge request dfinity-lab/public/ic!15055"
      },
      {
        "id": "719fbe7eada4dfb68f8132aa60773e3c0f7087df",
        "date": "2023-09-28T09:35:29Z",
        "message": "RUN-782: Additional tests for declaring/accessing memory beyond limit"
      },
      {
        "id": "2cfe80606f930da17defd7c003936cf1434a3424",
        "date": "2023-09-21T06:31:05Z",
        "message": "Merge branch 'mk/pretry3' into 'master'\n\nRefactoring and cleanups of system_api\n\nThis MR contains SystemApi cleanup/changes which are necessary for InstancePre functionality in wasmtime. (a follow-up MR will enable InstancePre itself). It may however be considered a separate change which we want regardless of InstancePre.\n\n\nInstancePre functionality allows to do the linking against system api functions during compilation (instead of instantiation).\n\nFor this to work, all the runtime data that was previously captured in closures, now needs to be extracted and put into DataStore (which is a runtime object, required for instantiation, but not linking).\n\nHowever, DataStore type needs to be known during linking.\nConsequently, DataStore can no longer be a generic type (it was previously templated with SystemApi trait). This leads to removal of SystemApiEmpty variant - we always use SystemApiImpl. Empty was replaced by Option::None.\n(alternatively we could implement a dummy SystemApiImpl object, and get rid of the option and unwraps; not done now, because it's not trivial)\n\nThe mentioned data separation leads to some simplifications of the linking function (system_api.rs:syscalls) \n\nSee merge request dfinity-lab/public/ic!14577"
      },
      {
        "id": "22c52b6e526793409892d3f32713b7f35819bf90",
        "date": "2023-09-21T06:31:05Z",
        "message": "Refactoring and cleanups of system_api"
      },
      {
        "id": "cf3b3457fa16c209ca5631de90d358652daee010",
        "date": "2023-08-21T08:42:34Z",
        "message": "Merge branch 'mk/dts_test_improvement' into 'master'\n\nRUN-690: Make dts tests execute with Application subnet type, as intended by the config\n\n \n\nSee merge request dfinity-lab/public/ic!14272"
      },
      {
        "id": "d2313468a28434ccaac4a80c5b8f9d7cd76004cc",
        "date": "2023-08-21T08:42:34Z",
        "message": "RUN-690: Make dts tests execute with Application subnet type, as intended by the config"
      },
      {
        "id": "f466969f93020c396d63e3811c445ebb2e449a61",
        "date": "2023-08-16T21:07:03Z",
        "message": "chore: RUN-651: instruction counting improvements in tests"
      },
      {
        "id": "82ab6b8ec3521d3df62ae2db206e4cc87f0aebc8",
        "date": "2023-08-16T00:44:29Z",
        "message": "feat: RUN-654: New Wasm Instrumentation Part 2"
      },
      {
        "id": "4cb8960512763da6fe995b77a0780944dbf26273",
        "date": "2023-08-08T10:44:05Z",
        "message": "RUN-328, RUN-633: New Wasm Instrumentation Part 1"
      }
    ],
    "email": "maciej.kot@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 24,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 10,
    "fixes": 0,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "cdaaeb6bc354cb2fb36b90228447e2dd31544d6c",
        "date": "2023-11-08T11:46:35Z",
        "message": "chore: RUN-836: Update validation of global section"
      },
      {
        "id": "e0e9c2de4356c82dc391abfc8d1cb575f4dada08",
        "date": "2023-10-26T08:13:42Z",
        "message": "chore: RUN-784: Unittest for handling overflows in system api charge calculations"
      },
      {
        "id": "023cfe84513a5b9db9a1a966336fa01cd9d06ae0",
        "date": "2023-10-25T23:52:07Z",
        "message": "chore: RUN-521: Additional system api simplifications"
      },
      {
        "id": "192c052169d3342e8b22d787293bf4a003e2c777",
        "date": "2023-10-23T11:02:15Z",
        "message": "RUN-813: Remove unnecessary panic in wasmtime embedder"
      },
      {
        "id": "2900dc4c73a8ccfb2a81913be0d5d38300a262d7",
        "date": "2023-10-19T08:48:10Z",
        "message": "RUN-521, RUN-783: Change arguments of system_api host functions to unsigned"
      },
      {
        "id": "5d73b2951044116fe8729508d7dec93360e77070",
        "date": "2023-10-18T06:07:24Z",
        "message": "RUN-521: Refactor non native stable write charges and checks"
      },
      {
        "id": "3caa40299c9cfd49168ce51eb38a6f3c3acd2f9b",
        "date": "2023-10-17T11:38:14Z",
        "message": "RUN-791: Pre instantiate wasm instances during compilation"
      },
      {
        "id": "1b11accafade884ec12f29592001cce4f3b95620",
        "date": "2023-10-04T10:23:55Z",
        "message": "[RUN-792] Enable new WASM metering on Application subnets"
      },
      {
        "id": "719fbe7eada4dfb68f8132aa60773e3c0f7087df",
        "date": "2023-09-28T09:35:29Z",
        "message": "RUN-782: Additional tests for declaring/accessing memory beyond limit"
      },
      {
        "id": "22c52b6e526793409892d3f32713b7f35819bf90",
        "date": "2023-09-21T06:31:05Z",
        "message": "Refactoring and cleanups of system_api"
      },
      {
        "id": "d2313468a28434ccaac4a80c5b8f9d7cd76004cc",
        "date": "2023-08-21T08:42:34Z",
        "message": "RUN-690: Make dts tests execute with Application subnet type, as intended by the config"
      },
      {
        "id": "f466969f93020c396d63e3811c445ebb2e449a61",
        "date": "2023-08-16T21:07:03Z",
        "message": "chore: RUN-651: instruction counting improvements in tests"
      },
      {
        "id": "82ab6b8ec3521d3df62ae2db206e4cc87f0aebc8",
        "date": "2023-08-16T00:44:29Z",
        "message": "feat: RUN-654: New Wasm Instrumentation Part 2"
      },
      {
        "id": "4cb8960512763da6fe995b77a0780944dbf26273",
        "date": "2023-08-08T10:44:05Z",
        "message": "RUN-328, RUN-633: New Wasm Instrumentation Part 1"
      }
    ],
    "line_additions": 1834,
    "line_deletions": 2085,
    "lines_effected_total": 3919,
    "rel_comm_add": 12,
    "rel_comm_del": 8,
    "rel_comm_total": 12
  },
  {
    "login": "nathanosdev",
    "id": 12646525,
    "totalContributions": 141,
    "github": "https://github.com/nathanosdev",
    "commits": [
      {
        "id": "3aa71cbfd64f15ed4f260f45bd27010c12e268aa",
        "date": "2023-11-17T11:53:26Z",
        "message": "Merge branch 'nathan/add-prod-bn-http-performance-test' into 'master'\n\ntest: add icx proxy boundary node performance test\n\n \n\nSee merge request dfinity-lab/public/ic!16044"
      },
      {
        "id": "5f3d12c6afb88b422141e5e95231aebce1bc32ba",
        "date": "2023-11-17T11:53:25Z",
        "message": "test: add icx proxy boundary node performance test"
      },
      {
        "id": "14592d5b1e562d63a88df7693de0a167cfed5440",
        "date": "2023-09-20T12:27:07Z",
        "message": "Merge branch 'nathan/use-sw-1-8-8' into 'master'\n\nfeat(boundary-node): use service worker v1.8.8\n\n \n\nSee merge request dfinity-lab/public/ic!14889"
      },
      {
        "id": "ab6bc251dd15d6329d2ac5d7d44584ad3e12e419",
        "date": "2023-09-20T08:20:15Z",
        "message": "feat(boundary-node): use service worker v1.8.8"
      },
      {
        "id": "9fce5907235a440b577c4d2b70844d40280b7eb3",
        "date": "2023-09-19T16:43:15Z",
        "message": "Merge branch 'levsha/Fix-boundary-node-service-worker-' into 'master'\n\nFix boundary-node-service-worker.\n\nIf the version is set just as `18` then it tries to use the latest version and therefore fails when the new version is released that is not the same as the one in CI image: https://gitlab.com/dfinity-lab/public/ic/-/jobs/5118004597\nTests should not fail just because new release was published externally. \n\nSee merge request dfinity-lab/public/ic!14867"
      },
      {
        "id": "482d49b7193d8b3ef3e21308db54efa35c16a2c9",
        "date": "2023-09-19T14:07:21Z",
        "message": "Merge branch 'nathan/sw-1-8-8' into 'master'\n\nfix: update response verification package\n\nfixes an issue with non-latin characters or other illegal characters in URL decoded paths, allows calls to /_/ paths on non-raw domains \n\nSee merge request dfinity-lab/public/ic!14833"
      },
      {
        "id": "dcc9befc243c2bfa0d2211d159285a6f84d77d35",
        "date": "2023-09-19T14:07:21Z",
        "message": "fix: update response verification package"
      },
      {
        "id": "0ebf3ed17f438c28f15263f2ef94c96514e382e2",
        "date": "2023-09-14T08:56:44Z",
        "message": "Merge branch 'nathan/create-load-during-upgrades-and-downgrades' into 'master'\n\ntest(service-worker): create load on the service worker during upgrade and downgrade e2e tests\n\nre #TT-233 \n\nSee merge request dfinity-lab/public/ic!14314"
      },
      {
        "id": "a350637e8790dd47066667cee70986d2b59150ce",
        "date": "2023-09-14T08:56:44Z",
        "message": "test(service-worker): create load on the service worker during upgrade and downgrade e2e tests"
      },
      {
        "id": "16021111d11e3dda991c1013116a13682223d8b0",
        "date": "2023-08-29T11:11:22Z",
        "message": "Merge branch 'nathan/convert-e2e-tests-to-jest' into 'master'\n\ntest: convert e2e sw tests to jest\n\n \n\nSee merge request dfinity-lab/public/ic!14280"
      },
      {
        "id": "e63029250c0b135b3ce2e1c2500ed8ead7981c38",
        "date": "2023-08-29T11:11:22Z",
        "message": "test: convert e2e sw tests to jest"
      },
      {
        "id": "9945298bacec25ac16b88d9ebd7e5879a3d57667",
        "date": "2023-08-29T09:32:17Z",
        "message": "feat: use sw 1.8.7"
      },
      {
        "id": "1f9e1a45392d51a86a3bd4b45063a77aa10ac111",
        "date": "2023-08-28T21:55:12Z",
        "message": "Merge branch 'nathan/sw-1-8-8' into 'master'\n\nfeat(service-worker,icx-proxy): update to response verification 1.1.0\n\n \n\nSee merge request dfinity-lab/public/ic!14423"
      },
      {
        "id": "98ba3ecfecbc9204db9a077ef2cf545172cba253",
        "date": "2023-08-28T21:55:12Z",
        "message": "feat(service-worker,icx-proxy): update to response verification 1.1.0"
      },
      {
        "id": "783f5eaa4789a68c4a03a799e97fb87e01793f45",
        "date": "2023-08-24T09:20:06Z",
        "message": "ci: run service worker e2e tests"
      },
      {
        "id": "def98d656f95bcd16cdc310874ccc3f25f35f48c",
        "date": "2023-08-17T17:12:08Z",
        "message": "Merge branch 'nathan/use-sw-1-6-8' into 'master'\n\nchore: use sw 1.8.6\n\n \n\nSee merge request dfinity-lab/public/ic!14227"
      },
      {
        "id": "88857670abee9a9d85d7cc0bbdf64cd1945cf840",
        "date": "2023-08-17T17:12:07Z",
        "message": "chore: use sw 1.8.6"
      },
      {
        "id": "3d19ee8e8f04b93f00329c1dccd3b4039ff11089",
        "date": "2023-08-17T15:28:42Z",
        "message": "Merge branch 'nathan/revert-decompression-streams' into 'master'\n\nfix: revert usage of DecompressionStreams API\n\n \n\nSee merge request dfinity-lab/public/ic!14215"
      },
      {
        "id": "26d9adb94bb989edb3999bd5b099d057d8fbaf1c",
        "date": "2023-08-17T15:28:42Z",
        "message": "fix: revert usage of DecompressionStreams API"
      },
      {
        "id": "65f1d51731051891b0e8fd987d2aeff876b620f0",
        "date": "2023-08-09T17:27:31Z",
        "message": "Merge branch 'nathan/sw-decompression-streams' into 'master'\n\nfeat: use native decompression streams in service worker\n\n \n\nSee merge request dfinity-lab/public/ic!14063"
      },
      {
        "id": "a0e17735156a6e0a88bebc99c2c87c5e72f6115c",
        "date": "2023-08-09T17:27:30Z",
        "message": "feat: use native decompression streams in service worker"
      },
      {
        "id": "a9eb3125829cf7d51ce6db36503e358762ae2991",
        "date": "2023-08-09T09:04:15Z",
        "message": "feat: release service worker 1.8.4"
      },
      {
        "id": "9d144940bddccbc47dd0a0730bf72ac52cc6411e",
        "date": "2023-08-08T17:57:11Z",
        "message": "fix(service-worker,icx-proxy): re-enable response verification v2"
      },
      {
        "id": "9eada7320ab5bcedc7d4269ab7a056ada7a1160d",
        "date": "2023-08-03T09:57:31Z",
        "message": "ci: revert sdk version to 0.12.0"
      },
      {
        "id": "533258b381fe071c5febd5a481d62b43aba0641d",
        "date": "2023-08-02T16:08:51Z",
        "message": "ci: add mkcert"
      },
      {
        "id": "465adfa027919e93aad8a74408e8398ac58ebd57",
        "date": "2023-08-02T14:28:42Z",
        "message": "ci: bump sdk version"
      },
      {
        "id": "efdf0d5b39722a433248502b8cb7e31e154170d6",
        "date": "2023-08-02T12:42:09Z",
        "message": "refactor: remove redundant nodejs version"
      }
    ],
    "email": "nathan.mcgrath@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 27,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 10,
    "fixes": 3,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "5f3d12c6afb88b422141e5e95231aebce1bc32ba",
        "date": "2023-11-17T11:53:25Z",
        "message": "test: add icx proxy boundary node performance test"
      },
      {
        "id": "ab6bc251dd15d6329d2ac5d7d44584ad3e12e419",
        "date": "2023-09-20T08:20:15Z",
        "message": "feat(boundary-node): use service worker v1.8.8"
      },
      {
        "id": "dcc9befc243c2bfa0d2211d159285a6f84d77d35",
        "date": "2023-09-19T14:07:21Z",
        "message": "fix: update response verification package"
      },
      {
        "id": "a350637e8790dd47066667cee70986d2b59150ce",
        "date": "2023-09-14T08:56:44Z",
        "message": "test(service-worker): create load on the service worker during upgrade and downgrade e2e tests"
      },
      {
        "id": "e63029250c0b135b3ce2e1c2500ed8ead7981c38",
        "date": "2023-08-29T11:11:22Z",
        "message": "test: convert e2e sw tests to jest"
      },
      {
        "id": "9945298bacec25ac16b88d9ebd7e5879a3d57667",
        "date": "2023-08-29T09:32:17Z",
        "message": "feat: use sw 1.8.7"
      },
      {
        "id": "98ba3ecfecbc9204db9a077ef2cf545172cba253",
        "date": "2023-08-28T21:55:12Z",
        "message": "feat(service-worker,icx-proxy): update to response verification 1.1.0"
      },
      {
        "id": "783f5eaa4789a68c4a03a799e97fb87e01793f45",
        "date": "2023-08-24T09:20:06Z",
        "message": "ci: run service worker e2e tests"
      },
      {
        "id": "88857670abee9a9d85d7cc0bbdf64cd1945cf840",
        "date": "2023-08-17T17:12:07Z",
        "message": "chore: use sw 1.8.6"
      },
      {
        "id": "26d9adb94bb989edb3999bd5b099d057d8fbaf1c",
        "date": "2023-08-17T15:28:42Z",
        "message": "fix: revert usage of DecompressionStreams API"
      },
      {
        "id": "a0e17735156a6e0a88bebc99c2c87c5e72f6115c",
        "date": "2023-08-09T17:27:30Z",
        "message": "feat: use native decompression streams in service worker"
      },
      {
        "id": "a9eb3125829cf7d51ce6db36503e358762ae2991",
        "date": "2023-08-09T09:04:15Z",
        "message": "feat: release service worker 1.8.4"
      },
      {
        "id": "9d144940bddccbc47dd0a0730bf72ac52cc6411e",
        "date": "2023-08-08T17:57:11Z",
        "message": "fix(service-worker,icx-proxy): re-enable response verification v2"
      },
      {
        "id": "9eada7320ab5bcedc7d4269ab7a056ada7a1160d",
        "date": "2023-08-03T09:57:31Z",
        "message": "ci: revert sdk version to 0.12.0"
      },
      {
        "id": "533258b381fe071c5febd5a481d62b43aba0641d",
        "date": "2023-08-02T16:08:51Z",
        "message": "ci: add mkcert"
      },
      {
        "id": "465adfa027919e93aad8a74408e8398ac58ebd57",
        "date": "2023-08-02T14:28:42Z",
        "message": "ci: bump sdk version"
      },
      {
        "id": "efdf0d5b39722a433248502b8cb7e31e154170d6",
        "date": "2023-08-02T12:42:09Z",
        "message": "refactor: remove redundant nodejs version"
      }
    ],
    "line_additions": 6426,
    "line_deletions": 4465,
    "lines_effected_total": 10891,
    "rel_comm_add": 12,
    "rel_comm_del": 9,
    "rel_comm_total": 12
  },
  {
    "login": "r-birkner",
    "id": 103420898,
    "totalContributions": 139,
    "github": "https://github.com/r-birkner",
    "commits": [
      {
        "id": "2a5da5d719367a21b637f02f230cd5faa3901091",
        "date": "2023-11-17T08:39:02Z",
        "message": "Merge branch 'igornovg/bn-req-size' into 'master'\n\nic-boundary: set max request size to 4MB\n\n@jason.zhu2 mentioned that some requests for NNS Governance canister cannot fit into 2MB limit, increase it to 4MB for now until we come up with other number. \n\nSee merge request dfinity-lab/public/ic!16166"
      },
      {
        "id": "6861d48fd58755a0726d5e0a2489cb8a929bf882",
        "date": "2023-11-14T22:59:19Z",
        "message": "Merge branch 'BOUN-833-bn-image-with-reverse-proxy-feature' into 'master'\n\nfeat(BOUN-833): deploy ic-boundary\n\nThis is the new boundary node that relies on `ic-boundary` instead of `nginx` for all API call routing. \n\nSee merge request dfinity-lab/public/ic!13975"
      },
      {
        "id": "5d5831ca11883469ec48f161740dcb304de2ccb0",
        "date": "2023-11-13T23:53:06Z",
        "message": "fix(boundary-nodes): Fix string formatting in system test"
      },
      {
        "id": "12180f42dfa5f065edbd141f748f9b320b2e5298",
        "date": "2023-11-02T11:52:47Z",
        "message": "Merge branch 'rjb/proxy-fix' into 'master'\n\nfixed environment variable name\n\n \n\nSee merge request dfinity-lab/public/ic!15845"
      },
      {
        "id": "91f5fb27263a5c9d149ecd0a308db2d37bb81de5",
        "date": "2023-11-02T10:15:59Z",
        "message": "fixed environment variable name"
      },
      {
        "id": "fe0dc57d545e921915cd969911c02af3b9fda0d2",
        "date": "2023-10-24T07:36:09Z",
        "message": "Merge branch 'rjb/extend-get-topology-to-include-api-bns' into 'master'\n\nAdd API BNs to get topology\n\n# BOUN-922\nThis MR extends the get-topology command to list the API Boundary Nodes in a separate section as opposed to listing them among the \"unassigned nodes\". I have tested the command against a testnet with two API Boundary Nodes and against mainnet, where no API Boundary Nodes exist yet. \n\nSee merge request dfinity-lab/public/ic!15494"
      },
      {
        "id": "df51a06a73b998123a58274d1a4341322de0364a",
        "date": "2023-10-24T07:36:09Z",
        "message": "Add API BNs to get topology"
      },
      {
        "id": "5df97987c7fb17d299488d895079b38f2035c386",
        "date": "2023-10-24T07:17:50Z",
        "message": "Merge branch 'BOUN-928-add-api-bn-decentralization-test' into 'master'\n\n(BOUN-928) Add API BN decentralization test\n\n \n\nSee merge request dfinity-lab/public/ic!15570"
      },
      {
        "id": "3c4a83edcd46ac2c2f2438baefdadfb46b5c037b",
        "date": "2023-09-28T19:13:52Z",
        "message": "Add BN Team as owner of custom domains system tests"
      },
      {
        "id": "c7413032f41a4e0e6458fcae243be9f80bcf3c90",
        "date": "2023-09-28T18:27:39Z",
        "message": "Merge branch 'rjb/custom-domains-tests' into 'master'\n\nchore(custom-domains): end-to-end testing\n\n# BOUN-804\n\nAdded a test to make sure that: \n* a \"stuck\" registration request is eventually removed (expirer)\n* a dropped task is picked up again (retrier)\n* a registration that is scheduled for renewal will eventually expire (expirer + renewal)\n* an end-to-end test that registers a new custom domain, updates it, and finally removes it again\n\nBesides the actual tests, the MR includes changes in the certificate syncer to speed up the tests and a fix for a tiny bug discovered while writing the tests:\n* make the polling interval faster\n* remove WithEmpty and integrate it in WithDedup to fix the bug that prevents the last remaining custom domain from being deleted when requested \n\nSee merge request dfinity-lab/public/ic!14650"
      },
      {
        "id": "63da6a70055ac4831dc7ef902f0b481125215865",
        "date": "2023-09-28T18:27:36Z",
        "message": "chore(custom-domains): end-to-end testing"
      },
      {
        "id": "b984b604dae81a044b7655f6568bc928159e6826",
        "date": "2023-09-11T11:32:19Z",
        "message": "Merge branch 'rjb/fix-certificate-syncer-file-copy' into 'master'\n\nfix(custom-domains): Copy raw domains file to all BN USB sticks\n\n \n\nSee merge request dfinity-lab/public/ic!14675"
      },
      {
        "id": "74d28e066484289deba9a8b8ad03c167e7bc9374",
        "date": "2023-09-11T11:32:18Z",
        "message": "fix(custom-domains): Copy raw domains file to all BN USB sticks"
      },
      {
        "id": "ace910f19b6a1b540dfe75e693df97d9d2b47140",
        "date": "2023-09-11T11:14:02Z",
        "message": "Merge branch 'rjb/make-certificate-syncer-start-without-raw-domains' into 'master'\n\nfix(custom-domains): Make certificate-syncer start also when there is no exceptions file specified\n\n \n\nSee merge request dfinity-lab/public/ic!14676"
      },
      {
        "id": "5d8b4f4446805f2babead41b6abe6538d83cf553",
        "date": "2023-09-11T11:14:01Z",
        "message": "fix(custom-domains): Make certificate-syncer start also when there is no exceptions file specified"
      },
      {
        "id": "54a935d6b315bce5c251269454aa4220fc30a062",
        "date": "2023-09-06T20:12:17Z",
        "message": "Merge branch 'rjb/sw-bypass-for-custom-domains' into 'master'\n\nfeature(custom-domains): Add custom domain SW bypass\n\n# BOUN-870 \n\nSee merge request dfinity-lab/public/ic!14543"
      },
      {
        "id": "c9530cf29fa2d08d7184e9b64091ab90b570227a",
        "date": "2023-09-06T20:12:17Z",
        "message": "feature(custom-domains): Add custom domain SW bypass"
      },
      {
        "id": "e82eb6c910bd36851585aa5b68d51540b811712c",
        "date": "2023-08-30T07:24:59Z",
        "message": "Merge branch 'adjust-params-ic-boundary-peformance-tesst' into 'master'\n\nAdjust params for ic-boundary performance system-test\n\nThese new params should be closer to what is used in prod \n\nSee merge request dfinity-lab/public/ic!14465"
      },
      {
        "id": "7f17b2aa3ac8e6c101f9c806ee5f1ee24680a0af",
        "date": "2023-08-29T19:52:32Z",
        "message": "Merge branch 'rjb/custom-domains-configurable-retry-and-expiry-timer' into 'master'\n\nfeature(certificate-orchestrator): configurable retry and expiry timer\n\n# BOUN-789 \n\nSee merge request dfinity-lab/public/ic!14404"
      },
      {
        "id": "55b9e166d008b7395b8c956c6d1799c17b39559f",
        "date": "2023-08-29T19:52:32Z",
        "message": "feature(certificate-orchestrator): configurable retry and expiry timer"
      },
      {
        "id": "d252140dc70f40ccf50a8255899aafb88770c1ee",
        "date": "2023-08-29T18:00:02Z",
        "message": "Merge branch 'rjb/custom-domains-configurable-processing-delays' into 'master'\n\nfeature(certificate-issuer): Configurable processing delays\n\n# BOUN-789 \n\nSee merge request dfinity-lab/public/ic!14384"
      },
      {
        "id": "fdf93f0c273ecb0d85c1e73beac96526de40d5c5",
        "date": "2023-08-29T18:00:02Z",
        "message": "feature(certificate-issuer): Configurable processing delays"
      },
      {
        "id": "5b265fe5a9cffd887094149da4c47437e3dea04f",
        "date": "2023-08-29T12:59:18Z",
        "message": "Merge branch 'nathan/use-sw-1-8-7' into 'master'\n\nfeat: use sw 1.8.7\n\n \n\nSee merge request dfinity-lab/public/ic!14443"
      },
      {
        "id": "f8675f57813dba60876faeacb019c390a678e239",
        "date": "2023-08-24T16:15:38Z",
        "message": "Merge branch 'rjb/fix-cors-for-request-id' into 'master'\n\nfix(nginx): add X-Request-Id to Access-Control-Expose-Headers\n\n# BOUN-852 \n\nSee merge request dfinity-lab/public/ic!14310"
      },
      {
        "id": "98f14b9431dd1e0d2444e01d312adfc42e5895cb",
        "date": "2023-08-24T16:15:38Z",
        "message": "fix(nginx): add X-Request-Id to Access-Control-Expose-Headers"
      },
      {
        "id": "647f4082937c532f8bf76793aceec6ab6c4fec12",
        "date": "2023-08-18T09:02:21Z",
        "message": "Merge branch 'raymond/BOUN-849' into 'master'\n\nfix(BOUN-849): gzip static assets served from the http gateway\n\nCloses BOUN-849 \n\nCloses BOUN-849\n\nSee merge request dfinity-lab/public/ic!14239"
      },
      {
        "id": "4c2846244f9de85a4f34c0c9c2eff98b26f1dbd3",
        "date": "2023-08-15T18:01:10Z",
        "message": "Merge branch 'rjb/custom-domains-system-test' into 'master'\n\nfeat(BOUN-546): Custom Domains System Test\n\nThis is the first MR of adding a comprehensive end-to-end test for custom domains. This MR just sets up the required infrastructure and adds a manual test to demonstrate that it works as intended.\n\nThe MR consists mostly of three changes:\n* Changes to the Boundary Node and its services to facilitate testing. For example, we had to extend the certificate issuer such that it allows to configure a specific DNS resolver instead of the system one. These changes are mostly under `ic-os/boundary-guestos/...` and `rs/boundary_node/certificate_issuance/certificate_issuer/...`.\n* Changes to the farm driver for the Boundary Node to pass in all the configurations required for custom domains. Now, it is possible to specify specific nameservers for IPv4 and IPv6 instead of the default ones.\n* Introduction of the actual test infrastructure. As custom domains involves several \"outside\" services, the changes are quite involved and we explain them in more detail below.\n\n_Test Infrastructure_\nCustom domains has three external dependencies: a DNS resolver to lookup user configurations, Cloudflare as a DNS provider to perform DNS challenges, and a ACME provider to request TLS certificates.\n\nFor the test, we mock all three of these dependencies in a single UVM. Within the UVM, multiple docker containers are started: coredns as DNS resolver, Cloudflare API to mock Cloudflare, Pebble as a ACME provider, and Pebble Cache as a shim between the Boundary Node and Pebble.\n\nAll the code to setup the test infrastructure is located in `rs/tests/src/custom_domains_integration/setup.rs`. The actual tests are located in `rs/tests/src/custom_domains_integration/certificate_orchestrator.rs`. So far, we have a single test that registers a custom domain and demonstrates the functionality of the setup.\n\nAs follow-up, we will create more tests and move the test from `manual` to a pipeline that is run regularly. \n\nSee merge request dfinity-lab/public/ic!13302"
      },
      {
        "id": "0924e8765623f1d83ff70b7131e132a934d14284",
        "date": "2023-08-15T18:01:10Z",
        "message": "feat(BOUN-546): Custom Domains System Test"
      },
      {
        "id": "6a64af37df95426f3ff4c54ba723cf4394c323c7",
        "date": "2023-08-15T11:00:15Z",
        "message": "fix(BOUN-846): add /_/raw to custom domains"
      },
      {
        "id": "f405b9e1392a7de104fe2328206e994b968d2865",
        "date": "2023-08-09T13:38:06Z",
        "message": "Merge branch 'rjb/bump-bn-sw-to-1.8.4' into 'master'\n\nBump the Service Worker on the Boundary Nodes to 1.8.4\n\n \n\nSee merge request dfinity-lab/public/ic!14049"
      },
      {
        "id": "f2bc2cca24b6577a31880404a573e4d6de81b6d5",
        "date": "2023-08-09T13:38:05Z",
        "message": "Bump the Service Worker on the Boundary Nodes to 1.8.4"
      },
      {
        "id": "caea8c2b95ce57eb7e19d7211f9fdab3d22b369f",
        "date": "2023-08-09T10:11:55Z",
        "message": "Merge branch 'nathan/bump-service-worker-1-8-4' into 'master'\n\nfeat: release service worker 1.8.4\n\n \n\nSee merge request dfinity-lab/public/ic!14040"
      },
      {
        "id": "89f59d57b5917e310fdb42a540843701a1a28327",
        "date": "2023-08-08T11:26:19Z",
        "message": "Merge branch 'kobi-icb-http-metrics2' into 'master'\n\nfeat(BOUN-824): metrics for http\n\n \n\nSee merge request dfinity-lab/public/ic!13869"
      }
    ],
    "email": "ruediger.birkner@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 33,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 19,
    "fixes": 6,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "5d5831ca11883469ec48f161740dcb304de2ccb0",
        "date": "2023-11-13T23:53:06Z",
        "message": "fix(boundary-nodes): Fix string formatting in system test"
      },
      {
        "id": "91f5fb27263a5c9d149ecd0a308db2d37bb81de5",
        "date": "2023-11-02T10:15:59Z",
        "message": "fixed environment variable name"
      },
      {
        "id": "df51a06a73b998123a58274d1a4341322de0364a",
        "date": "2023-10-24T07:36:09Z",
        "message": "Add API BNs to get topology"
      },
      {
        "id": "3c4a83edcd46ac2c2f2438baefdadfb46b5c037b",
        "date": "2023-09-28T19:13:52Z",
        "message": "Add BN Team as owner of custom domains system tests"
      },
      {
        "id": "63da6a70055ac4831dc7ef902f0b481125215865",
        "date": "2023-09-28T18:27:36Z",
        "message": "chore(custom-domains): end-to-end testing"
      },
      {
        "id": "74d28e066484289deba9a8b8ad03c167e7bc9374",
        "date": "2023-09-11T11:32:18Z",
        "message": "fix(custom-domains): Copy raw domains file to all BN USB sticks"
      },
      {
        "id": "5d8b4f4446805f2babead41b6abe6538d83cf553",
        "date": "2023-09-11T11:14:01Z",
        "message": "fix(custom-domains): Make certificate-syncer start also when there is no exceptions file specified"
      },
      {
        "id": "c9530cf29fa2d08d7184e9b64091ab90b570227a",
        "date": "2023-09-06T20:12:17Z",
        "message": "feature(custom-domains): Add custom domain SW bypass"
      },
      {
        "id": "55b9e166d008b7395b8c956c6d1799c17b39559f",
        "date": "2023-08-29T19:52:32Z",
        "message": "feature(certificate-orchestrator): configurable retry and expiry timer"
      },
      {
        "id": "fdf93f0c273ecb0d85c1e73beac96526de40d5c5",
        "date": "2023-08-29T18:00:02Z",
        "message": "feature(certificate-issuer): Configurable processing delays"
      },
      {
        "id": "98f14b9431dd1e0d2444e01d312adfc42e5895cb",
        "date": "2023-08-24T16:15:38Z",
        "message": "fix(nginx): add X-Request-Id to Access-Control-Expose-Headers"
      },
      {
        "id": "0924e8765623f1d83ff70b7131e132a934d14284",
        "date": "2023-08-15T18:01:10Z",
        "message": "feat(BOUN-546): Custom Domains System Test"
      },
      {
        "id": "6a64af37df95426f3ff4c54ba723cf4394c323c7",
        "date": "2023-08-15T11:00:15Z",
        "message": "fix(BOUN-846): add /_/raw to custom domains"
      },
      {
        "id": "f2bc2cca24b6577a31880404a573e4d6de81b6d5",
        "date": "2023-08-09T13:38:05Z",
        "message": "Bump the Service Worker on the Boundary Nodes to 1.8.4"
      }
    ],
    "line_additions": 4140,
    "line_deletions": 288,
    "lines_effected_total": 4428,
    "rel_comm_add": 8,
    "rel_comm_del": 6,
    "rel_comm_total": 10
  },
  {
    "login": "przydatek",
    "id": 24719490,
    "totalContributions": 139,
    "github": "https://github.com/przydatek",
    "commits": [
      {
        "id": "d156a70d85e10e7132c90abf439bbb873bca237a",
        "date": "2023-08-18T16:09:33Z",
        "message": "Merge branch 'bartosz/NNS1-202-blocking' into 'master'\n\nfeat(crypto): NNS1-202: enabling node crypto keys invariants in a blocking way.\n\nSwitching \"soft\" invariants into \"hard\" (i.e. blocking) ones.\nThe soft invariants were enabled on the mainnet over a month ago, and according to logs the were no invariant violations since then.  In the last 40 days (as of Aug. 17, 10:38am Zurich time): \n- there are 15'691 log entries labelled `crypto_soft_invariants_check_start` ([link](https://kibana.mainnet.dfinity.network/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:60000),time:(from:now-40d,to:now))&_a=(columns:!(),filters:!(),hideChart:!f,index:'020df008-22af-44a5-b410-3e6e3a3b4f2c',interval:auto,query:(language:kuery,query:crypto_soft_invariants_check_start),rowsPerPage:500,sort:!(!(timestamp,desc)),viewMode:documents)))\n- there are 15'691 log entries labelled `crypto_soft_invariants_check_success` ([link](https://kibana.mainnet.dfinity.network/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:60000),time:(from:now-40d,to:now))&_a=(columns:!(),filters:!(),hideChart:!f,index:'020df008-22af-44a5-b410-3e6e3a3b4f2c',interval:auto,query:(language:kuery,query:crypto_soft_invariants_check_success),rowsPerPage:500,sort:!(!(timestamp,desc)),viewMode:documents)))\n- there are 0 log entries labelled `crypto_soft_invariants_check_failure` ([link](https://kibana.mainnet.dfinity.network/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:60000),time:(from:now-40d,to:now))&_a=(columns:!(),filters:!(),hideChart:!f,index:'020df008-22af-44a5-b410-3e6e3a3b4f2c',interval:auto,query:(language:kuery,query:crypto_soft_invariants_check_failure),rowsPerPage:500,sort:!(!(timestamp,desc)),viewMode:documents)))\n\nTherefore it seems safe to switch to blocking mode.\n\nCloses NNS1-202 \n\nCloses NNS1-202\n\nSee merge request dfinity-lab/public/ic!14188"
      },
      {
        "id": "099bfce2803f6c3fa849612ba2d49fe13f5c8323",
        "date": "2023-08-18T16:09:33Z",
        "message": "feat(crypto): NNS1-202: enabling node crypto keys invariants in a blocking way."
      }
    ],
    "email": "bartosz.przydatek@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 1,
    "fixes": 0,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "099bfce2803f6c3fa849612ba2d49fe13f5c8323",
        "date": "2023-08-18T16:09:33Z",
        "message": "feat(crypto): NNS1-202: enabling node crypto keys invariants in a blocking way."
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "frederikrothenberger",
    "id": 94825501,
    "totalContributions": 135,
    "github": "https://github.com/frederikrothenberger",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "hcbdfinity",
    "id": 69521293,
    "totalContributions": 135,
    "github": "https://github.com/hcbdfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "sasa-tomic",
    "id": 34031969,
    "totalContributions": 133,
    "github": "https://github.com/sasa-tomic",
    "commits": [
      {
        "id": "473be93eb7a52d6ffb78f3c9a5fe03698ebaa9f6",
        "date": "2023-11-16T16:23:28Z",
        "message": "Merge branch 'sat-repro-check-hostos-zst' into 'master'\n\nfeat(ci): repro-check.sh - use HostOS .zst image instead of .gz\n\nTested with one revision\n```\nBuild complete for revision d430f7ad0c6384921801a54b37b9f3c55a360c51\n2023/11/14 | 16:03:01 | 1699977781 [+] Built IC-OS successfully\n2023/11/14 | 16:03:10 | 1699977790 [+] Check hash of locally built artifact matches the one fetched from the proposal/CDN\n2023/11/14 | 16:03:10 | 1699977790 [+] Verification successful for GuestOS!     \n2023/11/14 | 16:03:10 | 1699977790 [+] The shasum for GuestOS from the artifact built locally and the one fetched from the proposal/CDN match:\n                                                Local = a809a701ba4dbe655fd156e449bd2a2d750dd962b06883c1ae527c2e79b4b983\n                                                CDN   = a809a701ba4dbe655fd156e449bd2a2d750dd962b06883c1ae527c2e79b4b983\n                                               \n                                               \n2023/11/14 | 16:03:10 | 1699977790 [+] Verification successful for HostOS!\n2023/11/14 | 16:03:10 | 1699977790 [+] The shasum for HostOS from the artifact built locally and the one fetched from the proposal/CDN match:\n                                                Local = 1ee54dd719b7fc27fe3fd77698e600ce5ee4171b6c58c66503cef54616250452\n                                                CDN   = 1ee54dd719b7fc27fe3fd77698e600ce5ee4171b6c58c66503cef54616250452\n                                                                                               \n                                                                                                                                                                                              \n2023/11/14 | 16:03:10 | 1699977790 [+] Verification successful for SetupOS!                                                                                                                   \n2023/11/14 | 16:03:10 | 1699977790 [+] The shasum for SetupOS from the artifact built locally and the one fetched from the proposal/CDN match:\n                                                Local = 251356d78ec40580c0726ebdcc1466e42e6c6fbfa558bcedad7bfec32fca7872\n                                                CDN   = 251356d78ec40580c0726ebdcc1466e42e6c6fbfa558bcedad7bfec32fca7872\n                                                                                               \n                                               \n2023/11/14 | 16:03:10 | 1699977790 [+] All images are validated successfully\n``` \n\nSee merge request dfinity-lab/public/ic!16091"
      },
      {
        "id": "f2612e404ad81f28b0614e9e39e080c91f47963b",
        "date": "2023-11-14T17:05:42Z",
        "message": "feat(ci): repro-check.sh - use HostOS .zst image instead of .gz"
      },
      {
        "id": "d3cf54f30ecebf1c85253622681816884f4784ac",
        "date": "2023-11-09T16:25:30Z",
        "message": "Merge branch 'sat-ic-admin-accept-multi-nns-urls' into 'master'\n\nfeat(ic-admin): Accept multiple NNS urls in arg, and use reachable ones\n\nThe change is backwards compatible. The only difference in behavior is that multiple comma-separated NNS URLs are accepted, and the ones that are momentarily reachable will be used.\n\nFor instance:\n```\nic-admin --nns-url https://ic1.app,http://invalid-url.xyz get-subnet-list\nERROR resolving the socket address for http://invalid-url.xyz/: failed to lookup address information: Name or service not known\n[\n  \"tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe\",\n  \"snjp4-xlbw4-mnbog-ddwy6-6ckfd-2w5a2-eipqo-7l436-pxqkh-l6fuv-vae\",\n[...]\n``` \n\nSee merge request dfinity-lab/public/ic!15981"
      },
      {
        "id": "775d955d07e45a244b8b3eef810afaa94597ffb0",
        "date": "2023-11-09T16:25:30Z",
        "message": "feat(ic-admin): Accept multiple NNS urls in arg, and use reachable ones"
      },
      {
        "id": "273e4c4a712cc97803e4849b2326b3299637e7ff",
        "date": "2023-11-08T14:07:36Z",
        "message": "Merge branch 'sat-ic-admin-get-topology-details' into 'master'\n\nfeat(ic-admin): Provide more node details in get-topology subcommand\n\n \n\nSee merge request dfinity-lab/public/ic!15883"
      },
      {
        "id": "05ec05a1f0cc4012e9992cb3873a6912d94567bc",
        "date": "2023-11-08T14:07:36Z",
        "message": "feat(ic-admin): Provide more node details in get-topology subcommand"
      },
      {
        "id": "2667089a4ffe140ab61bf41294ccb043aa87c535",
        "date": "2023-11-01T11:51:45Z",
        "message": "Merge branch 'sat-workspace-version' into 'master'\n\nfeat(release): Introduce workspace version\n\n \n\nSee merge request dfinity-lab/public/ic!15795"
      },
      {
        "id": "8b6c8d1b0f75b1c4d41a3e251a715bde59c4d19a",
        "date": "2023-11-01T11:51:44Z",
        "message": "feat(release): Introduce workspace version"
      },
      {
        "id": "57bc1c6e7cfcc420aeeb8d34f3c614a316c98bdb",
        "date": "2023-10-26T11:51:11Z",
        "message": "chore(ci): Remove special handling and uploading of blessed binaries"
      },
      {
        "id": "d8c42b9bd375c6af86f986e4788b4c77a7e3fb11",
        "date": "2023-10-24T09:00:51Z",
        "message": "Merge branch 'rotate-pdm-ssh-key' into 'master'\n\nRotate Pietro Di Marco ssh key\n\n \n\nSee merge request dfinity-lab/public/ic!15593"
      },
      {
        "id": "559c6bb62e446a1644c1f16c52da070a5587924d",
        "date": "2023-09-29T10:57:19Z",
        "message": "Merge branch 'sat-scalability-latency-target-bump' into 'master'\n\nfix(ci): Bump up the acceptable latency in the e2e scalability suite\n\nExample flakiness https://gitlab.com/dfinity-lab/public/ic/-/jobs/5039794799:\n```\n------------------------------\n✅ Succeeded error rate (is: 0.0 - threshold 0.05)\n✅ Succeeded seq errors (is: 0 - threshold 0.0)\n✅ Succeeded enough responses (is: 348 - threshold -3700.0)\n✅ Succeeded send rate (is: 0.37 - threshold 0.3)\n❌ Failed latency  (is: 54880.8591954023 - threshold 40000)\nChecking success for total message rate 500 for host 2a00:fb01:400:42:5046:8cff:fe6d:99ec\n------------------------------\n``` \n\nSee merge request dfinity-lab/public/ic!14687"
      },
      {
        "id": "0ccbb6f9f0b0bebe98bf79d9f076c957f38ef9f9",
        "date": "2023-09-28T17:40:39Z",
        "message": "Merge branch 'alex/change_key' into 'master'\n\nchange key for alex uta\n\nChange key for Alex Uta. \n\nSee merge request dfinity-lab/public/ic!15076"
      },
      {
        "id": "f208a9de6184e96b342521959cb0e227568f9a08",
        "date": "2023-09-11T17:09:53Z",
        "message": "Merge branch 'sat-hostos-remove-filebeat' into 'master'\n\nchore(node): Remove filebeat from HostOS\n\n \n\nSee merge request dfinity-lab/public/ic!14719"
      },
      {
        "id": "b59e28314ba114952c1b9113ceaaf72aa0d89546",
        "date": "2023-09-11T14:51:47Z",
        "message": "chore(node): Remove filebeat from HostOS"
      },
      {
        "id": "e4cc58077b844d2150fde913a3a46bac1b26ac05",
        "date": "2023-09-08T14:03:31Z",
        "message": "Merge branch 'sat-orchestrator-registration-messages-console' into 'master'\n\nfeat(node): Show messages on the console if there are node registration errors\n\nCloses ICSUP-3631 \n\nCloses ICSUP-3631\n\nSee merge request dfinity-lab/public/ic!14669"
      },
      {
        "id": "020371411e73ff0b586068bf69242483fe9f8147",
        "date": "2023-09-08T12:18:04Z",
        "message": "fix(ci): Bump up the acceptable latency in the e2e scalability suite"
      },
      {
        "id": "9f34504261ac04753df3af7b9478d7df2563ef4e",
        "date": "2023-09-07T16:13:02Z",
        "message": "feat(node): Show messages on the console if there are node registration errors"
      },
      {
        "id": "63cc5783b5a68d7d8e2184f3957ba024d43b98ea",
        "date": "2023-08-31T06:59:20Z",
        "message": "Merge branch 'sat-journalbeat-upgrade' into 'master'\n\nchore(Node): Replace incompatible old version of Journalbeat with new Filebeat\n\nThis is intended only for testnets. Mainnet has a different way to scrape logs.\nThe change has been tested on the small13 testnet, the logs are coming in as expected.\n\n[Kibana link](https://kibana.testnet.dfinity.network/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:60000),time:(from:now-15m,to:now))&_a=(columns:!(),filters:!(),index:'35c5ba4b-6db5-42f6-a760-39ca89a177fe',interval:auto,query:(language:kuery,query:''),sort:!(!('@timestamp',desc)))).\n![image](/uploads/43a3bb4ef25b818516feabd0ef7f43f1/image.png) \n\nSee merge request dfinity-lab/public/ic!14431"
      },
      {
        "id": "11427c8f6bd9f87307916e893dd5e1e3e9444f52",
        "date": "2023-08-31T06:59:19Z",
        "message": "chore(Node): Replace incompatible old version of Journalbeat with new Filebeat"
      },
      {
        "id": "86087f8a1b8f48d676b8612c97bc3a6c3ae2094e",
        "date": "2023-08-30T06:23:01Z",
        "message": "Merge branch 'sat-ci-bench-curl-fail' into 'master'\n\nfix(ci): Prevent silent curl failures in benchmark jobs\n\n \n\nSee merge request dfinity-lab/public/ic!14469"
      },
      {
        "id": "3a97b102d2e10a1f82128d2f27b2dbbf44c7f4d3",
        "date": "2023-08-30T06:23:01Z",
        "message": "fix(ci): Prevent silent curl failures in benchmark jobs"
      },
      {
        "id": "d8b6b09c631a8aef05394bc68b0abc358c71e2c7",
        "date": "2023-08-29T22:03:38Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-29-2010' into 'master'\n\nUpdating container base images refs [2023-08-29-2010]\n\n \n\nSee merge request dfinity-lab/public/ic!14467"
      },
      {
        "id": "fb98550e690495a1443afd01daa77be58d204bab",
        "date": "2023-08-29T18:08:32Z",
        "message": "chore(Node): Add Filebeat to the base IC-OS image"
      },
      {
        "id": "254b6a157b9709bf1a544a6a051bf7ff8c2b05d1",
        "date": "2023-08-24T05:10:22Z",
        "message": "Merge branch 'sat-cleanup-prod-test-pipelines' into 'master'\n\nchore(ci): Remove obsolete rejoin test written as a shell script, and some now unused CI config\n\n \n\nSee merge request dfinity-lab/public/ic!13914"
      },
      {
        "id": "253a412d8794731763009b615916473c28a375d3",
        "date": "2023-08-24T05:10:21Z",
        "message": "chore(ci): Remove obsolete rejoin test written as a shell script, and some now unused CI config"
      },
      {
        "id": "34faad9ef09bca1c54d42e6a47ea0b7108ee7a80",
        "date": "2023-08-04T14:51:01Z",
        "message": "Merge branch 'sat-update-observability-urls' into 'master'\n\nchore(observability): Update Grafana/Elasticsearch/Kibana URLs\n\n \n\nSee merge request dfinity-lab/public/ic!13956"
      },
      {
        "id": "002b55fd6ea81d279efaa0a0e9e9d31b465c6c7a",
        "date": "2023-08-04T14:51:00Z",
        "message": "chore(observability): Update Grafana/Elasticsearch/Kibana URLs"
      }
    ],
    "email": "sasa.tomic@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 27,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 14,
    "fixes": 2,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "f2612e404ad81f28b0614e9e39e080c91f47963b",
        "date": "2023-11-14T17:05:42Z",
        "message": "feat(ci): repro-check.sh - use HostOS .zst image instead of .gz"
      },
      {
        "id": "775d955d07e45a244b8b3eef810afaa94597ffb0",
        "date": "2023-11-09T16:25:30Z",
        "message": "feat(ic-admin): Accept multiple NNS urls in arg, and use reachable ones"
      },
      {
        "id": "05ec05a1f0cc4012e9992cb3873a6912d94567bc",
        "date": "2023-11-08T14:07:36Z",
        "message": "feat(ic-admin): Provide more node details in get-topology subcommand"
      },
      {
        "id": "8b6c8d1b0f75b1c4d41a3e251a715bde59c4d19a",
        "date": "2023-11-01T11:51:44Z",
        "message": "feat(release): Introduce workspace version"
      },
      {
        "id": "57bc1c6e7cfcc420aeeb8d34f3c614a316c98bdb",
        "date": "2023-10-26T11:51:11Z",
        "message": "chore(ci): Remove special handling and uploading of blessed binaries"
      },
      {
        "id": "b59e28314ba114952c1b9113ceaaf72aa0d89546",
        "date": "2023-09-11T14:51:47Z",
        "message": "chore(node): Remove filebeat from HostOS"
      },
      {
        "id": "020371411e73ff0b586068bf69242483fe9f8147",
        "date": "2023-09-08T12:18:04Z",
        "message": "fix(ci): Bump up the acceptable latency in the e2e scalability suite"
      },
      {
        "id": "9f34504261ac04753df3af7b9478d7df2563ef4e",
        "date": "2023-09-07T16:13:02Z",
        "message": "feat(node): Show messages on the console if there are node registration errors"
      },
      {
        "id": "11427c8f6bd9f87307916e893dd5e1e3e9444f52",
        "date": "2023-08-31T06:59:19Z",
        "message": "chore(Node): Replace incompatible old version of Journalbeat with new Filebeat"
      },
      {
        "id": "3a97b102d2e10a1f82128d2f27b2dbbf44c7f4d3",
        "date": "2023-08-30T06:23:01Z",
        "message": "fix(ci): Prevent silent curl failures in benchmark jobs"
      },
      {
        "id": "fb98550e690495a1443afd01daa77be58d204bab",
        "date": "2023-08-29T18:08:32Z",
        "message": "chore(Node): Add Filebeat to the base IC-OS image"
      },
      {
        "id": "253a412d8794731763009b615916473c28a375d3",
        "date": "2023-08-24T05:10:21Z",
        "message": "chore(ci): Remove obsolete rejoin test written as a shell script, and some now unused CI config"
      },
      {
        "id": "002b55fd6ea81d279efaa0a0e9e9d31b465c6c7a",
        "date": "2023-08-04T14:51:00Z",
        "message": "chore(observability): Update Grafana/Elasticsearch/Kibana URLs"
      }
    ],
    "line_additions": 3440,
    "line_deletions": 3741,
    "lines_effected_total": 7181,
    "rel_comm_add": 7,
    "rel_comm_del": 7,
    "rel_comm_total": 9
  },
  {
    "login": "mahir-dfinity",
    "id": 107896195,
    "totalContributions": 132,
    "github": "https://github.com/mahir-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "kpop-dfinity",
    "id": 125868903,
    "totalContributions": 128,
    "github": "https://github.com/kpop-dfinity",
    "commits": [
      {
        "id": "cf5579b08c32a34408d88e75fc7bc11e5a861137",
        "date": "2023-11-20T16:50:53Z",
        "message": "Merge branch 'kpop/chores/log_errors_in_orchestrator' into 'master'\n\nchore(orchestrator): don't throw away the errors\n\nIt will help with debugging failures like\n```\nNov 17 13:10:26 localhost orchestrator[902]: thread 'main' panicked at 'Failed to create dir: \"/var/lib/ic/data/images\"', \n``` \n\nSee merge request dfinity-lab/public/ic!16178"
      },
      {
        "id": "a90886a22f387ba20ca358df1b933df0d3d07c18",
        "date": "2023-11-20T16:50:49Z",
        "message": "chore(orchestrator): don't throw away the errors"
      },
      {
        "id": "e7adb9304647aa4193e8bd748a811dbc010a0513",
        "date": "2023-11-17T11:01:11Z",
        "message": "Merge branch 'kpop/chores/fix_eq' into 'master'\n\nfix(consensus): make the implementations of `PartialEq` and `PartialOrd` for `consensus::tests::framework::Message` consistent\n\nAs pointed out by @roman-kashitsyn in https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16081#note_1650083213, currently, it might happen that `partial_cmp(message_1, message_2) = Some(Equal)` even when `message_1 ≠ message_2`, which violates the consistency requirement of `PartialOrd` and `PartialEq` (see [the documentation](https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html)).\n\nThis MR fixes it. \n\nSee merge request dfinity-lab/public/ic!16122"
      },
      {
        "id": "ef4c5b14e310161f115c93402befc00423cf37db",
        "date": "2023-11-17T11:01:09Z",
        "message": "fix(consensus): make the implementations of `PartialEq` and `PartialOrd` for `consensus::tests::framework::Message` consistent"
      },
      {
        "id": "9514946d0466073b6204352772996bfd816aaf8c",
        "date": "2023-11-16T11:42:49Z",
        "message": "Merge branch 'kpop/chores/remove_dead_code' into 'master'\n\nchore(consensus): remove the `allow(dead_code)` attributes from Consensus production code\n\nRemoved the `allow(dead_code)` attributes from `//rs/consensus/`.\n\nAlong the way:\n1. Removed several unused functions/arguments/fields\n2. Moved `resolve_sig_inputs_refs` in ecdsa/signer.rs to a `test` mod, because it's only used by tests\n3. Added a test case to cover `TranscriptLoadStatus::Failure` (otherwise the linter complained about `TestTranscriptLoadStatus::Failure` being never constructed)\n\nNote: there is still some `allow(dead_code)` in `rs/consensus/test/framework` \n\nSee merge request dfinity-lab/public/ic!16120"
      },
      {
        "id": "46db573f527222015b9239bcb5ca01d9031e37eb",
        "date": "2023-11-16T11:42:49Z",
        "message": "chore(consensus): remove the `allow(dead_code)` attributes from Consensus production code"
      },
      {
        "id": "035a11bb1ad4a8176f7b87c19a15dcdb9d49784a",
        "date": "2023-11-15T18:01:06Z",
        "message": "Merge branch 'kpop/CON-1163/system_test' into 'master'\n\ntest(consensus): [CON-1163, ICSUP-3734] Add a system test for membership changes\n\nIn the test we start with a subnet with a single node and keep adding nodes to the subnet, one at the time, until we have seven nodes in the subnet. After each node is added, we check whether the subnet is making progress.\n\nThis will hopefully catch a bug causing [ICSUP-3733](https://dfinity.atlassian.net/browse/ICSUP-3733)\n\nExample of a failing test (before CON-1162 was fixed):\n```\n[REDACTED]\n2023-11-15 08:11:54.082 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:53.703 INFO[test:rs/tests/src/consensus/membership_test.rs:110:0] Sending a proposal for node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae to join subnet e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe via the governance caniste\nr\n2023-11-15 08:11:56.082 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:55.750 INFO[test:rs/tests/src/consensus/membership_test.rs:126:0] Executing the proposal to add node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae to subnet e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe\n2023-11-15 08:11:58.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:57.847 INFO[test:StdErr] Non-final states were seen 0 times for proposal 2.\n2023-11-15 08:11:58.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:57.847 INFO[test:StdOut] Proposal proposal 2 status: Executed\n2023-11-15 08:11:58.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:57.890 INFO[test:rs/tests/src/consensus/membership_test.rs:142:0] Waiting until node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae is assigned to subnet e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe\n2023-11-15 08:11:58.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:57.899 INFO[test:rs/tests/src/driver/test_env_api.rs:479:0]\n2023-11-15 08:11:58.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: ============================================== IC TopologySnapshot, registry version 3 ==============================================\n2023-11-15 08:11:58.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Subnet id=k7ms7-xn5fv-humm5-kjncj-52ba2-rtjxs-lt5bb-u62ie-o6d4t-phzij-2qe, index=0, type=System\n2023-11-15 08:11:58.333 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=upu5n-xwip4-drbkm-e7qms-cos35-ygure-mplkw-7oo54-f4bjj-w4t7p-3ae, ipv6=2a0b:21c0:4003:2:50ba:edff:fe31:d9a0, index=0\n2023-11-15 08:11:58.333 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Subnet id=e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe, index=1, type=Application\n2023-11-15 08:11:58.359 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae, ipv6=2a0b:21c0:4003:2:500e:d1ff:fe00:6543, index=0\n2023-11-15 08:11:58.359 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=5dyj5-5ogks-37t5t-faevw-3dpo6-y7yty-goowk-jtsn6-2kq7a-yid34-jqe, ipv6=2a0b:21c0:4003:2:503d:caff:fe25:b321, index=1\n2023-11-15 08:11:58.359 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=miycm-piedv-ovywc-f4ajb-2ta3n-2uqbo-bjppw-5jkte-zlehe-jwoac-eae, ipv6=2a0b:21c0:4003:2:50a2:d0ff:fe3a:e2d0, index=2\n2023-11-15 08:11:58.359 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Unassigned nodes:\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae, ipv6=2a0b:21c0:4003:2:5037:41ff:fe19:9a75, index=0\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=lnsg5-yohq2-e37uw-f7a7m-thfmv-jpmmu-heenl-nquyx-z7gp2-ankpy-fqe, ipv6=2a0b:21c0:4003:2:501e:28ff:fe89:52db, index=1\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=xpajt-bothf-ghpzw-ps3kq-kqx4m-p5ff6-2rpaj-3yxvv-k3egc-ak6ix-rae, ipv6=2a0b:21c0:4003:2:5003:51ff:feed:1228, index=2\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=zejwo-yoqhh-ju7e6-m7zg7-xrdw4-g5tl4-bk576-ez2dj-zav6s-bgtoi-rqe, ipv6=2a0b:21c0:4003:2:50ed:58ff:fec3:6ca5, index=3\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: =====================================================================================================================================\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:\n2023-11-15 08:11:58.360 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:11:57.899 INFO[test:rs/tests/src/consensus/membership_test.rs:187:0] Verifying that the node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae is making progress\n[REDACTED]\n2023-11-15 08:12:13.293 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:13.277 INFO[test:rs/tests/src/consensus/membership_test.rs:208:0] Waiting until node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae progresses past height 190\n2023-11-15 08:12:23.582 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:23.294 WARN[test:rs/tests/src/consensus/membership_test.rs:223:0] Node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae didn't make enough progress in 10 seconds and is at height 174\n2023-11-15 08:12:33.582 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:33.311 WARN[test:rs/tests/src/consensus/membership_test.rs:223:0] Node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae didn't make enough progress in 20 seconds and is at height 188\n2023-11-15 08:12:43.592 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:43.327 INFO[test:rs/tests/src/consensus/membership_test.rs:215:0] Node bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae progressed from height 160 to height 199\n2023-11-15 08:12:43.592 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:43.328 INFO[test:rs/tests/src/consensus/membership_test.rs:110:0] Sending a proposal for node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae to join subnet e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe via the governance caniste\nr\n2023-11-15 08:12:45.833 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:45.378 INFO[test:rs/tests/src/consensus/membership_test.rs:126:0] Executing the proposal to add node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae to subnet e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:47.475 INFO[test:StdErr] Non-final states were seen 0 times for proposal 3.\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:47.475 INFO[test:StdOut] Proposal proposal 3 status: Executed\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:47.518 INFO[test:rs/tests/src/consensus/membership_test.rs:142:0] Waiting until node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae is assigned to subnet e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:47.518 INFO[test:rs/tests/src/driver/test_env_api.rs:1937:0] Retrying for a maximum of 180s with a linear backoff of 2s\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:47.566 INFO[test:rs/tests/src/driver/test_env_api.rs:479:0]\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: ============================================== IC TopologySnapshot, registry version 4 ==============================================\n2023-11-15 08:12:47.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Subnet id=k7ms7-xn5fv-humm5-kjncj-52ba2-rtjxs-lt5bb-u62ie-o6d4t-phzij-2qe, index=0, type=System\n2023-11-15 08:12:47.833 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=upu5n-xwip4-drbkm-e7qms-cos35-ygure-mplkw-7oo54-f4bjj-w4t7p-3ae, ipv6=2a0b:21c0:4003:2:50ba:edff:fe31:d9a0, index=0\n2023-11-15 08:12:47.833 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Subnet id=e6jvz-xoj73-ac6ch-657iw-emot5-zx675-ol35i-wgosl-v5rc6-xligd-eqe, index=1, type=Application\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae, ipv6=2a0b:21c0:4003:2:5037:41ff:fe19:9a75, index=0\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=bzcgl-5z55l-kx2uk-ooofm-c2wba-sai2f-lxiya-t3ctm-xelyp-v3q7j-6ae, ipv6=2a0b:21c0:4003:2:500e:d1ff:fe00:6543, index=1\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=5dyj5-5ogks-37t5t-faevw-3dpo6-y7yty-goowk-jtsn6-2kq7a-yid34-jqe, ipv6=2a0b:21c0:4003:2:503d:caff:fe25:b321, index=2\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=miycm-piedv-ovywc-f4ajb-2ta3n-2uqbo-bjppw-5jkte-zlehe-jwoac-eae, ipv6=2a0b:21c0:4003:2:50a2:d0ff:fe3a:e2d0, index=3\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Unassigned nodes:\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=lnsg5-yohq2-e37uw-f7a7m-thfmv-jpmmu-heenl-nquyx-z7gp2-ankpy-fqe, ipv6=2a0b:21c0:4003:2:501e:28ff:fe89:52db, index=0\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=xpajt-bothf-ghpzw-ps3kq-kqx4m-p5ff6-2rpaj-3yxvv-k3egc-ak6ix-rae, ipv6=2a0b:21c0:4003:2:5003:51ff:feed:1228, index=1\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:       Node id=zejwo-yoqhh-ju7e6-m7zg7-xrdw4-g5tl4-bk576-ez2dj-zav6s-bgtoi-rqe, ipv6=2a0b:21c0:4003:2:50ed:58ff:fec3:6ca5, index=2\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: =====================================================================================================================================\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG:\n2023-11-15 08:12:47.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:12:47.567 INFO[test:rs/tests/src/consensus/membership_test.rs:187:0] Verifying that the node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae is making progress\n[REDACTED]\n2023-11-15 08:13:02.899 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:13:02.885 INFO[test:rs/tests/src/consensus/membership_test.rs:208:0] Waiting until node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae progresses past height 255\n2023-11-15 08:13:13.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:13:12.901 WARN[test:rs/tests/src/consensus/membership_test.rs:223:0] Node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae didn't make enough progress in 10 seconds and is at height 239\n2023-11-15 08:13:23.332 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:13:22.918 WARN[test:rs/tests/src/consensus/membership_test.rs:223:0] Node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae didn't make enough progress in 20 seconds and is at height 249\n[REDACTED]\n2023-11-15 08:18:03.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:18:03.412 WARN[test:rs/tests/src/consensus/membership_test.rs:223:0] Node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae didn't make enough progress in 300 seconds and is at height 249\nWARN[test:rs/tests/src/driver/subprocess_ipc.rs:68:0] [Function panicked]: Node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae didn't make enough progress in 300 seconds\n2023-11-15 08:18:03.832 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:18:03.413 INFO[test:StdErr] thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: \"Node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae didn't make enough progress in 300 seconds\"', rs/tests/src/driver/group.rs:918:35\n2023-11-15 08:18:03.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: 2023-11-15 08:18:03.417 INFO[rs/tests/src/driver/group.rs:900:21] Report:\n2023-11-15 08:18:03.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: ========================================================= Summary for membership_test ==========================================================\n2023-11-15 08:18:03.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Task setup  PASSED  in  61.78s   -- Exited with code 0.\n2023-11-15 08:18:03.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: Task test   FAILED  in 434.82s   -- Node lhzy5-gnwzb-s3fue-y73uc-xzvcy-7owv2-jsbik-ns4bs-itp7m-dag65-gae didn't make enough progress in 300 seconds\n2023-11-15 08:18:03.860 INFO[uvms_logs_stream:StdOut] [uvm=test-driver] TEST_LOG: ================================================================================================================================================\n```\n\nCloses CON-1163 \n\nCloses CON-1163\n\nSee merge request dfinity-lab/public/ic!16083"
      },
      {
        "id": "75c8757de8f6f01353fb6435cbcca177db7f7ec0",
        "date": "2023-11-15T18:01:04Z",
        "message": "test(consensus): [CON-1163, ICSUP-3734] Add a system test for membership changes"
      },
      {
        "id": "cf3b7afb6b4cbc4f21b423b69129274f37076a07",
        "date": "2023-11-15T10:43:22Z",
        "message": "Merge branch 'kpop/cups_refs_2' into 'master'\n\nchore(consensus): small changes to the `CatchUpPackage` interface\n\nIn `replica::set_ic_stack::construct_ic_stack`:\n1. Change the type of the `catch_up_package` argument from `CatchUpPackage` to `pb::CatchUpPackage` to avoid `pb::CatchUpPackage` -> `CatchUpPackage` -> `pb::CatchUpPackage` conversion roundtrip. **Such a conversion roundtrip could change the byte representation of the serialized CUP's content, if the CUP was produced at a different replica version, which we want to avoid.**\n\nIn `consensus::dkg::make_registry_cup`:\n1. Return the Rust version of `CatchUpPackage` instead of its proto representation, since all the callers do `CatchUpPackage::try_from` on the result anyways.\n2. Make the `logger` argument required, to simplify the function a bit.\n\n\nIn `types::consensus::catch_up_package`:\n1. Make the field in `CatchUpContentProtobufBytes` private, and implement the `From<pb::CatchUpPackage>`  trait for it as the only way to instantiate it \n2. Minor adjustments to some comments\n\nIn orchestrator:\n1. Some minor simplifications \n\nSee merge request dfinity-lab/public/ic!15967"
      },
      {
        "id": "b225cf1df9429c5ff6ae659e7fa224a08a397218",
        "date": "2023-11-15T10:43:22Z",
        "message": "chore(consensus): small changes to the `CatchUpPackage` interface"
      },
      {
        "id": "ce558ee823b0f9c1ceb7d8e1be8d10721d8002b1",
        "date": "2023-11-09T13:07:01Z",
        "message": "Merge branch 'kpop/subnet_splitting/docs' into 'master'\n\nfeature(subet-splitting): [FOLLOW-1270] print the link to the subnet splitting announcement template\n\nPrint https://wiki.internetcomputer.org/wiki/Subnet_splitting_forum_announcement_template at the beginning of the subnet splitting tool\n\nExample:\n```\nOct 31 09:05:02.686 INFO ############################\nOct 31 09:05:02.686 INFO V     Subnet Splitting     V\nOct 31 09:05:02.686 INFO ############################\nOct 31 09:05:02.686 INFO Splitting canisters within ranges [\"rwlgt-iiaaa-aaaaa-aaaaa-cai:ryjl3-tyaaa-aaaaa-aaaba-cai\", \"qoctq-giaaa-aaaaa-aaaea-cai:qaa6y-5yaaa-aaaaa-aaafa-cai\"] out of subnet with id kuira-mmawu-q3ur5-z6jhh-lbnwq-awbpm-4kayl-slhui-vlhkd-w5z44-bae into subnet with id tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe\nOct 31 09:05:02.686 WARN Don't forget to announce at the forum the upcoming series of proposals to split the subnet\nOct 31 09:05:02.686 WARN See the template at: https://wiki.internetcomputer.org/wiki/Subnet_splitting_forum_announcement_template\nOct 31 09:05:02.686 INFO Press [ENTER] to continue...\n``` \n\nSee merge request dfinity-lab/public/ic!15779"
      },
      {
        "id": "b222a0d39841bb25b03adc95926d2aeacabe4f8f",
        "date": "2023-11-09T13:07:00Z",
        "message": "feature(subet-splitting): [FOLLOW-1270] print the link to the subnet splitting announcement template"
      },
      {
        "id": "ad6edcea7d81ed60254e011f349763013a46f155",
        "date": "2023-11-08T17:52:03Z",
        "message": "Merge branch 'kpop/tests/debug_messages' into 'master'\n\ntest(consensus): log additional messages in the system tests to help with debugging\n\nWhile debugging a failed test, I found it a bit hard to guess what's currently happening in the test.\nThis additional messages will hopefully make it a little easier.\n\nBefore:\n```\n2023-11-06 12:06:06.389 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/upgrade_downgrade.rs:196:0] downgrade_upgrade_roundtrip: subnet_node = mkqnm-yzoth-35slq-5uo34-2ze3u-otg3j-dpoal-v7gdh-dbnsl-xlbyq-wae\n2023-11-06 12:06:06.389 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1893:0] Retrying for a maximum of 500s with a linear backoff of 5s\n2023-11-06 12:06:06.743 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1893:0] Retrying for a maximum of 500s with a linear backoff of 5s\n2023-11-06 12:06:15.184 DEBG[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:106:0] Try to create agent for node http://[2600:c00:2:100:5041:6aff:fe8b:a3a6]:8080/...\n2023-11-06 12:06:15.539 DEBG[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:110:0] Try to get canister reference\n2023-11-06 12:06:15.539 DEBG[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:112:0] Success, will try to read next\n2023-11-06 12:06:15.716 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/upgrade_downgrade.rs:215:0] Could store and read message 'hello world!'\n```\nAfter:\n```\n2023-11-06 12:55:18.195 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/upgrade_downgrade.rs:196:0] downgrade_upgrade_roundtrip: subnet_node = drpp6-enilb-r72gc-foydg-gvzrn-whlye-tdear-wumjm-xgtiv-vcfwz-2ae\n2023-11-06 12:55:18.195 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1893:0] Retrying for a maximum of 500s with a linear backoff of 5s\n2023-11-06 12:55:18.267 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1893:0] Retrying for a maximum of 500s with a linear backoff of 5s\n>>> 2023-11-06 12:55:25.911 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:105:0] Checking if we can read a message from canister with id 5v3p4-iyaaa-aaaaa-qaaaa-cai at http://[2a0b:21c0:4003:2:5046:9cff:fe99:c332]:8080/\n2023-11-06 12:55:25.912 DEBG[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:111:0] Try to create agent for node http://[2a0b:21c0:4003:2:5046:9cff:fe99:c332]:8080/...\n2023-11-06 12:55:25.974 DEBG[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:115:0] Try to get canister reference\n2023-11-06 12:55:25.974 DEBG[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/rw_message.rs:117:0] Success, will try to read next\n2023-11-06 12:55:26.008 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/upgrade_downgrade.rs:215:0] Could store and read message 'hello world!'\n```\n\nBefore:\n```\n2023-11-06 12:09:10.564 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/upgrade_downgrade.rs:341:0] Node started: 2600:c00:2:100:5086:65ff:fed0:ce20\n2023-11-06 12:09:10.564 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1893:0] Retrying for a maximum of 600s with a linear backoff of 10s\n2023-11-06 12:09:10.923 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1905:0] Attempt 1 failed. Error: Replica version: \"c990957332a3e7477923dd0bb796d02ad542bbb7\"...\n2023-11-06 12:09:19.385 DEBG[keepalive:rs/tests/src/driver/group.rs:634:0] Group upgrade_downgrade_app_subnet_test--1699272168471 TTL set to +90s from now (Farm endpoint: Url { scheme: \"https\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"farm.dfinity.systems\")), port: None, path: \"/\", query: None, fragment: None })\n2023-11-06 12:09:21.277 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1905:0] Attempt 2 failed. Error: Replica version: \"c990957332a3e7477923dd0bb796d02ad542bbb7\"...\n```\nAfter:\n```\n2023-11-06 12:57:51.609 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/upgrade_downgrade.rs:354:0] Node started: 2a0b:21c0:4003:2:5070:94ff:fe8a:2dd6\n>>> 2023-11-06 12:57:51.609 INFO[upgrade_downgrade_app_subnet:rs/tests/src/orchestrator/utils/upgrade.rs:132:0] Waiting until the node ny4yi-5etbl-3ydmn-5v5ys-rtwcc-6eszp-34fgd-qbmbo-pjn6t-vhoud-xqe is healthy and running replica version 0000000000000000000000000000000000000000-test**\n2023-11-06 12:57:51.609 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1893:0] Retrying for a maximum of 600s with a linear backoff of 10s\n>>> 2023-11-06 12:57:51.669 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1905:0] Attempt 1 failed. Error: Node is running the old replica version: c990957332a3e7477923dd0bb796d02ad542bbb7. Expected: 0000000000000000000000000000000000000000-test..**.\n2023-11-06 12:58:00.853 DEBG[keepalive:rs/tests/src/driver/group.rs:634:0] Group upgrade_downgrade_app_subnet_test--1699275149967 TTL set to +90s from now (Farm endpoint: Url { scheme: \"https\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"farm.dfinity.systems\")), port: None, path: \"/\", query: None, fragment: None })\n>>> 2023-11-06 12:58:01.726 INFO[upgrade_downgrade_app_subnet:rs/tests/src/driver/test_env_api.rs:1905:0] Attempt 2 failed. Error: Node is running the old replica version: c990957332a3e7477923dd0bb796d02ad542bbb7. Expected: 0000000000000000000000000000000000000000-test...**\n``` \n\nSee merge request dfinity-lab/public/ic!15903"
      },
      {
        "id": "1bfe1a94a195693785d006521d5e3a5d6e4ba34a",
        "date": "2023-11-08T17:52:03Z",
        "message": "test(consensus): log additional messages in the system tests to help with debugging"
      },
      {
        "id": "557a39f2ad81ad8a0fbad20ea1893636f2586888",
        "date": "2023-11-08T17:01:59Z",
        "message": "Merge branch 'kpop/dont_log' into 'master'\n\nchore(consensus): Remove a log message from `consensus::dkg::make_registry_cup`\n\nThis message is printed every 10 seconds for ECDSA subnets, it doesn't bring much value, and it can cause confusion, as it's suggests that we are creating a CUP every 10 seconds, but in fact we are only checking what's the most recent recovery CUP in the registry. \n\nSee merge request dfinity-lab/public/ic!15957"
      },
      {
        "id": "69aa91802192639dad6a857fcec79af45bacc58a",
        "date": "2023-11-08T17:01:58Z",
        "message": "chore(consensus): Remove a log message from `consensus::dkg::make_registry_cup`"
      },
      {
        "id": "10c54bbe96049756aed8edb2b12f9c985fda0519",
        "date": "2023-11-08T08:36:49Z",
        "message": "Merge branch 'kpop/bugs/ecdsa_log' into 'master'\n\nfix(consensus): Don't log the message when there is no ecdsa summary\n\nBefore https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15485 was merged, we would log this message only if the node is a part of an ECDSA subnet; now we log it always, even if `ecdsa_summary` is `None`.\n\nWith this MR we \"roll-back\" that property. \n\nSee merge request dfinity-lab/public/ic!15939"
      },
      {
        "id": "0b005281233a2562bf6e9a187d964714b1e29425",
        "date": "2023-11-08T08:36:49Z",
        "message": "fix(consensus): Don't log the message when there is no ecdsa summary"
      },
      {
        "id": "fd5d4985cc9fd88db39d5e4d05bdcfe76cccc2fc",
        "date": "2023-11-06T11:05:26Z",
        "message": "Merge branch 'kpop/remove_new_from_cup_without_bytes' into 'master'\n\nchore(consensus): remove `ConsensusPoolImpl::new_from_cup_without_bytes`\n\nThis is a left-over from the times when we had `CUPWithOriginalProtobuf` struct.\nNowadays this function is only used by `ic-replay`, where we can use `ConsensusPoolImpl::new` directly, and by some tests. \n\nSee merge request dfinity-lab/public/ic!15860"
      },
      {
        "id": "d9238878412786a6ff0dcc39f4687137b553769f",
        "date": "2023-11-06T11:05:26Z",
        "message": "chore(consensus): remove `ConsensusPoolImpl::new_from_cup_without_bytes`"
      },
      {
        "id": "0b8ebabeab24b755043601bec1b07e23c81c2f0a",
        "date": "2023-11-06T09:02:04Z",
        "message": "Merge branch 'kpop/subnet_splitting/FOLLOW-1271' into 'master'\n\nfeature(subnet-splitting): [FOLLOW-1271] Check whether both subnets have the same size & and that the destination subnet is halted\n\n```\nthread 'main' panicked at 'Subnets should satisfy all the preconditions: ValidationFailed(\"Subnet brlsh-zidhj-3yy3e-6vqbz-7xnih-xeq2l-as5oc-g32c4-i5pdn-2wwof-oae: Subnet should be halted\")', rs/recovery/subnet_splitting/src/subnet_splitting.rs:164:10\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n```\n\n```\nthread 'main' panicked at 'Subnets should satisfy all the preconditions: ValidationFailed(\"Subnet brlsh-zidhj-3yy3e-6vqbz-7xnih-xeq2l-as5oc-g32c4-i5pdn-2wwof-oae: Subnet has a non-zero height\")', rs/recovery/subnet_splitting/src/subnet_splitting.rs:164:10\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n```\n\nCloses FOLLOW-1271 \n\nCloses FOLLOW-1271\n\nSee merge request dfinity-lab/public/ic!15783"
      },
      {
        "id": "1d258b365951c8e8367b592a299f25bee908dd1f",
        "date": "2023-11-06T09:02:03Z",
        "message": "feature(subnet-splitting): [FOLLOW-1271] Check whether both subnets have the same size & and that the destination subnet is halted"
      },
      {
        "id": "1f1f929590ea4ed5fafa6ab851d52117ddd45ab5",
        "date": "2023-10-25T08:44:00Z",
        "message": "Merge branch 'kpop/CON-1123/artifacts_names' into 'master'\n\nfeat(consensus,backup): [CON-1123, CON-1126] Remove hashes from the backed up artifact names\n\nThanks to https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14658 we now back up only one block proposal and notarization per height, so it's not necessary to encode the artifacts' hashes in the filenames anymore, because there won't be any filename collisions.\n\nOn the `ic-backup` side, we now will download only one artifact per type and height (except when the downloaded artifact fails the validation, in which case we will download the artifact again from a random replica), whereas before we would download possibly multiple such artifacts:\n\nBefore:\n```\n $ ls 18800878 -l\n-rw-r----- 1 op op 3937 Sep 28 03:57 block_proposal_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_EF1A107DFF8A6D912256B50C91E05AF2F4EA668A72915485D601AEE3131DA.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_1C9007FA6855F915A35B134106919BE289D8FF91E7C91480A6A8684A6C3788.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_2DB721DD1DDE49C8079FCC36FF2B77AA6ED4A1F1CB9E9EEA573119FB979FEB5.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_4B138DDC582D8020C97591D7F3931F1483863A529F6699F23A43F6F69C33FAC7.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_821631A5F69221B7A0FB2A9452486328D2857554D5AAAEC6A266E479389780.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_84C623BF35DAF2AC25D0D4B8AE73DDAF8FA8B50865E2944DB495225A95BB9.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_8CC26742A645CBDD762950E3DD8DCF48F27531BBC62EE8DE6A19267C688D1EE.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_912EFC35A74E2EE7B4C36634BE3870AF9C9A37D3338FC59781A5E2442BC2B.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_A19CDB5D783768EE8D320FACEDAABA7C0FA5E20FBCBC1DB7C1CF2089219578.bin\n-rw-r----- 1 op op  751 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_A2DFD189DAA323BA6971021BBC7703B8434C130A43FB15BEB755B62BAD8B6.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_ACE48615725A96C2BF36D04B5F2C618D687070BFD4C13E7104272F1BCF63E.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_B125974B06B77D1399D5A85E057FFCE7C295FC3BD826BFF420A94033D0B8EC.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_DA30408E6691AEBDF0A43E6B283464264BF93FDF328C8813AE22A3F7F3ACEAB.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_DE14AEF96E84CE8D6A5EC4455021EF3E2929DC34EB5248FED7638FDE5D82.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_E3998B2D7D977B880FDD2293992EAA14FFBAF53EE5CEAC66105C6A1EFF58.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_E9386E86F67BC9BFD01A68B5D675A27B41868F64B2075358CF1E83DA17CA.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_F1537736E7799DCB484C446DC8D874EE966E7EEC5365185E77584891E5C54.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_FBE5BE6F14702A494195A893308DA135F1FBFC38C38949BE70B0A0AAC8CC7844.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_14EB24AAF4711ECEC74B5BA19FBBE56EE617DEF787144B82DAC0F31C723F6.bin\n-rw-r----- 1 op op  751 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_15B5B9FF13E0B6B059FC863EBFE8591BF629E26B117B13E917A64BC757D59C.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_21FFA0E86E6B3DD19FB5F16C0305E6BEB3D2C1992BCC24E1303D9A4A4E39F0.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_2465CAF764ED94A769248D8466F156FE0EB4FC0E0294A61F2450113E68F280.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_3027B75A4C7C127E44CA162EB2C835B83C2BEDCAD970683648F2912B8DCA88.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_3FCC4354A3B6DC8A34C44AFC3A351C97755178E59982777D4CC72FCA537522.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_417841C9BC4B0E75AA5BBCB341D8BFB2E8645222A2323ECDDDC26A25B84D6.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_4B73919C448652832344F3455411ECEE6EF5E95FCB89EE042F86A495918AF.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_50958017463FC1A5E74501B90198B2CB7670C3E18CD42444515A694AF88184.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_52FFF4EA5724B6D2859EE14C91469ECE16E936BC93FC343A2E3221589F71.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_63C4AC9AE6BC6419C541F6A69A59B7ADE765B953D54DC4492794030F8C78929.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_6A11BC1C2FBC208A3BD2F2CFDD7A5671A1D0ECB3C3A216ECE9B3FA6C7E87B54.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_6BACEC4A6A996BE97A99ECDAA587E1B99DFE6D523A285D08FF3CF921D5FD726.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_88B3819E5A39B2537C13AF5AAC3595FDEE0F94C324A47FC5452DBEA7D324436.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_9581814AEC869DF38544FB1B084447ECBFA1AAB74EF784564F964ACB932C.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_BD3F83AFE6F571F5B7817DFFDC7C726177F19DF10988574626969B5DEF6410.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_C6B96DB846962633D2D429593A12126EA9866241D8A96A8F7E398A43BBE4.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization_A59AF3FC759E862589944792CFC8F65E7B534F66CB730847CBB8A17FFECA9CA_EFB37AE8EBF3FA4A43BD1BF62DA68DFDAC7CEA573D33B73049355FCFCDD1CC.bin\n-rw-r----- 1 op op  171 Sep 28 03:57 random_beacon.bin\n-rw-r----- 1 op op  137 Sep 28 03:57 random_tape.bin\n```\n\nafter:\n```\n $ ls 18800878 -l\n-rw-r----- 1 op op 3937 Sep 28 03:57 block_proposal.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 finalization.bin\n-rw-r----- 1 op op  720 Sep 28 03:57 notarization.bin\n-rw-r----- 1 op op  171 Sep 28 03:57 random_beacon.bin\n-rw-r----- 1 op op  137 Sep 28 03:57 random_tape.bin\n``` \n\nSee merge request dfinity-lab/public/ic!15134"
      },
      {
        "id": "7ad41efb95f2e656c51a9b02f7b3dcb9d2a8fe59",
        "date": "2023-10-25T08:43:57Z",
        "message": "feat(consensus,backup): [CON-1123, CON-1126] Remove hashes from the backed up artifact names"
      },
      {
        "id": "5ef6880c4af4f3c105b2a958e91a104ebf54e8c9",
        "date": "2023-10-20T09:58:00Z",
        "message": "Merge branch 'kpop/refactoring/various' into 'master'\n\nchore(consensus): A couple of more refactorings in preparation for supporting multiple keys\n\nAll these functions will be later modified to support multiple keys and the changes in this MR will make it easier to review the code changes later:\n\n1. Move `get_ecdsa_subnet_public_key` from `batch_delivery.rs` to `ecdsa/utils.rs`\n2. Slightly simplify `inspect_ecdsa_initializations` and add a couple of unit tests\n2. Add a couple of unit tests for `get_ecdsa_config_if_enabled`\n3. Break `make_bootstrap_summary` into two functions \n\nSee merge request dfinity-lab/public/ic!15485"
      },
      {
        "id": "25d81c982aa3a9ce2067d9d858abdd705b2e839e",
        "date": "2023-10-20T09:58:00Z",
        "message": "chore(consensus): A couple of more refactorings in preparation for supporting multiple keys"
      },
      {
        "id": "edb43bff02564fcd12ba33ad9292440fd769ed9b",
        "date": "2023-10-19T09:19:42Z",
        "message": "Merge branch 'kpop/refactoring/unit_tests' into 'master'\n\nchore(consensus): small refactor of ecdsa::payload_builder unit tests\n\nThis will make my (and the MRs reviewers') life easier when adding support for multiple keys:\n\n1. Separated out common setup code in various tests;\n2. Split big unit tests into smaller ones, so that each of them checks only one behavior;\n3. In `signatures.rs`: add missing unit tests for the `update_ongoing_signatures` function and rename `test_ecdsa_update_ongoing_signatures` because it doesn't do what the name suggests.\n4. Created `EcdsaPayloadTestHelper` with some utility functions \n\nSee merge request dfinity-lab/public/ic!15462"
      },
      {
        "id": "3fa7178fdb33abe27926f541196e33a354535814",
        "date": "2023-10-19T09:19:42Z",
        "message": "chore(consensus): small refactor of ecdsa::payload_builder unit tests"
      },
      {
        "id": "b7768b32a83023671c1ec0fed0bc59bfc7a6258e",
        "date": "2023-10-18T15:25:27Z",
        "message": "Merge branch 'kpop/refactoring/uid_generator' into 'master'\n\nchore(consensus): Remove `current_key_transcript` argument from functions which take `ecdsa_payload` as an argument\n\nWe can access the `current_key_transcript` via `ecdsa_payload.key_transcript.current`; and it will make it easier to use once we have multiple key transcripts in the payload.\n\nAlso\n1) created a new function `get_created_key_transcript` to deduplicate some code.\n2) removed some `unwrap`s by using `if-let`s \n\nSee merge request dfinity-lab/public/ic!15461"
      },
      {
        "id": "57f5e095552cac2225fc312b77fe955539642095",
        "date": "2023-10-18T15:25:27Z",
        "message": "chore(consensus): Remove `current_key_transcript` argument from functions which take `ecdsa_payload` as an argument"
      },
      {
        "id": "37a4e74314315a0e1fdd99e51199ec383530352d",
        "date": "2023-10-09T15:28:06Z",
        "message": "Merge branch 'kpop/ecdsa/refactoring/payload_builder' into 'master'\n\nchore(consensus): small refactorings of ecdsa::payload_builder\n\n1. Avoid cloning `ReplicaLogger` unnecessarily\n2. Move some of the metrics code out to `consensus::metrics`\n3. Split too long lines\n4. Simplify `create_summary_payload_helper` slightly: \n\nSee merge request dfinity-lab/public/ic!15289"
      },
      {
        "id": "0668c0b60ab8aa1fd93284cb5ffd4cd4995e963e",
        "date": "2023-10-09T15:28:06Z",
        "message": "chore(consensus): small refactorings of ecdsa::payload_builder"
      },
      {
        "id": "e097687da66b79be494909f6fdfa815c609b0ca6",
        "date": "2023-10-09T09:23:22Z",
        "message": "Merge branch 'kpop/ecdsa/fix/counters' into 'master'\n\nfix(consensus): swap the error counters labels \"expired_requests\" <> \"invalid_keyid_requests\"\n\n \n\nSee merge request dfinity-lab/public/ic!15258"
      },
      {
        "id": "a38413d7b884d65359c11297cb1bcf4a22886fd2",
        "date": "2023-10-09T09:23:22Z",
        "message": "fix(consensus): swap the error counters labels \"expired_requests\" <> \"invalid_keyid_requests\""
      },
      {
        "id": "eea92ea6e9607c840833466be3aa57646e57bdc9",
        "date": "2023-10-06T13:08:24Z",
        "message": "Merge branch 'kpop/ecdsa/refactoring/signatures' into 'master'\n\nchore(consensus): split out more code from `payload_builder.rs`\n\nThis should be the last MR of this kind... \n\nSee merge request dfinity-lab/public/ic!15256"
      },
      {
        "id": "0090c33ac28eaddb979f8dba1daa0c24adfa5570",
        "date": "2023-10-06T13:08:24Z",
        "message": "chore(consensus): split out more code from `payload_builder.rs`"
      },
      {
        "id": "ad6c2697c0b635a0dd265ad831e799f17e31a638",
        "date": "2023-10-06T10:38:25Z",
        "message": "Merge branch 'kpop/ecdsa/refactoring/reshares_and_errors' into 'master'\n\nchore(consensus): further split `payload_builder.rs` into two new files\n\n \n\nSee merge request dfinity-lab/public/ic!15228"
      },
      {
        "id": "e40f0fa6d763d01b7358b14c96cc0ee53a5d8ad2",
        "date": "2023-10-06T10:38:23Z",
        "message": "chore(consensus): further split `payload_builder.rs` into two new files"
      },
      {
        "id": "79eccc93f3393267dc85d1b2e6e9a5c0f0a1b649",
        "date": "2023-10-05T10:13:28Z",
        "message": "Merge branch 'kpop/ecdsa/refactoring/utils_dirty' into 'master'\n\nchore(consensus): move some code from `payload_builder.rs` to `utils.rs`, and from `utils.rs` to `test_utils.rs`\n\nIMHO, these functions fit better in the `utils.rs` and `test_utils.rs` files respectively.\nThis will make the `payload_builder.rs` and `utils.rs` files a little smaller.\n\nAlso, made the `MembershipError` type private, because it's not used anywhere else. \n\nSee merge request dfinity-lab/public/ic!15167"
      },
      {
        "id": "4fc08b9dab01cafcb08b220b7ed5c3c3e8597b88",
        "date": "2023-10-05T10:13:27Z",
        "message": "chore(consensus): move some code from `payload_builder.rs` to `utils.rs`, and from `utils.rs` to `test_utils.rs`"
      },
      {
        "id": "09cbb1a5e4c3870c778782476582eec40fbce144",
        "date": "2023-10-04T11:03:01Z",
        "message": "Merge branch 'kpop/ecdsa/refactoring/quadruples' into 'master'\n\nchore(consensus): move code related to quadruples to a new file\n\necdsa/payload_builder.rs is very large (over 5000 lines of code) and hard to navigate, so I'm moving some functions + unit tests to a new file.\n\nAlong the way I changed the signature of some of the aforementioned functions: since we never return an Err, the result type doesn't have to be Result<_, _>. \n\nSee merge request dfinity-lab/public/ic!15164"
      },
      {
        "id": "8f1b9b15d730676b9728859c25353f72ea2bb01b",
        "date": "2023-10-04T11:03:01Z",
        "message": "chore(consensus): move code related to quadruples to a new file"
      },
      {
        "id": "3b26e7520ec45238d3f2101d259659f200ee6d47",
        "date": "2023-09-13T17:12:54Z",
        "message": "Merge branch 'kpop/ic_backup/fix_curl' into 'master'\n\nchore(ic-backup): fail `upgrade.sh` on `curl` HTTP errors\n\nCurrently when the `curl` fails to download the `ic-backup` binary, it will write the error message to the output file, and the script will later fail trying to unzip the file. Now the script will fail immediately when the `curl` fails; and the error message will be more accurate.\n\nFrom `curl --help`:\n```\nkpop -> curl --help\nUsage: curl [options...] <url>\n -d, --data <data>          HTTP POST data\n -f, --fail                 Fail silently (no output at all) on HTTP errors\n```\n\nBefore: \n```\nkpop -> ./upgrade.sh\nAttempting to upgrade the 'ic-backup' binary.\nPlease provide a GIT SHA of the revision which contains the desired 'ic-backup' version. Note that the revision should have a disk images built already.\nTo get the latest revision that has a disk image pre-built, you can run 'gitlab-ci/src/artifacts/newest_sha_with_disk_image.sh master' from within the IC repo.\nGIT SHA: a53e3fcfa2eadceda5d47439a01d85fa4a802008\nDownloading: https://download.dfinity.systems/ic/a53e3fcfa2eadceda5d47439a01d85fa4a802008/release/ic-backup.gz to ic-backup_a53e3fcfa2eadceda5d47439a01d85fa4a802008.gz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   243    0   243    0     0   1079      0 --:--:-- --:--:-- --:--:--  1080\n\ngzip: ic-backup_a53e3fcfa2eadceda5d47439a01d85fa4a802008.gz: not in gzip format\n\nkpop -> cat ic-backup_a53e3fcfa2eadceda5d47439a01d85fa4a802008.gz\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Error><Code>AccessDenied</Code><Message>Access Denied</Message><RequestId>1A22698TNPP6ZHET</RequestId><HostId>EFRrnNSxwHrkCT5ImRMoZGQGLGb3DWP9T18JuCaYSyvyLnv5urasabcE7T/UzyL6kFqEVypTlnyJc/+6qgPjTQ==</HostId></Error>\n```\n\nAfter:\n```\nkpop -> ./upgrade.sh\nAttempting to upgrade the 'ic-backup' binary.\nPlease provide a GIT SHA of the revision which contains the desired 'ic-backup' version. Note that the revision should have a disk images built already.\nTo get the latest revision that has a disk image pre-built, you can run 'gitlab-ci/src/artifacts/newest_sha_with_disk_image.sh master' from within the IC repo.\nGIT SHA: a53e3fcfa2eadceda5d47439a01d85fa4a802008\nDownloading: https://download.dfinity.systems/ic/a53e3fcfa2eadceda5d47439a01d85fa4a802008/release/ic-backup.gz to ic-backup_a53e3fcfa2eadceda5d47439a01d85fa4a802008.gz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\ncurl: (22) The requested URL returned error: 403\n\nkpop -> cat ic-backup_a53e3fcfa2eadceda5d47439a01d85fa4a802008.gz\ncat: ic-backup_a53e3fcfa2eadceda5d47439a01d85fa4a802008.gz: No such file or directory\n``` \n\nSee merge request dfinity-lab/public/ic!14781"
      },
      {
        "id": "63e86bf9b99d76a8768c26184f6002df25180aa4",
        "date": "2023-09-13T17:12:54Z",
        "message": "chore(ic-backup): fail `upgrade.sh` on `curl` HTTP errors"
      },
      {
        "id": "98d37ce3e874b6f0c1524e9321b04b7d6b5971c6",
        "date": "2023-09-12T10:00:44Z",
        "message": "Merge branch 'kpop/ic-backup/arg' into 'master'\n\nchore(ic-backup): allow to pass the GIT SHA as an argument to `upgrade.sh`\n\nWith an argument\n```\n$ /ic/rs/backup/upgrade.sh af2edc2c5722713118345080a4b09fefeb1a0d22\nAttempting to upgrade the 'ic-backup' binary.\nDownloading: https://download.dfinity.systems/ic/af2edc2c5722713118345080a4b09fefeb1a0d22/release/ic-backup.gz to ic-backup_af2edc2c5722713118345080a4b09fefeb1a0d22.gz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 8020k  100 8020k    0     0  38.7M      0 --:--:-- --:--:-- --:--:-- 38.7M\nSuccessfully downloaded and unpacked the 'ic-backup' binary\nStopping the 'ic-backup' service.\nsudo systemctl stop ic-backup.service\nCreating a softlink 'ic-backup' -> 'ic-backup_af2edc2c5722713118345080a4b09fefeb1a0d22'.\nStarting the 'ic-backup' service.\nsudo systemctl start ic-backup.service\nSuccessfully upgraded 'ic-backup' binary\n```\n\nWithout an argument\n```\n$ /ic/rs/backup/upgrade.sh\nAttempting to upgrade the 'ic-backup' binary.\nPlease provide a GIT SHA of the revision which contains the desired 'ic-backup' version. Note that the revision should have a disk images built already.\nTo get the latest revision that has a disk image pre-built, you can run 'gitlab-ci/src/artifacts/newest_sha_with_disk_image.sh master' from within the IC repo.\nGIT SHA: af2edc2c5722713118345080a4b09fefeb1a0d22\nDownloading: https://download.dfinity.systems/ic/af2edc2c5722713118345080a4b09fefeb1a0d22/release/ic-backup.gz to ic-backup_af2edc2c5722713118345080a4b09fefeb1a0d22.gz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 8020k  100 8020k    0     0  63.6M      0 --:--:-- --:--:-- --:--:-- 63.6M\nSuccessfully downloaded and unpacked the 'ic-backup' binary\nStopping the 'ic-backup' service.\nsudo systemctl stop ic-backup.service\nCreating a softlink 'ic-backup' -> 'ic-backup_af2edc2c5722713118345080a4b09fefeb1a0d22'.\nStarting the 'ic-backup' service.\nsudo systemctl start ic-backup.service\nSuccessfully upgraded 'ic-backup' binary\n``` \n\nSee merge request dfinity-lab/public/ic!14716"
      },
      {
        "id": "289d3bbe639cfcd887158b14b4ba1a4caf4eefb1",
        "date": "2023-09-12T10:00:41Z",
        "message": "chore(ic-backup): allow to pass the GIT SHA as an argument to `upgrade.sh`"
      },
      {
        "id": "af2edc2c5722713118345080a4b09fefeb1a0d22",
        "date": "2023-09-11T10:14:19Z",
        "message": "Merge branch 'kpop/ic-backup/fix_the_upgrade_script' into 'master'\n\nchore(ic-backup): explicitly ask for GIT SHA in the `upgrade.sh` script\n\nThe `upgrade.sh` will now ask the user which revision to use when downloading the binary.\nExample:\n\n```\n$ /ic/rs/backup/upgrade.sh\nAttempting to upgrade the 'ic-backup' binary.\nPlease provide a GIT SHA of the revision which contains the desired 'ic-backup' version. Note that the revision should have a disk images built already.\nTo get the latest revision that has a disk image pre-built, you can run 'gitlab-ci/src/artifacts/newest_sha_with_disk_image.sh master' from within IC repo.\nGIT SHA: 987884ef66cb4e57dcb8e33737708928b2ab1d88\nDownloading: https://download.dfinity.systems/ic/987884ef66cb4e57dcb8e33737708928b2ab1d88/release/ic-backup.gz to ic-backup_987884ef66cb4e57dcb8e33737708928b2ab1d88.gz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 8017k  100 8017k    0     0  21.8M      0 --:--:-- --:--:-- --:--:-- 21.7M\nSuccessfully downloaded and unpacked the 'ic-backup' binary\nStopping the 'ic-backup' service.\nsudo systemctl stop ic-backup.service\nCreating a softlink 'ic-backup' -> 'ic-backup_987884ef66cb4e57dcb8e33737708928b2ab1d88'.\nStarting the 'ic-backup' service.\nsudo systemctl start ic-backup.service\nSuccessfully upgraded 'ic-backup' binary\n``` \n\nSee merge request dfinity-lab/public/ic!14711"
      },
      {
        "id": "ac94be3997c04d8401a1c912168f5926bd12b445",
        "date": "2023-09-11T10:14:19Z",
        "message": "chore(ic-backup): explicitly ask for GIT SHA in the `upgrade.sh` script"
      },
      {
        "id": "d078b3ceddb63c51f20ad798c3b435f4a4641aad",
        "date": "2023-09-11T06:36:26Z",
        "message": "Merge branch 'kpop/subnet_splitting/update_urls' into 'master'\n\nchore(subnet-splitting): Fix the grafana dashboards URLs\n\nThe dashboards are now being deployed automatically from the k8s repo and have the following URLs:\n1) https://grafana.mainnet.dfinity.network/d/subnet-splitting-preflight and \n2) https://grafana.mainnet.dfinity.network/d/subnet-splitting \n\nSee merge request dfinity-lab/public/ic!14693"
      },
      {
        "id": "745ade60b6eeb5d334668adc3fc951319fce0df2",
        "date": "2023-09-11T06:36:26Z",
        "message": "chore(subnet-splitting): Fix the grafana dashboards URLs"
      },
      {
        "id": "c0464378ab9ca07031ed506848af472483e829e5",
        "date": "2023-09-08T13:40:05Z",
        "message": "Merge branch 'kpo/CON-1124/new_strategy' into 'master'\n\nfeat(ic-backup): [CON-1124] preserve only the states from the last three days in the hot storage.\n\nCurrently the `ic-backup` moves the states to the cold storage only when the backed up subnet has been upgraded. When the upgrade happens, the tool moves the states from the hot storage to the cold storage, from the *oldest* replica version. Since the tool computes the state and stores it in the hot storage multiple times per day, and each state can be quite big, eventually we might run into problems of running out of disk space, if an upgrade hasn't happened in a long time.\n\nIn this MR we change the way we cold store the states. Instead of doing it after an replica upgrade, we move the states to cold store after each `ic-replay` invocation and only keep the states from the last three days in the hot storage.\n\nExample (Note: I hacked the `BackupHelper` a little here and do the `ic-replay` every minute but for the purpose of cold storing I tell the `BackupHelper` that we are doing `ic-replay` only twice per day):\n```\nSep 08 09:42:30.030 INFO [#1] Replaying from height #659600 of subnet 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae with version 02f7941c407104e59965e29cef02f216f84174ae\nSep 08 09:42:42.897 INFO [#1] Replay was successful!\nSep 08 09:42:42.897 INFO [#1] Archiving state to: /home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659700\nSep 08 09:42:42.914 INFO ⚠️ space usage is at 83%\nSep 08 09:42:43.126 INFO ✅ Successfully restored the state at height *659700*\nSep 08 09:42:43.338 INFO Number of states in the hot storage: 7. Will move some of them to the cold storage if the number is > 7\nSep 08 09:42:43.338 INFO No need to move any states to the cold storage\nSep 08 09:43:35.225 INFO Sync backup data from the node: 2607:f6f0:3004:1:5000:9dff:fe8b:9397 for subnet_id: 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae\nSep 08 09:43:43.347 INFO [#1] Replaying from height #659700 of subnet 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae with version 02f7941c407104e59965e29cef02f216f84174ae\nSep 08 09:44:01.273 INFO [#1] Replay was successful!\nSep 08 09:44:01.273 INFO [#1] Archiving state to: /home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659860\nSep 08 09:44:01.303 INFO ⚠️ space usage is at 83%\nSep 08 09:44:01.973 INFO ✅ Successfully restored the state at height *659860*\nSep 08 09:44:02.186 INFO Number of states in the hot storage: 8. Will move some of them to the cold storage if the number is > 7\nSep 08 09:44:02.186 INFO Moving states with height up to: 659140 from the archive to the cold storage\nSep 08 09:44:02.186 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659140\"\nSep 08 09:44:02.205 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658980\"\nSep 08 09:44:02.207 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659140\"\nSep 08 09:44:02.212 INFO Moved some states to the cold storage\nSep 08 09:44:43.449 INFO Sync backup data from the node: 2a00:fb01:400:42:5000:40ff:fe80:1826 for subnet_id: 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae\nSep 08 09:45:02.222 INFO [#1] Replaying from height #659860 of subnet 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae with version 02f7941c407104e59965e29cef02f216f84174ae\nSep 08 09:45:11.267 INFO [#1] Replay was successful!\nSep 08 09:45:11.267 INFO [#1] Archiving state to: /home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659920\nSep 08 09:45:11.287 INFO ⚠️ space usage is at 83%\nSep 08 09:45:11.502 INFO ✅ Successfully restored the state at height *659920*\nSep 08 09:45:11.712 INFO Number of states in the hot storage: 7. Will move some of them to the cold storage if the number is > 7\nSep 08 09:45:11.712 INFO No need to move any states to the cold storage\nSep 08 09:45:49.242 INFO Sync backup data from the node: 2a00:fb01:400:42:5000:40ff:fe80:1826 for subnet_id: 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae\nSep 08 09:46:11.712 INFO [#1] Replaying from height #659920 of subnet 5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae with version 02f7941c407104e59965e29cef02f216f84174ae\nSep 08 09:46:21.210 INFO Replay/Sync - 5tpl6: 660000/660006\nSep 08 09:46:22.315 INFO [#1] Replay was successful!\nSep 08 09:46:22.315 INFO [#1] Archiving state to: /home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/660000\nSep 08 09:46:22.333 INFO ⚠️ space usage is at 83%\nSep 08 09:46:22.547 INFO ✅ Successfully restored the state at height *660000*\nSep 08 09:46:22.759 INFO Number of states in the hot storage: 8. Will move some of them to the cold storage if the number is > 7\nSep 08 09:46:22.759 INFO Moving states with height up to: 659500 from the archive to the cold storage\nSep 08 09:46:22.759 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659500\"\nSep 08 09:46:22.780 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659280\"\nSep 08 09:46:22.782 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659500\"\nSep 08 09:46:22.787 INFO Moved some states to the cold storage\n```\n\nNOTE: the first time we run `ic-backup` with this change, the tool might move multiple states at the same time to the cold storage, if the backup pod has states from more than last three days in the hot storage:\n```\nSep 08 09:41:29.223 INFO [#1] Replay was successful!\nSep 08 09:41:29.223 INFO [#1] Archiving state to: /home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/659600\nSep 08 09:41:29.246 INFO ⚠️ space usage is at 83%\nSep 08 09:41:29.470 INFO ✅ Successfully restored the state at height *659600*\nSep 08 09:41:29.676 INFO Number of states in the hot storage: 32. Will move some of them to the cold storage if the number is > 7\nSep 08 09:41:29.676 INFO Moving states with height up to: 658720 from the archive to the cold storage\nSep 08 09:41:29.677 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658720\"\nSep 08 09:41:29.695 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658280\"\nSep 08 09:41:29.713 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/657840\"\nSep 08 09:41:29.726 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/657380\"\nSep 08 09:41:29.739 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656940\"\nSep 08 09:41:29.750 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656560\"\nSep 08 09:41:29.762 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656060\"\nSep 08 09:41:29.776 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/655640\"\nSep 08 09:41:29.787 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/655180\"\nSep 08 09:41:29.801 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/654740\"\nSep 08 09:41:29.813 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/654000\"\nSep 08 09:41:29.821 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648820\"\nSep 08 09:41:29.877 INFO Will copy to cold storage: \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648380\"\nSep 08 09:41:29.932 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648100\"\nSep 08 09:41:29.935 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648380\"\nSep 08 09:41:29.937 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648600\"\nSep 08 09:41:29.940 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648820\"\nSep 08 09:41:29.942 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/648900\"\nSep 08 09:41:29.943 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/654000\"\nSep 08 09:41:29.945 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/654520\"\nSep 08 09:41:29.947 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/654740\"\nSep 08 09:41:29.948 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/654960\"\nSep 08 09:41:29.950 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/655180\"\nSep 08 09:41:29.951 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/655420\"\nSep 08 09:41:29.953 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/655640\"\nSep 08 09:41:29.954 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/655860\"\nSep 08 09:41:29.955 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656060\"\nSep 08 09:41:29.957 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656280\"\nSep 08 09:41:29.959 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656560\"\nSep 08 09:41:29.960 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656720\"\nSep 08 09:41:29.961 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/656940\"\nSep 08 09:41:29.963 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/657160\"\nSep 08 09:41:29.964 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/657380\"\nSep 08 09:41:29.965 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/657620\"\nSep 08 09:41:29.967 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/657840\"\nSep 08 09:41:29.968 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658060\"\nSep 08 09:41:29.970 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658280\"\nSep 08 09:41:29.971 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658560\"\nSep 08 09:41:29.972 INFO Will move to trash directory \"/home/kpop/tmp/backup2/archive/5tpl6-6xhkt-srhlq-ip35b-ppap5-wl5c2-nayia-yse4e-d3xve-iwaha-bae/658720\"\nSep 08 09:41:30.023 INFO Moved some states to the cold storage\n```\n\nCloses CON-1124 \n\nCloses CON-1124\n\nSee merge request dfinity-lab/public/ic!14681"
      },
      {
        "id": "6e050db38d247d7a32adc28ecb5fff6122710b4c",
        "date": "2023-09-08T13:40:04Z",
        "message": "feat(ic-backup): [CON-1124] preserve only the states from the last three days in the hot storage."
      },
      {
        "id": "0b83d19c420b92d9f1605614a9e21cd79f75494f",
        "date": "2023-09-08T10:03:31Z",
        "message": "Merge branch 'kpop/CON-1124/unit_tests' into 'master'\n\nchore(ic-backup): [CON-1124] split `do_move_cold_storage` into two functions so they can be reused and add some unit tests\n\n \n\nSee merge request dfinity-lab/public/ic!14679"
      },
      {
        "id": "81d5e62041aa6fb462d770e73c68554d58868aa1",
        "date": "2023-09-08T10:03:31Z",
        "message": "chore(ic-backup): [CON-1124] split `do_move_cold_storage` into two functions so they can be reused and add some unit tests"
      },
      {
        "id": "c0085d2ba1375d912af6fbb3df5605203479d5d7",
        "date": "2023-08-31T09:24:13Z",
        "message": "Merge branch 'kpop/subnet_splitting/print_batch_time' into 'master'\n\nchore(subnet-splitting-tool): print the block time from the CUP\n\nThis is needed for the validation of the subnet splitting: see [WIP Subnet Splitting doc](https://docs.google.com/document/d/1SvHDTS7_d8u3DanjPW3mt96rHWuIbjZ27OCbaFo6NzE/edit#heading=h.18wy6itenn4c)\n\nExample:\n```\nubuntu@devenv-container:/ic$ bazel run //rs/recovery/subnet_splitting:subnet-splitting-tool -- validate --state-tree-path /home/kpop/subnet-splitting-artifacts/recovery/pruned_state_tree.cbor --state-manifest-path /home/kpop/subnet-splitting-artifacts/recovery/original_source_manifest.data --cup-path /home/kpop/subnet-splitting-artifacts/recovery/working_dir/data/cups/cup.types.v1.CatchUpPackage.pb --source-subnet-id gmmtp-v5kpc-wdkrx-pni4q-6qwld-ntwrv-kqxva-c3rnm-o6lx3-2eg74-oae --nns-public-key-path /home/kpop/subnet-splitting-artifacts/recovery/nns.pem\n\nAug 29 13:49:08.632 INFO Validating State Tree signed by the NNS\nAug 29 13:49:08.632 INFO Reading the NNS public key from /home/kpop/subnet-splitting-artifacts/recovery/nns.pem\nAug 29 13:49:08.793 INFO Validation succeeded: extracted authentic subnet key from the NNS state tree.\nAug 29 13:49:08.793 INFO\nAug 29 13:49:08.793 INFO Validating Source Subnet's original CUP\nAug 29 13:49:08.796 INFO Dealer subnet from the CUP: gmmtp-v5kpc-wdkrx-pni4q-6qwld-ntwrv-kqxva-c3rnm-o6lx3-2eg74-oae\nAug 29 13:49:08.796 INFO CUP height: 82600\nAug 29 13:49:08.796 INFO Creation time of the block from the CUP: 2023-08-22 09:23:29.206708237 UTC (nanos since unix epoch: 1692696209206708237)\nAug 29 13:49:08.796 INFO State hash from the CUP: 46fbb99db26d751c5b2b9f35778d5800bae74566f968388fbb0b36226a488416\nAug 29 13:49:08.811 INFO Validation succeeded: source subnet CUP signature is valid.\nAug 29 13:49:08.811 INFO\nAug 29 13:49:08.811 INFO Validating Source Subnet's original state manifest\nAug 29 13:49:08.813 INFO state hash from the CUP: 46fbb99db26d751c5b2b9f35778d5800bae74566f968388fbb0b36226a488416\nAug 29 13:49:08.813 INFO state hash from the State Manifest: 46fbb99db26d751c5b2b9f35778d5800bae74566f968388fbb0b36226a488416 \nAug 29 13:49:08.813 INFO Validation succeeded: recomputed manifest root hash matches the one in the CUP.\nAug 29 13:49:08.813 INFO\n``` \n\nSee merge request dfinity-lab/public/ic!14454"
      },
      {
        "id": "566d026c2355ce1e37d13704271b794ec0e502e7",
        "date": "2023-08-31T09:24:11Z",
        "message": "chore(subnet-splitting-tool): print the block time from the CUP"
      },
      {
        "id": "525cb38591cc5df6e314a98affee0a074e299312",
        "date": "2023-08-25T14:19:09Z",
        "message": "Merge branch 'kpop/CON-1099/validator_2' into 'master'\n\nfeat(subnet-splitting-tool): [CON-1099] add a command to `subnet-splitting-tool` which will validate some of the artifacts produced during the subnet splitting\n\nAdd a command to `subnet-splitting-tool` which will validate some of the artifacts produced during the Subnet Splitting: NNS signed State Tree, original CUP downloaded from the source subnet, and the original manifest of the state downloaded from the source subnet. \n\n1. Moved the `CUP` verification code from the `ic-replay` tool to the `subnet-splitting-tool`;\n2. Made it possible to use the `state-tool` as a library;\n3. Directly (instead of calling the binary) use some of the `state-tool` functions in the `subnet-splitting-tool`;\n4. Moved the validation code from `steps.rs` to a shared file `validation.rs`.\n\n[1-pager](https://docs.google.com/document/d/1K0xbgokl4poqYKDXfPphc-xypLH0D3hZ9QQd80wBizc/edit)\n\nCloses CON-1099 \n\nCloses CON-1099\n\nSee merge request dfinity-lab/public/ic!14377"
      },
      {
        "id": "a5883a187fa48721d696e89b12337e13612f2377",
        "date": "2023-08-25T14:19:09Z",
        "message": "feat(subnet-splitting-tool): [CON-1099] add a command to `subnet-splitting-tool` which will validate some of the artifacts produced during the subnet splitting"
      },
      {
        "id": "b75163896826e6910b72fa46fe58183a826e1ced",
        "date": "2023-08-16T07:27:21Z",
        "message": "Merge branch 'kpop/subnet_splitting/small_fixes' into 'master'\n\nchore(subnet-splitting-tool): [CON-1072,CON-1092] Fix flakiness of the `subnet-splitting` system test & apply various small fixes to the `subnet-splitting` tool\n\n1. Fix the flakiness of the `subnet-splitting` system test, by introducing a `thread::sleep` for 15 seconds after halting at a cup height, to allow the orchestrator to create a CUP;\n2. Panic if either of the Subnets is an ECDSA subnet or is not an Application subnet.\n3. Print registry contents as separate steps\n4. Pretty print the registry content\n5. When printing the routing table, print the subnet ids instead of \"Source Subnet\" and \"Destination Subnet\"\n6. Compare the state hash from the downloaded CUP against the hash of the downloaded state\n7. Add more prints during validations \n\nSee merge request dfinity-lab/public/ic!13949"
      },
      {
        "id": "7b6337cc0daf09af699a85cb300595ef639fb2b1",
        "date": "2023-08-16T07:27:20Z",
        "message": "chore(subnet-splitting-tool): [CON-1072,CON-1092] Fix flakiness of the `subnet-splitting` system test & apply various small fixes to the `subnet-splitting` tool"
      },
      {
        "id": "f8ffd2134a459d2786e90a7471d93b205050fe9c",
        "date": "2023-08-14T13:42:36Z",
        "message": "Merge branch 'kpop/CON-1094/create_halted_subnet' into 'master'\n\nchore(subnet-splitting): [CON-1094] Create a halted subnet in the `subnet-splitting` system test\n\nAlong the way I converted some of the comments into log messages. Without the logs it was hard to find where the test was failing. \n\nSee merge request dfinity-lab/public/ic!13958"
      },
      {
        "id": "f06e801b096043be8b7f730d6029d4a156413ab1",
        "date": "2023-08-14T13:42:36Z",
        "message": "chore(subnet-splitting): [CON-1094] Create a halted subnet in the `subnet-splitting` system test"
      }
    ],
    "email": "kamil.popielarz@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 62,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 31,
    "fixes": 5,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "a90886a22f387ba20ca358df1b933df0d3d07c18",
        "date": "2023-11-20T16:50:49Z",
        "message": "chore(orchestrator): don't throw away the errors"
      },
      {
        "id": "ef4c5b14e310161f115c93402befc00423cf37db",
        "date": "2023-11-17T11:01:09Z",
        "message": "fix(consensus): make the implementations of `PartialEq` and `PartialOrd` for `consensus::tests::framework::Message` consistent"
      },
      {
        "id": "46db573f527222015b9239bcb5ca01d9031e37eb",
        "date": "2023-11-16T11:42:49Z",
        "message": "chore(consensus): remove the `allow(dead_code)` attributes from Consensus production code"
      },
      {
        "id": "75c8757de8f6f01353fb6435cbcca177db7f7ec0",
        "date": "2023-11-15T18:01:04Z",
        "message": "test(consensus): [CON-1163, ICSUP-3734] Add a system test for membership changes"
      },
      {
        "id": "b225cf1df9429c5ff6ae659e7fa224a08a397218",
        "date": "2023-11-15T10:43:22Z",
        "message": "chore(consensus): small changes to the `CatchUpPackage` interface"
      },
      {
        "id": "b222a0d39841bb25b03adc95926d2aeacabe4f8f",
        "date": "2023-11-09T13:07:00Z",
        "message": "feature(subet-splitting): [FOLLOW-1270] print the link to the subnet splitting announcement template"
      },
      {
        "id": "1bfe1a94a195693785d006521d5e3a5d6e4ba34a",
        "date": "2023-11-08T17:52:03Z",
        "message": "test(consensus): log additional messages in the system tests to help with debugging"
      },
      {
        "id": "69aa91802192639dad6a857fcec79af45bacc58a",
        "date": "2023-11-08T17:01:58Z",
        "message": "chore(consensus): Remove a log message from `consensus::dkg::make_registry_cup`"
      },
      {
        "id": "0b005281233a2562bf6e9a187d964714b1e29425",
        "date": "2023-11-08T08:36:49Z",
        "message": "fix(consensus): Don't log the message when there is no ecdsa summary"
      },
      {
        "id": "d9238878412786a6ff0dcc39f4687137b553769f",
        "date": "2023-11-06T11:05:26Z",
        "message": "chore(consensus): remove `ConsensusPoolImpl::new_from_cup_without_bytes`"
      },
      {
        "id": "1d258b365951c8e8367b592a299f25bee908dd1f",
        "date": "2023-11-06T09:02:03Z",
        "message": "feature(subnet-splitting): [FOLLOW-1271] Check whether both subnets have the same size & and that the destination subnet is halted"
      },
      {
        "id": "7ad41efb95f2e656c51a9b02f7b3dcb9d2a8fe59",
        "date": "2023-10-25T08:43:57Z",
        "message": "feat(consensus,backup): [CON-1123, CON-1126] Remove hashes from the backed up artifact names"
      },
      {
        "id": "25d81c982aa3a9ce2067d9d858abdd705b2e839e",
        "date": "2023-10-20T09:58:00Z",
        "message": "chore(consensus): A couple of more refactorings in preparation for supporting multiple keys"
      },
      {
        "id": "3fa7178fdb33abe27926f541196e33a354535814",
        "date": "2023-10-19T09:19:42Z",
        "message": "chore(consensus): small refactor of ecdsa::payload_builder unit tests"
      },
      {
        "id": "57f5e095552cac2225fc312b77fe955539642095",
        "date": "2023-10-18T15:25:27Z",
        "message": "chore(consensus): Remove `current_key_transcript` argument from functions which take `ecdsa_payload` as an argument"
      },
      {
        "id": "0668c0b60ab8aa1fd93284cb5ffd4cd4995e963e",
        "date": "2023-10-09T15:28:06Z",
        "message": "chore(consensus): small refactorings of ecdsa::payload_builder"
      },
      {
        "id": "a38413d7b884d65359c11297cb1bcf4a22886fd2",
        "date": "2023-10-09T09:23:22Z",
        "message": "fix(consensus): swap the error counters labels \"expired_requests\" <> \"invalid_keyid_requests\""
      },
      {
        "id": "0090c33ac28eaddb979f8dba1daa0c24adfa5570",
        "date": "2023-10-06T13:08:24Z",
        "message": "chore(consensus): split out more code from `payload_builder.rs`"
      },
      {
        "id": "e40f0fa6d763d01b7358b14c96cc0ee53a5d8ad2",
        "date": "2023-10-06T10:38:23Z",
        "message": "chore(consensus): further split `payload_builder.rs` into two new files"
      },
      {
        "id": "4fc08b9dab01cafcb08b220b7ed5c3c3e8597b88",
        "date": "2023-10-05T10:13:27Z",
        "message": "chore(consensus): move some code from `payload_builder.rs` to `utils.rs`, and from `utils.rs` to `test_utils.rs`"
      },
      {
        "id": "8f1b9b15d730676b9728859c25353f72ea2bb01b",
        "date": "2023-10-04T11:03:01Z",
        "message": "chore(consensus): move code related to quadruples to a new file"
      },
      {
        "id": "63e86bf9b99d76a8768c26184f6002df25180aa4",
        "date": "2023-09-13T17:12:54Z",
        "message": "chore(ic-backup): fail `upgrade.sh` on `curl` HTTP errors"
      },
      {
        "id": "289d3bbe639cfcd887158b14b4ba1a4caf4eefb1",
        "date": "2023-09-12T10:00:41Z",
        "message": "chore(ic-backup): allow to pass the GIT SHA as an argument to `upgrade.sh`"
      },
      {
        "id": "ac94be3997c04d8401a1c912168f5926bd12b445",
        "date": "2023-09-11T10:14:19Z",
        "message": "chore(ic-backup): explicitly ask for GIT SHA in the `upgrade.sh` script"
      },
      {
        "id": "745ade60b6eeb5d334668adc3fc951319fce0df2",
        "date": "2023-09-11T06:36:26Z",
        "message": "chore(subnet-splitting): Fix the grafana dashboards URLs"
      },
      {
        "id": "6e050db38d247d7a32adc28ecb5fff6122710b4c",
        "date": "2023-09-08T13:40:04Z",
        "message": "feat(ic-backup): [CON-1124] preserve only the states from the last three days in the hot storage."
      },
      {
        "id": "81d5e62041aa6fb462d770e73c68554d58868aa1",
        "date": "2023-09-08T10:03:31Z",
        "message": "chore(ic-backup): [CON-1124] split `do_move_cold_storage` into two functions so they can be reused and add some unit tests"
      },
      {
        "id": "566d026c2355ce1e37d13704271b794ec0e502e7",
        "date": "2023-08-31T09:24:11Z",
        "message": "chore(subnet-splitting-tool): print the block time from the CUP"
      },
      {
        "id": "a5883a187fa48721d696e89b12337e13612f2377",
        "date": "2023-08-25T14:19:09Z",
        "message": "feat(subnet-splitting-tool): [CON-1099] add a command to `subnet-splitting-tool` which will validate some of the artifacts produced during the subnet splitting"
      },
      {
        "id": "7b6337cc0daf09af699a85cb300595ef639fb2b1",
        "date": "2023-08-16T07:27:20Z",
        "message": "chore(subnet-splitting-tool): [CON-1072,CON-1092] Fix flakiness of the `subnet-splitting` system test & apply various small fixes to the `subnet-splitting` tool"
      },
      {
        "id": "f06e801b096043be8b7f730d6029d4a156413ab1",
        "date": "2023-08-14T13:42:36Z",
        "message": "chore(subnet-splitting): [CON-1094] Create a halted subnet in the `subnet-splitting` system test"
      }
    ],
    "line_additions": 6136,
    "line_deletions": 4628,
    "lines_effected_total": 10764,
    "rel_comm_add": 22,
    "rel_comm_del": 17,
    "rel_comm_total": 24
  },
  {
    "login": "rstout",
    "id": 2266941,
    "totalContributions": 124,
    "github": "https://github.com/rstout",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "maciejdfinity",
    "id": 122265298,
    "totalContributions": 122,
    "github": "https://github.com/maciejdfinity",
    "commits": [
      {
        "id": "519ab8a11662d90caf92d39e7889a88e6b016f29",
        "date": "2023-11-23T10:24:45Z",
        "message": "Merge branch 'maciej-mempool' into 'master'\n\nfeat(FI-1068): icrc-rosetta: /mempool endpoint\n\n \n\nSee merge request dfinity-lab/public/ic!16250"
      },
      {
        "id": "129d64eb434692798e613d40cfa40ba6b3bd7558",
        "date": "2023-11-23T10:24:45Z",
        "message": "feat(FI-1068): icrc-rosetta: /mempool endpoint"
      },
      {
        "id": "90b35b1ba77ece26dfb2a76becdb6359a33c3eb7",
        "date": "2023-11-20T11:19:15Z",
        "message": "Merge branch 'maciej-rosettasync' into 'master'\n\nfeat(FI-1063): icrc-rosetta: speed up rosetta startup with existing database\n\nThe sql joins in get_blockchain_gaps are quite slow and the startup with existing database for ckBTC ledger (~97k blocks) takes ~20m: `cargo run --release -- -u https://ic0.app --ledger-id mxzaz-hqaaa-aaaar-qaada-cai  -n mainnet --exit-on-sync`. I changed it to a select that searches for blocks that have no next block (block with index+1) and for each such block search for the block with the smallest larger index. With this change the startup takes ~1s. \n\nSee merge request dfinity-lab/public/ic!16147"
      },
      {
        "id": "a050651ecea994b1f2e680228b09fdfaccfa3ab9",
        "date": "2023-11-20T11:19:14Z",
        "message": "feat(FI-1063): icrc-rosetta: speed up rosetta startup with existing database"
      },
      {
        "id": "ff5ba8a3eb17f4cac4727c0011453385b3275036",
        "date": "2023-11-16T15:23:25Z",
        "message": "Merge branch 'maciej-icrclargeint' into 'master'\n\nfeat(FI-1054): icrc-rosetta: switching amount, expected_allowance and fee to TEXT\n\nWith this change it should be possible to sync the ckBTC ledger: `cargo run --release -- -u https://ic0.app --ledger-id mxzaz-hqaaa-aaaar-qaada-cai  -n mainnet`. It was previously not possible due to approvals of size u64::MAX, e.g. https://dashboard.internetcomputer.org/bitcoin/transaction/93370 \n\nSee merge request dfinity-lab/public/ic!16077"
      },
      {
        "id": "a9376e18ee919e570a7844e758d56041efd7911e",
        "date": "2023-11-16T15:23:25Z",
        "message": "feat(FI-1054): icrc-rosetta: switching amount, expected_allowance and fee to TEXT"
      },
      {
        "id": "0ede076119ccf8722abc073e049fba518eb117be",
        "date": "2023-11-15T14:38:15Z",
        "message": "Merge branch 'maciej-icrcserialize' into 'master'\n\nfeat(icrc): types derive serde::Serialize\n\n \n\nSee merge request dfinity-lab/public/ic!16104"
      },
      {
        "id": "7c0bcbc12ddbb0b8fe58843c28b3761dfbdbcc5c",
        "date": "2023-11-15T14:38:15Z",
        "message": "feat(icrc): types derive serde::Serialize"
      },
      {
        "id": "3457bdbfa49619fede2eb30453399e05ef845a9f",
        "date": "2023-11-13T16:33:48Z",
        "message": "feat(rosetta-api): changing allowance and expected_allowance to TEXT"
      },
      {
        "id": "8e6c146eee1e2b3a5a11af269fbc91666ef09bc7",
        "date": "2023-11-08T15:28:47Z",
        "message": "Merge branch 'maciej-newarch' into 'master'\n\nchore(icp_ledger): add icp-ledger-archive-1 to the upgrade testing script, remove didc and xxd installation\n\nI added icp-ledger-archive-1 to nns scripts in: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15965\ndidc and xxd are now part of the standard container (you need to run `source \"...\"` from the testnet setup output to be able to use didc) \n\nSee merge request dfinity-lab/public/ic!15966"
      },
      {
        "id": "44483a576178f7a8dd68cd08d03464f4220add55",
        "date": "2023-11-08T15:28:47Z",
        "message": "chore(icp_ledger): add icp-ledger-archive-1 to the upgrade testing script, remove didc and xxd installation"
      },
      {
        "id": "3139e8e4ee34ea373a5e9dc20e8de2c2487730ca",
        "date": "2023-11-08T14:41:22Z",
        "message": "Merge branch 'maciej-newar' into 'master'\n\nchore(icp_ledger): adding new archive canister id to nns testnet config\n\n \n\nSee merge request dfinity-lab/public/ic!15965"
      },
      {
        "id": "433d458da91827f0e296fcd1a01d03f53494af70",
        "date": "2023-11-08T14:41:22Z",
        "message": "chore(icp_ledger): adding new archive canister id to nns testnet config"
      },
      {
        "id": "3686fbe9ccb00fcc68e04c648cb8e80e0170146a",
        "date": "2023-11-02T08:26:13Z",
        "message": "Merge branch 'maciej-constants' into 'master'\n\nchore(icp_ledger): extracting common constants from upgrade testing scripts\n\nTested by running `run_upgrade_test.sh` for ledger \n\nSee merge request dfinity-lab/public/ic!15825"
      },
      {
        "id": "2da6aee21e0fb8b8c9a0cfa25f69f8f268583b4f",
        "date": "2023-11-02T08:26:11Z",
        "message": "chore(icp_ledger): extracting common constants from upgrade testing scripts"
      },
      {
        "id": "a4b46b226b1aaec887c6fe13982f3c03b9c956ac",
        "date": "2023-11-01T10:42:03Z",
        "message": "Merge branch 'maciej-upgradetest' into 'master'\n\nfeat(icp_ledger): update upgrade testing scripts to work with the new testnet infrastructure and add tests for icrc2 endpoints\n\nI also updated the guide: https://www.notion.so/dfinityorg/Test-ICP-Ledger-Archive-Upgrade-1176e13ae416424a80ed19e186af4a74 \n\nSee merge request dfinity-lab/public/ic!15429"
      },
      {
        "id": "04378bda4903f7c1cb890c34924e51e260453390",
        "date": "2023-11-01T10:42:03Z",
        "message": "feat(icp_ledger): update upgrade testing scripts to work with the new testnet infrastructure and add tests for icrc2 endpoints"
      },
      {
        "id": "c7d9b548e64fa0ca1b25bb9bac5ad0dfe10e0e58",
        "date": "2023-10-27T11:12:55Z",
        "message": "Merge branch 'maciej-upgradehist' into 'master'\n\nchote(icp_ledger): update upgrade history for the ICP ledger\n\n \n\nSee merge request dfinity-lab/public/ic!15718"
      },
      {
        "id": "c2f94dec96a1fcbbeb0cda2595f2a17cd51ea4a6",
        "date": "2023-10-27T11:12:55Z",
        "message": "chote(icp_ledger): update upgrade history for the ICP ledger"
      },
      {
        "id": "c6183067d137a543ea924757b2b2d22af1771892",
        "date": "2023-10-18T13:37:00Z",
        "message": "Merge branch 'maciej-icrc2-icp-did' into 'master'\n\nchore(icp_ledger): updating ledger.did with icrc2_transfer_from endpoint\n\nI also updated the result of allowance, expires_at should be opt u64  not opt Timestamp \n\nSee merge request dfinity-lab/public/ic!15463"
      },
      {
        "id": "53d535bcb43c02c006f9a29ab5de7256e8410b34",
        "date": "2023-10-18T13:36:59Z",
        "message": "chore(icp_ledger): updating ledger.did with icrc2_transfer_from endpoint"
      },
      {
        "id": "dc5d8cfec5550f99dc4912501037478de8ab9426",
        "date": "2023-10-14T09:08:15Z",
        "message": "Merge branch 'maciej-testarrival' into 'master'\n\nchore(icrc): icrc2: test arrival_queue for allowances is the same size as allowances map\n\n \n\nSee merge request dfinity-lab/public/ic!15310"
      },
      {
        "id": "c0379f185f30e10936283a44b12fa9b4f579e903",
        "date": "2023-10-14T09:08:14Z",
        "message": "chore(icrc): icrc2: test arrival_queue for allowances is the same size as allowances map"
      },
      {
        "id": "77bb017ba2af3a4ce34545f4b8b91c41b281ac83",
        "date": "2023-10-13T13:33:56Z",
        "message": "Merge branch 'leo-ckbtc-update-doc' into 'master'\n\ndoc(ckbtc) update old flow chart\n\nRepresent the bitcoin network on the old flow chart to match the new flow representation. \n\nSee merge request dfinity-lab/public/ic!15307"
      },
      {
        "id": "c9b58b6b499478cd89d9f9870accbd3219d084b4",
        "date": "2023-10-13T12:11:09Z",
        "message": "Merge branch 'maciej-icp-expires' into 'master'\n\nfix(icp_ledger): ledger.did: use u64 instead of Timestamp in ApproveArgs [override-didc-check]\n\n \n\nSee merge request dfinity-lab/public/ic!15159"
      },
      {
        "id": "84f840a7866e782a13dbe1f1e2cd9d3b8301c010",
        "date": "2023-10-13T12:11:07Z",
        "message": "fix(icp_ledger): ledger.did: use u64 instead of Timestamp in ApproveArgs [override-didc-check]"
      },
      {
        "id": "275223ec8191ba16269fb11acdcc0e5442598cc8",
        "date": "2023-10-10T07:25:16Z",
        "message": "Merge branch 'maciej-icrcclient' into 'master'\n\nchore(icrc): move client and client-cdk libraries to packages\n\nThe goal is to later release the libraries to crates.io. \n\nSee merge request dfinity-lab/public/ic!15080"
      },
      {
        "id": "cfe9a267a16f93d5c620a11343a78fbcd0a80ad4",
        "date": "2023-10-10T07:25:16Z",
        "message": "chore(icrc): move client and client-cdk libraries to packages"
      },
      {
        "id": "e90f1c11cf3a2b7ed31baf9ab48544f990ef4365",
        "date": "2023-10-06T14:10:21Z",
        "message": "Merge branch 'maciej-queue' into 'master'\n\nfix(icrc): update arrive_at time in the arrival_queue for approvals\n\nWithout this update arrival_queue will not be cleaned up properly when a new approval for the same (account, spender) is  recorded. \n\nSee merge request dfinity-lab/public/ic!15265"
      },
      {
        "id": "a95ed52069658397198b8541d41537050ebeeab5",
        "date": "2023-10-06T14:10:20Z",
        "message": "fix(icrc): update arrive_at time in the arrival_queue for approvals"
      },
      {
        "id": "0dcbd07214992ef3c352d636d7a7ad7e296569c3",
        "date": "2023-09-26T17:01:10Z",
        "message": "Merge branch 'maciej-expiresat' into 'master'\n\nfeat(icrc1): changing expires_at from Timestamp to u64\n\nI printed out the resulting block, tx looks like this now:\n \"tx\": Map({\"amt\": Int(Int(10000)), **\"expires_at\": Int(Int(1795656988000000000))**, \"from\": ... \n\nSee merge request dfinity-lab/public/ic!15007"
      },
      {
        "id": "a09de2208e55b8421a00cdc5dc46877dab139263",
        "date": "2023-09-26T17:01:10Z",
        "message": "feat(icrc1): changing expires_at from Timestamp to u64"
      },
      {
        "id": "17ee5be9f8c1873c25fe4214c7a19882eb7b2cd0",
        "date": "2023-09-14T11:46:59Z",
        "message": "Merge branch 'maciej-blockindex' into 'master'\n\nchore(icrc1): use BlockIndex and Timestamp in the ledger.did file\n\n \n\nSee merge request dfinity-lab/public/ic!14799"
      },
      {
        "id": "24756e23a591b2934855950f322250e9b6ce0709",
        "date": "2023-09-14T11:46:59Z",
        "message": "chore(icrc1): use BlockIndex and Timestamp in the ledger.did file"
      },
      {
        "id": "35e8b7ee1f4f887269fb5ee798fde59c6c2a75b2",
        "date": "2023-09-05T10:59:50Z",
        "message": "Merge branch 'maciej-numtraits' into 'master'\n\nMake num-traits non optional for icrc-ledger-types\n\n \n\nSee merge request dfinity-lab/public/ic!14579"
      },
      {
        "id": "53bfd54300ebbabd512aa99a616333dc76d5c4e6",
        "date": "2023-09-05T10:59:50Z",
        "message": "Make num-traits non optional for icrc-ledger-types"
      },
      {
        "id": "b39e009270170abe140f5d6cb6e2984bf9ed0447",
        "date": "2023-09-05T09:32:52Z",
        "message": "Merge branch 'maciej-icrc-types-update' into 'master'\n\nChangelog and version for crates update.\n\n \n\nSee merge request dfinity-lab/public/ic!14578"
      },
      {
        "id": "db136470985dc4133c97d2906f43dc0be184ba56",
        "date": "2023-09-05T09:32:52Z",
        "message": "Changelog and version for crates update."
      },
      {
        "id": "eddfe7c8f98ee25299b18925f70d06ea1a2152ad",
        "date": "2023-09-01T12:23:39Z",
        "message": "Merge branch 'maciej-accounts-btree' into 'master'\n\nfeat(icp_ledger): switch icp and icrc1 ledgers to use BTreeMap for account balances\n\n \n\nSee merge request dfinity-lab/public/ic!14444"
      },
      {
        "id": "bfa88bb37c7fefbe7357e05003d5b7e4ab11498b",
        "date": "2023-09-01T12:23:38Z",
        "message": "feat(icp_ledger): switch icp and icrc1 ledgers to use BTreeMap for account balances"
      },
      {
        "id": "cc5315b8bda9d7af1c9e47afc48ccd161a70af74",
        "date": "2023-08-24T17:26:16Z",
        "message": "Merge branch 'maciej-icp-tf-endpoint' into 'master'\n\nfeat(icp_ledger): Add transfer_from endpoint to the ICP ledger\n\nTransfer_from mints are not allowed. Transfer_from burns are implemented.\nAdded additional init params `maximum_number_of_accounts` and `accounts_overflow_trim_quantity` to test accounts and approvals trimming. \n\nSee merge request dfinity-lab/public/ic!13889"
      },
      {
        "id": "decc21be7e9e287d73d692b62e58883e254fb08b",
        "date": "2023-08-24T17:26:16Z",
        "message": "feat(icp_ledger): Add transfer_from endpoint to the ICP ledger"
      },
      {
        "id": "3706996b7c290e8f5cff9a29532b4d255b995ff5",
        "date": "2023-08-17T07:16:10Z",
        "message": "Merge branch 'maciej-prune-oldest' into 'master'\n\nfeat(FI-878): prune approvals according to their age\n\nPrune approvals basing on when they were recorded (received by the ledger), not basing on the expiration time. Oldest approvals should be pruned first. \n\nSee merge request dfinity-lab/public/ic!14118"
      },
      {
        "id": "6a69eb719dba41926534b0a90b063f483218b753",
        "date": "2023-08-17T07:16:10Z",
        "message": "feat(FI-878): prune approvals according to their age"
      },
      {
        "id": "7348744983e8d92dd863b396291e3bb1b7ceb53d",
        "date": "2023-08-11T08:53:25Z",
        "message": "Merge branch 'maciej-remove-def-exp' into 'master'\n\nfeat(icrc2): remove default expiration for approvals\n\nThe reason for capping the expiration of approvals was a possible large memory usage of approvals. We later introduced the approval trimming and the cap is no longer needed. \n\nSee merge request dfinity-lab/public/ic!14087"
      },
      {
        "id": "c08b91afbe13d14c0cdbc81c78c6927427c08968",
        "date": "2023-08-11T08:53:24Z",
        "message": "feat(icrc2): remove default expiration for approvals"
      },
      {
        "id": "db0132073d3914fb3f4228a6c16d3a9ac8f15990",
        "date": "2023-08-10T11:36:14Z",
        "message": "Merge branch 'maciej-icp-index' into 'master'\n\nchore(FI-873): Handle ICRC-2 approvals in the ICP index\n\n \n\nSee merge request dfinity-lab/public/ic!13974"
      },
      {
        "id": "ebb5ba9f7bf2e905bae5d16a8d9f015999b61b56",
        "date": "2023-08-10T11:36:14Z",
        "message": "chore(FI-873): Handle ICRC-2 approvals in the ICP index"
      },
      {
        "id": "06d4201fa3a3fc012fa5fb42885ab1b132b09014",
        "date": "2023-08-09T15:30:28Z",
        "message": "Merge branch 'maciej-icrc-sec' into 'master'\n\nchore(FI-870): clean up approvals expiration_queue\n\nCurrently only expired approvals are removed from the expiration_queue .\n\nWe need to additionally clean up the expiration_queue when:\n\nallowance is used up\n\nallowance is reset to 0\n\nexpiration time is reset to a new value \n\nSee merge request dfinity-lab/public/ic!13953"
      },
      {
        "id": "1fe1b9c1c007fa14509f62b1f8065e12a7fe4b73",
        "date": "2023-08-09T15:30:28Z",
        "message": "chore(FI-870): clean up approvals expiration_queue"
      },
      {
        "id": "d5e7376c6052a70a01ccb749273b6ff3268c70be",
        "date": "2023-08-04T14:58:12Z",
        "message": "chore(FI-872): handle approve operations in the icrc index"
      },
      {
        "id": "2bc1a2bef3c9e5ec5e15da11e1f46531b3daa063",
        "date": "2023-08-02T10:09:16Z",
        "message": "Merge branch 'maciej-icp-transferfrom' into 'master'\n\nfeat(FI-855): ICP ledger: use spender in the Transfer operation instead of TransferFrom operation\n\n \n\nSee merge request dfinity-lab/public/ic!13832"
      },
      {
        "id": "0acc754dc0286b33da7144af8119d6005996998f",
        "date": "2023-08-02T10:09:15Z",
        "message": "feat(FI-855): ICP ledger: use spender in the Transfer operation instead of TransferFrom operation"
      }
    ],
    "email": "maciej.modelski@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 53,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 26,
    "fixes": 2,
    "feats": 12,
    "non_merge_commits": [
      {
        "id": "129d64eb434692798e613d40cfa40ba6b3bd7558",
        "date": "2023-11-23T10:24:45Z",
        "message": "feat(FI-1068): icrc-rosetta: /mempool endpoint"
      },
      {
        "id": "a050651ecea994b1f2e680228b09fdfaccfa3ab9",
        "date": "2023-11-20T11:19:14Z",
        "message": "feat(FI-1063): icrc-rosetta: speed up rosetta startup with existing database"
      },
      {
        "id": "a9376e18ee919e570a7844e758d56041efd7911e",
        "date": "2023-11-16T15:23:25Z",
        "message": "feat(FI-1054): icrc-rosetta: switching amount, expected_allowance and fee to TEXT"
      },
      {
        "id": "7c0bcbc12ddbb0b8fe58843c28b3761dfbdbcc5c",
        "date": "2023-11-15T14:38:15Z",
        "message": "feat(icrc): types derive serde::Serialize"
      },
      {
        "id": "3457bdbfa49619fede2eb30453399e05ef845a9f",
        "date": "2023-11-13T16:33:48Z",
        "message": "feat(rosetta-api): changing allowance and expected_allowance to TEXT"
      },
      {
        "id": "44483a576178f7a8dd68cd08d03464f4220add55",
        "date": "2023-11-08T15:28:47Z",
        "message": "chore(icp_ledger): add icp-ledger-archive-1 to the upgrade testing script, remove didc and xxd installation"
      },
      {
        "id": "433d458da91827f0e296fcd1a01d03f53494af70",
        "date": "2023-11-08T14:41:22Z",
        "message": "chore(icp_ledger): adding new archive canister id to nns testnet config"
      },
      {
        "id": "2da6aee21e0fb8b8c9a0cfa25f69f8f268583b4f",
        "date": "2023-11-02T08:26:11Z",
        "message": "chore(icp_ledger): extracting common constants from upgrade testing scripts"
      },
      {
        "id": "04378bda4903f7c1cb890c34924e51e260453390",
        "date": "2023-11-01T10:42:03Z",
        "message": "feat(icp_ledger): update upgrade testing scripts to work with the new testnet infrastructure and add tests for icrc2 endpoints"
      },
      {
        "id": "c2f94dec96a1fcbbeb0cda2595f2a17cd51ea4a6",
        "date": "2023-10-27T11:12:55Z",
        "message": "chote(icp_ledger): update upgrade history for the ICP ledger"
      },
      {
        "id": "53d535bcb43c02c006f9a29ab5de7256e8410b34",
        "date": "2023-10-18T13:36:59Z",
        "message": "chore(icp_ledger): updating ledger.did with icrc2_transfer_from endpoint"
      },
      {
        "id": "c0379f185f30e10936283a44b12fa9b4f579e903",
        "date": "2023-10-14T09:08:14Z",
        "message": "chore(icrc): icrc2: test arrival_queue for allowances is the same size as allowances map"
      },
      {
        "id": "84f840a7866e782a13dbe1f1e2cd9d3b8301c010",
        "date": "2023-10-13T12:11:07Z",
        "message": "fix(icp_ledger): ledger.did: use u64 instead of Timestamp in ApproveArgs [override-didc-check]"
      },
      {
        "id": "cfe9a267a16f93d5c620a11343a78fbcd0a80ad4",
        "date": "2023-10-10T07:25:16Z",
        "message": "chore(icrc): move client and client-cdk libraries to packages"
      },
      {
        "id": "a95ed52069658397198b8541d41537050ebeeab5",
        "date": "2023-10-06T14:10:20Z",
        "message": "fix(icrc): update arrive_at time in the arrival_queue for approvals"
      },
      {
        "id": "a09de2208e55b8421a00cdc5dc46877dab139263",
        "date": "2023-09-26T17:01:10Z",
        "message": "feat(icrc1): changing expires_at from Timestamp to u64"
      },
      {
        "id": "24756e23a591b2934855950f322250e9b6ce0709",
        "date": "2023-09-14T11:46:59Z",
        "message": "chore(icrc1): use BlockIndex and Timestamp in the ledger.did file"
      },
      {
        "id": "53bfd54300ebbabd512aa99a616333dc76d5c4e6",
        "date": "2023-09-05T10:59:50Z",
        "message": "Make num-traits non optional for icrc-ledger-types"
      },
      {
        "id": "db136470985dc4133c97d2906f43dc0be184ba56",
        "date": "2023-09-05T09:32:52Z",
        "message": "Changelog and version for crates update."
      },
      {
        "id": "bfa88bb37c7fefbe7357e05003d5b7e4ab11498b",
        "date": "2023-09-01T12:23:38Z",
        "message": "feat(icp_ledger): switch icp and icrc1 ledgers to use BTreeMap for account balances"
      },
      {
        "id": "decc21be7e9e287d73d692b62e58883e254fb08b",
        "date": "2023-08-24T17:26:16Z",
        "message": "feat(icp_ledger): Add transfer_from endpoint to the ICP ledger"
      },
      {
        "id": "6a69eb719dba41926534b0a90b063f483218b753",
        "date": "2023-08-17T07:16:10Z",
        "message": "feat(FI-878): prune approvals according to their age"
      },
      {
        "id": "c08b91afbe13d14c0cdbc81c78c6927427c08968",
        "date": "2023-08-11T08:53:24Z",
        "message": "feat(icrc2): remove default expiration for approvals"
      },
      {
        "id": "ebb5ba9f7bf2e905bae5d16a8d9f015999b61b56",
        "date": "2023-08-10T11:36:14Z",
        "message": "chore(FI-873): Handle ICRC-2 approvals in the ICP index"
      },
      {
        "id": "1fe1b9c1c007fa14509f62b1f8065e12a7fe4b73",
        "date": "2023-08-09T15:30:28Z",
        "message": "chore(FI-870): clean up approvals expiration_queue"
      },
      {
        "id": "d5e7376c6052a70a01ccb749273b6ff3268c70be",
        "date": "2023-08-04T14:58:12Z",
        "message": "chore(FI-872): handle approve operations in the icrc index"
      },
      {
        "id": "0acc754dc0286b33da7144af8119d6005996998f",
        "date": "2023-08-02T10:09:15Z",
        "message": "feat(FI-855): ICP ledger: use spender in the Transfer operation instead of TransferFrom operation"
      }
    ],
    "line_additions": 2345,
    "line_deletions": 855,
    "lines_effected_total": 3200,
    "rel_comm_add": 16,
    "rel_comm_del": 13,
    "rel_comm_total": 18
  },
  {
    "login": "venkkatesh-sekar",
    "id": 94061546,
    "totalContributions": 117,
    "github": "https://github.com/venkkatesh-sekar",
    "commits": [
      {
        "id": "ff60ba2d97108fb257aff9584a2c08b20f29d5c4",
        "date": "2023-11-21T09:35:09Z",
        "message": "Merge branch 'vsekar/candid_corpus_generator' into 'master'\n\nfeat(PSEC-1442): didc based corpus generator for mgmt canister args\n\nImprove fuzzing by providing corpus generator for the management canister arguments candid decoding \n\nSee merge request dfinity-lab/public/ic!15758"
      },
      {
        "id": "e0c36617002e59faec92ce0ecb96b33b2c3cc770",
        "date": "2023-11-21T09:35:09Z",
        "message": "feat(PSEC-1442): didc based corpus generator for mgmt canister args"
      },
      {
        "id": "3789ac129f6ba3011d6712cd7faccd8f9fdc8e11",
        "date": "2023-11-16T16:02:15Z",
        "message": "Merge branch 'vsekar/disallow_traps' into 'master'\n\nfix(fuzzing): set `allow_user_segv_handler=1` for wasmtime and wasm_executor fuzz jobs\n\n- Closes FOLLOW-1307\n- Reference https://github.com/google/oss-fuzz/blob/master/projects/wasmtime/default.options \n\nCloses FOLLOW-1307\n\nSee merge request dfinity-lab/public/ic!16141"
      },
      {
        "id": "8d291fbcd095b4e4c38c15dfb4b228aae1ae4207",
        "date": "2023-11-16T16:02:15Z",
        "message": "fix(fuzzing): set `allow_user_segv_handler=1` for wasmtime and wasm_executor fuzz jobs"
      },
      {
        "id": "56c3dad3fe6237ef87a029c6359df57f37770e5f",
        "date": "2023-11-13T17:28:37Z",
        "message": "fix(fuzzing): Add option to filter `canister_` prefix from export names"
      },
      {
        "id": "e677c3a1d9cf79ebcb7c41db347deb0bc7c1255a",
        "date": "2023-11-09T17:24:56Z",
        "message": "Merge branch 'vsekar/test_wasm_smith_patch' into 'master'\n\nfeat(fuzzing): Fork wasm-smith to generate IC compatible wasm for fuzzing\n\nThis MR contains changes to integrate changes to `wasm-smith` which can now generate IC compatible wasm\n\n`rs/embedders` changes\n- execute_with_wasm_executor.rs\n  - Collect exported_globals from wasm-smith and pass it to ExecutionState\n  - Filter exports to find callable functions and call a function via `execute`\n  - Assign default config again\n  - Sanity checks for wasm validity\n- execute_with_wasmtime.rs\n  - Filter exports to find callable functions and call a function via `run`\n- ic_wasm.rs\n  - Cleanup comments left as TODO\n- ws2wasm.rs\n  - Add an option to print WAT to stdout\n  - Add an option to validate and instrument generated wasm\n- BUILD.bazel\n  - Re enable execute_with_wasm_executor fuzzing jobs\n\n`wasm-smith` [changes](https://github.com/bytecodealliance/wasm-tools/compare/main...dfinity:wasm-tools:make_globals_public) \n\nSee merge request dfinity-lab/public/ic!15504"
      },
      {
        "id": "e05bb908544d04533ae5797df38081180a02972f",
        "date": "2023-11-09T17:24:56Z",
        "message": "feat(fuzzing): Fork wasm-smith to generate IC compatible wasm for fuzzing"
      },
      {
        "id": "7a7a00f4481a42d984f0c9769d5eff50b704a73b",
        "date": "2023-11-09T14:45:18Z",
        "message": "Merge branch 'vsekar/remove_subtle' into 'master'\n\nfix(fuzzing): remove fuzzing annotations for hex and subtle\n\n \n\nSee merge request dfinity-lab/public/ic!15998"
      },
      {
        "id": "923607af97e09c50f62ea25a9a26ac00fe6f302a",
        "date": "2023-11-09T14:45:17Z",
        "message": "fix(fuzzing): remove fuzzing annotations for hex and subtle"
      },
      {
        "id": "fd3e2dd3ca7114adbb4feb90adad6a188d0097e3",
        "date": "2023-11-01T07:20:38Z",
        "message": "Merge branch 'vsekar/fix_static_openssl' into 'master'\n\nfix(fuzzing): fix static_openssl conditional\n\n \n\nSee merge request dfinity-lab/public/ic!15799"
      },
      {
        "id": "bf436ed8ffbec23dde452e041e60d35891bc0ff9",
        "date": "2023-11-01T07:20:38Z",
        "message": "fix(fuzzing): fix static_openssl conditional"
      },
      {
        "id": "fdbab18c5cd45185aff2a41b8a785b4ebba4bc2b",
        "date": "2023-10-31T16:18:23Z",
        "message": "Merge branch 'vsekar/fix-afl' into 'master'\n\nfix(fuzzing): add libclang-rt-15-dev to Dockerfile\n\n \n\nSee merge request dfinity-lab/public/ic!15792"
      },
      {
        "id": "4ec3eb00969eb6191b9cc0507e78a3868fe97cd3",
        "date": "2023-10-31T16:18:23Z",
        "message": "fix(fuzzing): add libclang-rt-15-dev to Dockerfile"
      },
      {
        "id": "7bf5b8a94d96c5ef0ada9a829bbf12c2428dfc50",
        "date": "2023-10-20T12:09:26Z",
        "message": "feat(PSEC-1564): Sanitize first level `rust_library` dependencies of fuzzers"
      },
      {
        "id": "3d5bbb5a55fe416f2faeeaefb85f2e9d00145857",
        "date": "2023-10-19T09:07:23Z",
        "message": "Merge branch 'vsekar/third_party_fuzz' into 'master'\n\nfeat(fuzzing): create `rs/fuzzers` for fuzzers of external crates\n\n- Create a new folder `rs/fuzzers` for fuzzers targeting external crates\n  - Move existing bitcoin fuzzers from `rs/bitcoin/adapter`\n  - Duplicate fuzzers from candid repo\n- New environment variable `SANITIZERS_ENABLED`\n  - Required to get better coverage for fuzzing. See PSEC-1552 for details\n  - Used to add sanitizer flags for external crates\n  - Changes are similar to how `DFINITY_OPENSSL_STATIC` is implemented\n  - Creates two new lockfiles `Cargo.Bazel.Fuzzing.toml.lock` and `Cargo.Bazel.Fuzzing.json.lock`\n- Removes fuzzing target `execute_with_wasm_executor_afl`  and `execute_with_wasm_executor_libfuzzer` as current change is incompatible until wasm_smith is patched. (PSEC-1204) \n\nSee merge request dfinity-lab/public/ic!15386"
      },
      {
        "id": "8d4cf52c84c270769b1d31f6a6f5ca21ad19b509",
        "date": "2023-10-19T09:07:23Z",
        "message": "feat(fuzzing): create `rs/fuzzers` for fuzzers of external crates"
      },
      {
        "id": "777dc83457c451f7806d3f8badb7834443a0ce29",
        "date": "2023-10-18T09:02:01Z",
        "message": "Merge branch 'vsekar/candid_bump' into 'master'\n\nfix(FOLLOW-1288): update candid to v0.9.10\n\n \n\nSee merge request dfinity-lab/public/ic!15454"
      },
      {
        "id": "746c31aae76de3f027b1f84e213fc0f7e5c623bc",
        "date": "2023-10-18T09:02:00Z",
        "message": "fix(FOLLOW-1288): update candid to v0.9.10"
      },
      {
        "id": "2d57e93dabc5f13258d0dee1ffb2363ddce7fe62",
        "date": "2023-10-16T10:09:05Z",
        "message": "Merge branch 'vsekar/update-ic-docutrack' into 'master'\n\nfix(dependency-mgmt): temporarily remove ic-docutrack to unblock npm scanning\n\n \n\nSee merge request dfinity-lab/public/ic!15395"
      },
      {
        "id": "b87a9d5975efe2dc4432cc0347eb677e7dca7584",
        "date": "2023-10-16T10:09:05Z",
        "message": "fix(dependency-mgmt): temporarily remove ic-docutrack to unblock npm scanning"
      },
      {
        "id": "c9175ae5f6e29cd33260b5826c6a32e9876a7e2a",
        "date": "2023-10-13T09:35:49Z",
        "message": "Merge branch 'vsekar/ws2wasm' into 'master'\n\nfeat(fuzzing): tool to convert fuzzers' arbitrary input into wasm / wat\n\n \n\nSee merge request dfinity-lab/public/ic!15363"
      },
      {
        "id": "e9c69eff366dac644e024a2523f38247841e1c1c",
        "date": "2023-10-13T09:35:49Z",
        "message": "feat(fuzzing): tool to convert fuzzers' arbitrary input into wasm / wat"
      },
      {
        "id": "c073d8a3ca40a7c6fc7dc03d96b714df562fe856",
        "date": "2023-10-06T13:38:53Z",
        "message": "Merge branch 'vsekar/use-native-libfuzzer' into 'master'\n\nfeat(PSEC-1515): Use native build and disable linking for libfuzzer-sys\n\nWith the release of `libfuzzer-sys v0.4.7`, we can disable the linking of libfuzzer carried out automatically and provide our own libfuzzer runtime. \n\nIn this MR, \n- we disable the linking and provide native libfuzzer runtime for libfuzzer builds and afl flavoured runtime for afl builds. The underlying fuzzing logic remains the same saving code duplication.\n- Reverts changes made in !13373 in `rs/embedders` and `rs/types/ic00_types` to accommodate AFL. \n- Add a new AFL target for `execute_with_wasmtime` \n\nSee merge request dfinity-lab/public/ic!15189"
      },
      {
        "id": "8cd6d65e9692aaa11f6cd98e9893384c0d377c3b",
        "date": "2023-10-06T13:38:53Z",
        "message": "feat(PSEC-1515): Use native build and disable linking for libfuzzer-sys"
      },
      {
        "id": "65dbb1e769f04a6832b9604ecbc3ce9ebfa9328f",
        "date": "2023-09-29T14:27:03Z",
        "message": "Merge branch 'vsekar/bump-tungstenite' into 'master'\n\nfix(SCAVM-632): Update warp to v0.3.6\n\nAdvisory for tungstenite https://rustsec.org/advisories/RUSTSEC-2023-0065 \n\nSee merge request dfinity-lab/public/ic!15104"
      },
      {
        "id": "4d4e4be04f31d91dd7954768ee7cf98193ab543a",
        "date": "2023-09-29T14:27:02Z",
        "message": "fix(SCAVM-632): Update warp to v0.3.6"
      },
      {
        "id": "f8b18d93616b4ccf253c18f4dbc234eb2cb8b49e",
        "date": "2023-09-13T08:29:15Z",
        "message": "Merge branch 'vsekar/bump-afl' into 'master'\n\nchore(fuzzing): bump afl++ to v4.08c\n\n \n\nSee merge request dfinity-lab/public/ic!14748"
      },
      {
        "id": "90be569c13b0bd4437aa014316ac24431b94f4ad",
        "date": "2023-09-13T08:29:15Z",
        "message": "chore(fuzzing): bump afl++ to v4.08c"
      },
      {
        "id": "6b3190089e23f7a8fa3ff0488d3a2d8e190f6915",
        "date": "2023-08-14T15:11:37Z",
        "message": "Merge branch 'vsekar/add-serialization-roundtrip-for-candid' into 'master'\n\nchore(fuzzing): Include encoding roundtrip for candid fuzzers\n\n \n\nSee merge request dfinity-lab/public/ic!14074"
      },
      {
        "id": "8c9ce9ef5fe1650d26151308f195a045821ca391",
        "date": "2023-08-14T15:11:37Z",
        "message": "chore(fuzzing): Include encoding roundtrip for candid fuzzers"
      }
    ],
    "email": "venkkatesh.sekar@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 30,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 14,
    "fixes": 8,
    "feats": 6,
    "non_merge_commits": [
      {
        "id": "e0c36617002e59faec92ce0ecb96b33b2c3cc770",
        "date": "2023-11-21T09:35:09Z",
        "message": "feat(PSEC-1442): didc based corpus generator for mgmt canister args"
      },
      {
        "id": "8d291fbcd095b4e4c38c15dfb4b228aae1ae4207",
        "date": "2023-11-16T16:02:15Z",
        "message": "fix(fuzzing): set `allow_user_segv_handler=1` for wasmtime and wasm_executor fuzz jobs"
      },
      {
        "id": "56c3dad3fe6237ef87a029c6359df57f37770e5f",
        "date": "2023-11-13T17:28:37Z",
        "message": "fix(fuzzing): Add option to filter `canister_` prefix from export names"
      },
      {
        "id": "e05bb908544d04533ae5797df38081180a02972f",
        "date": "2023-11-09T17:24:56Z",
        "message": "feat(fuzzing): Fork wasm-smith to generate IC compatible wasm for fuzzing"
      },
      {
        "id": "923607af97e09c50f62ea25a9a26ac00fe6f302a",
        "date": "2023-11-09T14:45:17Z",
        "message": "fix(fuzzing): remove fuzzing annotations for hex and subtle"
      },
      {
        "id": "bf436ed8ffbec23dde452e041e60d35891bc0ff9",
        "date": "2023-11-01T07:20:38Z",
        "message": "fix(fuzzing): fix static_openssl conditional"
      },
      {
        "id": "4ec3eb00969eb6191b9cc0507e78a3868fe97cd3",
        "date": "2023-10-31T16:18:23Z",
        "message": "fix(fuzzing): add libclang-rt-15-dev to Dockerfile"
      },
      {
        "id": "7bf5b8a94d96c5ef0ada9a829bbf12c2428dfc50",
        "date": "2023-10-20T12:09:26Z",
        "message": "feat(PSEC-1564): Sanitize first level `rust_library` dependencies of fuzzers"
      },
      {
        "id": "8d4cf52c84c270769b1d31f6a6f5ca21ad19b509",
        "date": "2023-10-19T09:07:23Z",
        "message": "feat(fuzzing): create `rs/fuzzers` for fuzzers of external crates"
      },
      {
        "id": "746c31aae76de3f027b1f84e213fc0f7e5c623bc",
        "date": "2023-10-18T09:02:00Z",
        "message": "fix(FOLLOW-1288): update candid to v0.9.10"
      },
      {
        "id": "b87a9d5975efe2dc4432cc0347eb677e7dca7584",
        "date": "2023-10-16T10:09:05Z",
        "message": "fix(dependency-mgmt): temporarily remove ic-docutrack to unblock npm scanning"
      },
      {
        "id": "e9c69eff366dac644e024a2523f38247841e1c1c",
        "date": "2023-10-13T09:35:49Z",
        "message": "feat(fuzzing): tool to convert fuzzers' arbitrary input into wasm / wat"
      },
      {
        "id": "8cd6d65e9692aaa11f6cd98e9893384c0d377c3b",
        "date": "2023-10-06T13:38:53Z",
        "message": "feat(PSEC-1515): Use native build and disable linking for libfuzzer-sys"
      },
      {
        "id": "4d4e4be04f31d91dd7954768ee7cf98193ab543a",
        "date": "2023-09-29T14:27:02Z",
        "message": "fix(SCAVM-632): Update warp to v0.3.6"
      },
      {
        "id": "90be569c13b0bd4437aa014316ac24431b94f4ad",
        "date": "2023-09-13T08:29:15Z",
        "message": "chore(fuzzing): bump afl++ to v4.08c"
      },
      {
        "id": "8c9ce9ef5fe1650d26151308f195a045821ca391",
        "date": "2023-08-14T15:11:37Z",
        "message": "chore(fuzzing): Include encoding roundtrip for candid fuzzers"
      }
    ],
    "line_additions": 74243,
    "line_deletions": 1318,
    "lines_effected_total": 75561,
    "rel_comm_add": 13,
    "rel_comm_del": 9,
    "rel_comm_total": 14
  },
  {
    "login": "andrewbattat",
    "id": 113942931,
    "totalContributions": 116,
    "github": "https://github.com/andrewbattat",
    "commits": [
      {
        "id": "0622ec9f139898f789949cb3061938bb6e235e22",
        "date": "2023-11-21T22:51:38Z",
        "message": "Merge branch 'andrew/generate-network-config-guestos-tool' into 'master'\n\nFeat(NODE-1168): Rewrite generate-network-config into rust guestos_tool\n\n[NODE-1168](https://dfinity.atlassian.net/browse/NODE-1168)\n\nIn preparation of adding ipv4 support to guestos, generate-network-config has been rewritten into the guestos_tool and is now called via:\n`/opt/ic/bin/guestos_tool generate-network-config`\n\nThe logic of the script has remained exactly the same.\n\nAn additional command has been added to the guestos tool: `regenerate-network-config`\nThis command is exactly the same as generate-network-config, but it also restarts the systemd networkd after writing the new networkd configuration. generate-network-config will be run on startup, and regenerate-network-config will be called at runtime by the orchestrator to re-configure the networkd.\n\nregenerate-network-config is not currently being used.\n\nAdditionally, this MR includes some minor refactoring to the rs/ic_os/network code \n\nSee merge request dfinity-lab/public/ic!16094"
      },
      {
        "id": "59d68450734aa4c6fb0f6eb3b0cf581fc566b031",
        "date": "2023-11-21T22:51:37Z",
        "message": "Feat(NODE-1168): Rewrite generate-network-config into rust guestos_tool"
      },
      {
        "id": "28d6cdd2834e3e5dd70d214fc47cfff751bce1d4",
        "date": "2023-11-21T16:03:27Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-21-0934' into 'master'\n\nUpdating container base images refs [2023-11-21-0934]\n\n \n\nSee merge request dfinity-lab/public/ic!16236"
      },
      {
        "id": "00113282bca19e7e5b95c07f39032d6aab056d93",
        "date": "2023-11-16T17:01:01Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-16-0815' into 'master'\n\nUpdating container base images refs [2023-11-16-0815]\n\n \n\nSee merge request dfinity-lab/public/ic!16136"
      },
      {
        "id": "1f7da9ad40cf4090908c1f817549c5f4cc8c96b2",
        "date": "2023-11-09T15:42:40Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-09-0814' into 'master'\n\nUpdating container base images refs [2023-11-09-0814]\n\n \n\nSee merge request dfinity-lab/public/ic!15990"
      },
      {
        "id": "4430e1965cb409e3abff3fdd487597ecb8d283e2",
        "date": "2023-11-09T00:36:41Z",
        "message": "Merge branch 'andrew/remove-var-from-HostOS-builds' into 'master'\n\nFix: Strip var path from HostOS/GuestOS rootfs build and fix user account creation\n\n[Node-1113](https://dfinity.atlassian.net/jira/software/c/projects/NODE/boards/189?assignee=6328911461dbef2805bbcee6&selectedIssue=NODE-1113)\n\nThere is a nondeterminism issue in the HostOS /var build. To get around this, we are stripping /var from the GuestOS/HostOS root image build, as var gets mounted over by the LVM anyway (see [mount-genrator](https://gitlab.com/dfinity-lab/public/ic/-/blob/master/ic-os/hostos/rootfs/etc/systemd/system-generators/mount-generator)).\n\nHowever, stripping var causes issues with the user account setups. This MR also modifies the guest/host setup-ssh-account-keys script to assure that the user accounts are properly created, whether account keys exist for a user or not.\n\nAdditionally, stripping var causes issues with the filebeat user permissions, so this MR updates filebeat user permissions at runtime. \n\nSee merge request dfinity-lab/public/ic!15049"
      },
      {
        "id": "24d24bda10c9b2e5a789a5db31fbececccac2a1f",
        "date": "2023-11-09T00:36:41Z",
        "message": "Fix: Strip var path from HostOS/GuestOS rootfs build and fix user account creation"
      },
      {
        "id": "c8eea50d488bc990434e9312fef8aaebd25ffd75",
        "date": "2023-11-07T15:28:06Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-07-0924' into 'master'\n\nUpdating container base images refs [2023-11-07-0924]\n\n \n\nSee merge request dfinity-lab/public/ic!15927"
      },
      {
        "id": "6339ec385cb144d9327161858e834f691ecee366",
        "date": "2023-11-07T10:23:03Z",
        "message": "feat(NODE-898): Extend repro-check.sh to check build reproducibility of hostOS and setupOS"
      },
      {
        "id": "5bf054d0c9583846baa20c05b25b7cd25e93bd24",
        "date": "2023-11-02T15:02:26Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-02-0837' into 'master'\n\nUpdating container base images refs [2023-11-02-0837]\n\n \n\nSee merge request dfinity-lab/public/ic!15844"
      },
      {
        "id": "88b1367c06062a619ee044001963564faf7674b6",
        "date": "2023-11-01T15:14:36Z",
        "message": "Merge branch 'base-image-refs-update-2023-11-01-0929' into 'master'\n\nUpdating container base images refs [2023-11-01-0929]\n\n \n\nSee merge request dfinity-lab/public/ic!15809"
      },
      {
        "id": "ed32583cab21f79fb769660cc54e40a1a7690589",
        "date": "2023-10-31T15:23:19Z",
        "message": "Merge branch 'andrew/add-qemu-required-dependencies' into 'master'\n\nAdd qemu required dependencies\n\n[NODE-1151](https://dfinity.atlassian.net/browse/NODE-1151) \n\nAdd qemu required dependencies to HostOS\n\nhttps://packages.ubuntu.com/jammy/qemu-system-x86\n\nThings are working in production right now, but we’ll want all these packages in case we want to leverage a new qemu feature. \n\nCurrent HostOS root partition: 1.82 GB (these additional packages added .01 GB). \n\nNote: we need to be careful about not pulling in certain packages that would override the ones built by qemu, like qemu-system-common and qemu-system-data \n\nSee merge request dfinity-lab/public/ic!15705"
      },
      {
        "id": "5836b461c1bc798a34fdac5d29e088bde42054bd",
        "date": "2023-10-31T15:23:19Z",
        "message": "Add qemu required dependencies"
      },
      {
        "id": "0fee46e664a04ace54904ffbad368456c2dc17f0",
        "date": "2023-10-26T21:43:31Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-26-0830' into 'master'\n\nUpdating container base images refs [2023-10-26-0830]\n\n \n\nSee merge request dfinity-lab/public/ic!15670"
      },
      {
        "id": "ecc13a99f0ddb2e2f6b26373e9d5dcd1a95fcff3",
        "date": "2023-10-25T17:17:46Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-25-0828' into 'master'\n\nUpdating container base images refs [2023-10-25-0828]\n\n \n\nSee merge request dfinity-lab/public/ic!15632"
      },
      {
        "id": "840e085017da7a518beb96b8990654e65754be5b",
        "date": "2023-10-24T20:19:41Z",
        "message": "Merge branch 'andrew/remove-pcsc-tools-package' into 'master'\n\nfeat(NODE-1026): Remove pcsc-tools package\n\nRemove `pcsc-tools` and add `libpixman-1-0` package, as this is a required qemu package which pcsc-tools was pulling in as a transitive dependency.\n\nTested HSM attach/detach commands. I'm not aware of any other purpose of this package besides utilizing the HSM.\n\nCurrent size of HostOS root partition: 1.81 GB! \n\nSee merge request dfinity-lab/public/ic!15584"
      },
      {
        "id": "d8e343f2a6caf5841bc0380223e8c48824e1fe80",
        "date": "2023-10-24T20:19:40Z",
        "message": "feat(NODE-1026): Remove pcsc-tools package"
      },
      {
        "id": "a23727abb14de53cd28e6c319a7c3a07492d8f31",
        "date": "2023-10-23T21:02:41Z",
        "message": "Merge branch 'andrew/test-remove-sparse-tag' into 'master'\n\nfeat(NODE-1112): Ensure determinism in tar commands\n\n[Node-1112](https://dfinity.atlassian.net/jira/software/c/projects/NODE/boards/189?assignee=6328911461dbef2805bbcee6&selectedIssue=NODE-1112)\n\nChange: Add --hole-detection=raw option to tar commands to ensure determinism.\n\nContext: A community member built a HostOS update image with the exact same contents as the HostOS update image we built ourselves, but the update image tar file they produced was different. We identified nondeterminism when the tar file itself is being created. By default, tar uses the system-specific seek method, which can introduce variability depending on the system and the file system. \n\nAdding the \"--hole-detection=raw\" will hopefully resolve this. I don't believe it will cause a significant slow-down for CI. However, it may cause a significant slowdown for community image builds. \n\n\nNapkin math:\n\nFor a file of ~100 GB that's almost entirely zeros (Like a HostOS disk.img):\nSATA SSD:\n- Read Speed: ~200-550 MB/s.\n- Time increase: 3 to 8 minutes\n\nNVMe SSD:\n- Read Speed: ~1,000-5,000 MB/s\n- Time increase: 0.3 to 1.67 minutes\n\n----------\n\nTest times of tar command with hole-detection=raw and without it on a 100GB hostOS on sf-pyr06\n- With --hole-detection=raw: 2m15s, 1m58s\n- Without —hole detection=raw: 4s, 4s, \n\nSee merge request dfinity-lab/public/ic!15016"
      },
      {
        "id": "068f6682bb0d65d06c3b0b06009cc995f82d4b72",
        "date": "2023-10-23T21:02:41Z",
        "message": "feat(NODE-1112): Ensure determinism in tar commands"
      },
      {
        "id": "d2748a5a56a5bcfd5b28107678373c903b2391a6",
        "date": "2023-10-20T13:45:17Z",
        "message": "Merge branch 'revert-node-140-changes-fixes' into 'master'\n\nfix: Revert NODE-140 and partial fixes to it against the master branch\n\nThis reverts commits 6676a92cd1148e1b8f4ea576806ff8b45ed13956 and 881d0a197306125e053a0a43d343812f56a9ac9c \n\nSee merge request dfinity-lab/public/ic!15515"
      },
      {
        "id": "eda91b67b99a60925e945950216437a05bd91973",
        "date": "2023-10-19T15:14:54Z",
        "message": "Merge branch 'andrew/remove-unnecessary-firmware' into 'master'\n\nChore: Remove unnecessary ARM firmware\n\nThese arm firmware files are unnecessary and take up ~120 MB of space on the host.\n\n[Node-1114](https://dfinity.atlassian.net/browse/NODE-1114) \n\nSee merge request dfinity-lab/public/ic!15469"
      },
      {
        "id": "980c0103e7fdf3660a0b530b02489c8872f145ae",
        "date": "2023-10-19T15:14:54Z",
        "message": "Chore: Remove unnecessary ARM firmware"
      },
      {
        "id": "e65470dc51ea9382e5c01f6dc39fe6294dfd61ab",
        "date": "2023-10-19T14:25:33Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-19-0817' into 'master'\n\nUpdating container base images refs [2023-10-19-0817]\n\n \n\nSee merge request dfinity-lab/public/ic!15486"
      },
      {
        "id": "15df9dfdc977abd80ca5ffd0eb775e3896507401",
        "date": "2023-10-13T21:28:21Z",
        "message": "Merge branch 'andrew/fix-manageboot.sh' into 'master'\n\nFix: manageboot.sh permissions\n\n[NODE-1131](https://dfinity.atlassian.net/browse/NODE-1131)\n\nCreate `metrics_reporter` group with necessary permissions to read and write `/run/node_exporter/collector_textfile` and add `ic-replica` to group.\n\nTested in GuestOS VM: ic-replica user successfully read/write to `/run/node_exporter/collector_textfile`\n\nNote: HostOS upgrades should still be functional, as the vsock service is run as root (which calls manageboot.sh for HostOS upgrades) \n\nSee merge request dfinity-lab/public/ic!15392"
      },
      {
        "id": "6676a92cd1148e1b8f4ea576806ff8b45ed13956",
        "date": "2023-10-13T21:28:21Z",
        "message": "Fix: manageboot.sh permissions"
      },
      {
        "id": "619efc52fdf2d5c8ffcbe390dceaac95bc13520c",
        "date": "2023-10-12T14:33:59Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-12-0825' into 'master'\n\nUpdating container base images refs [2023-10-12-0825]\n\n \n\nSee merge request dfinity-lab/public/ic!15353"
      },
      {
        "id": "1d5f911f2f7ce29bb471c44bb2117ff069fb9cc3",
        "date": "2023-10-10T16:02:05Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-10-0842' into 'master'\n\nUpdating container base images refs [2023-10-10-0842]\n\n \n\nSee merge request dfinity-lab/public/ic!15306"
      },
      {
        "id": "e1bdd05b565a737dcae286540f58989521a7f16d",
        "date": "2023-10-09T15:35:22Z",
        "message": "Merge branch 'andrew/test-sync-podman-export' into 'master'\n\nAdd sync commands to possibly resolve HostOS nondeterminism source\n\nThese sync commands _may_ resolve a nondeterminism issue found in HostOS root partition builds ([NODE-1116](https://dfinity.atlassian.net/browse/NODE-1116))\n\nEither way, it shouldn't hurt to add them. \n\nSee merge request dfinity-lab/public/ic!15180"
      },
      {
        "id": "6a208725db4486eae69f6581bd01e305caf4f30d",
        "date": "2023-10-09T15:35:22Z",
        "message": "Add sync commands to possibly resolve HostOS nondeterminism source"
      },
      {
        "id": "7756800cb5b44aa4bf05a49ef8de9096f509ce46",
        "date": "2023-10-07T18:33:55Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-07-0823' into 'master'\n\nUpdating container base images refs [2023-10-07-0823]\n\n \n\nSee merge request dfinity-lab/public/ic!15284"
      },
      {
        "id": "46576d3633df2f290a8457134139710846b1c893",
        "date": "2023-10-05T15:08:30Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-05-0828' into 'master'\n\nUpdating container base images refs [2023-10-05-0828]\n\n \n\nSee merge request dfinity-lab/public/ic!15214"
      },
      {
        "id": "12e3d48ce84ea83eee56a1eb1101665dc5bd4161",
        "date": "2023-10-04T14:28:06Z",
        "message": "Merge branch 'base-image-refs-update-2023-10-04-1256' into 'master'\n\nUpdating container base images refs [2023-10-04-1256]\n\n \n\nSee merge request dfinity-lab/public/ic!15195"
      },
      {
        "id": "7e694e300a6bc1e916745e8ce9dae9b49dfb0f02",
        "date": "2023-09-29T00:39:54Z",
        "message": "Merge branch 'base-image-refs-update-2023-09-28-0816' into 'master'\n\nUpdating container base images refs [2023-09-28-0816]\n\n \n\nSee merge request dfinity-lab/public/ic!15057"
      },
      {
        "id": "40ea9bec94b877afeb4625a2743651b11c9d0888",
        "date": "2023-09-25T15:47:29Z",
        "message": "Merge branch 'andrew/concurrent-vsock-commands' into 'master'\n\nSupport concurrent vsock commands\n\n[Node-1095](https://dfinity.atlassian.net/browse/NODE-1095)\n\n\nSupporting concurrent vsock commands via detaching the incoming threads spawned for each command rather than waiting for the result of a thread before accepting new incoming commands.\n\nWe may have to create a more robust solution when we implement the SEV-upgrades protocol due to the added complexity. \n\nSee merge request dfinity-lab/public/ic!14961"
      },
      {
        "id": "fe661de2e7975ecaa47d0124aa077866a76105cf",
        "date": "2023-09-25T15:47:29Z",
        "message": "Support concurrent vsock commands"
      },
      {
        "id": "ba761ba75534386fbc6e858ee8b2138146e9e992",
        "date": "2023-09-15T18:30:50Z",
        "message": "Merge branch 'andrew/print-NP-troubleshooting-info-phase-1' into 'master'\n\nLog node-ID and replica version to HostOS console\n\nhttps://dfinity.atlassian.net/browse/NODE-1093 \n\nSee merge request dfinity-lab/public/ic!14789"
      },
      {
        "id": "c11ee9d9dd5fd1899dd5e66d7cbfc7f9bb69d088",
        "date": "2023-09-15T18:30:50Z",
        "message": "Log node-ID and replica version to HostOS console"
      },
      {
        "id": "a20d0d4bdd9918ee72c0a96ca0772979bb399a48",
        "date": "2023-09-13T23:58:01Z",
        "message": "Merge branch 'andrew/remove-outdated-log' into 'master'\n\nchore: remove outdated setupOS node provider log\n\nThe log says to `Wait for the message after the first boot...` but we already removed the message the log is referring to. \n\nSee merge request dfinity-lab/public/ic!14788"
      },
      {
        "id": "d014f7e213c6c3e5bd141aa06a5a43a6e6efcd84",
        "date": "2023-09-13T23:58:01Z",
        "message": "chore: remove outdated setupOS node provider log"
      },
      {
        "id": "6abd1c74dcec92f119eb73234c6ae774dfce852d",
        "date": "2023-09-07T16:40:16Z",
        "message": "Merge branch 'base-image-refs-update-2023-09-07-0827' into 'master'\n\nUpdating container base images refs [2023-09-07-0827]\n\n \n\nSee merge request dfinity-lab/public/ic!14646"
      },
      {
        "id": "8c8d0db96233c0a6f3d6aa407101873bcf2fa729",
        "date": "2023-08-17T14:42:16Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-17-0816' into 'master'\n\nUpdating container base images refs [2023-08-17-0816]\n\n \n\nSee merge request dfinity-lab/public/ic!14213"
      },
      {
        "id": "9dea41a1898872fc9f7415b8158d2c0d32b86be2",
        "date": "2023-08-16T18:32:09Z",
        "message": "Merge branch 'andrew/vsock-service-file-fix' into 'master'\n\nfix: Remove unnecessary vsock timeout\n\nRemove an unnecessary timeout in the vsock service file. This was created for the old, buggy hostOS vsock server. The new vsock written in rust does not need this timeout \n\nSee merge request dfinity-lab/public/ic!14179"
      },
      {
        "id": "08a6818831bb49da228173a452e91360312c5b23",
        "date": "2023-08-16T18:32:08Z",
        "message": "fix: Remove unnecessary vsock timeout"
      },
      {
        "id": "3d91c974e61219c804f2772e538cfab6bff7ae46",
        "date": "2023-08-16T14:55:46Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-16-0828' into 'master'\n\nUpdating container base images refs [2023-08-16-0828]\n\n \n\nSee merge request dfinity-lab/public/ic!14186"
      },
      {
        "id": "105995f2d4350d27dbecfdee2e410838e941bd22",
        "date": "2023-08-04T15:20:40Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-04-0827' into 'master'\n\nUpdating container base images refs [2023-08-04-0827]\n\n \n\nSee merge request dfinity-lab/public/ic!13966"
      },
      {
        "id": "7cecf35dba77701539f5253a690370878f1ef595",
        "date": "2023-08-03T15:51:35Z",
        "message": "Merge branch 'base-image-refs-update-2023-08-03-0815' into 'master'\n\nUpdating container base images refs [2023-08-03-0815]\n\n \n\nSee merge request dfinity-lab/public/ic!13937"
      }
    ],
    "email": "andrew.battat@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 46,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 33,
    "fixes": 3,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "59d68450734aa4c6fb0f6eb3b0cf581fc566b031",
        "date": "2023-11-21T22:51:37Z",
        "message": "Feat(NODE-1168): Rewrite generate-network-config into rust guestos_tool"
      },
      {
        "id": "24d24bda10c9b2e5a789a5db31fbececccac2a1f",
        "date": "2023-11-09T00:36:41Z",
        "message": "Fix: Strip var path from HostOS/GuestOS rootfs build and fix user account creation"
      },
      {
        "id": "6339ec385cb144d9327161858e834f691ecee366",
        "date": "2023-11-07T10:23:03Z",
        "message": "feat(NODE-898): Extend repro-check.sh to check build reproducibility of hostOS and setupOS"
      },
      {
        "id": "5836b461c1bc798a34fdac5d29e088bde42054bd",
        "date": "2023-10-31T15:23:19Z",
        "message": "Add qemu required dependencies"
      },
      {
        "id": "d8e343f2a6caf5841bc0380223e8c48824e1fe80",
        "date": "2023-10-24T20:19:40Z",
        "message": "feat(NODE-1026): Remove pcsc-tools package"
      },
      {
        "id": "068f6682bb0d65d06c3b0b06009cc995f82d4b72",
        "date": "2023-10-23T21:02:41Z",
        "message": "feat(NODE-1112): Ensure determinism in tar commands"
      },
      {
        "id": "980c0103e7fdf3660a0b530b02489c8872f145ae",
        "date": "2023-10-19T15:14:54Z",
        "message": "Chore: Remove unnecessary ARM firmware"
      },
      {
        "id": "6676a92cd1148e1b8f4ea576806ff8b45ed13956",
        "date": "2023-10-13T21:28:21Z",
        "message": "Fix: manageboot.sh permissions"
      },
      {
        "id": "6a208725db4486eae69f6581bd01e305caf4f30d",
        "date": "2023-10-09T15:35:22Z",
        "message": "Add sync commands to possibly resolve HostOS nondeterminism source"
      },
      {
        "id": "fe661de2e7975ecaa47d0124aa077866a76105cf",
        "date": "2023-09-25T15:47:29Z",
        "message": "Support concurrent vsock commands"
      },
      {
        "id": "c11ee9d9dd5fd1899dd5e66d7cbfc7f9bb69d088",
        "date": "2023-09-15T18:30:50Z",
        "message": "Log node-ID and replica version to HostOS console"
      },
      {
        "id": "d014f7e213c6c3e5bd141aa06a5a43a6e6efcd84",
        "date": "2023-09-13T23:58:01Z",
        "message": "chore: remove outdated setupOS node provider log"
      },
      {
        "id": "08a6818831bb49da228173a452e91360312c5b23",
        "date": "2023-08-16T18:32:08Z",
        "message": "fix: Remove unnecessary vsock timeout"
      }
    ],
    "line_additions": 651,
    "line_deletions": 230,
    "lines_effected_total": 881,
    "rel_comm_add": 4,
    "rel_comm_del": 4,
    "rel_comm_total": 6
  },
  {
    "login": "blind-oracle",
    "id": 592248,
    "totalContributions": 112,
    "github": "https://github.com/blind-oracle",
    "commits": [
      {
        "id": "d4f01e449182cc58eac4de3c002b8d2726a327c8",
        "date": "2023-11-21T16:28:19Z",
        "message": "Merge branch 'igornovg/nginx-tasks' into 'master'\n\nfix(BOUN-962): upgrade nginx, remove cbor modules\n\n* upgrade nginx to latest stable version (1.24.0)\n* remove cbor modules\n\nThis is only base image MR, once it's merged then we update the hash in the separate MR. \n\nSee merge request dfinity-lab/public/ic!16247"
      },
      {
        "id": "954567d18ea273b0e01ad2de488b9c2c853f563e",
        "date": "2023-11-21T16:28:19Z",
        "message": "fix(BOUN-962): upgrade nginx, remove cbor modules"
      },
      {
        "id": "74f03c2b15ded5d0a959870f3a9fc342bf7d85cf",
        "date": "2023-11-21T15:11:38Z",
        "message": "Merge branch 'igornovg/journald-ratelimit' into 'master'\n\nfix(BOUN-957) increase journal ratelimit and max size\n\n* Increase system-wide ratelimit (default is 10k/30s which is 333/1s - quite small) to attempt to fix nginx log failures\n* Increase max journal disk usage to 8GB to have more logs (default is around 2.5GB) \n\nSee merge request dfinity-lab/public/ic!16245"
      },
      {
        "id": "464a065b48ca4dcf7fd23ba12f59e4db76796788",
        "date": "2023-11-21T15:11:38Z",
        "message": "fix(BOUN-957) increase journal ratelimit and max size"
      },
      {
        "id": "b97e4159106b1058b6b88a99d274b2e9f7ca967c",
        "date": "2023-11-17T08:39:02Z",
        "message": "ic-boundary: set max request size to 4MB"
      },
      {
        "id": "c6d6e25a26c32622f56dcd706f34fefa42fc83ed",
        "date": "2023-11-16T10:28:53Z",
        "message": "Merge branch 'igornovg/icbn-nns-key' into 'master'\n\nfeat(BOUN-960): make NNS public key optional\n\nTo run `ic-boundary` under an orchestrator we need to make the arg optional.\n\n* `--nns-pub-key-pem` is optional now. The logic for its requirement is the following:\n  * If the internal registry replicator is enabled:\n    * If there's a local snapshot of the registry (of any version) - we don't need the key\n    * Otherwise we need it and panic if not provided\n  * if the replicator is disabled - we don't need the key\n* The root key which is returned in the `/api/v2/status` response is now taken from the registry snapshot (if one is available)\n  * If the current NNS subnet ID matches the mainnet one - then we don't include the key in the response\n* Tests updated to match \n\nSee merge request dfinity-lab/public/ic!16128"
      },
      {
        "id": "52ba0e1c1a36767f299c8da42c722ad9b9b4ea7b",
        "date": "2023-11-16T10:28:51Z",
        "message": "feat(BOUN-960): make NNS public key optional"
      },
      {
        "id": "4b3fd5efb36a4f88d40eb49b9381984fe5af9573",
        "date": "2023-11-10T18:10:02Z",
        "message": "Merge branch 'igornovg/icbn-minor-fixes' into 'master'\n\nfix(BOUN-953): smaller metrics, fix request size limit, cosmetic changes\n\n* We again went over the edge with metrics on canary, the scrape started to fail - the scrape limit is 50MB. So another round of cuts, it should make them much smaller:\n  * A bit less buckets for latency and request/response sizes\n  * Split the caching results into a separate metrics since we probably don't need per-node/-subnet details on caching\n* Fix the request size limiter, it didn't really work at all due to the way we consume the request body. So remove the layer and apply the limit manually - tested in dev and works as expected. TODO add tests for that maybe.\n* Add request concurrency limit to control memory usage\n* Move some vars from const to CLI args\n* Log only health check errors, otherwise it's too chatty without much benefit\n* Various cosmetic changes \n\nSee merge request dfinity-lab/public/ic!16014"
      },
      {
        "id": "4a1fb890c1e491081e7923e684c68401e10767bb",
        "date": "2023-11-10T18:10:01Z",
        "message": "fix(BOUN-953): smaller metrics, fix request size limit, cosmetic changes"
      },
      {
        "id": "f7724934b8ad37d2ab1fb620860be5f9f27232ac",
        "date": "2023-11-08T15:18:14Z",
        "message": "Merge branch 'igornovg/icbn-stale-metrics' into 'master'\n\nfeat(BOUN-949): remove stale metrics\n\nProblem: metrics for the nodes that are gone from the registry are still present in the `/metrics` output and scraped. This poses problems for some of the dashboards like `Subnets Health` that derives the health from total count of healthy nodes in a subnet. It also makes the metrics snapshot larger.\n\nTo overcome this we:\n\n* Go over the Metric Families that are emitted by the registry\n* Search for all metrics that have both `node_id` and `subnet_id` labels present (node can move between subnets over its lifetime)\n* Check if they match what we have in the currently published registry snapshot\n* Remove the metric otherwise from the output\n* Metrics which don't have both those labels are untouched.\n\n\\+ test\n\nCaveat: the actual metrics are still in the registry and cannot be easily removed from there ( `Registry` does not allow us to iterate over what it has registered), but this shouldn't pose any real problems. \n\nSee merge request dfinity-lab/public/ic!15963"
      },
      {
        "id": "7bef16b0a07b362f0851d97f91581c9585004421",
        "date": "2023-11-08T15:18:14Z",
        "message": "feat(BOUN-949): remove stale metrics"
      },
      {
        "id": "d3cbdbddc3e07bc5101db2a7907818927c51920f",
        "date": "2023-11-07T10:50:33Z",
        "message": "Merge branch 'igornovg/icbn-registry' into 'master'\n\nfix(BOUN-948): don't publish stale registry versions\n\nWhen the local registry snapshot is empty (after deployment) - it's not good to use intermediate versions and go online until it has fully synced.\n\nBefore we had `last_known_registry_version` variable `control-plane` used to skip any version below that, but it needs to be maintained and is already 6k versions behind.\n\nApproach here is to detect when the versions stop incrementing for some period of time and only then do the initial snapshot publication that brings us online. This MR adds `--min-version-age` CLI flag - once the initial registry version stabilized for that amount of time it publishes it. The default is 15sec and according to my tests is more than enough. After the initial publication this logic is not used anymore.\n\n\\+ oneliner fix for `CanisterId` along \n\nSee merge request dfinity-lab/public/ic!15929"
      },
      {
        "id": "bb83138e694f7c98f7e0c21d8b067621a4534e10",
        "date": "2023-11-07T10:50:33Z",
        "message": "fix(BOUN-948): don't publish stale registry versions"
      },
      {
        "id": "f03bfc9779a751b9f442f51957220a1096ba4af6",
        "date": "2023-11-06T17:07:12Z",
        "message": "Merge branch 'igornovg/icbn-btc-logs' into 'master'\n\nfix(BOUN-947): log canister id changed by btc_mw\n\nthe canister_id change wasn't reflected in logs, fix that. also fix tests to check that properly \n\nSee merge request dfinity-lab/public/ic!15911"
      },
      {
        "id": "fcfbcfd5f22c7d8932c9438b7576fcc3a57e548b",
        "date": "2023-11-06T17:07:11Z",
        "message": "fix(BOUN-947): log canister id changed by btc_mw"
      },
      {
        "id": "2f748fd5ae5cd73afdcc4d75b12cfabfd8580282",
        "date": "2023-11-06T15:16:54Z",
        "message": "feat(BOUN-944 BOUN-932): switch to new caching library, fix some bugs"
      },
      {
        "id": "ba1f5e935cc9697e65ceef4aa1be74607f2ab57a",
        "date": "2023-11-06T11:54:06Z",
        "message": "Merge branch 'igornovg/icbn-more-logs' into 'master'\n\nfeat(BOUN-943): add more headers to ic-boundary/icx-proxy\n\nTo correctly log requests passed thru `icx-proxy` - add more headers \n\nSee merge request dfinity-lab/public/ic!15895"
      },
      {
        "id": "097fffc8f16fe6887f13d5f31b759cd69678d177",
        "date": "2023-11-06T11:54:03Z",
        "message": "feat(BOUN-943): add more headers to ic-boundary/icx-proxy"
      },
      {
        "id": "0e0639422403f035f8c5290695c336fa38c5216d",
        "date": "2023-11-03T14:20:15Z",
        "message": "Merge branch 'igornovg/icxproxy' into 'master'\n\nfeat(BOUN-935): icx-proxy: allow HTTP replica, pass headers\n\nTo be able to pass `x-request-id` from `nginx` to `ic-boundary` and `x-ic-*` routing headers back, the modifications to `icx-proxy` are needed.\n\nProblem is that it heavily relies on `ic-agent` (which gives zero control on the headers). So to make it happen one need to either fork & change it or re-implement it in part.\n\nTo avoid this, TLS (Thread Local Storage) was used:\n\n* Wrap the `Hyper` client into a new `HyperClientWrapper` that intercepts requests and responses from `ic-agent` and does header addition & extraction\n* Wrap the Axum handler into `handler_wrapper` which uses `LocalPoolHandle` to make sure that the handling of a call is pinned to a single thread even across `await` boundaries\n\n  The chosen thread is guaranteed to execute given request from start to end before switching to the next one, so there should be no race conditions on the thread local variables.\n* Use thread-local variables `HEADERS_IN` and `HEADERS_OUT` to store per-request headers in both directions\n* Only `x-request-id` is forwarded forward and only `x-ic-node-id` / `x-ic-subnet-id` / `x-subnet-type` are forwarded back for now\n\nAlso the HTTP client is configured to allow `http://` urls for replicas to connect to `ic-boundary` directly \n\nSee merge request dfinity-lab/public/ic!15870"
      },
      {
        "id": "b2dcffde505ca7041d22c98fcad53a0dc262c9e8",
        "date": "2023-11-03T14:20:14Z",
        "message": "feat(BOUN-935): icx-proxy: allow HTTP replica, pass headers"
      },
      {
        "id": "8e4807c09fe9c922b9991cae364b6d40cbf77282",
        "date": "2023-11-01T13:50:05Z",
        "message": "Merge branch 'igornovg/icbn-fix-logging' into 'master'\n\nfix(BOUN-632): ic-boundary: fix double logging\n\nIn certain cases `MetricsBody` callback is being called twice - this causes double logging and double metrics.\n\nFix that by adding an atomic flag. \n\nSee merge request dfinity-lab/public/ic!15819"
      },
      {
        "id": "24df51accd524e66bce0f7a218ab2e0bece41c61",
        "date": "2023-11-01T13:50:04Z",
        "message": "fix(BOUN-632): ic-boundary: fix double logging"
      },
      {
        "id": "ef72991f196b3b9c688cecdf22cdf65bca386cd4",
        "date": "2023-10-31T14:11:25Z",
        "message": "Merge branch 'igornovg/icbn-replicator' into 'master'\n\nfeat(BOUN-938): ic-boundary: make registry-replicator optional\n\n* Add CLI parameter `--disable-registry-replicator` which disables internal IC Registry replicator\n* Dont's send `x-request-id` back to avoid duplicating it ( `nginx` adds it to the reply)\n* Change some retryable HTTP reply codes from 500 to 503\n* Fix reg version logging issue \n\nSee merge request dfinity-lab/public/ic!15785"
      },
      {
        "id": "e7a1cf7f22d8af266e8da1f19c8922ed52161dc6",
        "date": "2023-10-31T14:11:24Z",
        "message": "feat(BOUN-938): ic-boundary: make registry-replicator optional"
      },
      {
        "id": "0919118e6d7e6ba165ccfd498a3c192123b3ca48",
        "date": "2023-10-30T15:54:58Z",
        "message": "Merge branch 'igornovg/icbn-firewall' into 'master'\n\nfeat(BOUN-935): ic-boundary: add firewall generator\n\nAdd a bit dirty firewall generator to replace similar `control-plane` functionality to be able to remove it from BN.\n\n* This stuff is to be removed from the code after we move to a a decentralized BN\n* The feature is optional and is enabled only if `--nftables-system-replicas-path` CLI parameter is specified\n* Firewall rules are only updated when a new registry version is published and contain all system nodes.\n\n  This is nicer than `control-plane` that persisted them with every routing table change, which is not needed at all and only caused too many restarts when the network is flaky.\n* Use `reload` instead of `restart` for `nftables` which does not involve flushing all the rules first and re-adding them. See `ExecStop` below\n\n  ```plaintext\n  # /usr/lib/systemd/system/nftables.service\n  ...\n  ExecStart=/usr/sbin/nft -f /etc/nftables.conf\n  ExecReload=/usr/sbin/nft -f /etc/nftables.conf\n  ExecStop=/usr/sbin/nft flush ruleset\n  ``` \n\nSee merge request dfinity-lab/public/ic!15733"
      },
      {
        "id": "7361f06b3a6125f5556846b6f37c8d91e0495790",
        "date": "2023-10-30T15:54:42Z",
        "message": "feat(BOUN-935): ic-boundary: add firewall generator"
      },
      {
        "id": "fc8c3f470a017b53c3b924b07c6680e49316eec6",
        "date": "2023-10-27T11:13:00Z",
        "message": "feat(BOUN-935): ic-boundary: add routing reply headers"
      },
      {
        "id": "caa075a872a94eba1196d39145d4dbfc4c4dcd69",
        "date": "2023-10-25T16:16:25Z",
        "message": "Merge branch 'igornovg/icbn-fixes' into 'master'\n\nfeat(BOUN-934): ic-boundary: add new metric, add tests\n\n* Add `check_status` metric to indicate if the particular node is up or down (`control-plane` had similar one) - useful to draw heat maps of subnet availability\n* Fix incorrect label order (node_id \\<-\\> subnet_id)\n* Improve HTTP router tests \n\nSee merge request dfinity-lab/public/ic!15646"
      },
      {
        "id": "19fba6d48b47f50af112165a8d1913e4f7ae06f2",
        "date": "2023-10-25T16:16:11Z",
        "message": "feat(BOUN-934): ic-boundary: add new metric, add tests"
      },
      {
        "id": "078f69cae627d38360b4e16979c0070cc57bce40",
        "date": "2023-10-23T11:26:04Z",
        "message": "Merge branch 'igornovg/icbn-fix502' into 'master'\n\nfix(BOUN-918): fix panic, minor http client changes\n\n* `canister_id` might not be available if request is rejected on early stages -\\> metrics middleware panics, fix\n* Lower pool idle timeout to 10s to see impact on flaky test\n* Disable redirect following for replica requests (security) and proxy usage\n* Add user-agent \n\nSee merge request dfinity-lab/public/ic!15562"
      },
      {
        "id": "4a72d9b62bdc3233435f6d7356774ca44d773e04",
        "date": "2023-10-23T11:26:03Z",
        "message": "fix(BOUN-918): fix panic, minor http client changes"
      },
      {
        "id": "94fff091d679fa1d4a26f95567bd3249927110c6",
        "date": "2023-10-20T13:02:40Z",
        "message": "feat(BOUN-918): nginx: add /health endpoint"
      },
      {
        "id": "98c0ff2ae2c98f5a3d17537924890bffad586aed",
        "date": "2023-10-19T13:51:40Z",
        "message": "Merge branch 'igornovg/icbn-flaky' into 'master'\n\nfix(BOUN-912): ic-boundary: lower pool idle timeout\n\nOne more take on this flaky test.\n\nSince `IncompleteMessage` error occurs when replica closes the connection and `ic-boundary` does not notice that for whatever reason (some network race condition, thus flakiness) - we should instead try to close the socket earlier than replica does. Let's see how that affects the test. \n\nSee merge request dfinity-lab/public/ic!15503"
      },
      {
        "id": "c370b37bf5e42920822df4cb7b750c866ae7b951",
        "date": "2023-10-19T13:51:39Z",
        "message": "fix(BOUN-912): ic-boundary: lower pool idle timeout"
      },
      {
        "id": "4628690df58c964fb2b53383ffe2587214972a4b",
        "date": "2023-10-19T11:43:38Z",
        "message": "Merge branch 'igornovg/icbn-fix-btc' into 'master'\n\nfix(BOUN-919): ic-boundary: fix bitcoin middleware\n\n* `RequestContext.canister_id` isn't used to look up nodes, it's a CBOR field. Switch to `CanisterId` extension.\n* Add tests for this middleware\n* Log both CBOR canister_id and URL canister_id (TODO make it better somehow?)\n* Move principals to `const` and `lazy_static` so that they won't have to be cloned in `Extension` \n\nSee merge request dfinity-lab/public/ic!15466"
      },
      {
        "id": "e50436cacdebff51fdf6cef2c06dd19bbaf249d2",
        "date": "2023-10-19T11:43:38Z",
        "message": "fix(BOUN-919): ic-boundary: fix bitcoin middleware"
      },
      {
        "id": "9d0100d9f4b6c8cb1d03145849f57f5ef00fc46e",
        "date": "2023-10-17T09:14:34Z",
        "message": "Merge branch 'igornovg/icbn-cache-test' into 'master'\n\nfix(BOUN-915): ic-boundary: switch cache to async interface\n\nProbably `async` fits into Axum workflow nicer and maybe it will make tests less flaky \n\nSee merge request dfinity-lab/public/ic!15414"
      },
      {
        "id": "a503a1ad48c8cd52e1152297b51148ef2d0f3409",
        "date": "2023-10-17T09:14:34Z",
        "message": "fix(BOUN-915): ic-boundary: switch cache to async interface"
      },
      {
        "id": "5028b8ae2d741d0f30eddb74990cf519cbfb6cb6",
        "date": "2023-10-13T09:18:18Z",
        "message": "Merge branch 'igornovg/icbn-keepalive' into 'master'\n\nfix(BOUN-912): ic-boundary: enable keepalives\n\nThis does not really manifest in prod at all, only in tests for some reason.\n\n* Enable TCP keepalive\n* Enable HTTP2 keepalive pings\n* Increase idle timeout for connections in pool from 90s to 180s \n\nSee merge request dfinity-lab/public/ic!15377"
      },
      {
        "id": "fac2e2832b8bc82fe3a56157f75668ea4fe7667e",
        "date": "2023-10-13T09:18:17Z",
        "message": "fix(BOUN-912): ic-boundary: enable keepalives"
      },
      {
        "id": "8dfb1d44c4fd4bdb6073b5eec8cbfc5ce0254377",
        "date": "2023-10-13T06:48:07Z",
        "message": "Merge branch 'igornovg/icbn-tweaks' into 'master'\n\nfeat(BOUN-910): ic-boundary health endpoint, jemalloc & other\n\n* Add `/health` endpoint that responds with `202` when the service is Ok and `503` otherwise, to be used with Cloudflare & friends\n* Use `jemalloc` as a default allocator, in my tests it shows much less greedy behaviour, let's test it under prod load. Also some metrics from it are published. The crates in Bazel are rather old and we can't easily use newer versions because of some `ic-*` package dependencies that link old version\n* Add gauges to `Persist` to record how many nodes/ranges we have in the routing table, remove duration/counter since they're useless\n* Remove redundant `service=\"ic-boundary\"` label from all metrics, we anyway have `job` label that gets added on top when scraped. Makes metrics a bit smaller.\n* Improve tests\n* Some other cleanups and tidy-up \n\nSee merge request dfinity-lab/public/ic!15364"
      },
      {
        "id": "b02fb946c2f48ed7a46c831602618b7cf44888c1",
        "date": "2023-10-13T06:48:06Z",
        "message": "feat(BOUN-910): ic-boundary health endpoint, jemalloc & other"
      },
      {
        "id": "8bb09bc150b683f7ffce45f4c41411b832f7fdcd",
        "date": "2023-10-10T15:21:53Z",
        "message": "fix(BOUN-894): accept any uuid"
      },
      {
        "id": "79e0bcf6880fa22e278507264ba639ad72862dd0",
        "date": "2023-10-06T16:40:33Z",
        "message": "Merge branch 'igornovg/icbn-optimize' into 'master'\n\nperf(BOUN-908): refactor & optimize ic-boundary a bit\n\nThis does not bring any features, just some optimizations and cleanups:\n\n* Check registry version and update the snapshot only if it's changed. Previously we just unconditionally did this every 10sec which is a waste of resources\n* Rename `RoutingTable` to `RegistrySnapshot` since the name was very misleading. Actual routing table is created from a registry snapshot after the health checks are done\n* Remove latency/success_rate moving average calculations since they're not used anywhere now (we just pick a random node). Can be brought back from git history if needed at some point\n* Don't get `nns_subnet_id` from registry (was never used)\n* Change some API's (like `persist` can never fail, no point in having it return `Result` , also it doesn't need a full snapshot, just a list of subnets)\n* Some other smaller things that I probably forgot \n\nSee merge request dfinity-lab/public/ic!15271"
      },
      {
        "id": "1679e6bfed197fa17a383a889e3e1f791b3c17c2",
        "date": "2023-10-06T16:40:33Z",
        "message": "perf(BOUN-908): refactor & optimize ic-boundary a bit"
      },
      {
        "id": "51d2264a001302c326bd9a091a91a61e809ce346",
        "date": "2023-10-06T09:04:59Z",
        "message": "Merge branch 'igornovg/icbn-memory' into 'master'\n\nfeat(BOUN-908): ic-boundary: snapshot metrics periodically\n\nCurrently, metrics are generated on-the-fly when the `GET /metrics` request arrives. This takes time, allocates a lot of memory and is executed for every scraper that comes (and there are quite a few) which is sub-optimal if the metrics are rather big.\n\nInstead we'll run a job to generate & encode a snapshot of the text-representation into a pre-allocated buffer and only output it in the handler. This should relieve the memory allocator and make the things faster overall. \n\nSee merge request dfinity-lab/public/ic!15244"
      },
      {
        "id": "3ca418d86849906c9589a489e6a7d86d8a04054f",
        "date": "2023-10-06T09:04:59Z",
        "message": "feat(BOUN-908): ic-boundary: snapshot metrics periodically"
      },
      {
        "id": "ffe073c74f0437f778211f43060c7f91c240c8c9",
        "date": "2023-10-04T22:07:00Z",
        "message": "Merge branch 'igornovg/icbn-metrics' into 'master'\n\nfeat(BOUN-897): ic-boundary metrics and some refactoring\n\nOk folks, sorry for the mess, it's a lot of changes, I hope once we are feature-rich it won't be like that anymore...\n\n* Cache bypass reasons added, might be removed in future once we're happy\n* Add compression layer to both `/metrics` endpoint and to proxied calls. This reduces the transfer size of a Prometheus scrape down to 5% of the original\n* Remove TLS verify / DNS resolve metrics, instead extend `ErrorCause` with specific TLS/DNS errors (see `reqwest_error_infer` function)\n* Reduce the number of Histogram buckets to reduce the metrics cardinality (actually I think was done in prev MR, but not mentioned)\n* Remove logging of status calls and introduce a separate metric for them: `ic_boundary_http_request_status_total`\n* Remove one of counters for full response streaming duration since it's very customer-specific and depends on his internet connection\n* Factor out node lookup from `preprocess_request` into a separate middleware (\\`lookup_node\\`) and remove node and canister_id from RequestContext. This is needed for better composability and plugging in between stuff like bitcoin-specific routing\n\nOverall I expect metrics to shrink to some 40%, not taking the compression into account. \n\nSee merge request dfinity-lab/public/ic!15188"
      },
      {
        "id": "5f84c8f3621a877a8bc05ab1f402ec6a620f0853",
        "date": "2023-10-04T22:06:59Z",
        "message": "feat(BOUN-897): ic-boundary metrics and some refactoring"
      },
      {
        "id": "ced7f5b284651801b4925be0d5d7e740540c8ac1",
        "date": "2023-09-29T13:31:45Z",
        "message": "Merge branch 'igornovg/icbn-cache' into 'master'\n\nfeat(BOUN-891) Implement query caching in ic-boundary\n\nBase caching features implemented:\n\n* Settings: Memory limit, max response size to cache, TTL\n* Disabled by default (memory limit needs to be set)\n* Caches only query calls without a `nonce` specified\n* Cache key: `sender` + `canister_id` + `method_name` + `ingress_expiry` + `arg`\n* Currently it caches all queries regardless of whether they're anonymous or not (to be discussed)\n* Honor `Cache-Control` header and emit `x-ic-cache-status` header with a `HIT`/ `MISS` / `SKIP`. There's a `Cache-Status` header but it does not seem to be widely used, so let's use custom for now.\n* Metic label for cache status\n\nAlso:\n\n* Some bit of refactoring how the middlewares are organized so that the cache fits there better. \n* Reduce number of histogram buckets to make metrics smaller, more to be done here \n\nSee merge request dfinity-lab/public/ic!15075"
      },
      {
        "id": "5e70f8f1491f903fd949f0982c115dde7db1e7bb",
        "date": "2023-09-29T13:31:44Z",
        "message": "feat(BOUN-891) Implement query caching in ic-boundary"
      },
      {
        "id": "9f934357bc0de6c7ebb85f79f53449a1b4f7d12c",
        "date": "2023-09-20T16:04:44Z",
        "message": "Merge branch 'igornovg/ic-bn-metrics' into 'master'\n\nfeat(BOUN-884): Add response metrics to ic-boundary and fix icx-proxy\n\nAdd an improved `MetricsBody` from `icx-proxy` to `ic-boundary` that handles certain edge cases and backport fixes to `icx-proxy`\n\n* Response sizes are now counted properly instead of relying on `Content-Length` that in a lot of cases is absent\n* Also `full_duration` is additionally observed that corresponds to the time it takes a client to receive the response. Before we were only measuring the response generation time \n\nSee merge request dfinity-lab/public/ic!14895"
      },
      {
        "id": "9775adbc3bcd22276486773413162e045780fd56",
        "date": "2023-09-20T16:04:43Z",
        "message": "feat(BOUN-884): Add response metrics to ic-boundary and fix icx-proxy"
      },
      {
        "id": "0e89e5dda9d5aacbf3bc269a4345d476e57429d8",
        "date": "2023-09-18T15:08:33Z",
        "message": "Merge branch 'igornovg/icx-proxy-metrics' into 'master'\n\nBOUN-868 Add HTTP metrics to icx-proxy\n\n* Implement `MetricsBody` wrapper over `HttpBody` to count the chunks' size that get streamed to a client and issue a callback whenever the job is done. This needs to be moved to a some shared place later to be reused by `ic-boundary` also.\n* Add HTTP metrics with labels like `streaming` which indicates if a response was using IC streaming and `body_fully_read` which indicates if we successfully read the body from replica (no easy way to check if client actually received it). Proper buckets are used for Histograms that are based on some quick Clickhouse analysis e.g.\n\n  ```sql\n  SELECT\n      count() AS cnt,\n      request_time_ms - (request_time_ms % 100) AS sz\n  FROM http_access_distributed\n  WHERE date > (now() - toIntervalDay(1 AND (request_time_ms < 10000)))\n  GROUP BY sz\n  ORDER BY cnt DESC\n  ```\n* Add `X-IC-Streaming-Response` header to replies that indicates if the response used streaming ( `true` / `false` ) -\\> this can be used in `ic-boundary` / `nginx` in logging/metrics to add this info to Clickhouse for later analysis \n\nSee merge request dfinity-lab/public/ic!14845"
      },
      {
        "id": "d8a4bfeb86045c0a7d9cbc76ade9086055c296fd",
        "date": "2023-09-18T15:08:29Z",
        "message": "BOUN-868 Add HTTP metrics to icx-proxy"
      },
      {
        "id": "b38c9011e2bee9aee7cab1d66c5090d0105ccf89",
        "date": "2023-09-14T16:46:57Z",
        "message": "Merge branch 'igornovg/icbn-status' into 'master'\n\n(BOUN-873): Fix ic-boundary status call\n\n* Add self-describing tag to a `status` response to match the behaviour of replicas\n* Add `application/cbor` content-type header to all responses\n* As a side hustle change `status_code` label in outgoing HTTP metrics to be `000` instead of an empty string to make Prometheus feel better (it displays weird stuff for empty labels in Grafana) \n\nSee merge request dfinity-lab/public/ic!14804"
      },
      {
        "id": "1fa01a0934173523f8d5226c700cec58a4c4d79b",
        "date": "2023-09-14T16:46:57Z",
        "message": "(BOUN-873): Fix ic-boundary status call"
      },
      {
        "id": "8ca587f56f17a9eb3efbd53334842cf722507123",
        "date": "2023-09-06T14:33:34Z",
        "message": "Merge branch 'igornovg/fix-opentelem' into 'master'\n\n[BOUN-836][BOUN-869][BOUN-862]: ic-boundary: drop opentelemetry\n\nDrop usage of `opentelemetry` crate, stick with just `prometheus`\n\nWe were using OpenTelemetry wrong in `control-plane` (calling `observe()` on Gauge directly and not in callback) and that led to undefined behaviour in `0.20`\n\nStart with migrating `ic-boundary` , later we can move other services and `control-plane` too, or just leave it as is and let it die.\n\nP.S. There's also a mix of changes by @kobi-lizard to roll other services back to older `opentelemetry` crate. I can try to divide the changes if needed. \n\nSee merge request dfinity-lab/public/ic!14581"
      },
      {
        "id": "ee216a679772432974b5641a54d2cb31bf42457d",
        "date": "2023-09-06T14:33:34Z",
        "message": "[BOUN-836][BOUN-869][BOUN-862]: ic-boundary: drop opentelemetry"
      },
      {
        "id": "02b79bcf3cefbb86b5252a2576ccb4dd7e0a9090",
        "date": "2023-08-31T13:50:16Z",
        "message": "Merge branch 'igornovg/icbn-testing' into 'master'\n\nBOUN-826: Improve ic-boundary testing\n\nNo real changes, just moving code around.\n\n* Rearrange tests into separate files\n* Reorganize some code\n* Re-enable some tests that were disabled for some reason \n\nSee merge request dfinity-lab/public/ic!14513"
      },
      {
        "id": "758146aea65bc14331e392954e45358375670a04",
        "date": "2023-08-31T13:50:16Z",
        "message": "BOUN-826: Improve ic-boundary testing"
      },
      {
        "id": "a3de3a8a4476408eb52cd5f2473ba7fdd8288151",
        "date": "2023-08-31T11:33:57Z",
        "message": "Merge branch 'igornovg/vector-improve' into 'master'\n\nBOUN-865: update vector config\n\n* Increase in-memory buffer size to lower probability of data loss. This should not consume more than 300MB memory when full\n* Change full buffer logic to `block` -\\> `drop_newest` not recommended for in memory buffers and we want to backpressure this to vector's source\n* Increase batch size and timeout to create less parts in Clickhouse (less frequent and larger inserts)\n* Decrease retry interval to have less pressure when there are problems \n\nSee merge request dfinity-lab/public/ic!14507"
      },
      {
        "id": "458abb157330a819d2d3183a0d16336390768384",
        "date": "2023-08-31T11:33:57Z",
        "message": "BOUN-865: update vector config"
      }
    ],
    "email": "igor.novgorodov@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 63,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 29,
    "fixes": 15,
    "feats": 15,
    "non_merge_commits": [
      {
        "id": "954567d18ea273b0e01ad2de488b9c2c853f563e",
        "date": "2023-11-21T16:28:19Z",
        "message": "fix(BOUN-962): upgrade nginx, remove cbor modules"
      },
      {
        "id": "464a065b48ca4dcf7fd23ba12f59e4db76796788",
        "date": "2023-11-21T15:11:38Z",
        "message": "fix(BOUN-957) increase journal ratelimit and max size"
      },
      {
        "id": "b97e4159106b1058b6b88a99d274b2e9f7ca967c",
        "date": "2023-11-17T08:39:02Z",
        "message": "ic-boundary: set max request size to 4MB"
      },
      {
        "id": "52ba0e1c1a36767f299c8da42c722ad9b9b4ea7b",
        "date": "2023-11-16T10:28:51Z",
        "message": "feat(BOUN-960): make NNS public key optional"
      },
      {
        "id": "4a1fb890c1e491081e7923e684c68401e10767bb",
        "date": "2023-11-10T18:10:01Z",
        "message": "fix(BOUN-953): smaller metrics, fix request size limit, cosmetic changes"
      },
      {
        "id": "7bef16b0a07b362f0851d97f91581c9585004421",
        "date": "2023-11-08T15:18:14Z",
        "message": "feat(BOUN-949): remove stale metrics"
      },
      {
        "id": "bb83138e694f7c98f7e0c21d8b067621a4534e10",
        "date": "2023-11-07T10:50:33Z",
        "message": "fix(BOUN-948): don't publish stale registry versions"
      },
      {
        "id": "fcfbcfd5f22c7d8932c9438b7576fcc3a57e548b",
        "date": "2023-11-06T17:07:11Z",
        "message": "fix(BOUN-947): log canister id changed by btc_mw"
      },
      {
        "id": "2f748fd5ae5cd73afdcc4d75b12cfabfd8580282",
        "date": "2023-11-06T15:16:54Z",
        "message": "feat(BOUN-944 BOUN-932): switch to new caching library, fix some bugs"
      },
      {
        "id": "097fffc8f16fe6887f13d5f31b759cd69678d177",
        "date": "2023-11-06T11:54:03Z",
        "message": "feat(BOUN-943): add more headers to ic-boundary/icx-proxy"
      },
      {
        "id": "b2dcffde505ca7041d22c98fcad53a0dc262c9e8",
        "date": "2023-11-03T14:20:14Z",
        "message": "feat(BOUN-935): icx-proxy: allow HTTP replica, pass headers"
      },
      {
        "id": "24df51accd524e66bce0f7a218ab2e0bece41c61",
        "date": "2023-11-01T13:50:04Z",
        "message": "fix(BOUN-632): ic-boundary: fix double logging"
      },
      {
        "id": "e7a1cf7f22d8af266e8da1f19c8922ed52161dc6",
        "date": "2023-10-31T14:11:24Z",
        "message": "feat(BOUN-938): ic-boundary: make registry-replicator optional"
      },
      {
        "id": "7361f06b3a6125f5556846b6f37c8d91e0495790",
        "date": "2023-10-30T15:54:42Z",
        "message": "feat(BOUN-935): ic-boundary: add firewall generator"
      },
      {
        "id": "fc8c3f470a017b53c3b924b07c6680e49316eec6",
        "date": "2023-10-27T11:13:00Z",
        "message": "feat(BOUN-935): ic-boundary: add routing reply headers"
      },
      {
        "id": "19fba6d48b47f50af112165a8d1913e4f7ae06f2",
        "date": "2023-10-25T16:16:11Z",
        "message": "feat(BOUN-934): ic-boundary: add new metric, add tests"
      },
      {
        "id": "4a72d9b62bdc3233435f6d7356774ca44d773e04",
        "date": "2023-10-23T11:26:03Z",
        "message": "fix(BOUN-918): fix panic, minor http client changes"
      },
      {
        "id": "94fff091d679fa1d4a26f95567bd3249927110c6",
        "date": "2023-10-20T13:02:40Z",
        "message": "feat(BOUN-918): nginx: add /health endpoint"
      },
      {
        "id": "c370b37bf5e42920822df4cb7b750c866ae7b951",
        "date": "2023-10-19T13:51:39Z",
        "message": "fix(BOUN-912): ic-boundary: lower pool idle timeout"
      },
      {
        "id": "e50436cacdebff51fdf6cef2c06dd19bbaf249d2",
        "date": "2023-10-19T11:43:38Z",
        "message": "fix(BOUN-919): ic-boundary: fix bitcoin middleware"
      },
      {
        "id": "a503a1ad48c8cd52e1152297b51148ef2d0f3409",
        "date": "2023-10-17T09:14:34Z",
        "message": "fix(BOUN-915): ic-boundary: switch cache to async interface"
      },
      {
        "id": "fac2e2832b8bc82fe3a56157f75668ea4fe7667e",
        "date": "2023-10-13T09:18:17Z",
        "message": "fix(BOUN-912): ic-boundary: enable keepalives"
      },
      {
        "id": "b02fb946c2f48ed7a46c831602618b7cf44888c1",
        "date": "2023-10-13T06:48:06Z",
        "message": "feat(BOUN-910): ic-boundary health endpoint, jemalloc & other"
      },
      {
        "id": "8bb09bc150b683f7ffce45f4c41411b832f7fdcd",
        "date": "2023-10-10T15:21:53Z",
        "message": "fix(BOUN-894): accept any uuid"
      },
      {
        "id": "1679e6bfed197fa17a383a889e3e1f791b3c17c2",
        "date": "2023-10-06T16:40:33Z",
        "message": "perf(BOUN-908): refactor & optimize ic-boundary a bit"
      },
      {
        "id": "3ca418d86849906c9589a489e6a7d86d8a04054f",
        "date": "2023-10-06T09:04:59Z",
        "message": "feat(BOUN-908): ic-boundary: snapshot metrics periodically"
      },
      {
        "id": "5f84c8f3621a877a8bc05ab1f402ec6a620f0853",
        "date": "2023-10-04T22:06:59Z",
        "message": "feat(BOUN-897): ic-boundary metrics and some refactoring"
      },
      {
        "id": "5e70f8f1491f903fd949f0982c115dde7db1e7bb",
        "date": "2023-09-29T13:31:44Z",
        "message": "feat(BOUN-891) Implement query caching in ic-boundary"
      },
      {
        "id": "9775adbc3bcd22276486773413162e045780fd56",
        "date": "2023-09-20T16:04:43Z",
        "message": "feat(BOUN-884): Add response metrics to ic-boundary and fix icx-proxy"
      },
      {
        "id": "d8a4bfeb86045c0a7d9cbc76ade9086055c296fd",
        "date": "2023-09-18T15:08:29Z",
        "message": "BOUN-868 Add HTTP metrics to icx-proxy"
      },
      {
        "id": "1fa01a0934173523f8d5226c700cec58a4c4d79b",
        "date": "2023-09-14T16:46:57Z",
        "message": "(BOUN-873): Fix ic-boundary status call"
      },
      {
        "id": "ee216a679772432974b5641a54d2cb31bf42457d",
        "date": "2023-09-06T14:33:34Z",
        "message": "[BOUN-836][BOUN-869][BOUN-862]: ic-boundary: drop opentelemetry"
      },
      {
        "id": "758146aea65bc14331e392954e45358375670a04",
        "date": "2023-08-31T13:50:16Z",
        "message": "BOUN-826: Improve ic-boundary testing"
      },
      {
        "id": "458abb157330a819d2d3183a0d16336390768384",
        "date": "2023-08-31T11:33:57Z",
        "message": "BOUN-865: update vector config"
      }
    ],
    "line_additions": 8698,
    "line_deletions": 4617,
    "lines_effected_total": 13315,
    "rel_comm_add": 24,
    "rel_comm_del": 21,
    "rel_comm_total": 27
  },
  {
    "login": "fxgst",
    "id": 46360620,
    "totalContributions": 106,
    "github": "https://github.com/fxgst",
    "commits": [
      {
        "id": "c1183d7deef5efa7e08fc858187a36e1ae327efe",
        "date": "2023-11-21T12:56:56Z",
        "message": "chore(PocketIC): bump PocketIC version"
      },
      {
        "id": "77c1da8e0624c0b46bb3710e3cfc62bdd90be615",
        "date": "2023-11-21T09:44:33Z",
        "message": "Merge branch 'elias/pocket-ic-rust-readme-update' into 'master'\n\nchore(PocketIC): Update PocketIC Rust documentation\n\nMove some parts to https://github.com/dfinity/pocketic, make it more in line with [PocketIC Python](https://github.com/dfinity/pocketic-py/pull/50) \n\nSee merge request dfinity-lab/public/ic!16226"
      },
      {
        "id": "1a401baa6e79337d5dd4d931f7c8d79df40d9d65",
        "date": "2023-11-21T09:44:29Z",
        "message": "chore(PocketIC): Update PocketIC Rust documentation"
      },
      {
        "id": "f2e8260012c1f6886aef7ef476a69012b3459c90",
        "date": "2023-11-20T19:29:01Z",
        "message": "Merge branch 'elias/create-canister-with-id' into 'master'\n\nfeat(VER-2592): Install canister with specified ID in PocketIC\n\n- `create_canister_with_id` method to create a canister with a specific ID\n- adds more `SubnetKind`s such that the user can find them more easily\n- adds hardcoded canister ranges to NNS, Fiduciary, II, SNS, Bitcoin subnets like on mainnet\n\nadditional discussions here: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16163 \n\nSee merge request dfinity-lab/public/ic!16086"
      },
      {
        "id": "fe4f2d7b938e8cdd01e8c749025dc59e287060fc",
        "date": "2023-11-20T19:29:00Z",
        "message": "feat(VER-2592): Install canister with specified ID in PocketIC"
      },
      {
        "id": "ea0f4725cc3940b195a294eb928bbeac4c993a9a",
        "date": "2023-11-15T17:54:06Z",
        "message": "Merge branch 'elias/ict-update-example' into 'master'\n\nfix(VER-2595): Update example in `ict` help\n\n \n\nSee merge request dfinity-lab/public/ic!16114"
      },
      {
        "id": "c6a4eadcf4771fba6b0847b610d4df2352d862f2",
        "date": "2023-11-15T14:04:03Z",
        "message": "fix(VER-2595): Update example in `ict` help"
      },
      {
        "id": "91efa08abe3d0b7fa0efd58c9610d77bc74ac8ae",
        "date": "2023-11-13T14:34:23Z",
        "message": "Merge branch 'elias/topology' into 'master'\n\nfeat(VER-2579): PocketIC Multi-Subnet\n\n- adds multi-subnet support to PocketIC\n- removes checkpointing\n- adds new `SubnetConfig` and `SubnetKind` structs\n- new `PocketIc::new_with_subnet_config()` constructor\n- new `topology()` method on `PocketIC` which returns the topology of subnets of the current instance\n- new `root_key()` semantics\n- new `create_canister_on_subnet()` method to create a canister on a specific subnet\n- support for `POCKET_IC_MUTE_SERVER` env variable; replaces old behavior\n- replaces `canister_exists` endpoint in favor of new `subnet_of_canister` endpoint\n- replaces `root_key` endpoint in favor of new `pub_key` endpoint\n- various other minor improvements \n\nSee merge request dfinity-lab/public/ic!15577"
      },
      {
        "id": "c4212b27cd5d83ca2c5188d800b01972477c3aad",
        "date": "2023-11-13T14:34:23Z",
        "message": "feat(VER-2579): PocketIC Multi-Subnet"
      },
      {
        "id": "068b8039f1ecb00141d8e3512286b1735ca8e324",
        "date": "2023-11-06T14:28:06Z",
        "message": "Merge branch 'elias/pic-candid-cargo' into 'master'\n\nchore(PocketIC): Update Cargo.toml\n\nUse candid as defined in the workspace. \n\nSee merge request dfinity-lab/public/ic!15904"
      },
      {
        "id": "3e96d076b47f486be88762840e6c7117fdd3b5e0",
        "date": "2023-11-06T13:46:41Z",
        "message": "chore(PocketIC): Update Cargo.toml"
      },
      {
        "id": "2ee78566e254c26cd16ad172c92d5d61967b5d50",
        "date": "2023-10-19T13:43:56Z",
        "message": "Merge branch 'elias/pocket-ic-dont-store-to-graph' into 'master'\n\nchore(VER-2563): Don't cache results of PocketIC since they are never used\n\nStoring the results to the graph in PocketIC has no use ATM, thus remove the code \n\nSee merge request dfinity-lab/public/ic!15489"
      },
      {
        "id": "1ae26fa8874982e6d799c6e67d64b7db6b0434ec",
        "date": "2023-10-19T13:43:56Z",
        "message": "chore(VER-2563): Don't cache results of PocketIC since they are never used"
      },
      {
        "id": "7c47d056af40fc4b84117b6f152f80c126e54484",
        "date": "2023-10-19T10:13:28Z",
        "message": "Merge branch 'elias/improve-pocket-ic-command-line' into 'master'\n\nfeat(VER-2562): Improve PocketIC command line experience\n\nno required flags anymore, and PocketIC can run under a specific port for a specific amount of time \n\nSee merge request dfinity-lab/public/ic!15474"
      },
      {
        "id": "8bda9a15ff0945b3adb33528198fc016ff4341c4",
        "date": "2023-10-19T10:13:27Z",
        "message": "feat(VER-2562): Improve PocketIC command line experience"
      },
      {
        "id": "821dc1e24ef9206d5c38088c6883ad680f0b0893",
        "date": "2023-10-18T10:49:25Z",
        "message": "Merge branch 'elias/cleanup-mocket-ic' into 'master'\n\nchore(VER-2560): Remove MocketIC\n\ncleanup of obsolete code \n\nSee merge request dfinity-lab/public/ic!15459"
      },
      {
        "id": "e1081e34b31b865b90a8e7d31e40724cca757de7",
        "date": "2023-10-18T10:49:25Z",
        "message": "chore(VER-2560): Remove MocketIC"
      },
      {
        "id": "f126c92f73e311205da1702fc426a4754e82b96a",
        "date": "2023-10-18T10:10:10Z",
        "message": "Merge branch 'elias/client-logging' into 'master'\n\nfeat(VER-2551): PocketIC logging in the client\n\nmake the client also log to a logfile, on demand \n\nSee merge request dfinity-lab/public/ic!15439"
      },
      {
        "id": "151c15fcf365fe369777f6b805b4e91eb3b79dc7",
        "date": "2023-10-18T10:10:10Z",
        "message": "feat(VER-2551): PocketIC logging in the client"
      },
      {
        "id": "ef1daf8aafec3ffc5ac6d853109eee1b2e89eb7a",
        "date": "2023-10-13T08:20:20Z",
        "message": "Merge branch 'elias/readme-and-bin-not-found-improvements' into 'master'\n\nchore(VER-2553): Improve installation guide and provide binary not found help\n\nI have played the role of an outside user trying to install and use the PocketIC Rust library and have made a few small but helpful tweaks to the installation process \n\nSee merge request dfinity-lab/public/ic!15369"
      },
      {
        "id": "ada48899778eff909983502b31106260f0034f21",
        "date": "2023-10-13T08:20:20Z",
        "message": "chore(VER-2553): Improve installation guide and provide binary not found help"
      },
      {
        "id": "0841cec339f2e6bb3d43284169b2d539a8322fdb",
        "date": "2023-10-12T14:36:08Z",
        "message": "Merge branch 'elias/update-commit-hash' into 'master'\n\nchore(PocketIC): Update server version commit hash in README\n\n \n\nSee merge request dfinity-lab/public/ic!15361"
      },
      {
        "id": "8acc496a3221b8dcf87b50183e912b43c250c9a9",
        "date": "2023-10-12T14:36:06Z",
        "message": "chore(PocketIC): Update server version commit hash in README"
      },
      {
        "id": "50052651cb3893ca0dd58c938edff082bf1879e4",
        "date": "2023-10-12T09:27:21Z",
        "message": "Revert \"fix(PocketIC): Use timeout for requests\""
      },
      {
        "id": "e91daff8db06e93e77d94269bbb3868cc047a178",
        "date": "2023-10-12T08:20:33Z",
        "message": "Merge branch 'dsd/pocket-ic/opt-inherit-stdouterr' into 'master'\n\nfeat(VER-2549): make std-pipe behavior configurable\n\n \n\nSee merge request dfinity-lab/public/ic!15341"
      },
      {
        "id": "f046b1d6dec7f96ede1bd42dbc18f709469c4d22",
        "date": "2023-10-11T15:15:34Z",
        "message": "Merge branch 'mwe/readme' into 'master'\n\nchore: [VER-2542] README for pocket-ic crate\n\n \n\nCloses NODE-1128\n\nSee merge request dfinity-lab/public/ic!15298"
      },
      {
        "id": "7de44d789655ac575b7092755bf0465f1ee3a24b",
        "date": "2023-10-11T13:23:37Z",
        "message": "Merge branch 'elias/pic-timeout' into 'master'\n\nfix(PocketIC): Use timeout for requests\n\n \n\nSee merge request dfinity-lab/public/ic!15332"
      },
      {
        "id": "6daf8dfaffa12dd03d35b2f7a59bf9e2c8f83fb5",
        "date": "2023-10-11T13:23:36Z",
        "message": "fix(PocketIC): Use timeout for requests"
      },
      {
        "id": "3f2d28e3a905e1affdaf3c5d85cb5c1e659b605e",
        "date": "2023-10-11T13:23:24Z",
        "message": "chore(VER-2544): PocketIC doc strings"
      },
      {
        "id": "a3e5b9634c10c09e0f1efb9f1e6fc6df512f5be0",
        "date": "2023-10-09T16:56:58Z",
        "message": "Merge branch 'elias/pic-version-and-clippy' into 'master'\n\nchore(PocketIC): Bump version and remove clippy directive\n\nSet version to 0.2.0 \n\nSee merge request dfinity-lab/public/ic!15299"
      },
      {
        "id": "46e7caf9dc37d7cd726bf3125c6fca8d1db35669",
        "date": "2023-10-09T16:56:58Z",
        "message": "chore(PocketIC): Bump version and remove clippy directive"
      },
      {
        "id": "0f4e5a1e94525c4b996fd0787db6f2bfdc2b56f5",
        "date": "2023-10-05T09:27:15Z",
        "message": "Merge branch 'elias/pic-fix-reqwest-client-slowness' into 'master'\n\nfix(VER-2535): Fix slowness in reqwest client instantiation\n\nDon't use default features \n\nSee merge request dfinity-lab/public/ic!15216"
      },
      {
        "id": "abec625afb9258214a7a0f7e1968f8ab5c6cc5b7",
        "date": "2023-10-05T09:27:15Z",
        "message": "fix(VER-2535): Fix slowness in reqwest client instantiation"
      },
      {
        "id": "11f93348b282f30a1bc7f9acb4d22cd894cf296d",
        "date": "2023-10-04T09:46:31Z",
        "message": "Merge branch 'elias/pic-fix-log-files' into 'master'\n\nfix(VER-2533): Fix empty log file creation\n\nNot every PocketIC process should create the log file, only the first server should \n\nSee merge request dfinity-lab/public/ic!15183"
      },
      {
        "id": "91d7c024daf42986c13fce62e585b17b6fda6262",
        "date": "2023-10-04T09:46:31Z",
        "message": "fix(VER-2533): Fix empty log file creation"
      },
      {
        "id": "7d6d2432effa54eca00cd1d675acc11645a86f8b",
        "date": "2023-10-03T12:54:58Z",
        "message": "Merge branch 'dsd/pocket_ic_update_spans' into 'master'\n\nchore(VER-2528): trace logs for state updates\n\n \n\nSee merge request dfinity-lab/public/ic!15153"
      },
      {
        "id": "cda1773abd1fea87b1fb202830a739b7764943b0",
        "date": "2023-10-02T16:06:10Z",
        "message": "fix(VER-2525): Use timeouts in all methods"
      },
      {
        "id": "d43d4232997314d12e3bfe70ac765cb396ec7245",
        "date": "2023-09-28T23:42:44Z",
        "message": "Merge branch 'mwe/stable' into 'master'\n\nfeat: [VER-2496] Stable Memory\n\n \n\nSee merge request dfinity-lab/public/ic!15067"
      },
      {
        "id": "ee2e30b211dce992149ec0841bfc3e2b40fee0a0",
        "date": "2023-09-28T18:27:48Z",
        "message": "Merge branch 'elias/pocket-ic-v2-tick' into 'master'\n\nchore(VER-2516): Implement tick in PocketIC V2\n\nAlso some minor cleanups \n\nSee merge request dfinity-lab/public/ic!15061"
      },
      {
        "id": "b0a4b4643e5aa9276c0cc7186bc3761e75bb1568",
        "date": "2023-09-28T18:27:47Z",
        "message": "chore(VER-2516): Implement tick in PocketIC V2"
      },
      {
        "id": "79db21d04a1fe9ebc94423c77b784ada6f96109e",
        "date": "2023-09-28T18:05:13Z",
        "message": "Merge branch 'mwe/timeout' into 'master'\n\nfeat: [VER-2512] Add timeout to client calls\n\n \n\nSee merge request dfinity-lab/public/ic!15079"
      },
      {
        "id": "ca5e5052886de781021506814d2c6502e375da48",
        "date": "2023-09-27T22:13:49Z",
        "message": "Merge branch 'elias/pocket-ic-v2-delete-instance-on-drop' into 'master'\n\nchore(VER-2515): PocketIC V2: Delete instances on drop\n\n* delete instances on drop\n* use `directory_route`s\n* finish `list_instances` \n\nSee merge request dfinity-lab/public/ic!15051"
      },
      {
        "id": "509acac419a681610e37b3737242a4d6c664c14c",
        "date": "2023-09-27T22:13:49Z",
        "message": "chore(VER-2515): PocketIC V2: Delete instances on drop"
      },
      {
        "id": "eee688d5fabb3e0e64a8d509236299e439597cba",
        "date": "2023-09-27T16:57:11Z",
        "message": "Merge branch 'elias/pocket-ic-v2-client-methods' into 'master'\n\nchore(VER-2494,VER-2513,VER-2514): Implement `*_canister`, `advance_time`, `cycles` methods\n\nImplement more client methods for V2 \n\nSee merge request dfinity-lab/public/ic!15048"
      },
      {
        "id": "b82f411360386c3c06bb9665fcffa7a2d11dd79a",
        "date": "2023-09-27T16:57:11Z",
        "message": "chore(VER-2494,VER-2513,VER-2514): Implement `*_canister`, `advance_time`, `cycles` methods"
      },
      {
        "id": "2745e21e04642cfe793eaa8384c654887fd6b04f",
        "date": "2023-09-27T16:02:10Z",
        "message": "Merge branch 'elias/pocket-ic-v2-rest-types-and-handlers' into 'master'\n\nchore(PocketIC) Rest Types and Handlers\n\nRefactor Handlers and introduce more REST types \n\nSee merge request dfinity-lab/public/ic!15017"
      },
      {
        "id": "b7fe1907ceac045ce3766052fbe3da498bce32a0",
        "date": "2023-09-27T16:02:07Z",
        "message": "chore(PocketIC) Rest Types and Handlers"
      },
      {
        "id": "17a2f158c99da258df082a0b1f6d43b0ef6010f5",
        "date": "2023-09-25T17:41:49Z",
        "message": "Merge branch 'elias/pocket-ic-v2-set-get-time' into 'master'\n\nchore(VER-2495): Implement get and set_time in server\n\nFor PocketIc V2 \n\nSee merge request dfinity-lab/public/ic!14980"
      },
      {
        "id": "b46c041a80152f3625c0a5b6d3cdb5a0ab8878a6",
        "date": "2023-09-25T17:41:48Z",
        "message": "chore(VER-2495): Implement get and set_time in server"
      },
      {
        "id": "ec5f21dbe668d7e9d977028230aad293cd468682",
        "date": "2023-09-21T17:29:49Z",
        "message": "chore(PocketIC): Less verbose logging by default"
      },
      {
        "id": "896dd2d5c897a0bd8bae630967cee5aead46aa47",
        "date": "2023-09-21T15:02:27Z",
        "message": "Merge branch 'elias/pocket-ic-fix-large-blobs' into 'master'\n\nfix(VER-2499): Fix PocketIC crash on large set stable memory\n\nChange the destructuring of Body, return errors to client if decompression fails \n\nSee merge request dfinity-lab/public/ic!14931"
      },
      {
        "id": "1b59d963ad1d7eacda833abb119534982d4cd7e6",
        "date": "2023-09-21T15:02:26Z",
        "message": "fix(VER-2499): Fix PocketIC crash on large set stable memory"
      },
      {
        "id": "a517a40574c2ba2f9f3c7e08c35d7377345b38c5",
        "date": "2023-09-20T14:20:29Z",
        "message": "Merge branch 'elias/pocket-ic-stable-mem' into 'master'\n\nfeat(VER-2487): PocketIC set stable memory function\n\nUsing blob store \n\nSee merge request dfinity-lab/public/ic!14893"
      },
      {
        "id": "d763704500966a7ef89b7e20f3730a5e9b4c4f38",
        "date": "2023-09-20T14:20:28Z",
        "message": "feat(VER-2487): PocketIC set stable memory function"
      },
      {
        "id": "e31a7ed58d576db4ad9bfd37883c4062dbf7c715",
        "date": "2023-09-20T12:27:13Z",
        "message": "Merge branch 'pocket_ic_server_clippy' into 'master'\n\nfix: fix clippy warning by removing unneeded ref\n\n \n\nSee merge request dfinity-lab/public/ic!14892"
      },
      {
        "id": "4b547a8e9da8077c733eed4ce6f528495f0b5bfb",
        "date": "2023-09-19T16:15:04Z",
        "message": "Merge branch 'elias/pic-blob-store' into 'master'\n\nfeat(VER-2488): Implement a blob store for PocketIC\n\nPart 1/2: Provide an endpoint to store bytes on pic.\nPart 2/2: Set stable memory of canister (separate MR). \n\nSee merge request dfinity-lab/public/ic!14855"
      },
      {
        "id": "1bdee90b593a23781bb82a96b467e7f18dfe7d51",
        "date": "2023-09-19T16:15:01Z",
        "message": "feat(VER-2488): Implement a blob store for PocketIC"
      },
      {
        "id": "efe4ff66e7f8cbdb41f755719be39a3d4a0ed52d",
        "date": "2023-09-13T14:21:56Z",
        "message": "Merge branch 'elias/pocket-ic-api-tests' into 'master'\n\nfeat(VER-2485): Write some more API tests for PocketIC\n\nUse assert statements and add more tests \n\nSee merge request dfinity-lab/public/ic!14761"
      },
      {
        "id": "425b40cd4d68aa7963b741e2096b1deaf86c9707",
        "date": "2023-09-13T14:21:55Z",
        "message": "feat(VER-2485): Write some more API tests for PocketIC"
      },
      {
        "id": "0b86691dc527657575d817d75bc2eec04affa4f4",
        "date": "2023-09-12T15:07:08Z",
        "message": "Merge branch 'elias/pocket-ic-delete-instance-on-drop' into 'master'\n\nfeat(VER-2483): Delete instances on the server when they are dropped; refactoring\n\n* Deletes instances on the server when they go out of scope\n* Add routes with slashes at the end\n* Send JSONs \n\nSee merge request dfinity-lab/public/ic!14727"
      },
      {
        "id": "0d2df5a624d20fe75d89f1ec0294e623d1a53153",
        "date": "2023-09-12T15:07:08Z",
        "message": "feat(VER-2483): Delete instances on the server when they are dropped; refactoring"
      },
      {
        "id": "8470784681ae6fb2e7a96d3068910541dbc9c4c4",
        "date": "2023-09-08T15:00:59Z",
        "message": "Merge branch 'elias/pocket-ic-checkpointing-on-demand' into 'master'\n\nfix(VER-2481): Disable checkpointing in every round, only on demand.\n\nCheckpointing in every round is very time consuming. Disable it by default, and enable checkpoints only on demand. For now, the API makes it clear that also a tick happens. This will be updated in a separate MR. \n\nSee merge request dfinity-lab/public/ic!14690"
      },
      {
        "id": "3573761ce6c73ae19b33627423d18289d9ba3070",
        "date": "2023-09-08T15:00:58Z",
        "message": "fix(VER-2481): Disable checkpointing in every round, only on demand."
      },
      {
        "id": "4fb38d63aa6688635041e07fc94a4035c1183c2e",
        "date": "2023-09-07T15:40:24Z",
        "message": "Merge branch 'elias/pocket-ic-body-limit' into 'master'\n\nfix(PocketIC): Disable default body limit to allow for large payloads.\n\nProblem discovered when sending large payloads. \n\nSee merge request dfinity-lab/public/ic!14666"
      },
      {
        "id": "979557d2276f1fa5d2db4d508e09df5f3e75cf75",
        "date": "2023-09-07T15:40:24Z",
        "message": "fix(PocketIC): Disable default body limit to allow for large payloads."
      },
      {
        "id": "f91506882ae868f4de50ff80ece468afef7da3f3",
        "date": "2023-09-06T14:49:18Z",
        "message": "Merge branch 'elias/pocket-ic-checkpointing' into 'master'\n\nfeat(VER-2475): Add checkpointing to PocketIC Rust Integration and use Bazel\n\nImplement functions on PocketIC Rust integration library to support checkpointing \n\nSee merge request dfinity-lab/public/ic!14603"
      },
      {
        "id": "e0109cc786e4df7fb2b195c40f5a0ce15d996874",
        "date": "2023-09-06T14:49:18Z",
        "message": "feat(VER-2475): Add checkpointing to PocketIC Rust Integration and use Bazel"
      },
      {
        "id": "1788e37f82fc888ee4a6d0083e7228b05fe74514",
        "date": "2023-09-01T11:55:32Z",
        "message": "Merge branch 'elias/system-test-colocate-required-host-features' into 'master'\n\nchore(VER-2473): Respect `--set-required-host-features` for colocated tests\n\nPass host features to the docker script \n\nSee merge request dfinity-lab/public/ic!14533"
      },
      {
        "id": "a61dd24cf28a9e429ca94b2531b09bb346918275",
        "date": "2023-09-01T11:55:32Z",
        "message": "chore(VER-2473): Respect `--set-required-host-features` for colocated tests"
      },
      {
        "id": "063e7d62736590501481e3697584be59a8c3708a",
        "date": "2023-08-30T14:20:36Z",
        "message": "Merge branch 'elias/pocket-ic-delete-instance' into 'master'\n\nfeat(VER-2470): Add remove instance endpoint\n\nRemove an instance from PocketIC \n\nSee merge request dfinity-lab/public/ic!14480"
      },
      {
        "id": "eb4ba296fab6d04eb0be048e657cf0b5b685cdfc",
        "date": "2023-08-30T14:20:36Z",
        "message": "feat(VER-2470): Add remove instance endpoint"
      },
      {
        "id": "a3568b13ff6cb2799c9e5f177e0d44b52f9ca7fd",
        "date": "2023-08-29T16:36:43Z",
        "message": "Merge branch 'elias/pocket-ic-fix-shutdown-panic' into 'master'\n\nchore(VER-2458, VER-2468): Fix PocketIC server panic on shutdown\n\nUse same Tokio Runtime within multiple StateMachines \n\nSee merge request dfinity-lab/public/ic!14453"
      },
      {
        "id": "e81199bbee77925b4537e24431bb6c15f41dc314",
        "date": "2023-08-29T16:36:43Z",
        "message": "chore(VER-2458, VER-2468): Fix PocketIC server panic on shutdown"
      },
      {
        "id": "e2e4d177416cbf835c3a3f2ef0ef628b9c232892",
        "date": "2023-08-28T15:41:57Z",
        "message": "Merge branch 'elias/pocket-ic-sequence-number' into 'master'\n\nchore(VER-2457): Change instance id from random string to sequence number\n\nuse thread-safe atomic counter to provide instance ids \n\nSee merge request dfinity-lab/public/ic!14416"
      },
      {
        "id": "37c7b443c1562e0cd180b5f0f3d00a81fbef1cc6",
        "date": "2023-08-28T15:41:57Z",
        "message": "chore(VER-2457): Change instance id from random string to sequence number"
      },
      {
        "id": "f588aeaf8632f971f0e682c805fcab4c1edb421c",
        "date": "2023-08-28T14:48:12Z",
        "message": "Merge branch 'elias/pocket-ic-rename-server' into 'master'\n\nchore(VER-2464): Rename PocketIC backend to PocketIC server\n\nRenaming refactor \n\nSee merge request dfinity-lab/public/ic!14396"
      },
      {
        "id": "13a223e68207985b261ec72573cfa517ce79d3df",
        "date": "2023-08-28T14:48:12Z",
        "message": "chore(VER-2464): Rename PocketIC backend to PocketIC server"
      },
      {
        "id": "51100e12bf59f8b0f30e03cf80e22036b60adf46",
        "date": "2023-08-25T13:02:29Z",
        "message": "chore(VER-2462): Make PocketIC server less verbose"
      },
      {
        "id": "cdae95c94a439b1387b8cf59e7afde6d669d557c",
        "date": "2023-08-25T09:11:24Z",
        "message": "Merge branch 'elias/pocket-ic-python-cleanup' into 'master'\n\nRemove PocketIC Python code\n\nCode has been moved to a new repo. \n\nSee merge request dfinity-lab/public/ic!14389"
      },
      {
        "id": "50de05cc4ee079399db51927ca387d598aadf4e2",
        "date": "2023-08-25T09:11:23Z",
        "message": "Remove PocketIC Python code"
      },
      {
        "id": "29966379cb35f088d742ed857f7f015ffc4fd97f",
        "date": "2023-08-16T08:50:43Z",
        "message": "Merge branch 'elias/python-pocket-ic' into 'master'\n\nfeat(2433): Prototype Python Test API for PocketIC\n\nMake a test library for python to use PocketIC\n\nStill TODO:\n* setup caching/checkpointing\n* refactor\n* translate remaining public SM functions \n\nSee merge request dfinity-lab/public/ic!14024"
      },
      {
        "id": "eb90bee136ffaf0ffb1f2f6f7040aa9452523232",
        "date": "2023-08-16T08:50:43Z",
        "message": "feat(2433): Prototype Python Test API for PocketIC"
      },
      {
        "id": "99d52f9776d082acf001b40ea743ffa205113ff8",
        "date": "2023-08-08T09:19:43Z",
        "message": "Merge branch 'elias/pic-locking-fix' into 'master'\n\nfeat(VER-2430): Fix PocketIC daemon startup\n\nMake sure only one PocketIC instance is running \n\nSee merge request dfinity-lab/public/ic!14000"
      },
      {
        "id": "7b4d1be30c858aafd478cb3185bf2e5b5958ea59",
        "date": "2023-08-08T09:19:42Z",
        "message": "feat(VER-2430): Fix PocketIC daemon startup"
      }
    ],
    "email": "elias.datler@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 84,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 42,
    "fixes": 11,
    "feats": 13,
    "non_merge_commits": [
      {
        "id": "c1183d7deef5efa7e08fc858187a36e1ae327efe",
        "date": "2023-11-21T12:56:56Z",
        "message": "chore(PocketIC): bump PocketIC version"
      },
      {
        "id": "1a401baa6e79337d5dd4d931f7c8d79df40d9d65",
        "date": "2023-11-21T09:44:29Z",
        "message": "chore(PocketIC): Update PocketIC Rust documentation"
      },
      {
        "id": "fe4f2d7b938e8cdd01e8c749025dc59e287060fc",
        "date": "2023-11-20T19:29:00Z",
        "message": "feat(VER-2592): Install canister with specified ID in PocketIC"
      },
      {
        "id": "c6a4eadcf4771fba6b0847b610d4df2352d862f2",
        "date": "2023-11-15T14:04:03Z",
        "message": "fix(VER-2595): Update example in `ict` help"
      },
      {
        "id": "c4212b27cd5d83ca2c5188d800b01972477c3aad",
        "date": "2023-11-13T14:34:23Z",
        "message": "feat(VER-2579): PocketIC Multi-Subnet"
      },
      {
        "id": "3e96d076b47f486be88762840e6c7117fdd3b5e0",
        "date": "2023-11-06T13:46:41Z",
        "message": "chore(PocketIC): Update Cargo.toml"
      },
      {
        "id": "1ae26fa8874982e6d799c6e67d64b7db6b0434ec",
        "date": "2023-10-19T13:43:56Z",
        "message": "chore(VER-2563): Don't cache results of PocketIC since they are never used"
      },
      {
        "id": "8bda9a15ff0945b3adb33528198fc016ff4341c4",
        "date": "2023-10-19T10:13:27Z",
        "message": "feat(VER-2562): Improve PocketIC command line experience"
      },
      {
        "id": "e1081e34b31b865b90a8e7d31e40724cca757de7",
        "date": "2023-10-18T10:49:25Z",
        "message": "chore(VER-2560): Remove MocketIC"
      },
      {
        "id": "151c15fcf365fe369777f6b805b4e91eb3b79dc7",
        "date": "2023-10-18T10:10:10Z",
        "message": "feat(VER-2551): PocketIC logging in the client"
      },
      {
        "id": "ada48899778eff909983502b31106260f0034f21",
        "date": "2023-10-13T08:20:20Z",
        "message": "chore(VER-2553): Improve installation guide and provide binary not found help"
      },
      {
        "id": "8acc496a3221b8dcf87b50183e912b43c250c9a9",
        "date": "2023-10-12T14:36:06Z",
        "message": "chore(PocketIC): Update server version commit hash in README"
      },
      {
        "id": "50052651cb3893ca0dd58c938edff082bf1879e4",
        "date": "2023-10-12T09:27:21Z",
        "message": "Revert \"fix(PocketIC): Use timeout for requests\""
      },
      {
        "id": "6daf8dfaffa12dd03d35b2f7a59bf9e2c8f83fb5",
        "date": "2023-10-11T13:23:36Z",
        "message": "fix(PocketIC): Use timeout for requests"
      },
      {
        "id": "3f2d28e3a905e1affdaf3c5d85cb5c1e659b605e",
        "date": "2023-10-11T13:23:24Z",
        "message": "chore(VER-2544): PocketIC doc strings"
      },
      {
        "id": "46e7caf9dc37d7cd726bf3125c6fca8d1db35669",
        "date": "2023-10-09T16:56:58Z",
        "message": "chore(PocketIC): Bump version and remove clippy directive"
      },
      {
        "id": "abec625afb9258214a7a0f7e1968f8ab5c6cc5b7",
        "date": "2023-10-05T09:27:15Z",
        "message": "fix(VER-2535): Fix slowness in reqwest client instantiation"
      },
      {
        "id": "91d7c024daf42986c13fce62e585b17b6fda6262",
        "date": "2023-10-04T09:46:31Z",
        "message": "fix(VER-2533): Fix empty log file creation"
      },
      {
        "id": "cda1773abd1fea87b1fb202830a739b7764943b0",
        "date": "2023-10-02T16:06:10Z",
        "message": "fix(VER-2525): Use timeouts in all methods"
      },
      {
        "id": "b0a4b4643e5aa9276c0cc7186bc3761e75bb1568",
        "date": "2023-09-28T18:27:47Z",
        "message": "chore(VER-2516): Implement tick in PocketIC V2"
      },
      {
        "id": "509acac419a681610e37b3737242a4d6c664c14c",
        "date": "2023-09-27T22:13:49Z",
        "message": "chore(VER-2515): PocketIC V2: Delete instances on drop"
      },
      {
        "id": "b82f411360386c3c06bb9665fcffa7a2d11dd79a",
        "date": "2023-09-27T16:57:11Z",
        "message": "chore(VER-2494,VER-2513,VER-2514): Implement `*_canister`, `advance_time`, `cycles` methods"
      },
      {
        "id": "b7fe1907ceac045ce3766052fbe3da498bce32a0",
        "date": "2023-09-27T16:02:07Z",
        "message": "chore(PocketIC) Rest Types and Handlers"
      },
      {
        "id": "b46c041a80152f3625c0a5b6d3cdb5a0ab8878a6",
        "date": "2023-09-25T17:41:48Z",
        "message": "chore(VER-2495): Implement get and set_time in server"
      },
      {
        "id": "ec5f21dbe668d7e9d977028230aad293cd468682",
        "date": "2023-09-21T17:29:49Z",
        "message": "chore(PocketIC): Less verbose logging by default"
      },
      {
        "id": "1b59d963ad1d7eacda833abb119534982d4cd7e6",
        "date": "2023-09-21T15:02:26Z",
        "message": "fix(VER-2499): Fix PocketIC crash on large set stable memory"
      },
      {
        "id": "d763704500966a7ef89b7e20f3730a5e9b4c4f38",
        "date": "2023-09-20T14:20:28Z",
        "message": "feat(VER-2487): PocketIC set stable memory function"
      },
      {
        "id": "1bdee90b593a23781bb82a96b467e7f18dfe7d51",
        "date": "2023-09-19T16:15:01Z",
        "message": "feat(VER-2488): Implement a blob store for PocketIC"
      },
      {
        "id": "425b40cd4d68aa7963b741e2096b1deaf86c9707",
        "date": "2023-09-13T14:21:55Z",
        "message": "feat(VER-2485): Write some more API tests for PocketIC"
      },
      {
        "id": "0d2df5a624d20fe75d89f1ec0294e623d1a53153",
        "date": "2023-09-12T15:07:08Z",
        "message": "feat(VER-2483): Delete instances on the server when they are dropped; refactoring"
      },
      {
        "id": "3573761ce6c73ae19b33627423d18289d9ba3070",
        "date": "2023-09-08T15:00:58Z",
        "message": "fix(VER-2481): Disable checkpointing in every round, only on demand."
      },
      {
        "id": "979557d2276f1fa5d2db4d508e09df5f3e75cf75",
        "date": "2023-09-07T15:40:24Z",
        "message": "fix(PocketIC): Disable default body limit to allow for large payloads."
      },
      {
        "id": "e0109cc786e4df7fb2b195c40f5a0ce15d996874",
        "date": "2023-09-06T14:49:18Z",
        "message": "feat(VER-2475): Add checkpointing to PocketIC Rust Integration and use Bazel"
      },
      {
        "id": "a61dd24cf28a9e429ca94b2531b09bb346918275",
        "date": "2023-09-01T11:55:32Z",
        "message": "chore(VER-2473): Respect `--set-required-host-features` for colocated tests"
      },
      {
        "id": "eb4ba296fab6d04eb0be048e657cf0b5b685cdfc",
        "date": "2023-08-30T14:20:36Z",
        "message": "feat(VER-2470): Add remove instance endpoint"
      },
      {
        "id": "e81199bbee77925b4537e24431bb6c15f41dc314",
        "date": "2023-08-29T16:36:43Z",
        "message": "chore(VER-2458, VER-2468): Fix PocketIC server panic on shutdown"
      },
      {
        "id": "37c7b443c1562e0cd180b5f0f3d00a81fbef1cc6",
        "date": "2023-08-28T15:41:57Z",
        "message": "chore(VER-2457): Change instance id from random string to sequence number"
      },
      {
        "id": "13a223e68207985b261ec72573cfa517ce79d3df",
        "date": "2023-08-28T14:48:12Z",
        "message": "chore(VER-2464): Rename PocketIC backend to PocketIC server"
      },
      {
        "id": "51100e12bf59f8b0f30e03cf80e22036b60adf46",
        "date": "2023-08-25T13:02:29Z",
        "message": "chore(VER-2462): Make PocketIC server less verbose"
      },
      {
        "id": "50de05cc4ee079399db51927ca387d598aadf4e2",
        "date": "2023-08-25T09:11:23Z",
        "message": "Remove PocketIC Python code"
      },
      {
        "id": "eb90bee136ffaf0ffb1f2f6f7040aa9452523232",
        "date": "2023-08-16T08:50:43Z",
        "message": "feat(2433): Prototype Python Test API for PocketIC"
      },
      {
        "id": "7b4d1be30c858aafd478cb3185bf2e5b5958ea59",
        "date": "2023-08-08T09:19:42Z",
        "message": "feat(VER-2430): Fix PocketIC daemon startup"
      }
    ],
    "line_additions": 4894,
    "line_deletions": 2474,
    "lines_effected_total": 7368,
    "rel_comm_add": 26,
    "rel_comm_del": 23,
    "rel_comm_total": 33
  },
  {
    "login": "jean-dfinity",
    "id": 91937217,
    "totalContributions": 102,
    "github": "https://github.com/jean-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "DSharifi",
    "id": 40335219,
    "totalContributions": 101,
    "github": "https://github.com/DSharifi",
    "commits": [
      {
        "id": "2b7e53adaee8f4697e6e7673498a32b2d84022d8",
        "date": "2023-11-13T15:57:46Z",
        "message": "Merge branch 'NET-1589-set-refresh-rate-of-priority-function-to-every-3-s' into 'master'\n\nchore(p2p-consensus): [NET-1589] Set refresh rate of priority function to every 3s\n\nCloses NET-1589 \n\nCloses NET-1589\n\nSee merge request dfinity-lab/public/ic!16043"
      },
      {
        "id": "347c329d2e44750c434b76b941be186468ab0318",
        "date": "2023-11-13T15:57:41Z",
        "message": "chore(p2p-consensus): [NET-1589] Set refresh rate of priority function to every 3s"
      },
      {
        "id": "c7340d3b716eaff5f277a130c878431d3789bbfd",
        "date": "2023-11-13T15:44:39Z",
        "message": "Merge branch 'NET-1590-enable-artifact-push-and-set-the-threshold-to-1-kb' into 'master'\n\nfeat(p2p-consensus): [NET-1590] Enable artifact pushing with a threshold of 1KB\n\nCloses NET-1590 \n\nCloses NET-1590\n\nSee merge request dfinity-lab/public/ic!16042"
      },
      {
        "id": "c66522332a53a610eae1b1badaf4bef7b38ae1c7",
        "date": "2023-11-13T15:44:39Z",
        "message": "feat(p2p-consensus): [NET-1590] Enable artifact pushing with a threshold of 1KB"
      },
      {
        "id": "1c7f774ae0c096d98f873fa66f1d200b85a64ecf",
        "date": "2023-11-10T12:31:55Z",
        "message": "Merge branch 'NET-1497-test-flapping-connection-doesnt-cause-re-downloading-of-artifact' into 'master'\n\ntest(p2p-consensus): [NET-1497] Test flapping connection doesn't cause re downloading of Artifact.\n\nCloses NET-1497 \n\nCloses NET-1497\n\nSee merge request dfinity-lab/public/ic!15973"
      },
      {
        "id": "ad3e3d065e236dc34e767829508cd07c8fe061cf",
        "date": "2023-11-10T12:31:55Z",
        "message": "test(p2p-consensus): [NET-1497] Test flapping connection doesn't cause re downloading of Artifact."
      },
      {
        "id": "637b286fa4abc9948ff4873d7f8726fbfb3a8a27",
        "date": "2023-11-07T13:19:04Z",
        "message": "Merge branch 'NET-1578-test-a-node-joining-the-subnet' into 'master'\n\ntest(p2p-consensus): Test a node joining the subnet receives non-purged artifacs\n\nCloses NET-1578 \n\nCloses NET-1578\n\nSee merge request dfinity-lab/public/ic!15915"
      },
      {
        "id": "9dd77e689177166924e960341757d01d8bea6fc8",
        "date": "2023-11-07T13:19:04Z",
        "message": "test(p2p-consensus): Test a node joining the subnet receives non-purged artifacs"
      },
      {
        "id": "7e2c18b1aa4295a6a70a079607a260a49b410dc0",
        "date": "2023-11-06T16:24:15Z",
        "message": "Merge branch 'NET-1575-add-setup-of-consensus-manager-to-setup-ic-network' into 'master'\n\nfeat(p2p-consensus): Add setup to enable new P2P protocol for consensus\n\n \n\nSee merge request dfinity-lab/public/ic!15816"
      },
      {
        "id": "6be03f9794a8e1b5bbebff8e4f74388bd43f8d12",
        "date": "2023-11-06T16:24:15Z",
        "message": "feat(p2p-consensus): Add setup to enable new P2P protocol for consensus"
      },
      {
        "id": "634cc79fe7f35906952549f6270fb04386b41d04",
        "date": "2023-10-26T13:01:45Z",
        "message": "Merge branch 'revert-relay-disabling' into 'master'\n\nrevert: reverts `NET-1565-do-not-push-relayed-artifacts`\n\nThis reverts commit 6e83a17ea14bcb5e3b5d0316ad8a321e869df410, reversing\nchanges made to e77d54cbae2c8cecbd51f2faacbebabb00d56b14. \n\nSee merge request dfinity-lab/public/ic!15674"
      },
      {
        "id": "a391a768371f931e4165a86e37339605f38e29ae",
        "date": "2023-10-26T13:01:43Z",
        "message": "revert: reverts `NET-1565-do-not-push-relayed-artifacts`"
      },
      {
        "id": "221b226858d9056ca89975d3e47d9869a9b2c2d8",
        "date": "2023-10-25T16:17:35Z",
        "message": "Merge branch 'NET-1567-populate-send-view-on-startup-from-validated-pool' into 'master'\n\nfix(p2p-consensus): [NET-1567] Populate send view on startup from validated pool\n\nCloses NET-1567 \n\nCloses NET-1567\n\nSee merge request dfinity-lab/public/ic!15575"
      },
      {
        "id": "8e75511de31458e7cd1d4d05dfdd91cdd229f4b9",
        "date": "2023-10-25T16:17:28Z",
        "message": "fix(p2p-consensus): [NET-1567] Populate send view on startup from validated pool"
      },
      {
        "id": "a152fa88dafc06e11a86b98effa2a44b9b028812",
        "date": "2023-10-23T19:41:23Z",
        "message": "Merge branch 'dsharifi/fix-tick-behaviour' into 'master'\n\nchore(p2p-consensus): [NET-1571] Skip missed ticks in event loop\n\ncloses NET-1571 \n\nCloses NET-1571\n\nSee merge request dfinity-lab/public/ic!15532"
      },
      {
        "id": "bc34ebab19757358339831b400da733e8aa91ab8",
        "date": "2023-10-23T19:41:23Z",
        "message": "chore(p2p-consensus): [NET-1571] Skip missed ticks in event loop"
      },
      {
        "id": "6e83a17ea14bcb5e3b5d0316ad8a321e869df410",
        "date": "2023-10-23T16:32:08Z",
        "message": "Merge branch 'NET-1565-do-not-push-relayed-artifacts' into 'master'\n\nchore(p2p-consensus): [NET-1565] Disable Pushing of artifacts that are relayed.\n\nCloses NET-1565 \n\nCloses NET-1565\n\nSee merge request dfinity-lab/public/ic!15541"
      },
      {
        "id": "8b6b07b284b8135e5a18b13269e077c3bbb5f8e4",
        "date": "2023-10-23T16:32:08Z",
        "message": "chore(p2p-consensus): [NET-1565] Disable Pushing of artifacts that are relayed."
      },
      {
        "id": "410b57c43e2395c61b58466b3676f50a25043827",
        "date": "2023-10-20T10:55:59Z",
        "message": "Merge branch 'NET-1554-move-receive-side-to-separate-module' into 'master'\n\nrefactor(p2p-consensus): Break sending/receiving of averts into separate modules\n\nCloses NET-1554 \n\nCloses NET-1554\n\nSee merge request dfinity-lab/public/ic!15479"
      },
      {
        "id": "d747adabb135a7b839a6d8eb671fb4844fd0c422",
        "date": "2023-10-20T10:55:59Z",
        "message": "refactor(p2p-consensus): Break sending/receiving of averts into separate modules"
      },
      {
        "id": "33a449bebda7b71c10efe2a544f476cb01d73baa",
        "date": "2023-10-04T14:59:57Z",
        "message": "Merge branch 'dsharifi/revert-artifact-bounds' into 'master'\n\nrevert: [NET-1539] \"move trait bounds to `ArtifactKind`\"\n\nThis reverts commit 5c266f16f50a3e3ae0f82d99f8a9e1e323c6c5f9. \n\nSee merge request dfinity-lab/public/ic!15192"
      },
      {
        "id": "c3354422b4e46b6be3df238155e4c49a240245d8",
        "date": "2023-10-04T14:59:57Z",
        "message": "revert: [NET-1539] \"move trait bounds to `ArtifactKind`\""
      },
      {
        "id": "91d3e406dbcf97de063b03d910b2f97aa46a64d2",
        "date": "2023-10-02T15:14:29Z",
        "message": "Merge branch 'NET-1556-move-consensus-manager-metrics-to-module' into 'master'\n\nchore(P2P-new-consensus): [NET-1556] Move consensus manager metrics to module\n\nCloses NET-1556 \n\nCloses NET-1556\n\nSee merge request dfinity-lab/public/ic!15137"
      },
      {
        "id": "13c7368685d3eafa3f3e9835e6ab45f8c6a5f830",
        "date": "2023-10-02T15:14:29Z",
        "message": "chore(P2P-new-consensus): [NET-1556] Move consensus manager metrics to module"
      },
      {
        "id": "bba1719a21c737b29bd68455cbdc77ddb40354bc",
        "date": "2023-10-02T13:43:41Z",
        "message": "Merge branch 'dsharifi/rmvcmnt' into 'master'\n\nchore: Remove stale comment in Query handler\n\n \n\nSee merge request dfinity-lab/public/ic!15045"
      },
      {
        "id": "4a66929112b98051ddd47ca98dab22e6ac1dd81b",
        "date": "2023-10-02T13:43:40Z",
        "message": "chore: Remove stale comment in Query handler"
      },
      {
        "id": "d70095a1474137bc7e8fb798dde9c49555293ee7",
        "date": "2023-09-28T08:09:24Z",
        "message": "Merge branch 'NET-1539-move-artifcat-kind-trait-bound-to-trait-itself' into 'master'\n\nchore: [NET-1539] Move trait bounds to `ArtifactKind`.\n\nWe have many bounds in the new P2P consensus that we want to move to the trait definition of `ArtifactKind`.\n\nCloses NET-1539 \n\nCloses NET-1539\n\nSee merge request dfinity-lab/public/ic!15020"
      },
      {
        "id": "5c266f16f50a3e3ae0f82d99f8a9e1e323c6c5f9",
        "date": "2023-09-28T08:09:24Z",
        "message": "chore: [NET-1539] Move trait bounds to `ArtifactKind`."
      },
      {
        "id": "712910160fcec3891f0717bd31f18b0da71fc98a",
        "date": "2023-09-26T08:53:52Z",
        "message": "Merge branch 'NET-1550-add-watcher-for-the-priority-function' into 'master'\n\nfeat(p2p-consensus): [NET-1550] Add watcher for the priority function.\n\nAdds a watcher for the priority function that the download tasks can wait on. This prevents the download task from checking every 1s independently for a change when implemented with a ReadWriteLock.\n\nrefactor: splits `download_artifact` into `process_advert` + `download_artifact`. The aim is to make it harder to introduce race conditions by with the enum `DownloadResult` for each exit condition when attempting to download an artifact.\n\nCloses NET-1550 \n\nCloses NET-1550\n\nSee merge request dfinity-lab/public/ic!14981"
      },
      {
        "id": "eafd501ea6343742aacd76d2463ff61f9e0a6c60",
        "date": "2023-09-26T08:53:52Z",
        "message": "feat(p2p-consensus): [NET-1550] Add watcher for the priority function."
      },
      {
        "id": "a7a927a6759cf0a6b08550ef14bd7d97a0bdc068",
        "date": "2023-09-25T13:12:17Z",
        "message": "Merge branch 'dsharifi/fix-endpoint-formatting' into 'master'\n\nfix(p2p-consensus): Fix formatting of endpoints.\n\nA [cleanup MR](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14866/diffs) refactored how we format the endpoints. We need to add this change when creating the routers.\n\nThe ArtifactTag enum has a different implementation for casting it into `String` and `str` which is why we need this fix. \n\nSee merge request dfinity-lab/public/ic!14978"
      },
      {
        "id": "bfee3f6f24c921393328c00c0e77a2d71a8656e4",
        "date": "2023-09-25T13:12:17Z",
        "message": "fix(p2p-consensus): Fix formatting of endpoints."
      },
      {
        "id": "34e429e85b60f734cfe56163ed4d6501ad00ddfa",
        "date": "2023-09-18T16:41:05Z",
        "message": "Merge branch 'dsharifi/p2p-consensus-send-side' into 'master'\n\nfeat(P2P): [NET-1544] Implement Sender Side of new P2P protocol for consensus.\n\nThis MR adds the Send side implementation of the new P2P protocol for consensus.\n\ncloses NET-1544 \n\nCloses NET-1544\n\nSee merge request dfinity-lab/public/ic!14852"
      },
      {
        "id": "ea36893a657c1ef8a6c7ce0b7dd6dd0c162e65c0",
        "date": "2023-09-18T16:41:04Z",
        "message": "feat(P2P): [NET-1544] Implement Sender Side of new P2P protocol for consensus."
      },
      {
        "id": "8fddd646648318a75c4270a540f037f7190e4cac",
        "date": "2023-09-13T15:53:33Z",
        "message": "Merge branch 'NET-1536-create-artifact-advert-types-used-on-the-wire' into 'master'\n\nfeat: [NET-1538] Implement send side of consensus P2P\n\nThis MR adds a SlotManager data structure to keep track of available slots for adverts to send.\nThe MR also adds the logic for sending adverts to peers.\n\nCo-authored-by: Daniel Sharifi daniel.sharifi@dfinity.org\n\nCloses NET-1538 \n\nCloses NET-1538 and NET-1536\n\nSee merge request dfinity-lab/public/ic!14715"
      },
      {
        "id": "0130bdbc822ab156ec8f399aa4615d298672d7e9",
        "date": "2023-09-13T14:22:03Z",
        "message": "Merge branch 'NET-1500-adjust-the-http-query-response-struct-to-include-signatures' into 'master'\n\nfeat: [IC-1247] Add replica signatures to Query responses\n\nThis MR adds replica signatures to Query responses.\n\nA hash of a Query is computed as described in [PR#136](https://github.com/dfinity/interface-spec/pull/163), signed with `sign_basic` and included in the query response.\n\nPart of IC-1247\nCloses NET-1500\n\nCo-authored-by: Shuo Wang shuo.wang@dfinity.org \\\nCo-authored-by: Martin Raszyk martin.raszyk@dfinity.org \n\nCloses NET-1500\n\nSee merge request dfinity-lab/public/ic!13833"
      },
      {
        "id": "73dbd34866e987fe2b050be79121fba60a7355c0",
        "date": "2023-09-13T14:22:02Z",
        "message": "feat: [IC-1247] Add replica signatures to Query responses"
      },
      {
        "id": "c7d5c5072a777c56e016e764260143ff649be608",
        "date": "2023-09-12T10:05:32Z",
        "message": "Merge branch 'NET-1531-create-skeleton-for-consensus-manager' into 'master'\n\nfeat: [NET-1531] Create skeleton for new consensus manager\n\nCloses NET-1531 \n\nCloses NET-1531\n\nSee merge request dfinity-lab/public/ic!14627"
      },
      {
        "id": "747534cbbca6139c2d33b46d7f6b71568cb4e63b",
        "date": "2023-09-12T10:05:32Z",
        "message": "feat: [NET-1531] Create skeleton for new consensus manager"
      },
      {
        "id": "6d4d457f1ab08dbdca3cd2b335b6699c35627922",
        "date": "2023-08-20T13:43:58Z",
        "message": "Merge branch 'NET-1520-integration-tests-for-queries-where-state-is-unavailable' into 'master'\n\ntest(http-endpoint): [NET-1520] Add integration test for queries where state is unavailable\n\nCloses NET-1520\n\nStacked on top of https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14253 \n\nCloses NET-1520\n\nSee merge request dfinity-lab/public/ic!14260"
      },
      {
        "id": "09bfcb571f3c5ee8396589f85577b18a42b6e1d7",
        "date": "2023-08-20T13:43:57Z",
        "message": "test(http-endpoint): [NET-1520] Add integration test for queries where state is unavailable"
      },
      {
        "id": "bf91716abd6612239bb761708331141d991967d8",
        "date": "2023-08-18T16:35:33Z",
        "message": "Merge branch 'NET-1518-return-error-on-unavailable-state' into 'master'\n\nfix(http-endpoint): [NET-1518] Return `Service Unavailable` when state isn't available\n\nCloses NET-1518\n\nThis MR makes such that we return `Service Unavailable` for Query calls where the certified state was unavailable instead of an `UserError`. This change makes the behavior of Queries consistent with requests to the `/read_state` endpoint, which also returns `Service Unavailable` if the certified state is unavailable. \n\nCloses NET-1518\n\nSee merge request dfinity-lab/public/ic!14253"
      },
      {
        "id": "a91886bbf61cf638fcd05d44c1427506d180f886",
        "date": "2023-08-18T16:35:33Z",
        "message": "fix(http-endpoint): [NET-1518] Return `Service Unavailable` when state isn't available"
      }
    ],
    "email": "daniel.sharifi@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 43,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 22,
    "fixes": 3,
    "feats": 6,
    "non_merge_commits": [
      {
        "id": "347c329d2e44750c434b76b941be186468ab0318",
        "date": "2023-11-13T15:57:41Z",
        "message": "chore(p2p-consensus): [NET-1589] Set refresh rate of priority function to every 3s"
      },
      {
        "id": "c66522332a53a610eae1b1badaf4bef7b38ae1c7",
        "date": "2023-11-13T15:44:39Z",
        "message": "feat(p2p-consensus): [NET-1590] Enable artifact pushing with a threshold of 1KB"
      },
      {
        "id": "ad3e3d065e236dc34e767829508cd07c8fe061cf",
        "date": "2023-11-10T12:31:55Z",
        "message": "test(p2p-consensus): [NET-1497] Test flapping connection doesn't cause re downloading of Artifact."
      },
      {
        "id": "9dd77e689177166924e960341757d01d8bea6fc8",
        "date": "2023-11-07T13:19:04Z",
        "message": "test(p2p-consensus): Test a node joining the subnet receives non-purged artifacs"
      },
      {
        "id": "6be03f9794a8e1b5bbebff8e4f74388bd43f8d12",
        "date": "2023-11-06T16:24:15Z",
        "message": "feat(p2p-consensus): Add setup to enable new P2P protocol for consensus"
      },
      {
        "id": "a391a768371f931e4165a86e37339605f38e29ae",
        "date": "2023-10-26T13:01:43Z",
        "message": "revert: reverts `NET-1565-do-not-push-relayed-artifacts`"
      },
      {
        "id": "8e75511de31458e7cd1d4d05dfdd91cdd229f4b9",
        "date": "2023-10-25T16:17:28Z",
        "message": "fix(p2p-consensus): [NET-1567] Populate send view on startup from validated pool"
      },
      {
        "id": "bc34ebab19757358339831b400da733e8aa91ab8",
        "date": "2023-10-23T19:41:23Z",
        "message": "chore(p2p-consensus): [NET-1571] Skip missed ticks in event loop"
      },
      {
        "id": "8b6b07b284b8135e5a18b13269e077c3bbb5f8e4",
        "date": "2023-10-23T16:32:08Z",
        "message": "chore(p2p-consensus): [NET-1565] Disable Pushing of artifacts that are relayed."
      },
      {
        "id": "d747adabb135a7b839a6d8eb671fb4844fd0c422",
        "date": "2023-10-20T10:55:59Z",
        "message": "refactor(p2p-consensus): Break sending/receiving of averts into separate modules"
      },
      {
        "id": "c3354422b4e46b6be3df238155e4c49a240245d8",
        "date": "2023-10-04T14:59:57Z",
        "message": "revert: [NET-1539] \"move trait bounds to `ArtifactKind`\""
      },
      {
        "id": "13c7368685d3eafa3f3e9835e6ab45f8c6a5f830",
        "date": "2023-10-02T15:14:29Z",
        "message": "chore(P2P-new-consensus): [NET-1556] Move consensus manager metrics to module"
      },
      {
        "id": "4a66929112b98051ddd47ca98dab22e6ac1dd81b",
        "date": "2023-10-02T13:43:40Z",
        "message": "chore: Remove stale comment in Query handler"
      },
      {
        "id": "5c266f16f50a3e3ae0f82d99f8a9e1e323c6c5f9",
        "date": "2023-09-28T08:09:24Z",
        "message": "chore: [NET-1539] Move trait bounds to `ArtifactKind`."
      },
      {
        "id": "eafd501ea6343742aacd76d2463ff61f9e0a6c60",
        "date": "2023-09-26T08:53:52Z",
        "message": "feat(p2p-consensus): [NET-1550] Add watcher for the priority function."
      },
      {
        "id": "bfee3f6f24c921393328c00c0e77a2d71a8656e4",
        "date": "2023-09-25T13:12:17Z",
        "message": "fix(p2p-consensus): Fix formatting of endpoints."
      },
      {
        "id": "ea36893a657c1ef8a6c7ce0b7dd6dd0c162e65c0",
        "date": "2023-09-18T16:41:04Z",
        "message": "feat(P2P): [NET-1544] Implement Sender Side of new P2P protocol for consensus."
      },
      {
        "id": "73dbd34866e987fe2b050be79121fba60a7355c0",
        "date": "2023-09-13T14:22:02Z",
        "message": "feat: [IC-1247] Add replica signatures to Query responses"
      },
      {
        "id": "747534cbbca6139c2d33b46d7f6b71568cb4e63b",
        "date": "2023-09-12T10:05:32Z",
        "message": "feat: [NET-1531] Create skeleton for new consensus manager"
      },
      {
        "id": "09bfcb571f3c5ee8396589f85577b18a42b6e1d7",
        "date": "2023-08-20T13:43:57Z",
        "message": "test(http-endpoint): [NET-1520] Add integration test for queries where state is unavailable"
      },
      {
        "id": "a91886bbf61cf638fcd05d44c1427506d180f886",
        "date": "2023-08-18T16:35:33Z",
        "message": "fix(http-endpoint): [NET-1518] Return `Service Unavailable` when state isn't available"
      }
    ],
    "line_additions": 3942,
    "line_deletions": 1978,
    "lines_effected_total": 5920,
    "rel_comm_add": 16,
    "rel_comm_del": 13,
    "rel_comm_total": 16
  },
  {
    "login": "michael-weigelt",
    "id": 122277901,
    "totalContributions": 97,
    "github": "https://github.com/michael-weigelt",
    "commits": [
      {
        "id": "c22a5aebd4f26ae2e4016de55e3f7aa00d086479",
        "date": "2023-11-21T12:56:56Z",
        "message": "Merge branch 'elias/bum-pic-version' into 'master'\n\nchore(PocketIC): bump PocketIC version\n\n \n\nSee merge request dfinity-lab/public/ic!16238"
      },
      {
        "id": "9e1bb334f2f01a40572626e503c01b82366c1167",
        "date": "2023-11-02T11:09:07Z",
        "message": "Merge branch 'basvandijk/fix-missing-dep-in-recovered_mainnet_nns' into 'master'\n\nfix: add missing depenency on ic-recovery in recovered_mainnet_nns\n\n \n\nSee merge request dfinity-lab/public/ic!15846"
      },
      {
        "id": "ffb7236bde8861728b93b399735c48fadcbeaf32",
        "date": "2023-11-02T08:20:44Z",
        "message": "Merge branch 'basvandijk/use-ipv6-in-nns-upgrade-test' into 'master'\n\nchore: use IPv6 in the nns_upgrade_test\n\n[Now that we can access the backup pod via IPv6](https://dfinity.slack.com/archives/C02JQBHC3AA/p1698855318827969)\nwe no longer need to enable IPv4 in the colocated test-driver VM. \n\nSee merge request dfinity-lab/public/ic!15838"
      },
      {
        "id": "9d81e96b8e31269866d57617f4babf52e9944074",
        "date": "2023-11-01T14:12:12Z",
        "message": "Merge branch 'chmllr/fix-unstuck-test' into 'master'\n\ntest(consensus): use the images directory for permission reference\n\nThe current test, when downloading a correct upgrade image, tries to move the image with the wrong hash aside. However, the orchestrator actually deletes this file once it can detect the hash mismatch. In this MR we use the `images` directory for permission reference instead. It is also used by the replica and should be good enough. \n\nSee merge request dfinity-lab/public/ic!15815"
      },
      {
        "id": "ea46a71157f73b7da9abf1c33393a87c6da7b112",
        "date": "2023-10-16T13:28:23Z",
        "message": "Merge branch 'mwe/title' into 'master'\n\nfeat: [VER-2559] Add test name to summary\n\n \n\nSee merge request dfinity-lab/public/ic!15394"
      },
      {
        "id": "d7b09395ec2e65b7685f45cce0ebf98efecc3d9e",
        "date": "2023-10-16T13:28:23Z",
        "message": "feat: [VER-2559] Add test name to summary"
      },
      {
        "id": "307d5847c1d2fe1f5e19181c7d0fcec23f4658b3",
        "date": "2023-10-12T12:39:27Z",
        "message": "Merge branch 'mwe/ttl' into 'master'\n\nfix: [VER-2548] Server TTL should always exceed client's waiting time\n\n \n\nSee merge request dfinity-lab/public/ic!15362"
      },
      {
        "id": "fb01eeb472ae818d29054b39abf90faa17df117f",
        "date": "2023-10-12T12:39:27Z",
        "message": "fix: [VER-2548] Server TTL should always exceed client's waiting time"
      },
      {
        "id": "a697260a5a711b41b3fa13c759d8b45fc1e43545",
        "date": "2023-10-12T08:20:39Z",
        "message": "Merge branch 'maksym/testnet-metrics' into 'master'\n\nchore: update execution metrics dashboards for testnets to match prod\n\nThis MR updates the grafana farm testnet dashboards to be up-to-date with prod dashboards.\n\nThe only manual change to the file is to revert back to `\"uid\": \"000000001\"`, otherwise it's just a plain copy from prod version. \n\nSee merge request dfinity-lab/public/ic!15343"
      },
      {
        "id": "bdc9fc4158175dbcbeacaf81d05e3bb382d60550",
        "date": "2023-10-11T15:15:33Z",
        "message": "chore: [VER-2542] README for pocket-ic crate"
      },
      {
        "id": "1290f1c62e0c9426a2e969bcd1f6e8d154f699e1",
        "date": "2023-10-11T13:23:25Z",
        "message": "Merge branch 'mwe-elias/pic-documentation' into 'master'\n\nchore(VER-2544): PocketIC doc strings\n\n \n\nSee merge request dfinity-lab/public/ic!15320"
      },
      {
        "id": "50f45debb8f9409f98940c3914dbc4b45eb5c485",
        "date": "2023-10-02T14:07:46Z",
        "message": "Merge branch 'mwe/fix' into 'master'\n\nfix: Verify Canister Signature\n\n \n\nSee merge request dfinity-lab/public/ic!15135"
      },
      {
        "id": "39486d0327738e322c81ca5da2453e049b155f3c",
        "date": "2023-10-02T14:07:43Z",
        "message": "fix: Verify Canister Signature"
      },
      {
        "id": "a5ba3c74dda86bd73e8055f100ad7fe6cf3a66c4",
        "date": "2023-10-02T06:47:05Z",
        "message": "fix: [VER-2493] Add some last missing bits to the PocketIc API"
      },
      {
        "id": "ae1634beffc737e7545664472c929f3df9a927a0",
        "date": "2023-10-02T06:35:12Z",
        "message": "Merge branch 'dsd/consistent_time' into 'master'\n\nfix(VER-2524): Remove redundant time and nonce for PocketIC state\n\n \n\nSee merge request dfinity-lab/public/ic!15115"
      },
      {
        "id": "16fab2ca825f80143d4f052965f80099bf140f63",
        "date": "2023-09-29T11:49:00Z",
        "message": "chore: [VER-2517] Switch PocketIc API from V1 to V2"
      },
      {
        "id": "25b37e8687c8f5f1065db66b5c37dd118ab99553",
        "date": "2023-09-28T23:42:44Z",
        "message": "feat: [VER-2496] Stable Memory"
      },
      {
        "id": "5ab493a30729a748d5d39eb9c12fa0d52a9ee45a",
        "date": "2023-09-28T18:05:13Z",
        "message": "feat: [VER-2512] Add timeout to client calls"
      },
      {
        "id": "df7246b864c8bcc7d8e3edb20c5408558bba25d2",
        "date": "2023-09-27T20:55:20Z",
        "message": "Merge branch 'mwe/checkpoint' into 'master'\n\nfeat: [VER-2498] Checkpoint ops and handlers\n\n \n\nSee merge request dfinity-lab/public/ic!15009"
      },
      {
        "id": "178376a0a33b8f4a4b7627006c7c8be179f54cfa",
        "date": "2023-09-27T20:55:19Z",
        "message": "feat: [VER-2498] Checkpoint ops and handlers"
      },
      {
        "id": "97537575c978087df4329f7403a0db20d02f2bc7",
        "date": "2023-09-26T15:22:16Z",
        "message": "Merge branch 'mwe/cycles' into 'master'\n\nfeat: [VER-2494] Add cycles ops and handlers\n\nAnd unify some error types. \n\nSee merge request dfinity-lab/public/ic!15006"
      },
      {
        "id": "e39ee0a8bed1bef1b9f73072251b4f53b08dfc54",
        "date": "2023-09-26T15:22:15Z",
        "message": "feat: [VER-2494] Add cycles ops and handlers"
      },
      {
        "id": "d301693e3b13916632740858300b1999f9876193",
        "date": "2023-09-25T22:03:41Z",
        "message": "Merge branch 'mwe/stable' into 'master'\n\nfeat: [VER-2496] Add stable memory ops\n\n- set stable memory\n- get stable memory \nendpoints, handlers, types, tests. \n\nSee merge request dfinity-lab/public/ic!14988"
      },
      {
        "id": "56a2e048774dd06bd84f18711767b415c9d25030",
        "date": "2023-09-25T22:03:40Z",
        "message": "feat: [VER-2496] Add stable memory ops"
      },
      {
        "id": "b171cff19f8877458a657848684618e1ac4280b1",
        "date": "2023-09-22T14:30:41Z",
        "message": "Merge branch 'mwe/endpoints' into 'master'\n\nfeat: [VER-2448] Add endpoints and handlers\n\n- Adds new API while keeping the old one \n- The new API uses Operation types to make interactions consistent and deterministic\n- Some paragraphs are marked \"temporary\" until we remove the old API\n- Restructured crate somewhat \n\nSee merge request dfinity-lab/public/ic!14857"
      },
      {
        "id": "3974e4b92d844594b52295f46fb033fad2d47841",
        "date": "2023-09-22T14:30:41Z",
        "message": "feat: [VER-2448] Add endpoints and handlers"
      },
      {
        "id": "cb565565c5f95b2c45c32596f2326756cfc103b6",
        "date": "2023-09-14T16:06:12Z",
        "message": "feat: [VER-2447] Add Operations for PocketIC"
      },
      {
        "id": "fc4f19c9f8bbff39eb5d30f8b36ce612549bae83",
        "date": "2023-09-08T16:47:42Z",
        "message": "Merge branch 'mwe/pocket_ic_rest' into 'master'\n\nfeat: [VER-2446] Use PocketIC in APIState\n\n- use PocketIc instead of the mocking it\n- define a few simple Operations to unittest it\n- make two IC types derive Ord, so we can store them in a map. \n\nfollow up: \n- more Operations\n- HTTP endpoints\n- client library \n\nSee merge request dfinity-lab/public/ic!14224"
      },
      {
        "id": "0d2c87dc19b98a47b79b0568c7c4ce2a01dee9d1",
        "date": "2023-09-08T16:47:42Z",
        "message": "feat: [VER-2446] Use PocketIC in APIState"
      },
      {
        "id": "865a816108b31956bd449282e5803ce40007789f",
        "date": "2023-08-31T08:37:25Z",
        "message": "Merge branch 'mwe/codes' into 'master'\n\nchore: [VER-2472] Add HTTP StatusCodes to PocketIC API\n\n \n\nSee merge request dfinity-lab/public/ic!14488"
      },
      {
        "id": "472df3b3a7640bc5ee99b58c3bbb0ad73773c428",
        "date": "2023-08-31T08:37:24Z",
        "message": "chore: [VER-2472] Add HTTP StatusCodes to PocketIC API"
      },
      {
        "id": "71bbd87af21935f53682fb4b28a8c3f5283a8da0",
        "date": "2023-08-25T13:02:30Z",
        "message": "Merge branch 'elias/pocket-ic-server-less-verbose' into 'master'\n\nchore(VER-2462): Make PocketIC server less verbose\n\nRemove some verbose print statements \n\nSee merge request dfinity-lab/public/ic!14394"
      },
      {
        "id": "f23876edfc981e2a0d4cd6fd636f336841a5d96e",
        "date": "2023-08-23T19:12:01Z",
        "message": "Merge branch 'mwe/pic_cleanup' into 'master'\n\nfeat: [VER-2424], [VER-2453] Instance API\n\nThe first ledger python test for pocket-ic requires only an instance API, so this MR finalizes that.\n\nThis change also adds checkpoint endpoints. \n\nSee merge request dfinity-lab/public/ic!14252"
      },
      {
        "id": "dcfb08b482cfa327a6a6f002e72c9f40407af035",
        "date": "2023-08-23T19:12:00Z",
        "message": "feat: [VER-2424], [VER-2453] Instance API"
      },
      {
        "id": "657aa6eeb487a823aea26c5560ee2715f90d4f9c",
        "date": "2023-08-18T11:42:27Z",
        "message": "Merge branch 'BOUN-841-manual-performance-query-test' into 'master'\n\n(BOUN-841) add performance query_calls_test()\n\n**How to run**: \n1. Reserve the `dm1` host machine on Dee.\n2. Execute:\n```sh\nict test boundary_node_performance_test --include-tests=query_calls_test --keepalive\n```\n`Rps` was varied in the range `100:500:8000` req/s and the maximum observed throughput on the replica is around 7k req/s.\nThe profile doesn't exactly exhibit staircase shape, as one would expect. Some strange dips (e.g. at 5.5 k req/s) are observed. I haven't investigated what causes it. It might be due to the problem with the client (workload engine) or anything from `ngingx` on the boundary node to replica. We can dissect this problem deeper in the followup work. For now that fact that we observe >4k req/s is good enough.\n![image](/uploads/cf4ff0ba56be37e5bb5eaedc89c17b58/image.png) \n\nSee merge request dfinity-lab/public/ic!14228"
      },
      {
        "id": "b91ed0b4b12bae11c644c713b5871d0652cca85b",
        "date": "2023-08-16T15:39:52Z",
        "message": "Merge branch 'dsd/pocket_ic_state_dag' into 'master'\n\nFeat(VER-2432): Provide first implementation of PocketIcStateManager\n\nThis MR contains the design of the API State for the pocket-ic backend. \n\nThe corresponding REST-API for the pocket-ic backend is coming in the next MR, as is the integration of the actual StateMachine into this API state. \n\nSee merge request dfinity-lab/public/ic!13923"
      },
      {
        "id": "6e89fb6548d7caad4f46244f89c68a69e76b81f5",
        "date": "2023-08-11T12:08:30Z",
        "message": "Merge branch 'dsd/nonce_udpate_atomic' into 'master'\n\nfix: Make sure nonce updates are atomic\n\n \n\nSee merge request dfinity-lab/public/ic!14114"
      }
    ],
    "email": "michael.weigelt@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 37,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 21,
    "fixes": 3,
    "feats": 10,
    "non_merge_commits": [
      {
        "id": "d7b09395ec2e65b7685f45cce0ebf98efecc3d9e",
        "date": "2023-10-16T13:28:23Z",
        "message": "feat: [VER-2559] Add test name to summary"
      },
      {
        "id": "fb01eeb472ae818d29054b39abf90faa17df117f",
        "date": "2023-10-12T12:39:27Z",
        "message": "fix: [VER-2548] Server TTL should always exceed client's waiting time"
      },
      {
        "id": "bdc9fc4158175dbcbeacaf81d05e3bb382d60550",
        "date": "2023-10-11T15:15:33Z",
        "message": "chore: [VER-2542] README for pocket-ic crate"
      },
      {
        "id": "39486d0327738e322c81ca5da2453e049b155f3c",
        "date": "2023-10-02T14:07:43Z",
        "message": "fix: Verify Canister Signature"
      },
      {
        "id": "a5ba3c74dda86bd73e8055f100ad7fe6cf3a66c4",
        "date": "2023-10-02T06:47:05Z",
        "message": "fix: [VER-2493] Add some last missing bits to the PocketIc API"
      },
      {
        "id": "16fab2ca825f80143d4f052965f80099bf140f63",
        "date": "2023-09-29T11:49:00Z",
        "message": "chore: [VER-2517] Switch PocketIc API from V1 to V2"
      },
      {
        "id": "25b37e8687c8f5f1065db66b5c37dd118ab99553",
        "date": "2023-09-28T23:42:44Z",
        "message": "feat: [VER-2496] Stable Memory"
      },
      {
        "id": "5ab493a30729a748d5d39eb9c12fa0d52a9ee45a",
        "date": "2023-09-28T18:05:13Z",
        "message": "feat: [VER-2512] Add timeout to client calls"
      },
      {
        "id": "178376a0a33b8f4a4b7627006c7c8be179f54cfa",
        "date": "2023-09-27T20:55:19Z",
        "message": "feat: [VER-2498] Checkpoint ops and handlers"
      },
      {
        "id": "e39ee0a8bed1bef1b9f73072251b4f53b08dfc54",
        "date": "2023-09-26T15:22:15Z",
        "message": "feat: [VER-2494] Add cycles ops and handlers"
      },
      {
        "id": "56a2e048774dd06bd84f18711767b415c9d25030",
        "date": "2023-09-25T22:03:40Z",
        "message": "feat: [VER-2496] Add stable memory ops"
      },
      {
        "id": "3974e4b92d844594b52295f46fb033fad2d47841",
        "date": "2023-09-22T14:30:41Z",
        "message": "feat: [VER-2448] Add endpoints and handlers"
      },
      {
        "id": "cb565565c5f95b2c45c32596f2326756cfc103b6",
        "date": "2023-09-14T16:06:12Z",
        "message": "feat: [VER-2447] Add Operations for PocketIC"
      },
      {
        "id": "0d2c87dc19b98a47b79b0568c7c4ce2a01dee9d1",
        "date": "2023-09-08T16:47:42Z",
        "message": "feat: [VER-2446] Use PocketIC in APIState"
      },
      {
        "id": "472df3b3a7640bc5ee99b58c3bbb0ad73773c428",
        "date": "2023-08-31T08:37:24Z",
        "message": "chore: [VER-2472] Add HTTP StatusCodes to PocketIC API"
      },
      {
        "id": "dcfb08b482cfa327a6a6f002e72c9f40407af035",
        "date": "2023-08-23T19:12:00Z",
        "message": "feat: [VER-2424], [VER-2453] Instance API"
      }
    ],
    "line_additions": 3730,
    "line_deletions": 2531,
    "lines_effected_total": 6261,
    "rel_comm_add": 14,
    "rel_comm_del": 11,
    "rel_comm_total": 14
  },
  {
    "login": "rsubramaniyam",
    "id": 55112842,
    "totalContributions": 97,
    "github": "https://github.com/rsubramaniyam",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "dist1ll",
    "id": 39585474,
    "totalContributions": 97,
    "github": "https://github.com/dist1ll",
    "commits": [
      {
        "id": "de9f7c1231a7cff97727a7cb51fc91567b4eb423",
        "date": "2023-10-27T12:45:09Z",
        "message": "Merge branch 'alic/fix-upgrade-test2' into 'master'\n\nfix(consensus): [ICSUP-3714] Change upgrade cycle in upgrade_downgrade test (fixed)\n\nFix of reverted MR: https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15563\n\nI had to get the proper tip-of-branch replica version from the env variable, instead of hardcoding to `0000000000000000000000000000000000000000`. \n\nSee merge request dfinity-lab/public/ic!15723"
      },
      {
        "id": "cd9fac4f4036c22777aaceb6e01a2129352a9d02",
        "date": "2023-10-27T12:45:08Z",
        "message": "fix(consensus): [ICSUP-3714] Change upgrade cycle in upgrade_downgrade test (fixed)"
      },
      {
        "id": "afee4a828fb59d0fa55941cc9de4c9802d39730a",
        "date": "2023-10-27T01:06:10Z",
        "message": "Merge branch 'alic/fix-upgrade-test' into 'master'\n\nfix(consensus): [ICSUP-3714] Change upgrade cycle in upgrade_downgrade test\n\nWe've been observing test failures on staging that should have happened on CI. This discrepancy was caused by the difference in upgrade cycle. \n\n- During qualification, we do a `mainnet` -> `RC` -> `mainnet` upgrade-downgrade roundtrip. \n- In this test however, we've been doing `RC` -> `mainnet` -> `RC`. Even though we're testing both upgrade directions, there's still subtle opportunities for failure. \n\nThis MR fixes the upgrade cycle, so that we start from `mainnet`.\n\n\nAdditionally, to verify that the changes work as expected, I've ran this patch on RC `1ad201eb530a5c572bc72d302160783e7fb4c60b` and attempted to downgrade to the mainnet version from that time (`ca5e5052886de781021506814d2c6502e375da48`). I could reproduce the failure we observed during qualification.\n\n- Bazel logs: https://dash.zh1-idx1.dfinity.network/invocation/d53b7724-cc17-4f4f-9280-8e67953ad487\n- Kibana logs: [Upgrade failure messages](https://kibana.testnet.dfinity.network/app/discover#/?_g=(time:(from:now-1y,to:now))&_a=(columns:!(host.name,message,level),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,key:tags,negate:!f,params:(query:upgrade_downgrade_app_subnet_test--1698343603734),type:phrase),query:(match_phrase:(tags:upgrade_downgrade_app_subnet_test--1698343603734))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'35c5ba4b-6db5-42f6-a760-39ca89a177fe',key:message,negate:!f,params:(query:'Check%20for%20upgrade%20failed:%20Ok(Err(GenericError(%22Failed%20to%20upgrade:%20upgrade-install%20failed%22)))'),type:phrase),query:(match_phrase:(message:'Check%20for%20upgrade%20failed:%20Ok(Err(GenericError(%22Failed%20to%20upgrade:%20upgrade-install%20failed%22)))')))),grid:(columns:(host.name:(width:513))),index:'35c5ba4b-6db5-42f6-a760-39ca89a177fe',interval:auto,query:(language:kuery,query:'syslog.identifier:%22orchestrator%22%20'),sort:!(!('@timestamp',desc)))) \n\nSee merge request dfinity-lab/public/ic!15563"
      },
      {
        "id": "edc1dbf6134c8bc7e66d8d9467249cd6d9f666a1",
        "date": "2023-10-27T01:06:09Z",
        "message": "fix(consensus): [ICSUP-3714] Change upgrade cycle in upgrade_downgrade test"
      },
      {
        "id": "222ce653918a3b258266fdcb5e2f129535c0d4f3",
        "date": "2023-10-26T17:25:32Z",
        "message": "Merge branch 'alic/fix-update-img-url' into 'master'\n\nfix: Set correct URLs in registry when using with_mainnet_config\n\nWhen starting a system test with the `with_mainnet_config` option, we boot the correct disk image, but don't set the correct update image URLs in the registry. This MR fixes that. \n\nSee merge request dfinity-lab/public/ic!15694"
      },
      {
        "id": "49595a9a8d6fcd7806b701c0fd63d990337e5c0b",
        "date": "2023-10-26T17:25:31Z",
        "message": "fix: Set correct URLs in registry when using with_mainnet_config"
      },
      {
        "id": "928db75e55ba35aaa8f603a1f770a16e1036232b",
        "date": "2023-10-13T10:42:19Z",
        "message": "Merge branch 'alic/trustworthy-metrics' into 'master'\n\nfeat(consensus): [CON-1093] Extract node metrics and send them to the MR layer\n\n \n\nSee merge request dfinity-lab/public/ic!15309"
      },
      {
        "id": "817303ad93da5fe1fa56318de9df917348b75864",
        "date": "2023-10-13T10:42:19Z",
        "message": "feat(consensus): [CON-1093] Extract node metrics and send them to the MR layer"
      },
      {
        "id": "13b390b62279f7029c9043e76e37920efe9ca4c4",
        "date": "2023-10-06T14:00:05Z",
        "message": "Merge branch 'alic/proto-id' into 'master'\n\nrefactor(p2p): Port ArtifactId to protobuf\n\nPart 2/2: This MR adds schemas and conversion functions for `ArtifactId` and its dependencies. \n\nSee merge request dfinity-lab/public/ic!15194"
      },
      {
        "id": "6d65fd24bf22bed4a65ea1e4a5c301bce46274d1",
        "date": "2023-10-06T14:00:01Z",
        "message": "refactor(p2p): Port ArtifactId to protobuf"
      },
      {
        "id": "127aa2cae7f6006a07dd5a2c18ccbced9cacfa78",
        "date": "2023-10-06T09:20:27Z",
        "message": "Merge branch 'alic/exhaustive-generics' into 'master'\n\ntest(consensus): Add support for generics in exhaustive_derive\n\nThis MR changes the exhaustive_derive macro to add required generic bounds + `ExhaustiveSet` to all `impl` blocks. This way derives will work on most generic data types. \n\nSee merge request dfinity-lab/public/ic!15231"
      },
      {
        "id": "cefa39d624a1f1f1930a2bb598678bb9e63c5214",
        "date": "2023-10-06T09:20:27Z",
        "message": "test(consensus): Add support for generics in exhaustive_derive"
      },
      {
        "id": "2d47e5451b85a6e9b07fe18af7b40decc50ccebd",
        "date": "2023-10-05T00:26:42Z",
        "message": "Merge branch 'alic/proto-attr-id' into 'master'\n\nrefactor(p2p): Port ArtifactAttribute to protobuf\n\nThis MR adds schemas and conversion functions for `ArtifactAttribute` and its dependencies. \n\nSee merge request dfinity-lab/public/ic!14902"
      },
      {
        "id": "5e0cd4d7f73da3fa072037ef6dbf844f5f7c0246",
        "date": "2023-10-05T00:26:41Z",
        "message": "refactor(p2p): Port ArtifactAttribute to protobuf"
      },
      {
        "id": "a87e1ffe30363b077fe9ea76664c23aaa3c72efa",
        "date": "2023-09-26T11:08:47Z",
        "message": "Merge branch 'alic/cleanup-proto' into 'master'\n\nrefactor: Clean up protobuf conversion code in IDkg\n\nA few refactors to be more idiomatic and consistent with the rest of our codebase. \n\n- changing `TryFrom<&Option<IDkgTranscriptIdProto>>` to `TryFrom<&IDkgTranscriptIdProto>` \n- trying to make more use of error conversions, `try_from_option_field`, `.into()`. etc. to avoid duplication. \n\nSee merge request dfinity-lab/public/ic!14888"
      },
      {
        "id": "5827bc0369426e8e88e511ba32813c979765f7f5",
        "date": "2023-09-26T11:08:46Z",
        "message": "refactor: Clean up protobuf conversion code in IDkg"
      },
      {
        "id": "655d0db8f61195bfdf05748f25697910d63bb231",
        "date": "2023-09-12T20:11:13Z",
        "message": "Merge branch 'alic/fix-procmacro' into 'master'\n\nRemove exhaustive_derive from list of prod dependencies\n\n \n\nSee merge request dfinity-lab/public/ic!14743"
      },
      {
        "id": "731dd867b17ec5dafd01d42a329c3aacdfa3020a",
        "date": "2023-09-12T20:11:13Z",
        "message": "Remove exhaustive_derive from list of prod dependencies"
      },
      {
        "id": "40c6ebb25f3ce8efcd407cb441d30cbb611112b9",
        "date": "2023-09-12T08:19:25Z",
        "message": "ci: Set code owners for exhaustive serialization testing framework"
      },
      {
        "id": "ccc935e33e075b66556ee3ce76bcc93e5206f5bd",
        "date": "2023-09-11T13:55:03Z",
        "message": "Merge branch 'alic/exhaustive_cupcontent' into 'master'\n\ntest(consensus): Implement exhaustive set test for CUP content\n\nWe're currently only testing `Block`. It makes more sense to test the serialization of the CUP. For now we're testing the `CatchUpContent`, because there's still an integrity check in the conversion function of `CatchUpPackage` that needs to be removed.\n\nThis change is done in preparation for a version compatibility checker, that asserts that CUPs can be serialized and deserialized successfully by adjacent versions (e.g. master <-> MR). \n\nSee merge request dfinity-lab/public/ic!14713"
      },
      {
        "id": "3d065460825ba4b9ec5ed4dccdd95602548eb650",
        "date": "2023-09-11T13:55:01Z",
        "message": "test(consensus): Implement exhaustive set test for CUP content"
      },
      {
        "id": "7b8f9c580ceefb296e727196a5e4794be34bf69a",
        "date": "2023-09-06T19:32:34Z",
        "message": "Merge branch 'alic/NET-480' into 'master'\n\nrefactor(p2p): [NET-480] Switch artifact chunk data to protobuf encoding\n\nRelates to NET-480\n\nWith this MR, artifacts in gossip payloads are de/encoded with protobuf, instead of bincode, closing a long-standing TODO. \n\nSee merge request dfinity-lab/public/ic!14565"
      },
      {
        "id": "69fe54abe449d6985b1ebbee9764b432d986d108",
        "date": "2023-09-06T19:32:34Z",
        "message": "refactor(p2p): [NET-480] Switch artifact chunk data to protobuf encoding"
      },
      {
        "id": "3931323ee0c21aac8e7c9fb1a6114546aa818349",
        "date": "2023-09-01T16:05:38Z",
        "message": "Merge branch 'alic/CON-1109' into 'master'\n\nrefactor: Move p2p and CanisterHttp protobuf schemas into types.v1 package\n\nReasoning described in [CON-1109](https://dfinity.atlassian.net/browse/CON-1109).\n\nIn short: types that are defined in `rs/types/types` should have their schemas located in `protobuf/def/types/v1/..`. \n\nSee merge request dfinity-lab/public/ic!14514"
      },
      {
        "id": "05a09a7afa21e6a0fb190b9ede773e93801fa273",
        "date": "2023-09-01T16:05:37Z",
        "message": "refactor: Move p2p and CanisterHttp protobuf schemas into types.v1 package"
      },
      {
        "id": "8fc00e30de8baa60b31f6103be9ac82dff9d47f8",
        "date": "2023-08-31T11:46:06Z",
        "message": "Merge branch 'alic/refactor_test' into 'master'\n\nrefactor(consensus): Remove redundant IngressPoolTestAccess\n\nThe `IngressPoolTestAccess` adds another layer of indirection and trait implementations that don't seem to be necessary.\n\nThis also blocks my attempt at making the IngressPool trait `Send + Sync`. \n\nSee merge request dfinity-lab/public/ic!14446"
      },
      {
        "id": "02080b55c2b4a59bf5a5b7a8e52ae3fecf5bd5e5",
        "date": "2023-08-31T11:46:06Z",
        "message": "refactor(consensus): Remove redundant IngressPoolTestAccess"
      },
      {
        "id": "46f9b0a63621782827d4fe406ce900f7c4529994",
        "date": "2023-08-17T14:42:22Z",
        "message": "Merge branch 'alic/ingress_benchmark' into 'master'\n\ntest(consensus): Change payload benchmark to generate ingress for multiple canisters\n\nThe current build_payload benchmark in the ingress manager only generates ingress originating from a single canister ID. Now that we're making a change to improve ingress fairness, we need to test the case of ingress coming from many different canisters (to be able to compare the new ingress selector implementations) \n\nSee merge request dfinity-lab/public/ic!14195"
      },
      {
        "id": "2c2d86f2e95d2e8641d7cb306349cf143673ba71",
        "date": "2023-08-17T14:42:21Z",
        "message": "test(consensus): Change payload benchmark to generate ingress for multiple canisters"
      },
      {
        "id": "c93f8f117b4deda0cd1cccc263ccfda581a70b7b",
        "date": "2023-08-08T21:51:14Z",
        "message": "Merge branch 'alic/pb_ecdsa2' into 'master'\n\nchore(consensus): [CON-1047] Add EcdsaMessage protobuf schema\n\nThis MR contains the remaining set of protobuf schemas, required for closing CON-1047.\n\n* EcdsaMessage\n* IDkgDealingSupport\n* EcdsaComplaint\n* EcdsaOpening \n\nCloses CON-1047\n\nSee merge request dfinity-lab/public/ic!13897"
      },
      {
        "id": "9a68c9e964a7416db860462b5532ebf9117e0861",
        "date": "2023-08-08T21:51:13Z",
        "message": "chore(consensus): [CON-1047] Add EcdsaMessage protobuf schema"
      }
    ],
    "email": "adrian.alic@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 31,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 15,
    "fixes": 3,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "cd9fac4f4036c22777aaceb6e01a2129352a9d02",
        "date": "2023-10-27T12:45:08Z",
        "message": "fix(consensus): [ICSUP-3714] Change upgrade cycle in upgrade_downgrade test (fixed)"
      },
      {
        "id": "edc1dbf6134c8bc7e66d8d9467249cd6d9f666a1",
        "date": "2023-10-27T01:06:09Z",
        "message": "fix(consensus): [ICSUP-3714] Change upgrade cycle in upgrade_downgrade test"
      },
      {
        "id": "49595a9a8d6fcd7806b701c0fd63d990337e5c0b",
        "date": "2023-10-26T17:25:31Z",
        "message": "fix: Set correct URLs in registry when using with_mainnet_config"
      },
      {
        "id": "817303ad93da5fe1fa56318de9df917348b75864",
        "date": "2023-10-13T10:42:19Z",
        "message": "feat(consensus): [CON-1093] Extract node metrics and send them to the MR layer"
      },
      {
        "id": "6d65fd24bf22bed4a65ea1e4a5c301bce46274d1",
        "date": "2023-10-06T14:00:01Z",
        "message": "refactor(p2p): Port ArtifactId to protobuf"
      },
      {
        "id": "cefa39d624a1f1f1930a2bb598678bb9e63c5214",
        "date": "2023-10-06T09:20:27Z",
        "message": "test(consensus): Add support for generics in exhaustive_derive"
      },
      {
        "id": "5e0cd4d7f73da3fa072037ef6dbf844f5f7c0246",
        "date": "2023-10-05T00:26:41Z",
        "message": "refactor(p2p): Port ArtifactAttribute to protobuf"
      },
      {
        "id": "5827bc0369426e8e88e511ba32813c979765f7f5",
        "date": "2023-09-26T11:08:46Z",
        "message": "refactor: Clean up protobuf conversion code in IDkg"
      },
      {
        "id": "731dd867b17ec5dafd01d42a329c3aacdfa3020a",
        "date": "2023-09-12T20:11:13Z",
        "message": "Remove exhaustive_derive from list of prod dependencies"
      },
      {
        "id": "40c6ebb25f3ce8efcd407cb441d30cbb611112b9",
        "date": "2023-09-12T08:19:25Z",
        "message": "ci: Set code owners for exhaustive serialization testing framework"
      },
      {
        "id": "3d065460825ba4b9ec5ed4dccdd95602548eb650",
        "date": "2023-09-11T13:55:01Z",
        "message": "test(consensus): Implement exhaustive set test for CUP content"
      },
      {
        "id": "69fe54abe449d6985b1ebbee9764b432d986d108",
        "date": "2023-09-06T19:32:34Z",
        "message": "refactor(p2p): [NET-480] Switch artifact chunk data to protobuf encoding"
      },
      {
        "id": "05a09a7afa21e6a0fb190b9ede773e93801fa273",
        "date": "2023-09-01T16:05:37Z",
        "message": "refactor: Move p2p and CanisterHttp protobuf schemas into types.v1 package"
      },
      {
        "id": "02080b55c2b4a59bf5a5b7a8e52ae3fecf5bd5e5",
        "date": "2023-08-31T11:46:06Z",
        "message": "refactor(consensus): Remove redundant IngressPoolTestAccess"
      },
      {
        "id": "2c2d86f2e95d2e8641d7cb306349cf143673ba71",
        "date": "2023-08-17T14:42:21Z",
        "message": "test(consensus): Change payload benchmark to generate ingress for multiple canisters"
      },
      {
        "id": "9a68c9e964a7416db860462b5532ebf9117e0861",
        "date": "2023-08-08T21:51:13Z",
        "message": "chore(consensus): [CON-1047] Add EcdsaMessage protobuf schema"
      }
    ],
    "line_additions": 2022,
    "line_deletions": 988,
    "lines_effected_total": 3010,
    "rel_comm_add": 11,
    "rel_comm_del": 11,
    "rel_comm_total": 11
  },
  {
    "login": "marcin-dziadus",
    "id": 84316545,
    "totalContributions": 88,
    "github": "https://github.com/marcin-dziadus",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "dragoljub-duric",
    "id": 17817844,
    "totalContributions": 77,
    "github": "https://github.com/dragoljub-duric",
    "commits": [
      {
        "id": "96f3de576f623c9c37170db6ad75598c9fdd7916",
        "date": "2023-10-09T14:55:01Z",
        "message": "Merge branch 'EXC-1481-add-system-api-to-burn-cycles' into 'master'\n\nfeat: Implement burn_cycles system api\n\nThis MR adds a new system API that canisters can use to burn cycles on demand. Such an API can be used by a burner canister that will represent usage on “private” subnets that are prepaid for as well as by the Bitcoin canister if we want to burn the cycles sent to it. Link to [spec](https://github.com/dfinity/interface-spec/pull/230).\n\nCloses EXC-1481 \n\nCloses EXC-1481\n\nSee merge request dfinity-lab/public/ic!14987"
      },
      {
        "id": "df56487d44089201842fec98338dee5ffe1d5535",
        "date": "2023-10-09T14:55:00Z",
        "message": "feat: Implement burn_cycles system api"
      },
      {
        "id": "96184d42331028a46fe3265583792f8c5f807cf8",
        "date": "2023-09-27T10:31:49Z",
        "message": "Merge branch 'EXC-1475-add-support-for-bitcoin-canister-query-endpoints-to-the-management-canister' into 'master'\n\nfeat: Add support for Bitcoin canister query endpoints to the query handler\n\nThis MR is the second part of the [feature](https://dfinity.atlassian.net/browse/EXC-1434), and it should allow support to the Bitcoin canister's query methods through query_handler.\nCloses EXC-1475 \n\nCloses EXC-1475\n\nSee merge request dfinity-lab/public/ic!14655"
      },
      {
        "id": "b482d5e8e978a789ec86e38563bcc2a5c57b6a02",
        "date": "2023-09-27T10:31:49Z",
        "message": "feat: Add support for Bitcoin canister query endpoints to the query handler"
      },
      {
        "id": "8e679e170fc12a79f7740d8a73f25b87edf8fdbc",
        "date": "2023-09-13T11:58:45Z",
        "message": "feat: Allow replica to receive CanisterInstallModeV2 to use skip_upgrade functionality"
      },
      {
        "id": "4bace8a503516f74069593f98169853852b32c59",
        "date": "2023-09-01T15:33:09Z",
        "message": "Merge branch 'EXC-1472-add-skip-pre-upgrade-functionality-to-the-replica' into 'master'\n\nfeat: Add skip_pre_upgrade functionality to the replica\n\nThis MR represents the second part of the [feature](https://dfinity.atlassian.net/browse/EXC-1334).\nIn this part, we add `skip_pre_upgrade` functionality.\nIn the [follow-up](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14479), there will be added InstallCodeArgsV2 decoding which will allow the canister to receive CanisterInstallModeV2 which is necessary for this feature to work.\nCloses EXC-1472 \n\nCloses EXC-1472\n\nSee merge request dfinity-lab/public/ic!14450"
      },
      {
        "id": "0bab5fb4dd37fe6c32935a67cea21bca73e65840",
        "date": "2023-09-01T15:33:09Z",
        "message": "feat: Add skip_pre_upgrade functionality to the replica"
      },
      {
        "id": "c237e6df3847352a367075dde6909e4e90df914f",
        "date": "2023-08-28T14:54:19Z",
        "message": "Merge branch 'EXC-1422-crate-canister-install-mode-v-2-with-skip-pre-upgrade-flag' into 'master'\n\nfeat: EXC-1422: Canister install mode v2 with skip pre-upgrade flag\n\nThis MR is the first step that follows https://github.com/dfinity/interface-spec/pull/135.\nCloses EXC-1422. \n\nCloses EXC-1422\n\nSee merge request dfinity-lab/public/ic!13842"
      },
      {
        "id": "6c22f408d3795e56621cbc7cfcbaf6c86390d07e",
        "date": "2023-08-28T14:54:16Z",
        "message": "feat: EXC-1422: Canister install mode v2 with skip pre-upgrade flag"
      },
      {
        "id": "f42a176ebafef981835c93c58dc9915930b0f1c5",
        "date": "2023-08-21T14:52:40Z",
        "message": "Merge branch 'EXC-1460-fix-state-error-invalid-subnet-payload-error-code' into 'master'\n\nfix: StateError::InvalidSubnetPayload error code\n\nProblem: error code for StateError::InvalidSubnetPayload is CanisterOutOfCycles.\nSolution: the error code should be InvalidManagementPayload\n\nCloses EXC-1460 \n\nCloses EXC-1460\n\nSee merge request dfinity-lab/public/ic!14281"
      },
      {
        "id": "8794a7aa41a4e43245fa235deca0756cf6d96f9f",
        "date": "2023-08-21T14:52:39Z",
        "message": "fix: StateError::InvalidSubnetPayload error code"
      },
      {
        "id": "9e0981feed329663f98d0de11d549bdc36690008",
        "date": "2023-08-03T15:38:59Z",
        "message": "Merge branch 'EXC-1347-track-consumed-cycles-since-replica-started-and-consumed-cycles-from-replica-start-on-the-same-place' into 'master'\n\nrefactor: Track consumed_cycles_since_replica_started and consumed_cycles_from_replica_start on the same place\n\nMotivation:\nRefactor code for counting `consumed_cycles_since_replica_started` \nCloses EXC-1347 \n\nCloses EXC-1347\n\nSee merge request dfinity-lab/public/ic!13844"
      },
      {
        "id": "b77df2a4825fbba39766ecbe0dc95b144008103b",
        "date": "2023-08-03T15:38:59Z",
        "message": "refactor: Track consumed_cycles_since_replica_started and consumed_cycles_from_replica_start on the same place"
      }
    ],
    "email": "dragoljub.duric@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 13,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 6,
    "fixes": 1,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "df56487d44089201842fec98338dee5ffe1d5535",
        "date": "2023-10-09T14:55:00Z",
        "message": "feat: Implement burn_cycles system api"
      },
      {
        "id": "b482d5e8e978a789ec86e38563bcc2a5c57b6a02",
        "date": "2023-09-27T10:31:49Z",
        "message": "feat: Add support for Bitcoin canister query endpoints to the query handler"
      },
      {
        "id": "8e679e170fc12a79f7740d8a73f25b87edf8fdbc",
        "date": "2023-09-13T11:58:45Z",
        "message": "feat: Allow replica to receive CanisterInstallModeV2 to use skip_upgrade functionality"
      },
      {
        "id": "0bab5fb4dd37fe6c32935a67cea21bca73e65840",
        "date": "2023-09-01T15:33:09Z",
        "message": "feat: Add skip_pre_upgrade functionality to the replica"
      },
      {
        "id": "6c22f408d3795e56621cbc7cfcbaf6c86390d07e",
        "date": "2023-08-28T14:54:16Z",
        "message": "feat: EXC-1422: Canister install mode v2 with skip pre-upgrade flag"
      },
      {
        "id": "8794a7aa41a4e43245fa235deca0756cf6d96f9f",
        "date": "2023-08-21T14:52:39Z",
        "message": "fix: StateError::InvalidSubnetPayload error code"
      },
      {
        "id": "b77df2a4825fbba39766ecbe0dc95b144008103b",
        "date": "2023-08-03T15:38:59Z",
        "message": "refactor: Track consumed_cycles_since_replica_started and consumed_cycles_from_replica_start on the same place"
      }
    ],
    "line_additions": 1366,
    "line_deletions": 89,
    "lines_effected_total": 1455,
    "rel_comm_add": 5,
    "rel_comm_del": 2,
    "rel_comm_total": 5
  },
  {
    "login": "rrkapitz",
    "id": 29578972,
    "totalContributions": 76,
    "github": "https://github.com/rrkapitz",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "raymondk",
    "id": 922020,
    "totalContributions": 71,
    "github": "https://github.com/raymondk",
    "commits": [
      {
        "id": "9c855198d769d6e7b0273ae83913c17d3dc91e88",
        "date": "2023-11-13T23:53:06Z",
        "message": "Merge branch 'rjb/fix-redirect-to-non-raw-system-test' into 'master'\n\nfix(boundary-nodes): Fix string formatting in system test\n\nIn the system test, we instruct the client to directly resolve URLs to the boundary node of the system test. However, the string formatting was not working and therefore all the requests in the `redirect_to_non_raw_test` were going to a real, mainnet boundary node. That worked fine until we rolled out the latest change. With this MR, we fix the string formatting and the test. \n\nSee merge request dfinity-lab/public/ic!16056"
      },
      {
        "id": "27bac92cb561bf893ec9d51f574f39fc868a7c0f",
        "date": "2023-09-20T18:16:10Z",
        "message": "Merge branch 'jeffanderson/PFOPS-4303' into 'master'\n\nUpdated whitelist in accordance to PFOPS-4304\n\nCloses PFOPS-4303 \n\nCloses PFOPS-4303\n\nSee merge request dfinity-lab/public/ic!14909"
      },
      {
        "id": "dd91e2696ebe5e1301cbf8928cb16df584e2c561",
        "date": "2023-08-18T09:02:20Z",
        "message": "fix(BOUN-849): gzip static assets served from the http gateway"
      },
      {
        "id": "4ea90da2f57d438e86f1fecd4fa01552a2e00f4d",
        "date": "2023-08-16T19:17:09Z",
        "message": "Merge branch 'kepler/tt-298-release-sw' into 'master'\n\nchore(boundary-guestos): release service worker v1.8.5\n\nThis service worker includes the fix for the `wasm` loading that moves it to be inline, as well as, adds the latest version of response verification that removes the stricter base64 decoding. \n\nSee merge request dfinity-lab/public/ic!14206"
      },
      {
        "id": "a7ab6458179fdc5f9fdaf9aecdb92e6b86d218d8",
        "date": "2023-08-15T11:00:15Z",
        "message": "Merge branch 'rjb/underscore-raw-for-custom-domains' into 'master'\n\nfix(BOUN-846): add /_/raw to custom domains\n\nThis enables loading of custom service workers, icons for webapps etc. \n\nSee merge request dfinity-lab/public/ic!14148"
      }
    ],
    "email": "raymond.khalife@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 5,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 4,
    "fixes": 1,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "dd91e2696ebe5e1301cbf8928cb16df584e2c561",
        "date": "2023-08-18T09:02:20Z",
        "message": "fix(BOUN-849): gzip static assets served from the http gateway"
      }
    ],
    "line_additions": 8,
    "line_deletions": 0,
    "lines_effected_total": 8,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "derlerd-dfinity",
    "id": 55094821,
    "totalContributions": 70,
    "github": "https://github.com/derlerd-dfinity",
    "commits": [
      {
        "id": "b6cb5772977d6cd186000ea67dd990e3791e0c57",
        "date": "2023-11-16T09:34:31Z",
        "message": "Merge branch 'dderler/improve-doc' into 'master'\n\ndoc: Better documentation and naming\n\n \n\nSee merge request dfinity-lab/public/ic!16100"
      },
      {
        "id": "d059529182debed07ebd46f574403d79a650305b",
        "date": "2023-11-16T09:34:31Z",
        "message": "doc: Better documentation and naming"
      },
      {
        "id": "1ea660728acf4604d1ad7a2527b43702b1e1ed66",
        "date": "2023-11-14T21:35:55Z",
        "message": "Merge branch 'dderler/state-invariants-note' into 'master'\n\ndoc: Add guidelines for replicated state invariants\n\nIn !16020 a new option for handling errors upon deserializing the state was introduced. This MR adds the guideline on when to use this new option and when other variants are preferrable. \n\nSee merge request dfinity-lab/public/ic!16063"
      },
      {
        "id": "97f38f192b48422790c34b7c280b2393b037839e",
        "date": "2023-11-14T21:35:55Z",
        "message": "doc: Add guidelines for replicated state invariants"
      },
      {
        "id": "f25894bda973cce8442e5c5afcee3f6a84abcc84",
        "date": "2023-11-14T19:24:32Z",
        "message": "Merge branch 'dderler/critical-error-metrics' into 'master'\n\nchore: Allow raising critical error metrics during checkpoint loading\n\nSo far the only option for checking invariants of datastructures during checkpoint loading was to check them upon deserialization and return an error in case of a violation. This does in further consequence crash the replica. This is fine for invariants where the violation would affect correctness of the code and there is no meaningful way to move on. \n\nWith the introduction of blockmaker metrics it became apparent that there are some properties of datastructures which we aim to maintain all the time, but their violation does not affect correctness. For such errors -- we call them soft invariants in this MR -- it is more desirable to bump an error counter and move on with deserialization.\n\nThis MR introduces a mechanism to allow bumping critical error counters upon deserialization and applies this to the blockmaker metrics starts. \n\nSee merge request dfinity-lab/public/ic!16020"
      },
      {
        "id": "ffbe73f5adaf118021bc98f6085fa55d4d7e7989",
        "date": "2023-11-14T19:24:31Z",
        "message": "chore: Allow raising critical error metrics during checkpoint loading"
      },
      {
        "id": "bb093eeca3d25b10f5eaa4e5843811c3201c941c",
        "date": "2023-10-09T07:10:47Z",
        "message": "Merge branch 'dderler/subnet-splitting/follow-1267' into 'master'\n\n[FOLLOW-1267] Assert data can fit into single chunk when appending single chunk file to split manifest\n\nWhen splitting manifests for subnet splitting we have several instances where hashes corresponding to single chunk files need to be computed and appended to the manifest. This MR adds an assert that fires if the number of bytes in such a file exceeds `DEFAULT_CHUNK_SIZE` to ensure that the resulting manifest is valid. This assert will also make several tests fail in case the serialized representations of the respective data structures ever become too big due to future code changes. Thus, such an issue would already be noticed on CI as opposed to directly when a split is ongoing.\n\nCloses FOLLOW-1267 \n\nCloses FOLLOW-1267\n\nSee merge request dfinity-lab/public/ic!15266"
      },
      {
        "id": "740c474cca5965864b0262398e1ed3b479e9e58c",
        "date": "2023-10-09T07:10:46Z",
        "message": "[FOLLOW-1267] Assert data can fit into single chunk when appending single chunk file to split manifest"
      },
      {
        "id": "429d176cb9d4758b84b0be518e19baf86d79f72e",
        "date": "2023-08-17T08:03:51Z",
        "message": "Merge branch 'dderler/state-tool-remove-obsolete-canister-hash' into 'master'\n\nchore: Remove obsolete canister_hash function in state_tool\n\nThe `canister_hash` function of the state tool was used to compute a hash of a canister that that is independent of its index in the file table of the manifest. Using the canister hash it was possible to tell whether two canisters in two different states are the same, based on whether or not their canister hashes matched. As of manifest version `V3` file hashes in manifests are independent of their index in the file table and so this functionality is no longer required -- hashes of files related to the same canister in two different states will match out of the box. \n\nSee merge request dfinity-lab/public/ic!14157"
      },
      {
        "id": "62d1cf46e6d17656962d7181a9845a9dc0b3a4aa",
        "date": "2023-08-17T08:03:51Z",
        "message": "chore: Remove obsolete canister_hash function in state_tool"
      },
      {
        "id": "b60b82cbbdc49fa1c30d0f1022edb8a47b61087f",
        "date": "2023-08-02T09:07:33Z",
        "message": "Merge branch 'dderler/fix-comment' into 'master'\n\nFix doc comment\n\n \n\nSee merge request dfinity-lab/public/ic!13912"
      },
      {
        "id": "2d11715a37f8e85d213092f557e79b18ebe52633",
        "date": "2023-08-02T09:07:32Z",
        "message": "Fix doc comment"
      }
    ],
    "email": "david@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 12,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 6,
    "fixes": 1,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "d059529182debed07ebd46f574403d79a650305b",
        "date": "2023-11-16T09:34:31Z",
        "message": "doc: Better documentation and naming"
      },
      {
        "id": "97f38f192b48422790c34b7c280b2393b037839e",
        "date": "2023-11-14T21:35:55Z",
        "message": "doc: Add guidelines for replicated state invariants"
      },
      {
        "id": "ffbe73f5adaf118021bc98f6085fa55d4d7e7989",
        "date": "2023-11-14T19:24:31Z",
        "message": "chore: Allow raising critical error metrics during checkpoint loading"
      },
      {
        "id": "740c474cca5965864b0262398e1ed3b479e9e58c",
        "date": "2023-10-09T07:10:46Z",
        "message": "[FOLLOW-1267] Assert data can fit into single chunk when appending single chunk file to split manifest"
      },
      {
        "id": "62d1cf46e6d17656962d7181a9845a9dc0b3a4aa",
        "date": "2023-08-17T08:03:51Z",
        "message": "chore: Remove obsolete canister_hash function in state_tool"
      },
      {
        "id": "2d11715a37f8e85d213092f557e79b18ebe52633",
        "date": "2023-08-02T09:07:32Z",
        "message": "Fix doc comment"
      }
    ],
    "line_additions": 408,
    "line_deletions": 297,
    "lines_effected_total": 705,
    "rel_comm_add": 3,
    "rel_comm_del": 1,
    "rel_comm_total": 3
  },
  {
    "login": "tmu0",
    "id": 108675202,
    "totalContributions": 70,
    "github": "https://github.com/tmu0",
    "commits": [
      {
        "id": "99ea60c1666bf5fa5693c6ecf8927ed9ff0b0b0d",
        "date": "2023-11-15T16:37:52Z",
        "message": "Merge branch 'fix-issue-linking' into 'master'\n\nPSEC-1628: Correctly link deleted issues\n\n`finding_a` in `link_findings()` can be an active or a deleted finding, so we have to check if it is in `deleted_findings_cached`\n\nWe also have to store the jira issue in `deleted_findings_cached` because we need it when linking to another issue. \n\nSee merge request dfinity-lab/public/ic!16115"
      },
      {
        "id": "a9aa91fb80b1dac8b80aedf22b9e11a48bb7fdb6",
        "date": "2023-11-15T16:37:52Z",
        "message": "PSEC-1628: Correctly link deleted issues"
      },
      {
        "id": "e0ced43259a7fcd28e318f01310f5d65b5191680",
        "date": "2023-10-24T12:47:41Z",
        "message": "Merge branch 'tmu/smart-links' into 'master'\n\nPSEC-1567: Add support for smart-links in vuln risk column\n\n \n\nSee merge request dfinity-lab/public/ic!15602"
      },
      {
        "id": "811cbe67f26b4b359e33d28d116f06ac9d07d647",
        "date": "2023-10-24T09:43:12Z",
        "message": "PSEC-1567: Add support for smart-links in vuln risk column"
      },
      {
        "id": "43001a36fc58f668d0fea81c78fb2e92ec4e0f9e",
        "date": "2023-10-02T07:50:02Z",
        "message": "bump webpki"
      },
      {
        "id": "f373247c8a320f7dae7de011d374f395d5e352d2",
        "date": "2023-09-13T11:58:53Z",
        "message": "Merge branch 'tmu/link-in-risk-column' into 'master'\n\nPSEC-1492: Add support for links in vuln risk column\n\nIt should be possible to use wiki links of the form `[link text | https://example.com]` in the vuln risk column in Jira \n\nSee merge request dfinity-lab/public/ic!14745"
      },
      {
        "id": "ae29b125c7d6bf005d87a410ce55b8343c5fa2f3",
        "date": "2023-09-13T11:58:53Z",
        "message": "PSEC-1492: Add support for links in vuln risk column"
      },
      {
        "id": "096ef22d2483036e504d3fdddebde0052b341d23",
        "date": "2023-08-31T10:17:19Z",
        "message": "bump webpki"
      },
      {
        "id": "4e26d25f9cb8a3cb93498dfd56e344bb40ae0d81",
        "date": "2023-08-23T07:46:13Z",
        "message": "bump rustls-webpki"
      },
      {
        "id": "72b42535224bc01c89266be2e9ec067cadf10515",
        "date": "2023-08-04T06:04:27Z",
        "message": "Merge branch 'tmu/link-closed-tickets' into 'master'\n\nPSEC-1414: Dependency management : Include closed tickets when linking new findings\n\n- added a new DS method `get_deleted_findings` that returns non-open findings sorted by `created` in descending order\n- use the new method in `DependencyScanner.do_periodic_scan` to retrieve those findings when a new finding is created to\n  - update risk & vuln notes for the new finding\n  - link the new finding to the non-open finding that was created last \n\nSee merge request dfinity-lab/public/ic!13920"
      },
      {
        "id": "792a36609a12b220d3e3babd6777c108dfd73092",
        "date": "2023-08-02T12:44:51Z",
        "message": "PSEC-1414: Dependency management : Include closed tickets when linking new findings"
      }
    ],
    "email": "thomas.mueller@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 11,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 4,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "a9aa91fb80b1dac8b80aedf22b9e11a48bb7fdb6",
        "date": "2023-11-15T16:37:52Z",
        "message": "PSEC-1628: Correctly link deleted issues"
      },
      {
        "id": "811cbe67f26b4b359e33d28d116f06ac9d07d647",
        "date": "2023-10-24T09:43:12Z",
        "message": "PSEC-1567: Add support for smart-links in vuln risk column"
      },
      {
        "id": "43001a36fc58f668d0fea81c78fb2e92ec4e0f9e",
        "date": "2023-10-02T07:50:02Z",
        "message": "bump webpki"
      },
      {
        "id": "ae29b125c7d6bf005d87a410ce55b8343c5fa2f3",
        "date": "2023-09-13T11:58:53Z",
        "message": "PSEC-1492: Add support for links in vuln risk column"
      },
      {
        "id": "096ef22d2483036e504d3fdddebde0052b341d23",
        "date": "2023-08-31T10:17:19Z",
        "message": "bump webpki"
      },
      {
        "id": "4e26d25f9cb8a3cb93498dfd56e344bb40ae0d81",
        "date": "2023-08-23T07:46:13Z",
        "message": "bump rustls-webpki"
      },
      {
        "id": "792a36609a12b220d3e3babd6777c108dfd73092",
        "date": "2023-08-02T12:44:51Z",
        "message": "PSEC-1414: Dependency management : Include closed tickets when linking new findings"
      }
    ],
    "line_additions": 205,
    "line_deletions": 101,
    "lines_effected_total": 306,
    "rel_comm_add": 4,
    "rel_comm_del": 3,
    "rel_comm_total": 5
  },
  {
    "login": "ShuoWangNSL",
    "id": 17530321,
    "totalContributions": 66,
    "github": "https://github.com/ShuoWangNSL",
    "commits": [
      {
        "id": "be648d4c3ff3e42e4f83a8d9412d206030d4efb2",
        "date": "2023-11-17T05:25:21Z",
        "message": "Merge branch 'ic-agent-crate-bump-version' into 'master'\n\n(BOUN-959) Bump up the ic-agent version\n\nI'd like to start using the [implementation](https://docs.rs/ic-agent/0.30.0/ic_agent/agent/http_transport/route_provider/struct.RoundRobinRouteProvider.html) published in the last `ic-agent = \"0.30.2\"` release.\n\nThe new `ic-agent` enables signature verification on query responses by default. \n\nSee merge request dfinity-lab/public/ic!16015"
      },
      {
        "id": "156f4729724b5496cdac01dc33a412409c94ef0e",
        "date": "2023-10-25T18:01:13Z",
        "message": "Merge branch 'shuo/hash_of_nested_map' into 'master'\n\nfeat: hash_of_map supports nested Map\n\nThis MR extend the `hash_of_map` function to support compute the hash of nested Map.\n\n1. extend `Enum RawHttpRequestVal` with new variant Map\n2. implement the hash_val method for Map\n3. hashing only takes references. This avoids unnecessary clone of values at each level of the nested Map\n4. use this new way to compute the response hash\n5. add unit tests to guard hash_of_map from potential future accidental changes\n6. update spec compliance test for the new functionality and response hash \n\nSee merge request dfinity-lab/public/ic!15585"
      },
      {
        "id": "9d938da2e95c4fd9278461a79623f779deb3a21d",
        "date": "2023-10-25T18:01:12Z",
        "message": "feat: hash_of_map supports nested Map"
      },
      {
        "id": "7afd2de2a3dbf8b6bbadc64611ea163ff2ef950a",
        "date": "2023-10-18T08:26:02Z",
        "message": "Merge branch 'shuo-wang-rotate-key' into 'master'\n\nchore: Rotate SSH key for testnet\n\n \n\nSee merge request dfinity-lab/public/ic!15280"
      },
      {
        "id": "d464edc1b32898230af8c12a23fde54f61467085",
        "date": "2023-10-18T08:26:00Z",
        "message": "chore: Rotate SSH key for testnet"
      },
      {
        "id": "e087613d180a90968e32d053c6c0e07ce734cf36",
        "date": "2023-10-05T16:21:48Z",
        "message": "Merge branch 'shuo/query_reply_hash_of_map' into 'master'\n\nfix: compute hash_of_map for HttpQueryResponseReply\n\nThe reply `field` in query response is a map with one field `arg` . Its hash should be computed by `hash_of_map()`. \n\nSee merge request dfinity-lab/public/ic!15200"
      },
      {
        "id": "f348f1b951a6d3601afa9734571f367c76fce888",
        "date": "2023-10-05T16:21:48Z",
        "message": "fix: compute hash_of_map for HttpQueryResponseReply"
      },
      {
        "id": "1b4ee6e3916e140694c9b3fdae0bb58054af24ad",
        "date": "2023-08-22T10:50:04Z",
        "message": "Merge branch 'shuo/expose_node_keys' into 'master'\n\nfeat: [NET-1509] Expose node public keys in http read_state endpoint\n\n \n\nSee merge request dfinity-lab/public/ic!14035"
      },
      {
        "id": "0f18e99f718b4b23085db9c3f669671969f6885a",
        "date": "2023-08-22T10:50:04Z",
        "message": "feat: [NET-1509] Expose node public keys in http read_state endpoint"
      },
      {
        "id": "6a1c33511cdf3bf58d27098e1a35c006ea355083",
        "date": "2023-08-22T10:17:00Z",
        "message": "Merge branch 'shuo/bump_certification_version_for_node_keys' into 'master'\n\nfeat: Bump to CertificationVersion V12 for node public keys\n\n \n\nSee merge request dfinity-lab/public/ic!13980"
      },
      {
        "id": "8e3f74d9dad3899aa03e3bf8f5626499903d8489",
        "date": "2023-08-22T10:16:59Z",
        "message": "feat: Bump to CertificationVersion V12 for node public keys"
      },
      {
        "id": "b715e591a8c6eac8235e287cd2da16f3b1f96bbb",
        "date": "2023-08-22T09:02:04Z",
        "message": "Merge branch 'shuo/extend_traverse_subnet_test' into 'master'\n\ntest: extend traverse_subnet_test for V12\n\n \n\nSee merge request dfinity-lab/public/ic!14299"
      },
      {
        "id": "7d10723c4ea62f3ade0c594d4d0efdf7d3c70c80",
        "date": "2023-08-22T09:02:03Z",
        "message": "test: extend traverse_subnet_test for V12"
      },
      {
        "id": "944b98c992e2ccc41c353560876c4557556771fb",
        "date": "2023-08-09T09:01:03Z",
        "message": "fix(state_machine_test): initialize node keys in the registry"
      },
      {
        "id": "cfdb0ddb2a8bb472d3ed1d14c4b07459e1596fa7",
        "date": "2023-08-04T15:14:00Z",
        "message": "Merge branch 'shuo/certify_node_public_keys' into 'master'\n\nfeat: [MR-454] certify node public keys\n\n1. Fetch node keys from registry and populate them to the ReplicatedState\n2. Put node ids and node keys in the state tree at designated node key path \n\nSee merge request dfinity-lab/public/ic!13266"
      },
      {
        "id": "ecccee6eea9e0d93943267eacc8aef33d8fb8deb",
        "date": "2023-08-04T15:14:00Z",
        "message": "feat: [MR-454] certify node public keys"
      },
      {
        "id": "4cf3aa45273a7636d0920575fe40044ad8d36b24",
        "date": "2023-08-03T15:57:48Z",
        "message": "Merge branch 'shuo/bazel_system_rejoin_test_hotfix' into 'master'\n\ntest: add rejoin system test to hotfix pipeline\n\n \n\nSee merge request dfinity-lab/public/ic!13932"
      },
      {
        "id": "33e4533ec313f89b83281faecbdb5ed112c63e00",
        "date": "2023-08-03T15:57:48Z",
        "message": "test: add rejoin system test to hotfix pipeline"
      },
      {
        "id": "d2b3c3ee60b87b8d456f91ffb234f09b799770de",
        "date": "2023-08-01T08:50:13Z",
        "message": "Merge branch 'shuo/rejoin_system_test' into 'master'\n\n[MR-433] Rejoin system test\n\n \n\nSee merge request dfinity-lab/public/ic!12015"
      },
      {
        "id": "12a483178e8305fc7ea678c010e89167beac70d7",
        "date": "2023-08-01T08:50:13Z",
        "message": "[MR-433] Rejoin system test"
      }
    ],
    "email": "shuo.wang@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 20,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 10,
    "fixes": 3,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "9d938da2e95c4fd9278461a79623f779deb3a21d",
        "date": "2023-10-25T18:01:12Z",
        "message": "feat: hash_of_map supports nested Map"
      },
      {
        "id": "d464edc1b32898230af8c12a23fde54f61467085",
        "date": "2023-10-18T08:26:00Z",
        "message": "chore: Rotate SSH key for testnet"
      },
      {
        "id": "f348f1b951a6d3601afa9734571f367c76fce888",
        "date": "2023-10-05T16:21:48Z",
        "message": "fix: compute hash_of_map for HttpQueryResponseReply"
      },
      {
        "id": "0f18e99f718b4b23085db9c3f669671969f6885a",
        "date": "2023-08-22T10:50:04Z",
        "message": "feat: [NET-1509] Expose node public keys in http read_state endpoint"
      },
      {
        "id": "8e3f74d9dad3899aa03e3bf8f5626499903d8489",
        "date": "2023-08-22T10:16:59Z",
        "message": "feat: Bump to CertificationVersion V12 for node public keys"
      },
      {
        "id": "7d10723c4ea62f3ade0c594d4d0efdf7d3c70c80",
        "date": "2023-08-22T09:02:03Z",
        "message": "test: extend traverse_subnet_test for V12"
      },
      {
        "id": "944b98c992e2ccc41c353560876c4557556771fb",
        "date": "2023-08-09T09:01:03Z",
        "message": "fix(state_machine_test): initialize node keys in the registry"
      },
      {
        "id": "ecccee6eea9e0d93943267eacc8aef33d8fb8deb",
        "date": "2023-08-04T15:14:00Z",
        "message": "feat: [MR-454] certify node public keys"
      },
      {
        "id": "33e4533ec313f89b83281faecbdb5ed112c63e00",
        "date": "2023-08-03T15:57:48Z",
        "message": "test: add rejoin system test to hotfix pipeline"
      },
      {
        "id": "12a483178e8305fc7ea678c010e89167beac70d7",
        "date": "2023-08-01T08:50:13Z",
        "message": "[MR-433] Rejoin system test"
      }
    ],
    "line_additions": 738,
    "line_deletions": 87,
    "lines_effected_total": 825,
    "rel_comm_add": 5,
    "rel_comm_del": 2,
    "rel_comm_total": 5
  },
  {
    "login": "khushboo-dfn",
    "id": 50337148,
    "totalContributions": 64,
    "github": "https://github.com/khushboo-dfn",
    "commits": [
      {
        "id": "c0773c6bb4d58733648258b1ec42304285318cbe",
        "date": "2023-11-21T23:33:58Z",
        "message": "Merge branch 'eero/sev-prep' into 'master'\n\nfeat(NODE-1182,NODE-1183): SEV feature tooling\n\n**In `ic-admin`:**\n\nLaunch measurement can now be passed to `propose-to-update-elected-replica-versions` with:\n```\nbazel run //rs/registry/admin:ic-admin -- --nns-url \"<NNS_URL>\" propose-to-update-elected-replica-versions --replica-version-to-elect <VERSION> --release-package-sha256-hex <HASH> --release-package-urls <URL> --guest-launch-measurement <MEASUREMENT> --summary \"Elect version with measurement\"\n```\nAnd the SEV subnet feature can be set during subnet creation with:\n```\nbazel run //rs/registry/admin:ic-admin -- --nns-url \"<NNS_URL>\" propose-to-create-subnet --subnet-type <TYPE> --features sev_enabled <SUBNET> --summary \"Create SEV subnet\"\n```\n\n**In `ic-prep`:**\n\nLaunch measurement could already be set with:\n```\n--guest-launch-measurement-sha256-hex <MEASUREMENT>\n```\nAnd now the SEV subnet feature can be set with:\n```\n--sev-subnet-indices 1,2\n```\n\nBoth are already available through the Rust API.\n\n---\n\nI've also replaced the feature `sev_status` with `sev_enabled` to simplify now that we don't plan to use multiple stages for rollout. \n\nSee merge request dfinity-lab/public/ic!16162"
      },
      {
        "id": "5cea7fc6cdf15e1b828165d384daebf603f061a2",
        "date": "2023-11-10T00:52:07Z",
        "message": "Merge branch 'kb/p2p-sev-handshake' into 'master'\n\nfeat(NODE-701): Load certs if missing for snp report verification\n\nFor prod, the certs will be injected via config from the host. But if the certs are not injected or for testnet, the certs are fetched from AMD-SP via SNP_GET_EXT_REPORT ioctl. \nARK.pem is hardcoded as it is the root of trust. We want to decrease our reliance on AMD server. ARK endpoint is also rate limited. \n\nSee merge request dfinity-lab/public/ic!15885"
      },
      {
        "id": "0f1720c4edadffacb55c01bc304840fb3d8fcb01",
        "date": "2023-11-10T00:52:06Z",
        "message": "feat(NODE-701): Load certs if missing for snp report verification"
      },
      {
        "id": "5019bf4cd91ae6d285b32480bcd796126ff4949b",
        "date": "2023-11-06T22:23:36Z",
        "message": "Merge branch 'kb/cleanup' into 'master'\n\nfeat(NODE-1137): SEV-SNP library cleanup\n\nCleanup sev library. Rename sev to snp to distinguish between sev and icos sev libraries. Remove reference to sevtool. Also remove icos_sev_interface and move the interfaces(pub errors and traits) to newly renamed snp library. \n\nSee merge request dfinity-lab/public/ic!15526"
      },
      {
        "id": "5778b05e025b6bfa6c14eb2c8204d1a7f7c2c0f0",
        "date": "2023-11-06T22:23:36Z",
        "message": "feat(NODE-1137): SEV-SNP library cleanup"
      },
      {
        "id": "8d77465ca71d363f8b413efca5df91e848691933",
        "date": "2023-10-27T19:20:55Z",
        "message": "Merge branch 'kb/att_report' into 'master'\n\nfeat(NODE-1139): Add chip_id to AddNodePayload during node registration\n\nChip_id is added to the AddNodePayload to be sent during node registration. This MR does these:\n1. sevctl is a wrapper around sev library. It has been renamed to snptool to avoid confusion with virtee/sevctl which does not support SEV-SNP.\n2. sev library is bumped to version 1.2.1 which supports the 6.1-snp kernel on ic-os.\n3. Orchestrator calls the ic_icos_sev crate which relies on sev library to derive the chip_id.\n4. Chip_id is now an optional field in the registry. \n\nTested on dev-sev and dev targets. \n\nSee merge request dfinity-lab/public/ic!15449"
      },
      {
        "id": "b99c3bd73398642915611184b7646ccb077cc9f8",
        "date": "2023-10-27T19:20:54Z",
        "message": "feat(NODE-1139): Add chip_id to AddNodePayload during node registration"
      },
      {
        "id": "73e8f9ea89640abb3c5e1974b0ed67f318ead239",
        "date": "2023-10-06T06:20:55Z",
        "message": "fix: two issues with SEV GuestOS"
      },
      {
        "id": "ac36242ee043e5f5801352c9aba33f425f4c2cce",
        "date": "2023-09-29T16:42:09Z",
        "message": "Merge branch 'kb/update_guestos_1' into 'master'\n\nfeat(NODE-1020): Bring up guestos as a SEV-SNP VM\n\nsev-guest.service launches a qemu based SEV-SNP GuestOS. If host is built for SEV target, the qemu script is generated and the sev-guest is launched.\nTested on zh2-asu01 and zh2-asu02.\nTODO: The generation of the qemu script and launch of GuestOS should be done by the hostos agent. This will be done as part of NODE-748. \n\nSee merge request dfinity-lab/public/ic!13699"
      },
      {
        "id": "1b2f0cc8b390b3f528dde782623065fd404d3561",
        "date": "2023-09-29T16:42:09Z",
        "message": "feat(NODE-1020): Bring up guestos as a SEV-SNP VM"
      }
    ],
    "email": "khushboo@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 10,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 5,
    "fixes": 1,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "0f1720c4edadffacb55c01bc304840fb3d8fcb01",
        "date": "2023-11-10T00:52:06Z",
        "message": "feat(NODE-701): Load certs if missing for snp report verification"
      },
      {
        "id": "5778b05e025b6bfa6c14eb2c8204d1a7f7c2c0f0",
        "date": "2023-11-06T22:23:36Z",
        "message": "feat(NODE-1137): SEV-SNP library cleanup"
      },
      {
        "id": "b99c3bd73398642915611184b7646ccb077cc9f8",
        "date": "2023-10-27T19:20:54Z",
        "message": "feat(NODE-1139): Add chip_id to AddNodePayload during node registration"
      },
      {
        "id": "73e8f9ea89640abb3c5e1974b0ed67f318ead239",
        "date": "2023-10-06T06:20:55Z",
        "message": "fix: two issues with SEV GuestOS"
      },
      {
        "id": "1b2f0cc8b390b3f528dde782623065fd404d3561",
        "date": "2023-09-29T16:42:09Z",
        "message": "feat(NODE-1020): Bring up guestos as a SEV-SNP VM"
      }
    ],
    "line_additions": 433,
    "line_deletions": 279,
    "lines_effected_total": 712,
    "rel_comm_add": 3,
    "rel_comm_del": 3,
    "rel_comm_total": 3
  },
  {
    "login": "dralves",
    "id": 521229,
    "totalContributions": 63,
    "github": "https://github.com/dralves",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "gitlab-dfinity",
    "id": 71507949,
    "totalContributions": 62,
    "github": "https://github.com/gitlab-dfinity",
    "commits": [
      {
        "id": "c7de64013ee2b0c6243d434f007edab6d5e0e034",
        "date": "2023-11-22T11:55:28Z",
        "message": "Updating container base images refs [2023-11-22-1000]"
      },
      {
        "id": "b5f68b9ea3b00ed6c797d89e7f41656753b7ee8f",
        "date": "2023-11-21T16:03:27Z",
        "message": "Updating container base images refs [2023-11-21-0934]"
      },
      {
        "id": "05671134ae238b69ad31f02195bec95eb99df449",
        "date": "2023-11-16T17:01:01Z",
        "message": "Updating container base images refs [2023-11-16-0815]"
      },
      {
        "id": "c494017ed7c8546744d39e258d05cac3a29734b0",
        "date": "2023-11-09T15:42:40Z",
        "message": "Updating container base images refs [2023-11-09-0814]"
      },
      {
        "id": "28df3ad4141c334aa806c281cfcc1e90a34e7a38",
        "date": "2023-11-07T15:28:06Z",
        "message": "Updating container base images refs [2023-11-07-0924]"
      },
      {
        "id": "8cd9e80ea3841d327ac75401fee0ba38b1b3a59b",
        "date": "2023-11-02T15:02:25Z",
        "message": "Updating container base images refs [2023-11-02-0837]"
      },
      {
        "id": "6d6eab29ab2285deba2bf513e97631e487257144",
        "date": "2023-11-01T15:14:36Z",
        "message": "Updating container base images refs [2023-11-01-0929]"
      },
      {
        "id": "a4e349d1fe4e835440bee9f204850ae88e6945c4",
        "date": "2023-10-26T21:43:30Z",
        "message": "Updating container base images refs [2023-10-26-0830]"
      },
      {
        "id": "a481169b619963f73c780c023970dde390f0cf1f",
        "date": "2023-10-25T17:17:46Z",
        "message": "Updating container base images refs [2023-10-25-0828]"
      },
      {
        "id": "077c9c68c710147bf58aafb7714c6873bc01f16d",
        "date": "2023-10-19T14:25:32Z",
        "message": "Updating container base images refs [2023-10-19-0817]"
      },
      {
        "id": "657e2121549d546b30af52be60baa85ab4ea3350",
        "date": "2023-10-17T22:00:38Z",
        "message": "Updating container base images refs [2023-10-17-2101]"
      },
      {
        "id": "0b82f80d5fc55bdca5101121b19483a0bceeed8d",
        "date": "2023-10-12T14:33:59Z",
        "message": "Updating container base images refs [2023-10-12-0825]"
      },
      {
        "id": "41de00dead678770d240065142e1d47cba749cc8",
        "date": "2023-10-10T16:02:05Z",
        "message": "Updating container base images refs [2023-10-10-0842]"
      },
      {
        "id": "fe837c40d4d0924e31b5b014b6dbcb14d81545ed",
        "date": "2023-10-07T18:33:55Z",
        "message": "Updating container base images refs [2023-10-07-0823]"
      },
      {
        "id": "939501bcce706eee316e8afc2f0df4979b4390e4",
        "date": "2023-10-05T15:08:28Z",
        "message": "Updating container base images refs [2023-10-05-0828]"
      },
      {
        "id": "3cf216b32593f00ea4ca7d4d3c20c7d527c6b0dc",
        "date": "2023-10-04T14:28:05Z",
        "message": "Updating container base images refs [2023-10-04-1256]"
      },
      {
        "id": "7a4f63063d76103a41834523b114d30518a04b1e",
        "date": "2023-09-29T00:39:54Z",
        "message": "Updating container base images refs [2023-09-28-0816]"
      },
      {
        "id": "cf29b391f26ca5f103aef95e460abe4f15dc56a9",
        "date": "2023-09-21T15:31:30Z",
        "message": "Updating container base images refs [2023-09-21-0823]"
      },
      {
        "id": "55935a8f2751fa948ec9f9bcd23c67559f927f6a",
        "date": "2023-09-15T16:11:59Z",
        "message": "Updating container base images refs [2023-09-15-0825]"
      },
      {
        "id": "40610aa6e346089da058376f1f51946de3350b6d",
        "date": "2023-09-14T16:19:49Z",
        "message": "Updating container base images refs [2023-09-14-0828]"
      },
      {
        "id": "29bd1a9e7b1f270f0c49e0ca2ecca762f216ed06",
        "date": "2023-09-07T16:40:15Z",
        "message": "Updating container base images refs [2023-09-07-0827]"
      },
      {
        "id": "d4ab356cd60d41a838855334104533b7e7f41102",
        "date": "2023-08-31T23:55:02Z",
        "message": "Updating container base images refs [2023-08-31-2222]"
      },
      {
        "id": "ed6844aa16ea98cc183bc3ffb8b55de49cda7b28",
        "date": "2023-08-29T22:03:38Z",
        "message": "Updating container base images refs [2023-08-29-2010]"
      },
      {
        "id": "8b358d36ca56668ce78d34ea7bc5a286f3f9d3b9",
        "date": "2023-08-24T17:55:04Z",
        "message": "Updating container base images refs [2023-08-24-0813]"
      },
      {
        "id": "28277582582c8ba6272906fdfd69bab103b17b6f",
        "date": "2023-08-22T15:55:08Z",
        "message": "Updating container base images refs [2023-08-22-0828]"
      },
      {
        "id": "7a4d495a036adb36a07e87a2ec19d53e625856f8",
        "date": "2023-08-17T14:42:15Z",
        "message": "Updating container base images refs [2023-08-17-0816]"
      },
      {
        "id": "f7afad1dc497f00cab88059c0a7c461b2da99dcc",
        "date": "2023-08-16T14:55:46Z",
        "message": "Updating container base images refs [2023-08-16-0828]"
      },
      {
        "id": "86b4bc18849266b2f8f4ef6c2e3bbd9f1215152d",
        "date": "2023-08-12T18:11:04Z",
        "message": "Updating container base images refs [2023-08-12-0826]"
      },
      {
        "id": "9f46b4f5f16be6fdbb50e33278a0bbbba2c99e1a",
        "date": "2023-08-04T15:20:39Z",
        "message": "Updating container base images refs [2023-08-04-0827]"
      },
      {
        "id": "202101a0d0dcbcda20c58028607825919aa1a8a1",
        "date": "2023-08-03T15:51:34Z",
        "message": "Updating container base images refs [2023-08-03-0815]"
      }
    ],
    "email": "infra+gitlab@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 30,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "c7de64013ee2b0c6243d434f007edab6d5e0e034",
        "date": "2023-11-22T11:55:28Z",
        "message": "Updating container base images refs [2023-11-22-1000]"
      },
      {
        "id": "b5f68b9ea3b00ed6c797d89e7f41656753b7ee8f",
        "date": "2023-11-21T16:03:27Z",
        "message": "Updating container base images refs [2023-11-21-0934]"
      },
      {
        "id": "05671134ae238b69ad31f02195bec95eb99df449",
        "date": "2023-11-16T17:01:01Z",
        "message": "Updating container base images refs [2023-11-16-0815]"
      },
      {
        "id": "c494017ed7c8546744d39e258d05cac3a29734b0",
        "date": "2023-11-09T15:42:40Z",
        "message": "Updating container base images refs [2023-11-09-0814]"
      },
      {
        "id": "28df3ad4141c334aa806c281cfcc1e90a34e7a38",
        "date": "2023-11-07T15:28:06Z",
        "message": "Updating container base images refs [2023-11-07-0924]"
      },
      {
        "id": "8cd9e80ea3841d327ac75401fee0ba38b1b3a59b",
        "date": "2023-11-02T15:02:25Z",
        "message": "Updating container base images refs [2023-11-02-0837]"
      },
      {
        "id": "6d6eab29ab2285deba2bf513e97631e487257144",
        "date": "2023-11-01T15:14:36Z",
        "message": "Updating container base images refs [2023-11-01-0929]"
      },
      {
        "id": "a4e349d1fe4e835440bee9f204850ae88e6945c4",
        "date": "2023-10-26T21:43:30Z",
        "message": "Updating container base images refs [2023-10-26-0830]"
      },
      {
        "id": "a481169b619963f73c780c023970dde390f0cf1f",
        "date": "2023-10-25T17:17:46Z",
        "message": "Updating container base images refs [2023-10-25-0828]"
      },
      {
        "id": "077c9c68c710147bf58aafb7714c6873bc01f16d",
        "date": "2023-10-19T14:25:32Z",
        "message": "Updating container base images refs [2023-10-19-0817]"
      },
      {
        "id": "657e2121549d546b30af52be60baa85ab4ea3350",
        "date": "2023-10-17T22:00:38Z",
        "message": "Updating container base images refs [2023-10-17-2101]"
      },
      {
        "id": "0b82f80d5fc55bdca5101121b19483a0bceeed8d",
        "date": "2023-10-12T14:33:59Z",
        "message": "Updating container base images refs [2023-10-12-0825]"
      },
      {
        "id": "41de00dead678770d240065142e1d47cba749cc8",
        "date": "2023-10-10T16:02:05Z",
        "message": "Updating container base images refs [2023-10-10-0842]"
      },
      {
        "id": "fe837c40d4d0924e31b5b014b6dbcb14d81545ed",
        "date": "2023-10-07T18:33:55Z",
        "message": "Updating container base images refs [2023-10-07-0823]"
      },
      {
        "id": "939501bcce706eee316e8afc2f0df4979b4390e4",
        "date": "2023-10-05T15:08:28Z",
        "message": "Updating container base images refs [2023-10-05-0828]"
      },
      {
        "id": "3cf216b32593f00ea4ca7d4d3c20c7d527c6b0dc",
        "date": "2023-10-04T14:28:05Z",
        "message": "Updating container base images refs [2023-10-04-1256]"
      },
      {
        "id": "7a4f63063d76103a41834523b114d30518a04b1e",
        "date": "2023-09-29T00:39:54Z",
        "message": "Updating container base images refs [2023-09-28-0816]"
      },
      {
        "id": "cf29b391f26ca5f103aef95e460abe4f15dc56a9",
        "date": "2023-09-21T15:31:30Z",
        "message": "Updating container base images refs [2023-09-21-0823]"
      },
      {
        "id": "55935a8f2751fa948ec9f9bcd23c67559f927f6a",
        "date": "2023-09-15T16:11:59Z",
        "message": "Updating container base images refs [2023-09-15-0825]"
      },
      {
        "id": "40610aa6e346089da058376f1f51946de3350b6d",
        "date": "2023-09-14T16:19:49Z",
        "message": "Updating container base images refs [2023-09-14-0828]"
      },
      {
        "id": "29bd1a9e7b1f270f0c49e0ca2ecca762f216ed06",
        "date": "2023-09-07T16:40:15Z",
        "message": "Updating container base images refs [2023-09-07-0827]"
      },
      {
        "id": "d4ab356cd60d41a838855334104533b7e7f41102",
        "date": "2023-08-31T23:55:02Z",
        "message": "Updating container base images refs [2023-08-31-2222]"
      },
      {
        "id": "ed6844aa16ea98cc183bc3ffb8b55de49cda7b28",
        "date": "2023-08-29T22:03:38Z",
        "message": "Updating container base images refs [2023-08-29-2010]"
      },
      {
        "id": "8b358d36ca56668ce78d34ea7bc5a286f3f9d3b9",
        "date": "2023-08-24T17:55:04Z",
        "message": "Updating container base images refs [2023-08-24-0813]"
      },
      {
        "id": "28277582582c8ba6272906fdfd69bab103b17b6f",
        "date": "2023-08-22T15:55:08Z",
        "message": "Updating container base images refs [2023-08-22-0828]"
      },
      {
        "id": "7a4d495a036adb36a07e87a2ec19d53e625856f8",
        "date": "2023-08-17T14:42:15Z",
        "message": "Updating container base images refs [2023-08-17-0816]"
      },
      {
        "id": "f7afad1dc497f00cab88059c0a7c461b2da99dcc",
        "date": "2023-08-16T14:55:46Z",
        "message": "Updating container base images refs [2023-08-16-0828]"
      },
      {
        "id": "86b4bc18849266b2f8f4ef6c2e3bbd9f1215152d",
        "date": "2023-08-12T18:11:04Z",
        "message": "Updating container base images refs [2023-08-12-0826]"
      },
      {
        "id": "9f46b4f5f16be6fdbb50e33278a0bbbba2c99e1a",
        "date": "2023-08-04T15:20:39Z",
        "message": "Updating container base images refs [2023-08-04-0827]"
      },
      {
        "id": "202101a0d0dcbcda20c58028607825919aa1a8a1",
        "date": "2023-08-03T15:51:34Z",
        "message": "Updating container base images refs [2023-08-03-0815]"
      }
    ],
    "line_additions": 377,
    "line_deletions": 377,
    "lines_effected_total": 754,
    "rel_comm_add": 28,
    "rel_comm_del": 28,
    "rel_comm_total": 28
  },
  {
    "login": "colonelpanic8",
    "id": 1246619,
    "totalContributions": 61,
    "github": "https://github.com/colonelpanic8",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "andreacerulli",
    "id": 19587477,
    "totalContributions": 57,
    "github": "https://github.com/andreacerulli",
    "commits": [
      {
        "id": "348552280e34a7916a222f22c092092b08cb149a",
        "date": "2023-09-12T13:36:39Z",
        "message": "Merge branch 'jack/crp-2184' into 'master'\n\nfeat(crypto): CRP-2184 Add crypto utilities for PocketIC\n\n \n\nSee merge request dfinity-lab/public/ic!14496"
      },
      {
        "id": "36ded34c14c9203d4850662523235e73e7665751",
        "date": "2023-08-29T10:30:03Z",
        "message": "Merge branch 'andrea-crp1696-continued' into 'master'\n\ndocs(crypto): CRP-1696 Extend threshold ECDSA documentation\n\nIn this MR we extend the documentation of the threshold ECDSA signing protocol and improve the rustdoc of the related interfaces. \n\nSee merge request dfinity-lab/public/ic!14405"
      },
      {
        "id": "c4db1302765cea5a4e3f5fe3f2cc84a6bb8bf09e",
        "date": "2023-08-29T10:30:03Z",
        "message": "docs(crypto): CRP-1696 Extend threshold ECDSA documentation"
      },
      {
        "id": "056a16e55923cdc051f235ce1604c9c364718af7",
        "date": "2023-08-25T09:02:51Z",
        "message": "Merge branch 'andrea-remove-idkgid' into 'master'\n\nchore(crypto): CRP-1078, CRP-1079 Remove obsolete DkgId type\n\nIn this MR we remove the obsolete `DkgId` and `IDkgId` types that predate genesis. In the process we also change the threshold signing and verify API to take a `NiDkgId` instead of the obsolete wrapper type. This closes the remaining open points from CRP-1078 and CRP-1079. \n\nSee merge request dfinity-lab/public/ic!14354"
      },
      {
        "id": "e5a56bcd4a25a6dc9799780f70c9acbeb2a0e144",
        "date": "2023-08-25T09:02:51Z",
        "message": "chore(crypto): CRP-1078, CRP-1079 Remove obsolete DkgId type"
      },
      {
        "id": "89f7fe1a3f81482d4848e963482a7d34baef9014",
        "date": "2023-08-24T17:58:11Z",
        "message": "Merge branch 'andrea-crp-1098' into 'master'\n\ndocs(crypto): CRP-1098 Improve documentation of threshold signing\n\nImprove the comment around error handling for threshold signing, to take into account possible concurrent calls of the crypto API. \n\nSee merge request dfinity-lab/public/ic!14380"
      },
      {
        "id": "14effeecd27296a70c118024f30e2a046cf7e2d6",
        "date": "2023-08-24T17:58:10Z",
        "message": "docs(crypto): CRP-1098 Improve documentation of threshold signing"
      }
    ],
    "email": "andrea@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 7,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 4,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "c4db1302765cea5a4e3f5fe3f2cc84a6bb8bf09e",
        "date": "2023-08-29T10:30:03Z",
        "message": "docs(crypto): CRP-1696 Extend threshold ECDSA documentation"
      },
      {
        "id": "e5a56bcd4a25a6dc9799780f70c9acbeb2a0e144",
        "date": "2023-08-25T09:02:51Z",
        "message": "chore(crypto): CRP-1078, CRP-1079 Remove obsolete DkgId type"
      },
      {
        "id": "14effeecd27296a70c118024f30e2a046cf7e2d6",
        "date": "2023-08-24T17:58:10Z",
        "message": "docs(crypto): CRP-1098 Improve documentation of threshold signing"
      }
    ],
    "line_additions": 295,
    "line_deletions": 484,
    "lines_effected_total": 779,
    "rel_comm_add": 1,
    "rel_comm_del": 1,
    "rel_comm_total": 1
  },
  {
    "login": "stefanneamtu",
    "id": 30928612,
    "totalContributions": 56,
    "github": "https://github.com/stefanneamtu",
    "commits": [
      {
        "id": "a00c108362c1f74a6cdf7923f330e82ab599e870",
        "date": "2023-11-15T14:07:55Z",
        "message": "Merge branch 'mismatching_id_and_attribute_panic_fix' into 'master'\n\nfix: replace panic with drop priority\n\nadverts with mismatching artifact id and attribute type trigger a panic, as seen [here](https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16090) \n\nSee merge request dfinity-lab/public/ic!16089"
      },
      {
        "id": "631f4b3abf2a762b3defc0a2c429164c4dd00b11",
        "date": "2023-11-15T14:07:54Z",
        "message": "fix: replace panic with drop priority"
      },
      {
        "id": "06b91b4f5f95a4b110055624862208656a12b922",
        "date": "2023-11-15T11:41:07Z",
        "message": "fix: mock bitcoind test flakiness"
      },
      {
        "id": "9704222368732a3900ed5b559933dec813700791",
        "date": "2023-11-08T14:07:42Z",
        "message": "Merge branch 'stefan/rpc_bug' into 'master'\n\nfix: transport rpc SendError should time out\n\n \n\nSee merge request dfinity-lab/public/ic!15946"
      },
      {
        "id": "b8e9f5ec78146dc63eaa59d312b4706c44c90c20",
        "date": "2023-11-08T14:07:42Z",
        "message": "fix: transport rpc SendError should time out"
      },
      {
        "id": "39737979f2851e3ec0bd6cea303084166c2f3d5c",
        "date": "2023-11-08T13:15:30Z",
        "message": "Merge branch 'stefan/transmission_bug' into 'master'\n\nfix: multiple transmissions for the same advert bug\n\n \n\nSee merge request dfinity-lab/public/ic!15944"
      },
      {
        "id": "ed80cf68fd16e7d18c3752d01f734b14b9525735",
        "date": "2023-11-08T13:15:30Z",
        "message": "fix: multiple transmissions for the same advert bug"
      },
      {
        "id": "bdbdbd084edcdd41008c8bd343c946cd2c27a2ed",
        "date": "2023-10-23T09:54:29Z",
        "message": "Merge branch 'revert-94f5ef08' into 'master'\n\nRevert \"Merge branch 'stefan/1503-bitcoin_mock_test' into 'master'\"\n\nThis reverts merge request !14872 \n\nSee merge request dfinity-lab/public/ic!15511"
      },
      {
        "id": "4ba3a6dcf32e39468ecba6a672e0d44f239efee6",
        "date": "2023-10-23T09:54:28Z",
        "message": "Revert \"Merge branch 'stefan/1503-bitcoin_mock_test' into 'master'\""
      },
      {
        "id": "94f5ef084bca62a006e5496cc0d69c415f3521ca",
        "date": "2023-10-18T08:51:53Z",
        "message": "Merge branch 'stefan/1503-bitcoin_mock_test' into 'master'\n\ntest(NET-1503): hermetic Bitcoin adapter e2e test with mainnet data\n\n \n\nSee merge request dfinity-lab/public/ic!14872"
      },
      {
        "id": "fd3c1e227e25b603d7cd96c538401cc5e6e67a71",
        "date": "2023-10-18T08:51:50Z",
        "message": "test(NET-1503): hermetic Bitcoin adapter e2e test with mainnet data"
      },
      {
        "id": "375d9b31b24c6d246c7684dcb0987d3362327ef1",
        "date": "2023-10-18T08:50:44Z",
        "message": "Merge branch 'stefan/master_p2p_perf_test' into 'master'\n\ntest: p2p performance benchmark test\n\n \n\nSee merge request dfinity-lab/public/ic!15297"
      },
      {
        "id": "8b7d311e7913454a6c30d6e85c88a81d324a361f",
        "date": "2023-10-18T08:50:44Z",
        "message": "test: p2p performance benchmark test"
      },
      {
        "id": "4703828d56edac02771728c5b20f1ea519d4834a",
        "date": "2023-10-02T13:43:34Z",
        "message": "Merge branch 'stefan/1551-slots_per_peer' into 'master'\n\nchore(1551): slots in use per peer metrics\n\n \n\nSee merge request dfinity-lab/public/ic!15129"
      },
      {
        "id": "21587bdda73d18435287771a8baf26666eb1b650",
        "date": "2023-10-02T13:43:34Z",
        "message": "chore(1551): slots in use per peer metrics"
      },
      {
        "id": "12ebe37e06ab4e9718d9003d4cc21d0911e735a4",
        "date": "2023-10-02T08:01:22Z",
        "message": "Merge branch 'stefan/1552-remove_default_slot_manager_size' into 'master'\n\nchore(NET-1552): dynamic slot table growth and size incrementation bug fix\n\n \n\nSee merge request dfinity-lab/public/ic!15042"
      },
      {
        "id": "db97e52d7776b5837568cb6cca9827ffaa4071ba",
        "date": "2023-10-02T08:01:19Z",
        "message": "chore(NET-1552): dynamic slot table growth and size incrementation bug fix"
      },
      {
        "id": "323022cc650bc1301c2d2c20722adfb22c5cdc68",
        "date": "2023-09-27T10:01:33Z",
        "message": "Merge branch 'NET-1545-purge-artifacts-from-the-unvalidated-pool-as-the-last-step-in-the-download-task' into 'master'\n\nfeat(NET-1545): purge artifacts from the unvalidated pool\n\nCloses NET-1545 \n\nCloses NET-1545\n\nSee merge request dfinity-lab/public/ic!14899"
      },
      {
        "id": "c97d8c37acca5e81f6005e5ae1d4df408cc3b791",
        "date": "2023-09-27T10:01:29Z",
        "message": "feat(NET-1545): purge artifacts from the unvalidated pool"
      },
      {
        "id": "5adf54c3d082c9a371138989b1cb3ac55b60d60d",
        "date": "2023-09-18T14:15:57Z",
        "message": "Merge branch 'stefan/add_ssh_key' into 'master'\n\nAdd Stefan Neamtu's public key\n\n \n\nSee merge request dfinity-lab/public/ic!14846"
      },
      {
        "id": "8c3f0ff4a4bcd8f3b8667a3c54afc97fef88ca33",
        "date": "2023-09-18T14:15:56Z",
        "message": "Add Stefan Neamtu's public key"
      },
      {
        "id": "ad007f0fcf33657bd71130bb58af7d73b78b64b6",
        "date": "2023-09-18T12:09:06Z",
        "message": "Merge branch 'stefan/1528-update_workload' into 'master'\n\nchore(NET-1528): decrease intensity of update_workload_large_payload and query_workload_long_test tests\n\nThe current update_workload_large_payload and query_workload_long_test tests are being run once a day and does not provide actionable information if they fail. The underlying infrastructure is also flaky.\n\nThe objective of this task is to remove the failure thresholds, reduce both the intensity and duration of the tests. I am also looking at moving them to CI. \n\nSee merge request dfinity-lab/public/ic!14691"
      },
      {
        "id": "d7c82e2b95da3bc777572eebfd9dcc6a55e74a7f",
        "date": "2023-09-18T12:09:06Z",
        "message": "chore(NET-1528): decrease intensity of update_workload_large_payload and query_workload_long_test tests"
      },
      {
        "id": "b114d89c18fa39b501c6e335d5d07522294ef966",
        "date": "2023-09-18T08:45:25Z",
        "message": "Merge branch 'stefan/1499-remove_adapter_hacks' into 'master'\n\nchore(NET-1499): remove request cache\n\n \n\nSee merge request dfinity-lab/public/ic!14823"
      },
      {
        "id": "917fdb9d8456efc0032163242c45e3a9d115b13a",
        "date": "2023-09-18T08:45:24Z",
        "message": "chore(NET-1499): remove request cache"
      },
      {
        "id": "7b1cedeff9a74dfba36b792ad0b24d6364df50b5",
        "date": "2023-09-13T11:16:56Z",
        "message": "Merge branch 'stefan/1525-get_successors_optimisation' into 'master'\n\nperf[NET-1525]: bitcoin adapter get_successors optimisation\n\nAccording to the Criterion benchmark, the change speeds up get_successors calls from ~18ms to ~8ms. \n\nSee merge request dfinity-lab/public/ic!14426"
      },
      {
        "id": "7529b658215a3e9302122c0f57f1a76e7f13c0b7",
        "date": "2023-09-13T11:16:55Z",
        "message": "perf[NET-1525]: bitcoin adapter get_successors optimisation"
      },
      {
        "id": "130545d0256e5e90c1c581e6ee5ccdc283b94614",
        "date": "2023-08-25T16:23:17Z",
        "message": "Merge branch 'stefan/1502-adapter_criterion_benchmark_e2e' into 'master'\n\nfeat[NET-1514]: adapter criterion e2e benchmark\n\nThis simulation constructs a blockchain comprising four forks, each of 2000 blocks. For an extended BFS execution, the initial 1975 blocks of every branch are marked as being processed in the request, with the aim to receive the last 25 blocks of each fork. Performance metrics are captured from the sending of the deserialised request through to receiving the response and its deserialisation.\n\nOn average, the simulation completes in approximately 19 ms, occasionally reaching highs of 21 ms and dipping to lows of 17 ms.\n\nIt can be run using:\n`bazel run //rs/bitcoin/adapter:e2e_bench` \n\nSee merge request dfinity-lab/public/ic!14099"
      },
      {
        "id": "4e1c251b902bccbd456b6d305693668b98b27005",
        "date": "2023-08-25T16:23:16Z",
        "message": "feat[NET-1514]: adapter criterion e2e benchmark"
      },
      {
        "id": "818992fc8a66b72d98ca04c9c46ff4b736bb5e23",
        "date": "2023-08-22T07:40:55Z",
        "message": "chore[NET-826]: test using absolute number of successful requests"
      },
      {
        "id": "3baccdcd6fa76ff10d9a623e03d2cc024c4aab7f",
        "date": "2023-08-15T07:24:09Z",
        "message": "Merge branch 'stefan/1508-adapter_bfs_order' into 'master'\n\ntest[NET-1508]: bitcoin adapter returns blocks in BFS order\n\n \n\nSee merge request dfinity-lab/public/ic!13951"
      },
      {
        "id": "3d8ff50fd99ba20158faba8773f272d3e531f7ad",
        "date": "2023-08-15T07:24:09Z",
        "message": "test[NET-1508]: bitcoin adapter returns blocks in BFS order"
      },
      {
        "id": "d5b58ef5c28d32ce5de9f81c2e948e4a9bac1bed",
        "date": "2023-08-08T14:41:18Z",
        "message": "fix: force artificial timeout using a non routable IP address"
      },
      {
        "id": "8052ad621a07c3065e4912f635056e89f279a40d",
        "date": "2023-08-08T10:02:34Z",
        "message": "fix: disable failing bitcoin adapter timeout test"
      }
    ],
    "email": "stefan.neamtu@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 34,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 16,
    "fixes": 7,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "631f4b3abf2a762b3defc0a2c429164c4dd00b11",
        "date": "2023-11-15T14:07:54Z",
        "message": "fix: replace panic with drop priority"
      },
      {
        "id": "06b91b4f5f95a4b110055624862208656a12b922",
        "date": "2023-11-15T11:41:07Z",
        "message": "fix: mock bitcoind test flakiness"
      },
      {
        "id": "b8e9f5ec78146dc63eaa59d312b4706c44c90c20",
        "date": "2023-11-08T14:07:42Z",
        "message": "fix: transport rpc SendError should time out"
      },
      {
        "id": "ed80cf68fd16e7d18c3752d01f734b14b9525735",
        "date": "2023-11-08T13:15:30Z",
        "message": "fix: multiple transmissions for the same advert bug"
      },
      {
        "id": "fd3c1e227e25b603d7cd96c538401cc5e6e67a71",
        "date": "2023-10-18T08:51:50Z",
        "message": "test(NET-1503): hermetic Bitcoin adapter e2e test with mainnet data"
      },
      {
        "id": "8b7d311e7913454a6c30d6e85c88a81d324a361f",
        "date": "2023-10-18T08:50:44Z",
        "message": "test: p2p performance benchmark test"
      },
      {
        "id": "21587bdda73d18435287771a8baf26666eb1b650",
        "date": "2023-10-02T13:43:34Z",
        "message": "chore(1551): slots in use per peer metrics"
      },
      {
        "id": "db97e52d7776b5837568cb6cca9827ffaa4071ba",
        "date": "2023-10-02T08:01:19Z",
        "message": "chore(NET-1552): dynamic slot table growth and size incrementation bug fix"
      },
      {
        "id": "c97d8c37acca5e81f6005e5ae1d4df408cc3b791",
        "date": "2023-09-27T10:01:29Z",
        "message": "feat(NET-1545): purge artifacts from the unvalidated pool"
      },
      {
        "id": "8c3f0ff4a4bcd8f3b8667a3c54afc97fef88ca33",
        "date": "2023-09-18T14:15:56Z",
        "message": "Add Stefan Neamtu's public key"
      },
      {
        "id": "d7c82e2b95da3bc777572eebfd9dcc6a55e74a7f",
        "date": "2023-09-18T12:09:06Z",
        "message": "chore(NET-1528): decrease intensity of update_workload_large_payload and query_workload_long_test tests"
      },
      {
        "id": "917fdb9d8456efc0032163242c45e3a9d115b13a",
        "date": "2023-09-18T08:45:24Z",
        "message": "chore(NET-1499): remove request cache"
      },
      {
        "id": "7529b658215a3e9302122c0f57f1a76e7f13c0b7",
        "date": "2023-09-13T11:16:55Z",
        "message": "perf[NET-1525]: bitcoin adapter get_successors optimisation"
      },
      {
        "id": "4e1c251b902bccbd456b6d305693668b98b27005",
        "date": "2023-08-25T16:23:16Z",
        "message": "feat[NET-1514]: adapter criterion e2e benchmark"
      },
      {
        "id": "818992fc8a66b72d98ca04c9c46ff4b736bb5e23",
        "date": "2023-08-22T07:40:55Z",
        "message": "chore[NET-826]: test using absolute number of successful requests"
      },
      {
        "id": "3d8ff50fd99ba20158faba8773f272d3e531f7ad",
        "date": "2023-08-15T07:24:09Z",
        "message": "test[NET-1508]: bitcoin adapter returns blocks in BFS order"
      },
      {
        "id": "d5b58ef5c28d32ce5de9f81c2e948e4a9bac1bed",
        "date": "2023-08-08T14:41:18Z",
        "message": "fix: force artificial timeout using a non routable IP address"
      },
      {
        "id": "8052ad621a07c3065e4912f635056e89f279a40d",
        "date": "2023-08-08T10:02:34Z",
        "message": "fix: disable failing bitcoin adapter timeout test"
      }
    ],
    "line_additions": 1966,
    "line_deletions": 723,
    "lines_effected_total": 2689,
    "rel_comm_add": 11,
    "rel_comm_del": 10,
    "rel_comm_total": 14
  },
  {
    "login": "jplevyak",
    "id": 281504,
    "totalContributions": 53,
    "github": "https://github.com/jplevyak",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "kobi-lizard",
    "id": 116079617,
    "totalContributions": 53,
    "github": "https://github.com/kobi-lizard",
    "commits": [
      {
        "id": "4142e211398b5715dcf30eadbb0c538d337f3608",
        "date": "2023-11-22T15:07:12Z",
        "message": "Merge branch 'kobi-path-crate-security' into 'master'\n\nfix(BOUN-965): use path crate and check the path\n\n \n\nSee merge request dfinity-lab/public/ic!16156"
      },
      {
        "id": "1172be1ad8a95a22b49ced8ee636be614f0cd422",
        "date": "2023-11-22T15:07:12Z",
        "message": "fix(BOUN-965): use path crate and check the path"
      },
      {
        "id": "a9a482b40c47526b7a8c27e7e35a679b34e7179e",
        "date": "2023-10-19T12:56:14Z",
        "message": "Merge branch 'kobi-ignore-dash-dash-prefix' into 'master'\n\nfeat(BOUN-883): map some-prefix--canister-id to canister-id\n\n \n\nSee merge request dfinity-lab/public/ic!15321"
      },
      {
        "id": "f4e722b5fc3ec3bb1704cf5cd9ef95f7605f4e0d",
        "date": "2023-10-19T12:56:13Z",
        "message": "feat(BOUN-883): map some-prefix--canister-id to canister-id"
      },
      {
        "id": "18b2dd280e3f635507a1d12f3f8fb47a8d9ddcf4",
        "date": "2023-09-29T18:49:16Z",
        "message": "Merge branch 'kobi-issuer-args' into 'master'\n\nfix(BOUN-847): issuer reads keys from files instead of args\n\n \n\nSee merge request dfinity-lab/public/ic!15111"
      },
      {
        "id": "6add79cad07c5a8fb7846d4c9bcf1b6bf7f1aa8c",
        "date": "2023-09-29T18:49:14Z",
        "message": "fix(BOUN-847): issuer reads keys from files instead of args"
      },
      {
        "id": "7e145fefad4b0a250e5973c910f672377c8efd00",
        "date": "2023-09-22T14:22:22Z",
        "message": "Merge branch 'kobi-icb-rate' into 'master'\n\nfeat(BOUN-858): rate-limiting update calls in ic-boundary\n\n \n\nSee merge request dfinity-lab/public/ic!14695"
      },
      {
        "id": "855b82f5932fee4a0f055f20f2f1487d3a4bebf5",
        "date": "2023-09-22T14:22:21Z",
        "message": "feat(BOUN-858): rate-limiting update calls in ic-boundary"
      },
      {
        "id": "114d7d5540e625d316dc086fec6b14975c155f41",
        "date": "2023-08-28T22:06:13Z",
        "message": "Merge branch 'kobi-finish-metrics2' into 'master'\n\nfeat(BOUN-734): finish metrics\n\n \n\nCloses EXC-1462\n\nSee merge request dfinity-lab/public/ic!14346"
      },
      {
        "id": "727bb60b54b7a0a445aca25b20c44cde29e86cc0",
        "date": "2023-08-28T22:06:11Z",
        "message": "feat(BOUN-734): finish metrics"
      },
      {
        "id": "4567a4c137302732f1074b119424460093808a86",
        "date": "2023-08-22T14:30:41Z",
        "message": "Merge branch 'kobi-clean-imports' into 'master'\n\nchore(BOUN-828): cleanup unsued imports and small clippy things\n\n \n\nSee merge request dfinity-lab/public/ic!14277"
      },
      {
        "id": "b8756caecf21fdea19587bd7a3691406840488e2",
        "date": "2023-08-22T14:30:41Z",
        "message": "chore(BOUN-828): cleanup unsued imports and small clippy things"
      },
      {
        "id": "d7024323737506a270ad2c4d4872eb8e77effb54",
        "date": "2023-08-21T11:13:55Z",
        "message": "Merge branch 'kobi-bump-opentelemetry' into 'master'\n\nchore(BOUN-836): change to opentelemetry 0.20\n\n \n\nSee merge request dfinity-lab/public/ic!14058"
      },
      {
        "id": "7402d33354cbda01d3149592c52d53801c3deb5f",
        "date": "2023-08-21T11:13:55Z",
        "message": "chore(BOUN-836): change to opentelemetry 0.20"
      },
      {
        "id": "93c26d96938e807966596d55274a7fb1207f52c1",
        "date": "2023-08-15T14:58:10Z",
        "message": "Merge branch 'kobi-icb-call-read-state' into 'master'\n\nfeat(BOUN-825): call, read_state\n\n \n\nSee merge request dfinity-lab/public/ic!14115"
      },
      {
        "id": "ad0435da90289b37088c4a4be0e3c749fd005b08",
        "date": "2023-08-15T14:58:10Z",
        "message": "feat(BOUN-825): call, read_state"
      },
      {
        "id": "ee29dbb1287b71c6dd630f2cfa970404beedcdd4",
        "date": "2023-08-08T11:26:19Z",
        "message": "feat(BOUN-824): metrics for http"
      }
    ],
    "email": "kobi.sliwinski@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 17,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 8,
    "fixes": 3,
    "feats": 5,
    "non_merge_commits": [
      {
        "id": "1172be1ad8a95a22b49ced8ee636be614f0cd422",
        "date": "2023-11-22T15:07:12Z",
        "message": "fix(BOUN-965): use path crate and check the path"
      },
      {
        "id": "f4e722b5fc3ec3bb1704cf5cd9ef95f7605f4e0d",
        "date": "2023-10-19T12:56:13Z",
        "message": "feat(BOUN-883): map some-prefix--canister-id to canister-id"
      },
      {
        "id": "6add79cad07c5a8fb7846d4c9bcf1b6bf7f1aa8c",
        "date": "2023-09-29T18:49:14Z",
        "message": "fix(BOUN-847): issuer reads keys from files instead of args"
      },
      {
        "id": "855b82f5932fee4a0f055f20f2f1487d3a4bebf5",
        "date": "2023-09-22T14:22:21Z",
        "message": "feat(BOUN-858): rate-limiting update calls in ic-boundary"
      },
      {
        "id": "727bb60b54b7a0a445aca25b20c44cde29e86cc0",
        "date": "2023-08-28T22:06:11Z",
        "message": "feat(BOUN-734): finish metrics"
      },
      {
        "id": "b8756caecf21fdea19587bd7a3691406840488e2",
        "date": "2023-08-22T14:30:41Z",
        "message": "chore(BOUN-828): cleanup unsued imports and small clippy things"
      },
      {
        "id": "7402d33354cbda01d3149592c52d53801c3deb5f",
        "date": "2023-08-21T11:13:55Z",
        "message": "chore(BOUN-836): change to opentelemetry 0.20"
      },
      {
        "id": "ad0435da90289b37088c4a4be0e3c749fd005b08",
        "date": "2023-08-15T14:58:10Z",
        "message": "feat(BOUN-825): call, read_state"
      },
      {
        "id": "ee29dbb1287b71c6dd630f2cfa970404beedcdd4",
        "date": "2023-08-08T11:26:19Z",
        "message": "feat(BOUN-824): metrics for http"
      }
    ],
    "line_additions": 3003,
    "line_deletions": 1211,
    "lines_effected_total": 4214,
    "rel_comm_add": 7,
    "rel_comm_del": 6,
    "rel_comm_total": 7
  },
  {
    "login": "dfinityianblenke",
    "id": 118466213,
    "totalContributions": 44,
    "github": "https://github.com/dfinityianblenke",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "bitdivine",
    "id": 5982633,
    "totalContributions": 44,
    "github": "https://github.com/bitdivine",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "yotamhc",
    "id": 1969274,
    "totalContributions": 43,
    "github": "https://github.com/yotamhc",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "alejandrodfinity",
    "id": 92403129,
    "totalContributions": 42,
    "github": "https://github.com/alejandrodfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "keplervital",
    "id": 119848388,
    "totalContributions": 40,
    "github": "https://github.com/keplervital",
    "commits": [
      {
        "id": "b168656e55a352f55e3d37086e6baf2a4bb52512",
        "date": "2023-08-25T10:50:15Z",
        "message": "Merge branch 'kepler/tt-243-refresh' into 'master'\n\nfeat(service-worker): added error page btn to reload window and uninstall sw\n\nre #TT-243 and #TT-246 and re #TT-303\n\n![Screenshot_2023-08-23_at_16.46.17](/uploads/019dde16b2ec12ccd90a1cf2c94bc81f/Screenshot_2023-08-23_at_16.46.17.png)\n\n![Screenshot_2023-08-25_at_10.57.37](/uploads/917d9fc6cfd721602840a7d36c1c3e9d/Screenshot_2023-08-25_at_10.57.37.png) \n\nSee merge request dfinity-lab/public/ic!14298"
      },
      {
        "id": "6b2d5cbe6b92db9598c5843f9ebaad81d87daa46",
        "date": "2023-08-25T10:50:15Z",
        "message": "feat(service-worker): added error page btn to reload window and uninstall sw"
      },
      {
        "id": "5a47c00e5d438990d84a759b651949696aab6997",
        "date": "2023-08-24T09:20:07Z",
        "message": "Merge branch 'nathan/run-sw-e2e-tests-on-pipeline' into 'master'\n\nci: run service worker e2e tests\n\n#TT-232\n\nTo test this on the devenv:\n\nSSH into a devenv (make sure SSH keys are forwarded)\nClone the IC repo\n\nCheckout this branch:\n```shell\ngit checkout nathan/run-sw-e2e-tests-on-pipeline\n``` \n\nStart the container (this is the same container used by the CI):\n```shell\n./gitlab-ci/container/container-run.sh -f\n```\n\nChange to the service worker directory:\n```shell\ncd ./typescript/service-worker\n```\n\nRun e2e tests:\n```\n./e2e/e2e --add-dependencies --start --run-tests --stop\n``` \n\nSee merge request dfinity-lab/public/ic!14229"
      },
      {
        "id": "be5f0010017b28644456a74b397b0834ef4b6f60",
        "date": "2023-08-16T17:51:20Z",
        "message": "chore(boundary-guestos): release service worker v1.8.5"
      },
      {
        "id": "e4878a3e403a63ce876e53e4142995b57b46a5ec",
        "date": "2023-08-16T17:45:28Z",
        "message": "Merge branch 'kepler/tt-298-sw-wasm' into 'master'\n\nfix(service-worker): inline load of response-verification wasm\n\n#TT-298\n\nThis fixes the issue where an old service worker that is running on the page would try to load the new `wasm` file from a recently deployed service worker, this would previously fail. With this change i move the `wasm` of response verification to be inline loaded.\n\nBefore the `sw.js` file had 258kb and then loaded the `wasm` that had 242kb, with this change the `sw.js` with the included `wasm` have 580kb. \n\nSee merge request dfinity-lab/public/ic!14187"
      },
      {
        "id": "a18d7f8c771b2294a8f32d9caedc94b7d04f6430",
        "date": "2023-08-16T17:45:28Z",
        "message": "fix(service-worker): inline load of response-verification wasm"
      }
    ],
    "email": "kepler.vital@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 6,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 3,
    "fixes": 1,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "6b2d5cbe6b92db9598c5843f9ebaad81d87daa46",
        "date": "2023-08-25T10:50:15Z",
        "message": "feat(service-worker): added error page btn to reload window and uninstall sw"
      },
      {
        "id": "be5f0010017b28644456a74b397b0834ef4b6f60",
        "date": "2023-08-16T17:51:20Z",
        "message": "chore(boundary-guestos): release service worker v1.8.5"
      },
      {
        "id": "a18d7f8c771b2294a8f32d9caedc94b7d04f6430",
        "date": "2023-08-16T17:45:28Z",
        "message": "fix(service-worker): inline load of response-verification wasm"
      }
    ],
    "line_additions": 1006,
    "line_deletions": 330,
    "lines_effected_total": 1336,
    "rel_comm_add": 1,
    "rel_comm_del": 1,
    "rel_comm_total": 1
  },
  {
    "login": "joeodfinity",
    "id": 84467096,
    "totalContributions": 39,
    "github": "https://github.com/joeodfinity",
    "commits": [
      {
        "id": "11abc690527d28eb4d6930afee21bfd49f63409d",
        "date": "2023-11-17T21:57:16Z",
        "message": "Merge branch 'joeo/PFOPS-4519-retire-static-testnet-nnsdapp-moved-to-devenvs' into 'master'\n\nPFOPS-4519 retires static testnet nnsdapp as dev there is done in DEVENVs now.\n\nCloses PFOPS-4519 \n\nCloses PFOPS-4519\n\nSee merge request dfinity-lab/public/ic!16192"
      },
      {
        "id": "0c5596cfb04911ceec328f10894709730a9bcd7b",
        "date": "2023-11-17T18:30:04Z",
        "message": "PFOPS-4519 retires static testnet nnsdapp as dev there is done in DEVENVs now."
      },
      {
        "id": "526c5b687347caf69584163d86c5cbd65ab887cc",
        "date": "2023-08-10T18:44:48Z",
        "message": "Merge branch 'ielashi/bitcoin_testnet' into 'master'\n\nchore: remove aux host from bitcoin testnet\n\nThe aux node isn't being used/needed in the bitcoin testnet. \n\nSee merge request dfinity-lab/public/ic!14086"
      }
    ],
    "email": "joseph.orthoefer@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 3,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 2,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "0c5596cfb04911ceec328f10894709730a9bcd7b",
        "date": "2023-11-17T18:30:04Z",
        "message": "PFOPS-4519 retires static testnet nnsdapp as dev there is done in DEVENVs now."
      }
    ],
    "line_additions": 0,
    "line_deletions": 57,
    "lines_effected_total": 57,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "garym-dfinity",
    "id": 110072038,
    "totalContributions": 38,
    "github": "https://github.com/garym-dfinity",
    "commits": [
      {
        "id": "73a8bbbf7f57d362ff3c40d6bec9b0b8add2106f",
        "date": "2023-11-15T00:33:50Z",
        "message": "Merge branch 'gary/network-config-fix' into 'master'\n\nchore: Remove 'virtual' check. Add docs. Ignore case.\n\n* Add docs explaining why we care about what prefixes\n* Account for upper/lower case\n* Remove 'virtual' check - was incorrect and superfluous given the other check \n\nSee merge request dfinity-lab/public/ic!16096"
      },
      {
        "id": "33220f58c8c0d2b894bb7c7c3b06493a687afb9a",
        "date": "2023-11-15T00:33:49Z",
        "message": "chore: Remove 'virtual' check. Add docs. Ignore case."
      },
      {
        "id": "13179166fa3dfe3a5bc92eb38b17327bb7cf52e0",
        "date": "2023-11-10T22:12:35Z",
        "message": "Merge branch 'gary/NODE-908-network-config' into 'master'\n\nfix: NODE-908 - Flexible Network Configuration Behavior\n\nSimilar to guestos_tool, setupos_tool is a rust binary that aims to replace various shell scripts. \nThis MR targets network configuration logic. \n\n* Fixes the long running issue of needing two eth cables plugged in\n* * Ipv6 connectivity is now tested all interfaces. The fastest valid connected ipv6 interface is used. \n* Deduplicates network configuration logic between HostOS and SetupOS\n* Adds unit tests (!)\n\nTesting has been done to match the behavior of the previous generate-deterministic-* scripts. See the related unit tests and [NODE-908](https://dfinity.atlassian.net/browse/NODE-908) for manual testing notes.\n\nCloses NODE-908 \n\nCloses NODE-908\n\nSee merge request dfinity-lab/public/ic!15557"
      },
      {
        "id": "3c96db8a974e439a0e6b9b423117cae7fa5a2627",
        "date": "2023-11-10T22:12:35Z",
        "message": "fix: NODE-908 - Flexible Network Configuration Behavior"
      },
      {
        "id": "259e383723d9c2d0ee019176b2ae4208ead873d8",
        "date": "2023-11-09T01:52:14Z",
        "message": "Merge branch 'gary/print-config-info' into 'master'\n\nfeat: NODE-839 - Gary/print config info\n\nConfig contents now shown for ~5 seconds while setupos service kicks off. Don't want to put in an explicit sleep time...\n\nTested:\n\n![Screenshot_2023-11-08_14-14](/uploads/ecb9be2c49a04781757742dfbcbda8c4/Screenshot_2023-11-08_14-14.png)\n\nAlso this is what happens now if config.ini isn't found:\n\n![image](/uploads/021d224a3d4fda2370231237dcebaae2/image.png)\n\nIs this OK?! \n\nSee merge request dfinity-lab/public/ic!15982"
      },
      {
        "id": "a1d92b3b19f03895de9695b8191dfe1eef5e152a",
        "date": "2023-11-09T01:52:14Z",
        "message": "feat: NODE-839 - Gary/print config info"
      },
      {
        "id": "9c18b1f3b012ee8c4f7c83d72ffd0bcc0d8d1337",
        "date": "2023-10-27T14:33:08Z",
        "message": "Merge branch 'gary/hardware-gen-metric-rename' into 'master'\n\nchore: Gary/hardware gen metric rename\n\nFollowup to https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/15118\n\nBased on Alin's comment:\n> The way I would think about it is that the node_ prefix is strictly a namespace (that is, for better or worse, shared with node_exporter). Within that namespace, would you consider generation as a descriptive enough name? If not, then maybe something like node_hardware_generation or node_hardware_gen would be more appropriate. \n\nSee merge request dfinity-lab/public/ic!15702"
      },
      {
        "id": "351732d7a9635d2952b811cdcb7df237fb9cb8c1",
        "date": "2023-10-27T14:33:08Z",
        "message": "chore: Gary/hardware gen metric rename"
      },
      {
        "id": "ae45469efda7d1bebe500cd6e248abb4462e5a57",
        "date": "2023-10-09T18:10:59Z",
        "message": "fix: NODE-1128 - Fix cpu thread detection for gen1 nodes"
      },
      {
        "id": "82a4c9a258163b4f555268d8d91b875ec8936f34",
        "date": "2023-10-06T01:35:20Z",
        "message": "Merge branch 'gary/report_gen_status' into 'master'\n\nfeat: NODE-1037 - Report node generation status\n\nWrite the generation (Gen1, Gen2, Unknown) to prometheus. \n\nSets the structure for 'guestos_tool' - a rust tool with siblings in the other OS's: setupos_tool, hostos_tool. These will eventually share logic in a common rust library. \n\nSee merge request dfinity-lab/public/ic!15118"
      },
      {
        "id": "78793514be481af19c89ef54bcd28f98271b0da4",
        "date": "2023-10-06T01:35:20Z",
        "message": "feat: NODE-1037 - Report node generation status"
      },
      {
        "id": "1cf322fb254be6ee4a4d94dac9d9508ca47a3220",
        "date": "2023-10-02T23:37:53Z",
        "message": "Merge branch 'gary/podman-retry' into 'master'\n\nfix: NODE-1115: Podman Build Retry\n\nFix for [NODE-1115 - Podman fails downloading image blobs sometimes](https://dfinity.atlassian.net/browse/NODE-1115)\n\nAttempt building the container 3 times to avoid the podman EOF bug. \n\nCloses NODE-1115\n\nSee merge request dfinity-lab/public/ic!15089"
      },
      {
        "id": "5c2c876aaabd52b59e09d5aa7947891f73bdfc3e",
        "date": "2023-10-02T23:37:53Z",
        "message": "fix: NODE-1115: Podman Build Retry"
      },
      {
        "id": "d81acd436baf364906a92d4ad47438e68d145b84",
        "date": "2023-09-07T03:57:51Z",
        "message": "Merge branch 'gary/setupos-logic-refactor' into 'master'\n\nrefactor: SetupOS hardware logic refactor\n\n- Only check # of logical cpu's via `nproc` in each of gen1 and gen2 CPU check functions\n- Add function to check for the number of CPU sockets. Only called for gen2 for now.\n- Apply ShellCheck feedback in select places. \n\nSee merge request dfinity-lab/public/ic!14608"
      },
      {
        "id": "ae261953291aa20c9f089f41ea9462b78bdab8f7",
        "date": "2023-09-07T03:57:50Z",
        "message": "refactor: SetupOS hardware logic refactor"
      },
      {
        "id": "33d4b68c95bf162207c2c49f8896edde91260165",
        "date": "2023-09-07T03:56:27Z",
        "message": "Merge branch 'gary/export-podman-tar' into 'master'\n\nfix: Use podman to export the IC-OS filesystems.\n\nhttps://dfinity.atlassian.net/browse/NODE-973\n\ndocker_tar.py was complex. This simplifies it by using `podman export` instead. A surprise bug was fixed because of this - several (hundreds) of symlinks on *OS were broken (but happened to not be used). This fixes them. Those files and possibly parent packages will be considered for removal.\n\nThe relevant bazel targets are simplified as much as possible. More to come. \n\nBazel is complex. Guiding principle: make it simpler, easier to understand, easier to make future modifications and easier to debug. This comes at the cost of duplication sometimes. E.g., the myriad config files are files and not generated by a bazel target or python thing. But you can feed those config files directly to build_container_filesystem_tar.py on the command line.\n\nUPDATE:\nLOTS of testing ensued because `podman export` and `podman build` invocation changes kicked up known concurrency bugs in podman 3.x. These are fixed in podman 4.x. But we're not getting that version soon.\nNow separate system directories are used for each podman invocation. This works on CI and on multi-user systems. \n\nSee merge request dfinity-lab/public/ic!13136"
      },
      {
        "id": "a4e7d42d6b0432f4a78b89c63762f85e94dabb67",
        "date": "2023-09-07T03:56:27Z",
        "message": "fix: Use podman to export the IC-OS filesystems."
      }
    ],
    "email": "gary.mcelroy@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 17,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 8,
    "fixes": 4,
    "feats": 2,
    "non_merge_commits": [
      {
        "id": "33220f58c8c0d2b894bb7c7c3b06493a687afb9a",
        "date": "2023-11-15T00:33:49Z",
        "message": "chore: Remove 'virtual' check. Add docs. Ignore case."
      },
      {
        "id": "3c96db8a974e439a0e6b9b423117cae7fa5a2627",
        "date": "2023-11-10T22:12:35Z",
        "message": "fix: NODE-908 - Flexible Network Configuration Behavior"
      },
      {
        "id": "a1d92b3b19f03895de9695b8191dfe1eef5e152a",
        "date": "2023-11-09T01:52:14Z",
        "message": "feat: NODE-839 - Gary/print config info"
      },
      {
        "id": "351732d7a9635d2952b811cdcb7df237fb9cb8c1",
        "date": "2023-10-27T14:33:08Z",
        "message": "chore: Gary/hardware gen metric rename"
      },
      {
        "id": "ae45469efda7d1bebe500cd6e248abb4462e5a57",
        "date": "2023-10-09T18:10:59Z",
        "message": "fix: NODE-1128 - Fix cpu thread detection for gen1 nodes"
      },
      {
        "id": "78793514be481af19c89ef54bcd28f98271b0da4",
        "date": "2023-10-06T01:35:20Z",
        "message": "feat: NODE-1037 - Report node generation status"
      },
      {
        "id": "5c2c876aaabd52b59e09d5aa7947891f73bdfc3e",
        "date": "2023-10-02T23:37:53Z",
        "message": "fix: NODE-1115: Podman Build Retry"
      },
      {
        "id": "ae261953291aa20c9f089f41ea9462b78bdab8f7",
        "date": "2023-09-07T03:57:50Z",
        "message": "refactor: SetupOS hardware logic refactor"
      },
      {
        "id": "a4e7d42d6b0432f4a78b89c63762f85e94dabb67",
        "date": "2023-09-07T03:56:27Z",
        "message": "fix: Use podman to export the IC-OS filesystems."
      }
    ],
    "line_additions": 2591,
    "line_deletions": 982,
    "lines_effected_total": 3573,
    "rel_comm_add": 5,
    "rel_comm_del": 1,
    "rel_comm_total": 5
  },
  {
    "login": "nzoghb",
    "id": 10734840,
    "totalContributions": 36,
    "github": "https://github.com/nzoghb",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "nikola-milosa",
    "id": 116065832,
    "totalContributions": 35,
    "github": "https://github.com/nikola-milosa",
    "commits": [
      {
        "id": "65a19fed3cce800a8c8b11b91ca2490e49fb6855",
        "date": "2023-11-15T14:44:05Z",
        "message": "Merge branch 'nikola-milosavljevic/patching-bazelifier' into 'master'\n\nfix: Patching bazelifier to support workspace variables\n\nThis would allow processing of `Cargo.toml` that looks like:\n```\n[package]\nname = \"some-lib\"\nversion.workspace = true\nedition.workspace = true\n\n[dependencies]\nic-nns-common = { path = \"../../nns/common\" }\nic-canister-client = { path = \"../../canister_client\" }\nic-nervous-system-common-test-keys = { path = \"../../nervous_system/common/test_keys\" }\nurl = { version = \"2.1.1\", features = [\"serde\"] }\nasync-trait = \"0.1.51\"\nic-nns-test-utils = { path = \"../../nns/test_utils\" }\ncandid = { workspace = true }\n\n``` \n\nSee merge request dfinity-lab/public/ic!16108"
      },
      {
        "id": "3b805e5a2dc6cf95b808f64b118df6414bcd49ab",
        "date": "2023-11-15T14:44:05Z",
        "message": "fix: Patching bazelifier to support workspace variables"
      },
      {
        "id": "ce03697e2e1dbf0dd9823a933db511e624267764",
        "date": "2023-11-07T08:43:16Z",
        "message": "Merge branch 'nikola-milosavljevic/new-service-disc-generator' into 'master'\n\nfeat: New service discovery generator for script and journald\n\n \n\nSee merge request dfinity-lab/public/ic!15867"
      },
      {
        "id": "245bc4ca132f977bedeac9bc0be161d8984994aa",
        "date": "2023-11-07T08:43:16Z",
        "message": "feat: New service discovery generator for script and journald"
      },
      {
        "id": "a0e61f10e5f404b23c3101ecbb8de8df150544e7",
        "date": "2023-11-07T06:04:58Z",
        "message": "Merge branch 'nikola-milosavljevic/adding-labels-to-metrics' into 'master'\n\nfeat: Adding labels for service discovery\n\n \n\nSee merge request dfinity-lab/public/ic!15902"
      },
      {
        "id": "f01cdd326453d8c860a2960fa9845c6a38f567cd",
        "date": "2023-11-07T06:04:58Z",
        "message": "feat: Adding labels for service discovery"
      },
      {
        "id": "67bca7976f9fef61421fa56ccd47f2e8f245b488",
        "date": "2023-10-19T09:47:38Z",
        "message": "Merge branch 'nikola-milosavljevic/patching-downloader' into 'master'\n\nfix: fixing ip generation for host_os\n\n \n\nSee merge request dfinity-lab/public/ic!15488"
      },
      {
        "id": "69b77712af61452261d8ca970aebf49e5c4ae586",
        "date": "2023-10-19T09:47:38Z",
        "message": "fix: fixing ip generation for host_os"
      },
      {
        "id": "a5a38c9486cda57f53b1e247a824e637f9f6f2fa",
        "date": "2023-10-10T05:25:31Z",
        "message": "Merge branch 'nikola-milosavljevic/service-discovery-v2' into 'master'\n\nfeat: Service discovery v2\n\nTo run `multiservice_discovery`: `cargo run -- --targets-dir ~/tmp/multiservice_discovery`\n\nFeatures:\n* New discovery is split in definitions (these are related to a network, for e.g. mainnet, testnet a, testnet b,...).\n* New discovery has an http server running on port 8000 which can be used to `GET` current definitions with its jobs and filters, to `POST` new definitions with jobs and filters and to `DELETE` (for e.g. `DELETE /testet1 HTTP/1.1`) to delete definition by name. \n\nNotes:\n* one cannot remove `mainnet` definition which is there by default\n* name of the definition has to be unique\n* deleting a definition will delete its registry\n\nTo run `multiservice_discovery_downloader`: `cargo run -- --output-dir ~/tmp/multiservice_discovery_output --sd-url http://localhost:8000/targets --generator log --filter-node-id-regex ^a.*`\n\nFeatures:\n* Has the ability to filter targets based on node id\n* Only writes to disk if the hash of the targets changed \n\nSee merge request dfinity-lab/public/ic!14851"
      },
      {
        "id": "7532f878fe170c29180bf4bf512efcbc0febb8d6",
        "date": "2023-10-10T05:25:31Z",
        "message": "feat: Service discovery v2"
      },
      {
        "id": "4fbe776aeea08222b8b47f5f2902fe77b58b7150",
        "date": "2023-09-11T12:18:39Z",
        "message": "Merge branch 'nikola-milosavljevic/node-status-updater' into 'master'\n\nfeat: Introducing node status updater\n\n \n\nSee merge request dfinity-lab/public/ic!14652"
      },
      {
        "id": "b5f06d6d493bcfa336402e45003d9c3b9a436534",
        "date": "2023-09-11T12:18:39Z",
        "message": "feat: Introducing node status updater"
      }
    ],
    "email": "nikola.milosavljevic@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 12,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 6,
    "fixes": 2,
    "feats": 4,
    "non_merge_commits": [
      {
        "id": "3b805e5a2dc6cf95b808f64b118df6414bcd49ab",
        "date": "2023-11-15T14:44:05Z",
        "message": "fix: Patching bazelifier to support workspace variables"
      },
      {
        "id": "245bc4ca132f977bedeac9bc0be161d8984994aa",
        "date": "2023-11-07T08:43:16Z",
        "message": "feat: New service discovery generator for script and journald"
      },
      {
        "id": "f01cdd326453d8c860a2960fa9845c6a38f567cd",
        "date": "2023-11-07T06:04:58Z",
        "message": "feat: Adding labels for service discovery"
      },
      {
        "id": "69b77712af61452261d8ca970aebf49e5c4ae586",
        "date": "2023-10-19T09:47:38Z",
        "message": "fix: fixing ip generation for host_os"
      },
      {
        "id": "7532f878fe170c29180bf4bf512efcbc0febb8d6",
        "date": "2023-10-10T05:25:31Z",
        "message": "feat: Service discovery v2"
      },
      {
        "id": "b5f06d6d493bcfa336402e45003d9c3b9a436534",
        "date": "2023-09-11T12:18:39Z",
        "message": "feat: Introducing node status updater"
      }
    ],
    "line_additions": 2589,
    "line_deletions": 115,
    "lines_effected_total": 2704,
    "rel_comm_add": 3,
    "rel_comm_del": 2,
    "rel_comm_total": 3
  },
  {
    "login": "alexandru-uta",
    "id": 23659941,
    "totalContributions": 33,
    "github": "https://github.com/alexandru-uta",
    "commits": [
      {
        "id": "c812b557f5abde0a22b21fd1e54ded7a56b72a9b",
        "date": "2023-10-25T09:40:57Z",
        "message": "Merge branch 'alexuta/run-799' into 'master'\n\n[RUN-799] Enable new instrumentation on verified app subnets.\n\nNew instrumentation has been running successfully on application subnets. We now enable it on verified app subnets. \n\nSee merge request dfinity-lab/public/ic!15631"
      },
      {
        "id": "239aab5b99014bb93fe301ae653c0a5e101610d8",
        "date": "2023-10-25T09:40:56Z",
        "message": "[RUN-799] Enable new instrumentation on verified app subnets."
      },
      {
        "id": "a4006cf4f591eb3543355f26660e9abc234f8c54",
        "date": "2023-10-04T10:23:55Z",
        "message": "Merge branch 'mk/charge_for_dirty_heap_a_test' into 'master'\n\n[RUN-792] Enable new WASM metering on Application subnets\n\nThe new instrumentation is enabled by merging this MR. The instrumentation has been [presented to the community](https://forum.dfinity.org/t/new-wasm-instrumentation/22080) and the community has voted positively for the [NNS motion](https://dashboard.internetcomputer.org/proposal/124816) that proposes to enable it on mainnet. \n\nSee merge request dfinity-lab/public/ic!14032"
      },
      {
        "id": "83298f969b286d5934781b5f42a142f0a1643291",
        "date": "2023-08-17T14:26:10Z",
        "message": "Merge branch 'alexuta/double_query_threads_everywhere' into 'master'\n\n[RUN-699] Double amount of total query threads for all subnet types\n\nThis is part of the larger feature regarding the file-backed allocator. This was recently enabled on all types of subnets and therefore we can also double the number of query threads. Application subnets have been running successfully for the past few months with the file backed allocator and 4 query threads in total with good performance and no known regressions. \n\nSee merge request dfinity-lab/public/ic!14212"
      },
      {
        "id": "497c328e6ccea2483956733e5d0e581a119aeb90",
        "date": "2023-08-17T14:26:10Z",
        "message": "[RUN-699] Double amount of total query threads for all subnet types"
      },
      {
        "id": "20cf2eedd05e4af3601d2217090643d2946acaa1",
        "date": "2023-08-16T16:40:39Z",
        "message": "Merge branch 'alexuta/enable_fb_allocator' into 'master'\n\nEnable File-backed Allocator on all subnets\n\nThis MR enables the file-backed allocator on all subnets. We have done extensive performance testing and there are no known regressions. Also, the file-backed allocator has run successfully on mainnet for application subnets in the last few months without any performance degradation. \n\nSee merge request dfinity-lab/public/ic!14184"
      },
      {
        "id": "b33ea3ecf4fd36ddf02cfaa7a670c47ffb2e39d7",
        "date": "2023-08-16T16:40:39Z",
        "message": "Enable File-backed Allocator on all subnets"
      }
    ],
    "email": "alexandru.uta@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 7,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 4,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "239aab5b99014bb93fe301ae653c0a5e101610d8",
        "date": "2023-10-25T09:40:56Z",
        "message": "[RUN-799] Enable new instrumentation on verified app subnets."
      },
      {
        "id": "497c328e6ccea2483956733e5d0e581a119aeb90",
        "date": "2023-08-17T14:26:10Z",
        "message": "[RUN-699] Double amount of total query threads for all subnet types"
      },
      {
        "id": "b33ea3ecf4fd36ddf02cfaa7a670c47ffb2e39d7",
        "date": "2023-08-16T16:40:39Z",
        "message": "Enable File-backed Allocator on all subnets"
      }
    ],
    "line_additions": 6,
    "line_deletions": 20,
    "lines_effected_total": 26,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 1
  },
  {
    "login": "m4rtinkoenig",
    "id": 90192168,
    "totalContributions": 32,
    "github": "https://github.com/m4rtinkoenig",
    "commits": [
      {
        "id": "7dc0da584f99e2c9fda1171d1e9888275140f2b7",
        "date": "2023-11-02T10:18:51Z",
        "message": "Merge branch 'martin/chore-uvm-add-vfat-rule' into 'master'\n\nfeat(bazel,uvm-image): bazel native build [IDX-2973]\n\n \n\nSee merge request dfinity-lab/public/ic!15041"
      },
      {
        "id": "fac63597fd3b46a2a03a1d87b60083c8d3483910",
        "date": "2023-11-02T10:18:51Z",
        "message": "feat(bazel,uvm-image): bazel native build [IDX-2973]"
      },
      {
        "id": "9c1ec533e5457e1a8e8d524952a85b18df87dd7a",
        "date": "2023-10-26T07:44:45Z",
        "message": "Merge branch 'martin/fix-uvm-image-vfat-reproducibility' into 'master'\n\nfix(uvm-config-image): reproducible build [IDX-2989]\n\nThis should fix the irreproducibility of the uvm-config-image (vfat image), by setting a fixed serial number.\n\nCurrent behaviour:\n\n```plaintext\ndiffoscope artifacts_5367856027/vfat.image artifacts_5369825052/vfat.image\n--- artifacts_5367856027/vfat.image\n+++ artifacts_5369825052/vfat.image\n│┄ Installing the 'guestfs' Python module may produce a better output.\n├── filetype from file(1)\n│ @@ -1 +1 @@\n│ -DOS/MBR boot sector, code offset 0x3c+2, OEM-ID \"mkfs.fat\", sectors/cluster 8, reserved sectors 8, root entries 512, Media descriptor 0xf8, sectors/FAT 224, sectors/track 32, heads 64, sectors 458045 (volumes > 32 MB), serial number 0x357e2b0f, label: \"CONFIG     \", FAT (16 bit)\n│ +DOS/MBR boot sector, code offset 0x3c+2, OEM-ID \"mkfs.fat\", sectors/cluster 8, reserved sectors 8, root entries 512, Media descriptor 0xf8, sectors/FAT 224, sectors/track 32, heads 64, sectors 458045 (volumes > 32 MB), serial number 0xba71d3b1, label: \"CONFIG     \", FAT (16 bit)\n``` \n\nSee merge request dfinity-lab/public/ic!15662"
      },
      {
        "id": "2f47bf2b09b540479ea6b23981d010adaed0cb46",
        "date": "2023-10-26T07:44:45Z",
        "message": "fix(uvm-config-image): reproducible build [IDX-2989]"
      },
      {
        "id": "3f6a4792efa55ffca27a7ff5ba876cb972eeae88",
        "date": "2023-10-24T11:48:47Z",
        "message": "Merge branch 'martin/chore-uvm-add-mcopy-rule' into 'master'\n\nchore(bazel,uvm-image): add mcopy rule [IDX-2973]\n\nThis MR adds a mcopy rule. This rule receives the files from srcs and remap_path the remap filenames. The tar and untar rules are still used to calculate the size of the vfat image.\n\n### Current master:\n```\nubuntu@devenv-container:/ic$ ls bazel-out/k8-opt/bin/rs/tests/custom_domains_uvm_config_image_untar\nbazel-out/k8-opt/bin/rs/tests/custom_domains_uvm_config_image_untar:\nactivate  cloudflare_api.py  coredns.tar  openssl.tar  pebble.tar  pebble_cache.py  python3.tar\n\nubuntu@devenv-container:/ic$ fatcat bazel-out/k8-opt/bin/rs/tests/custom_domains_uvm_config_image_uncompressed -l /\nListing path /\nDirectory cluster: 0\nf 19/10/2023 08:06:04  ACTIVATE                       c=2 s=314 (314B)\nf 19/10/2023 08:06:04  cloudflare_api.py              c=3 s=14789 (14.4424K)\nf 19/10/2023 08:06:04  COREDNS.TAR                    c=5 s=53627904 (51.1436M)\nf 19/10/2023 08:06:04  OPENSSL.TAR                    c=6552 s=8330752 (7.94482M)\nf 19/10/2023 08:06:04  PEBBLE.TAR                     c=7569 s=17437184 (16.6294M)\nf 19/10/2023 08:06:04  pebble_cache.py                c=9698 s=8345 (8.14941K)\nf 19/10/2023 08:06:04  PYTHON3.TAR                    c=9700 s=55032320 (52.4829M)\n```\n\n### This branch\n```\nubuntu@devenv-container:/ic$ ls bazel-out/k8-opt/bin/rs/tests/custom_domains_uvm_config_image_untar\nbazel-out/k8-opt/bin/rs/tests/custom_domains_uvm_config_image_untar:\nactivate  cloudflare_api.py  coredns.tar  openssl.tar  pebble.tar  pebble_cache.py  python3.tar\n\nubuntu@devenv-container:/ic$ fatcat bazel-out/k8-opt/bin/rs/tests/custom_domains_uvm_config_image_mcopy -l /\nListing path /\nDirectory cluster: 0\nf 19/10/2023 11:13:24  COREDNS.TAR                    c=2 s=53627904 (51.1436M)\nf 19/10/2023 11:13:22  OPENSSL.TAR                    c=6549 s=8330752 (7.94482M)\nf 19/10/2023 11:13:22  PEBBLE.TAR                     c=7566 s=17437184 (16.6294M)\nf 19/10/2023 11:13:22  PYTHON3.TAR                    c=9695 s=55032320 (52.4829M)\nf 29/8/2023 13:22:40  ACTIVATE                       c=16413 s=314 (314B)\nf 29/8/2023 13:22:40  pebble_cache.py                c=16414 s=8345 (8.14941K)\nf 13/10/2023 07:14:52  cloudflare_api.py              c=16416 s=14789 (14.4424K)\n```\n\nAfter adjusting the order of the files:\n![Screenshot_2023-10-20_at_10.51.44](/uploads/7825a2ede54be3ab0247d8d93f3d5c8d/Screenshot_2023-10-20_at_10.51.44.png)\n\nhttps://www.diffchecker.com/waHbynMg/ \n\nSee merge request dfinity-lab/public/ic!15038"
      },
      {
        "id": "0138de8d1a95faae3c0261f6075fd9b7332ff3b8",
        "date": "2023-10-24T11:48:46Z",
        "message": "chore(bazel,uvm-image): add mcopy rule [IDX-2973]"
      },
      {
        "id": "d4624c8ab642745def6e262cb6980f7ab3763bc7",
        "date": "2023-09-27T12:49:05Z",
        "message": "Merge branch 'martin/chore-uvm-image-remove-from-tar-script' into 'master'\n\nchore(bazel,uvm-image): remove nested script\n\n \n\nSee merge request dfinity-lab/public/ic!15003"
      },
      {
        "id": "6d14908ecd73653d04b64b37fec55ec5bac2c8a5",
        "date": "2023-09-27T12:49:05Z",
        "message": "chore(bazel,uvm-image): remove nested script"
      },
      {
        "id": "5528aa6f0078bdcf0fb46b58d28809e4fbba26fd",
        "date": "2023-09-22T12:09:35Z",
        "message": "Merge branch 'martin/chore-uvm-modularize-zstd' into 'master'\n\nchore(bazel,uvm-image): move out zstd [IDX-2973]\n\nThis MR moves zstd to the uvm_config_image macro. \n\nSee merge request dfinity-lab/public/ic!14896"
      },
      {
        "id": "ccefa1e5182103ddc9fa5ab6d17823171c957873",
        "date": "2023-09-22T12:09:35Z",
        "message": "chore(bazel,uvm-image): move out zstd [IDX-2973]"
      },
      {
        "id": "00a4ab409e6236d4082cee4a47544a2d87b7190d",
        "date": "2023-09-21T11:43:54Z",
        "message": "Merge branch 'martin/chore-uvm-remove-nns-dapp-spec-image' into 'master'\n\nchore(bazel): remove uvm nns-dapp-spec image\n\nThis MR removes the bazel target `nns_dapp_specs_uvm_config_image`. It does not compile bcs `nns_dapp_specs_image.tar` does not exist in the source tree.\n\nAccording to NNS team, it is not used: https://dfinity.slack.com/archives/C0175CHJ0P6/p1695217344129109 \n\nSee merge request dfinity-lab/public/ic!14924"
      },
      {
        "id": "9d0a0452a8c325a01baa42f383929d6eb50ca166",
        "date": "2023-09-21T09:50:51Z",
        "message": "chore(bazel): remove uvm nns-dapp-spec image"
      },
      {
        "id": "b3ae85fc3b98be24931518a5d80e916cd7eb6336",
        "date": "2023-09-20T15:35:25Z",
        "message": "Merge branch 'levsha/Fix-typo-' into 'master'\n\nFix typo.\n\n \n\nSee merge request dfinity-lab/public/ic!14905"
      },
      {
        "id": "42085936a9e0238239ddb17c666991317de3b56a",
        "date": "2023-09-19T13:55:54Z",
        "message": "Merge branch 'martin/fix-build-reprod' into 'master'\n\nfix(IDX-2905): build reproducibility\n\nScript `build-diff.sh` is broken since we’re on K8s and further more, doing diffoscope is slow if we feed `*.img` directly to it. It’s more efficient to create loop device, mount it under dir and run diffoscope on that dir.  \n\nIt seems to make more sense to provide good instructions how to create loop device of the image, mount it's partition somewhere and run `diffoscope` on it. We can consider automating this and providing means any person can run this on GitHub via GH Actions, once we're fully on GH. \n\nSee merge request dfinity-lab/public/ic!13231"
      },
      {
        "id": "f6eff5f974968eb9da0fb978d213473a26718644",
        "date": "2023-09-19T13:55:53Z",
        "message": "fix(IDX-2905): build reproducibility"
      },
      {
        "id": "7ea635348820b540dbba3d990338b194b298217b",
        "date": "2023-09-13T16:26:43Z",
        "message": "Merge branch 'martin/chore-test-bazel-tag' into 'master'\n\nchore(ci,bazel-infra): rollout bazel tag [IDX-2919]\n\nThis MR rolls out multicluster bazel infra for CI. \n\nSee merge request dfinity-lab/public/ic!14714"
      },
      {
        "id": "f84e0ad43da2564de148199d01c8779e4c0f8e3b",
        "date": "2023-09-13T16:26:42Z",
        "message": "chore(ci,bazel-infra): rollout bazel tag [IDX-2919]"
      },
      {
        "id": "1d264ad11677de02a30cfda41b0a8b6831819a5b",
        "date": "2023-08-29T09:26:52Z",
        "message": "Merge branch 'fix-boundary-nodes-grafana-deps' into 'master'\n\nadd missing Grafana deps to boundary-node system-test target\n\n \n\nSee merge request dfinity-lab/public/ic!14437"
      },
      {
        "id": "9762f559632a312b06b8e5fc674001958ebec74b",
        "date": "2023-08-11T14:49:37Z",
        "message": "Merge branch 'stschnei/hash-tree-errors' into 'master'\n\nchore: Error handling and metrics for hash tree computation\n\nWith this MR we catch various failure modes for the hash tree\ncomputation and return an error instead. In particular, integers\noverflowing and excessive recursive calls.\n\nIt also adds some metrics related to the size of the indices. \n\nSee merge request dfinity-lab/public/ic!13976"
      },
      {
        "id": "3cb7b6f5e7790efe3c8c328794f620005ad8edfa",
        "date": "2023-08-11T11:31:24Z",
        "message": "Merge branch 'martin/chore-http-utils-follow-redirects' into 'master'\n\nchore(http-utils,file-downloader): follow redirect\n\nThis MR implements an http redirect for `FileDownloader::http_get()` in `rs/http_utils/src/file_downloader.rs`.\n\nThis would be the preferred solution for IDX to provide images like the upgrade image from different servers. We want to unify access to these servers behind a redirect server that responds with an http redirect.\n\n**Note**: This redirect server runs in our Kubernetes clusters and could potentially be compromised. I assume that this should not be a problem since the image is verified with its hash. \n\nSee merge request dfinity-lab/public/ic!14041"
      },
      {
        "id": "202b96700e973bd6121a8575bf0d475d95ddfb87",
        "date": "2023-08-11T11:31:23Z",
        "message": "chore(http-utils,file-downloader): follow redirect"
      },
      {
        "id": "c341ca9335c27cc1a56f6abae9279732b369eb9c",
        "date": "2023-08-11T08:46:03Z",
        "message": "Merge branch 'error-to-warning' into 'master'\n\nchore(ci): change `repro-check.sh`  requirements checks from errors to warning\n\n \n\nSee merge request dfinity-lab/public/ic!14110"
      },
      {
        "id": "44875c863fd6ad1e65f5fd976916b07739614e18",
        "date": "2023-08-11T08:21:38Z",
        "message": "Merge branch 'rename-repro-check.sh' into 'master'\n\nchore(ci): rename `build-verifier.sh` to `repro-check.sh`\n\n \n\nSee merge request dfinity-lab/public/ic!14109"
      },
      {
        "id": "078b3a7ccf63c07e3526b7c6ea70bacbf6b25b1a",
        "date": "2023-08-03T13:47:40Z",
        "message": "Merge branch 'change-readme' into 'master'\n\nchore: change `README`\n\nPiping into bash breaks tty with the underlying `build-ic.sh` script, instead we opt for an easier one liner. \n\nSee merge request dfinity-lab/public/ic!13946"
      },
      {
        "id": "6a6c8abe5522dbf5897428b8f186b275d4efb8d8",
        "date": "2023-08-03T11:23:53Z",
        "message": "fix(bazel,sha256sum): follow redirect"
      }
    ],
    "email": "martin.koenig@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 25,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 15,
    "fixes": 3,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "fac63597fd3b46a2a03a1d87b60083c8d3483910",
        "date": "2023-11-02T10:18:51Z",
        "message": "feat(bazel,uvm-image): bazel native build [IDX-2973]"
      },
      {
        "id": "2f47bf2b09b540479ea6b23981d010adaed0cb46",
        "date": "2023-10-26T07:44:45Z",
        "message": "fix(uvm-config-image): reproducible build [IDX-2989]"
      },
      {
        "id": "0138de8d1a95faae3c0261f6075fd9b7332ff3b8",
        "date": "2023-10-24T11:48:46Z",
        "message": "chore(bazel,uvm-image): add mcopy rule [IDX-2973]"
      },
      {
        "id": "6d14908ecd73653d04b64b37fec55ec5bac2c8a5",
        "date": "2023-09-27T12:49:05Z",
        "message": "chore(bazel,uvm-image): remove nested script"
      },
      {
        "id": "ccefa1e5182103ddc9fa5ab6d17823171c957873",
        "date": "2023-09-22T12:09:35Z",
        "message": "chore(bazel,uvm-image): move out zstd [IDX-2973]"
      },
      {
        "id": "9d0a0452a8c325a01baa42f383929d6eb50ca166",
        "date": "2023-09-21T09:50:51Z",
        "message": "chore(bazel): remove uvm nns-dapp-spec image"
      },
      {
        "id": "f6eff5f974968eb9da0fb978d213473a26718644",
        "date": "2023-09-19T13:55:53Z",
        "message": "fix(IDX-2905): build reproducibility"
      },
      {
        "id": "f84e0ad43da2564de148199d01c8779e4c0f8e3b",
        "date": "2023-09-13T16:26:42Z",
        "message": "chore(ci,bazel-infra): rollout bazel tag [IDX-2919]"
      },
      {
        "id": "202b96700e973bd6121a8575bf0d475d95ddfb87",
        "date": "2023-08-11T11:31:23Z",
        "message": "chore(http-utils,file-downloader): follow redirect"
      },
      {
        "id": "6a6c8abe5522dbf5897428b8f186b275d4efb8d8",
        "date": "2023-08-03T11:23:53Z",
        "message": "fix(bazel,sha256sum): follow redirect"
      }
    ],
    "line_additions": 375,
    "line_deletions": 298,
    "lines_effected_total": 673,
    "rel_comm_add": 6,
    "rel_comm_del": 6,
    "rel_comm_total": 7
  },
  {
    "login": "robin-kunzler",
    "id": 60650552,
    "totalContributions": 32,
    "github": "https://github.com/robin-kunzler",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "nabdullindfinity",
    "id": 135595192,
    "totalContributions": 24,
    "github": "https://github.com/nabdullindfinity",
    "commits": [
      {
        "id": "cb65a3f3d0215af64ab139073ad4fea046eb3e50",
        "date": "2023-11-22T16:40:14Z",
        "message": "Merge branch 'NA/NODE-140-second-part-scripts' into 'master'\n\nfeat(NODE-140): HostOS and GuestOS upgrade status reporting from boot scripts, second attempt\n\n\\[NODE-140\\] Report HostOS upgrade status in various phases of the upgrade/boot scripts.\n\nThis is a second attempt (superseding the reverted https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/14173) with adjusted permissions (in https://gitlab.com/dfinity-lab/public/ic/-/merge_requests/16029) and here `manageboot.sh` of GuestOS will unconditionally elevate its privileges.\n\n1. HostOS metrics:\n   1. Renamed `hostos_guestos_first_boot_state` to `hostos_first_boot_state` to avoid confusion.\n   2. New `hostos_boot_stable` metric is \"1\" if the current boot has been confirmed and marked as stable, otherwise \"0\".\n   3. New `hostos_first_boot_state` metric is \"1\" if the current boot is the first boot of a newly installed HostOS, otherwise \"0\".\n   4. New `hostos_boot_action` metric is \"1\" if an explicit change has been made, otherwise \"0\" and has the following attributes depending on changes in boot flows or states:\n      * `{successful_boot=\"true\"}` if the HostOS boot has progressed up to starting GuestOS\n      * `{confirm_boot=\"PARTITION_NAME\",version=\"HOSTOS_VERSION_NAME\"}` if a partition name (boot slot) has been explicitly confirmed as successfully booted. HostOS version string is the one on the currently booted filesystem.\n      * `{next_boot=\"PARTITION_NAME\",version=\"HOSTOS_VERSION_NAME\"}` if a boot slot has been marked as failsafe after installing the upgrade. HostOS version string is the one on the currently booted filesystem.\n      * `{written_boot=\"PARTITION_NAME\"}` or `{written_root=\"PARTITION_NAME\"}` if a boot slot has been written to by the upgrade script and `{written_var=\"true\"}` if the `/var` partition has been wiped by the same script.\n2. GuestOS metrics:\n   1. New `guestos_boot_stable` metric is \"1\" if the current boot has been confirmed and marked as stable, otherwise \"0\".\n   2. New `guestos_boot_action` metric is \"1\" if an explicit change has been made, otherwise \"0\" and has the following attributes depending on changes in boot flows or states:\n      * `{successful_boot=\"true\"}` if the GuestOS boot has progressed up to starting the replica\n      * `{committed=\"true\"}` if the previously written upgrade was committed (via the 'upgrade-commit' command of the script)\n      * `{confirm_boot=\"PARTITION_NAME\",version=\"GUESTOS_VERSION_NAME\"}` if a partition name (boot slot) has been explicitly confirmed as successfully booted. GuestOS version string is the one on the currently booted filesystem.\n      * `{next_boot=\"PARTITION_NAME\",version=\"GUESTOS_VERSION_NAME\"}` if a boot slot has been marked as failsafe after installing the upgrade. GuestOS version string is the one on the currently booted filesystem.\n      * `{written_boot=\"PARTITION_NAME\"} or {written_root=\"PARTITION_NAME\"}` if a boot slot has been written to by the upgrade script and `{written_var=\"true\"}` if the `/var` partition has been wiped by the same script.\n3. Logging: similar for HostOS and GuestOS, reporting the same versions, slot names and boot actions as the metrics in the same places for emergency troubleshooting. \n\nSee merge request dfinity-lab/public/ic!16195"
      },
      {
        "id": "af7e72803eb9b056c839a077410b95af94116f73",
        "date": "2023-11-22T16:40:14Z",
        "message": "feat(NODE-140): HostOS and GuestOS upgrade status reporting from boot scripts, second attempt"
      },
      {
        "id": "dab4758f3e3617fbc0646d376671623067f89875",
        "date": "2023-11-15T17:41:09Z",
        "message": "Merge branch 'NA/NODE-140-first-part-container' into 'master'\n\nfeat(NODE-140): allow manageboot.sh to interact with the node_exporter textfile metrics directory\n\nImplements the SELinux configuration for NODE-140. See follow-up MRs for actual implementation. \n\nSee merge request dfinity-lab/public/ic!16029"
      },
      {
        "id": "c6c0dcc2e89bbda5ed44f0f879711f05206943f3",
        "date": "2023-11-10T19:33:46Z",
        "message": "feat(NODE-140): allow manageboot.sh to interact with the node_exporter textfile metrics directory"
      },
      {
        "id": "74b2eb5325fe7fc67ca523819b84d5a1f172da38",
        "date": "2023-10-25T16:15:20Z",
        "message": "Merge branch 'NA/launch-single-vm-farm-fixes' into 'master'\n\nfix(NODE-1153): bring launch-single-vm metadata to Farm standard and use bazel cache URLs\n\nIn the Farm job metadata for, we now specify:\n- user == `$HOSTUSER` of the devcontainer, or \"unknown\" if empty\n- job_schedule == \"manual\" or CI job if available in the env vars\n- test_name == `test_single_vm`\n- group_name == `test_single_vm--1698081880388` where the last digits are milliseconds in unix epoch\n\nIn addition, we switch the `launch-remote-vm` task to using the bazel cache url as in `:disk-img.tar.zst.cas-url` instead of the CDN upload as it has been before. \n\nSee merge request dfinity-lab/public/ic!15581"
      },
      {
        "id": "4919ad3fad763b51142d992745891ce2a0464837",
        "date": "2023-10-25T16:15:11Z",
        "message": "fix(NODE-1153): bring launch-single-vm metadata to Farm standard and use bazel cache URLs"
      },
      {
        "id": "2b4e42569e796b3407a1edd391425fc3fa777404",
        "date": "2023-10-20T13:45:16Z",
        "message": "fix: Revert NODE-140 and partial fixes to it against the master branch"
      },
      {
        "id": "ceac71214ecabba7370b49106b96aed0a3cf4e30",
        "date": "2023-10-17T12:25:27Z",
        "message": "Merge branch 'NA/launch-single-vm-fixes' into 'master'\n\nfix: allow running local IC-OS VMs without KVM support and doc updates\n\nDuplicated the `launch-local-vm` build target into: \n\n```null\nbazel run //ic-os/guestos/envs/dev:launch-local-vm-no-kvm\n```\n\nto allow running it in VMs/containers, and updated GuestOS readme to reflect the new names of the build targets, `launch-local-vm` and `launch-remote-vm` . \n\nSee merge request dfinity-lab/public/ic!15409"
      },
      {
        "id": "2828b11fdab30e0e14eded1c6d68a2e678f80a0b",
        "date": "2023-10-17T12:25:25Z",
        "message": "fix: allow running local IC-OS VMs without KVM support and doc updates"
      },
      {
        "id": "66b072419c242160e95b2355bb777151a3556576",
        "date": "2023-10-09T18:10:59Z",
        "message": "Merge branch 'gary/gen1-setupos-hardware-fix' into 'master'\n\nfix: NODE-1128 - Fix cpu thread detection for gen1 nodes\n\nFixed by increasing the expected gen1 thread count to 64. Testing pending. \n\n'''\nThe change in SetupOS hardware.sh detections (line and line) introduced in SAML single sign-on for DFINITY Lab · GitLab uses nproc to get the number of cores/threads/logical processors. On a Gen1 node, nproc returns 64 if SMT is enabled (which it is by default), but the script expects 32.\n\nSMT is also enabled on our mainnet Gen1 fleet, so we should modify the script to calculate the number of cores/threads correctly to ensure that SetupOS still works on Gen1 machines correctly.\n''' \n\nCloses NODE-1128\n\nSee merge request dfinity-lab/public/ic!15300"
      },
      {
        "id": "e6ae33e0713a1c3f9e9b4b621cc7459b718ca9dc",
        "date": "2023-10-09T18:07:08Z",
        "message": "Merge branch 'NA/NODE-140-upgrade-reporting-alt' into 'master'\n\nfeat(NODE-140): HostOS and GuestOS upgrade status reporting from boot scripts\n\n\\[ NODE-140\\] Report HostOS upgrade status in various phases of the upgrade/boot scripts.\n\n1. HostOS metrics:\n   1. Renamed `hostos_guestos_first_boot_state` to `hostos_first_boot_state` to avoid confusion.\n   2. New `hostos_boot_stable` metric is \"1\" if the current boot has been confirmed and marked as stable, otherwise \"0\".\n   3. New `hostos_first_boot_state` metric is \"1\" if the current boot is the first boot of a newly installed HostOS, otherwise \"0\".\n   4. New `hostos_boot_action` metric is \"1\" if an explicit change has been made, otherwise \"0\" and has the following attributes depending on changes in boot flows or states:\n      * `{successful_boot=\"true\"}` if the HostOS boot has progressed up to starting GuestOS\n      * `{confirm_boot=\"PARTITION_NAME\",version=\"HOSTOS_VERSION_NAME\"}` if a partition name (boot slot) has been explicitly confirmed as successfully booted. HostOS version string is the one on the currently booted filesystem.\n      * `{next_boot=\"PARTITION_NAME\",version=\"HOSTOS_VERSION_NAME\"}` if a boot slot has been marked as failsafe after installing the upgrade. HostOS version string is the one on the currently booted filesystem.\n      * `{written_boot=\"PARTITION_NAME\"}` or `{written_root=\"PARTITION_NAME\"}` if a boot slot has been written to by the upgrade script and `{written_var=\"true\"}` if the `/var` partition has been wiped by the same script.\n2. GuestOS metrics:\n   1. New `guestos_boot_stable` metric is \"1\" if the current boot has been confirmed and marked as stable, otherwise \"0\".\n   2. New `guestos_boot_action` metric is \"1\" if an explicit change has been made, otherwise \"0\" and has the following attributes depending on changes in boot flows or states:\n      * `{successful_boot=\"true\"}` if the GuestOS boot has progressed up to starting the replica\n      * `{committed=\"true\"}` if the previously written upgrade was committed (via the 'upgrade-commit' command of the script)\n      * `{confirm_boot=\"PARTITION_NAME\",version=\"GUESTOS_VERSION_NAME\"}` if a partition name (boot slot) has been explicitly confirmed as successfully booted. GuestOS version string is the one on the currently booted filesystem.\n      * `{next_boot=\"PARTITION_NAME\",version=\"GUESTOS_VERSION_NAME\"}` if a boot slot has been marked as failsafe after installing the upgrade. GuestOS version string is the one on the currently booted filesystem.\n      * `{written_boot=\"PARTITION_NAME\"} or {written_root=\"PARTITION_NAME\"}` if a boot slot has been written to by the upgrade script and `{written_var=\"true\"}` if the `/var` partition has been wiped by the same script.\n3. Logging: similar for HostOS and GuestOS, reporting the same versions, slot names and boot actions as the metrics in the same places for emergency troubleshooting. \n\nSee merge request dfinity-lab/public/ic!14173"
      },
      {
        "id": "881d0a197306125e053a0a43d343812f56a9ac9c",
        "date": "2023-10-09T18:07:08Z",
        "message": "feat(NODE-140): HostOS and GuestOS upgrade status reporting from boot scripts"
      },
      {
        "id": "4d74394338bcce98c38e8739c786b91f907602bf",
        "date": "2023-08-02T10:47:13Z",
        "message": "Merge branch 'NA/NODE-1029-disable-cache' into 'master'\n\nfix(NODE-1029): For new deployments, disable QEMU virtio-blk disk driver cache on the host side\n\nfix(NODE-1029): For new deployments, disable QEMU virtio-blk disk driver cache on the host side to improve disk throughput.\nNOTE: This fix only works for **new** deployments on fresh machines (**from SetupOS**). See follow-up MRs for hotfix scripts. \n\nSee merge request dfinity-lab/public/ic!13892"
      },
      {
        "id": "a535e8fbba2d02399a0766af1da6d8ff9cf6394a",
        "date": "2023-08-02T10:47:12Z",
        "message": "fix(NODE-1029): For new deployments, disable QEMU virtio-blk disk driver cache on the host side"
      },
      {
        "id": "452597dbabd616bc32e8162ae00d76106fb8f67d",
        "date": "2023-08-02T10:24:24Z",
        "message": "Merge branch 'NA/dev-build-perf-tools-more' into 'master'\n\nDEV builds: add performance testing tools and their dependencies\n\nFor DEV builds only:\n\n1. Add sar and iostat;\n2. more dependencies and tools needed by bpftrace and perf;\n3. static busybox. \n\nSee merge request dfinity-lab/public/ic!13891"
      }
    ],
    "email": "nikita.abdullin@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 15,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 8,
    "fixes": 4,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "af7e72803eb9b056c839a077410b95af94116f73",
        "date": "2023-11-22T16:40:14Z",
        "message": "feat(NODE-140): HostOS and GuestOS upgrade status reporting from boot scripts, second attempt"
      },
      {
        "id": "c6c0dcc2e89bbda5ed44f0f879711f05206943f3",
        "date": "2023-11-10T19:33:46Z",
        "message": "feat(NODE-140): allow manageboot.sh to interact with the node_exporter textfile metrics directory"
      },
      {
        "id": "4919ad3fad763b51142d992745891ce2a0464837",
        "date": "2023-10-25T16:15:11Z",
        "message": "fix(NODE-1153): bring launch-single-vm metadata to Farm standard and use bazel cache URLs"
      },
      {
        "id": "2b4e42569e796b3407a1edd391425fc3fa777404",
        "date": "2023-10-20T13:45:16Z",
        "message": "fix: Revert NODE-140 and partial fixes to it against the master branch"
      },
      {
        "id": "2828b11fdab30e0e14eded1c6d68a2e678f80a0b",
        "date": "2023-10-17T12:25:25Z",
        "message": "fix: allow running local IC-OS VMs without KVM support and doc updates"
      },
      {
        "id": "881d0a197306125e053a0a43d343812f56a9ac9c",
        "date": "2023-10-09T18:07:08Z",
        "message": "feat(NODE-140): HostOS and GuestOS upgrade status reporting from boot scripts"
      },
      {
        "id": "a535e8fbba2d02399a0766af1da6d8ff9cf6394a",
        "date": "2023-08-02T10:47:12Z",
        "message": "fix(NODE-1029): For new deployments, disable QEMU virtio-blk disk driver cache on the host side"
      }
    ],
    "line_additions": 562,
    "line_deletions": 299,
    "lines_effected_total": 861,
    "rel_comm_add": 5,
    "rel_comm_del": 3,
    "rel_comm_total": 6
  },
  {
    "login": "manudrijvers",
    "id": 20458059,
    "totalContributions": 23,
    "github": "https://github.com/manudrijvers",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "LaraAS",
    "id": 73884086,
    "totalContributions": 21,
    "github": "https://github.com/LaraAS",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "hugolgst",
    "id": 15371828,
    "totalContributions": 19,
    "github": "https://github.com/hugolgst",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "Luka-DFINITY",
    "id": 96820107,
    "totalContributions": 16,
    "github": "https://github.com/Luka-DFINITY",
    "commits": [
      {
        "id": "c65e7a07c35cfbeb13056bbb0de1e445346bf5c0",
        "date": "2023-11-15T16:57:40Z",
        "message": "feat(k8s-testnet): start/stop vms"
      },
      {
        "id": "246cd18804e95ab5f4c17970c73022d1d42c3076",
        "date": "2023-11-13T18:45:45Z",
        "message": "feat(k8s-testnet): implement terminate-time"
      },
      {
        "id": "ecd0d21fcff3937bcc46f3ecab1595205d6da9b5",
        "date": "2023-11-10T20:34:32Z",
        "message": "Merge branch 'k8s-tnet-namespaced' into 'master'\n\nfeat(k8s-testnet): namespaced k8s testnet\n\n \n\nSee merge request dfinity-lab/public/ic!15994"
      },
      {
        "id": "009183b2affc0f8591e7b69782156dc8e4c2a99f",
        "date": "2023-11-10T20:34:32Z",
        "message": "feat(k8s-testnet): namespaced k8s testnet"
      },
      {
        "id": "d9615bd9d4561728547c3e60835e41d1db4736f2",
        "date": "2023-11-07T11:47:35Z",
        "message": "Merge branch 'k8s-testnet-warning-cleanup' into 'master'\n\nchore(k8s-testnet): cleanup warnings\n\n* removing unused code/imports\n* check result returns in some places\n* removing unnecessary borrows/muts \n\nSee merge request dfinity-lab/public/ic!15932"
      },
      {
        "id": "11b1b23bad22f5e406257c42b64c94dbfdd0b1f6",
        "date": "2023-11-07T11:47:35Z",
        "message": "chore(k8s-testnet): cleanup warnings"
      }
    ],
    "email": "luka.skugor@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 6,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 2,
    "fixes": 0,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "c65e7a07c35cfbeb13056bbb0de1e445346bf5c0",
        "date": "2023-11-15T16:57:40Z",
        "message": "feat(k8s-testnet): start/stop vms"
      },
      {
        "id": "246cd18804e95ab5f4c17970c73022d1d42c3076",
        "date": "2023-11-13T18:45:45Z",
        "message": "feat(k8s-testnet): implement terminate-time"
      },
      {
        "id": "009183b2affc0f8591e7b69782156dc8e4c2a99f",
        "date": "2023-11-10T20:34:32Z",
        "message": "feat(k8s-testnet): namespaced k8s testnet"
      },
      {
        "id": "11b1b23bad22f5e406257c42b64c94dbfdd0b1f6",
        "date": "2023-11-07T11:47:35Z",
        "message": "chore(k8s-testnet): cleanup warnings"
      }
    ],
    "line_additions": 336,
    "line_deletions": 219,
    "lines_effected_total": 555,
    "rel_comm_add": 2,
    "rel_comm_del": 0,
    "rel_comm_total": 2
  },
  {
    "login": "sesi200",
    "id": 14757975,
    "totalContributions": 16,
    "github": "https://github.com/sesi200",
    "commits": [
      {
        "id": "50eb962f0a147db29852f6e7bc1c95ad005a061a",
        "date": "2023-10-24T14:58:23Z",
        "message": "Merge branch 'severin/fix-cmc-did' into 'master'\n\nfix: Bring cmc.did in sync with code\n\nIn !15264 I forgot to correct the CMC's .did file during the last interface changes. \n\nSee merge request dfinity-lab/public/ic!15609"
      },
      {
        "id": "63bd1c173e99155b4bb57cc39e9fae5ce949c8d7",
        "date": "2023-10-24T14:58:23Z",
        "message": "fix: Bring cmc.did in sync with code"
      },
      {
        "id": "8a416c57bf3af043ec30efcb35c646e5b163d815",
        "date": "2023-10-18T09:02:12Z",
        "message": "Merge branch 'SDK-1260-add-option-to-target-specific-subnet-on-cmc' into 'master'\n\nfeat(SDK-1260): allow specifying a subnet on CMC for canister creation\n\nCloses SDK-1260\n\nFor the cycles ledger we need the ability to `notify_create_canister` and `create_canister` to a specific subnet.\n\nThis will requires an interface change. Since I suspect we’ll have more options in the future (e.g. by selecting a minimum size), I’d like to make it easy to add more filtering options. \n\nCloses SDK-1260\n\nSee merge request dfinity-lab/public/ic!15264"
      },
      {
        "id": "bb083881c562cc22b084420c80d12dbc5deee038",
        "date": "2023-10-18T09:02:12Z",
        "message": "feat(SDK-1260): allow specifying a subnet on CMC for canister creation"
      },
      {
        "id": "cebfead1a0c1558f3156979b39348be184ced30b",
        "date": "2023-10-06T09:24:59Z",
        "message": "Merge branch 'SDK-1237-create-the-create-canister-endpoint-on-cmc' into 'master'\n\nfeat(SDK-1237): CMC: add create_canister to allow creating canisters using cycles\n\nCloses SDK-1237\n\nFor the cycles ledger it is required that we can create canister on specific subnets using cycles. So far, only `notify_create_canister` offered this functionality, which requires ICP. This PR adds a `create_canister` endpoint to the CMC that offers the same functionality, but it accepts cycles. \n\nCloses SDK-1237\n\nSee merge request dfinity-lab/public/ic!15110"
      },
      {
        "id": "d1d7cc09ce6978f5edc4e748f4b407bdae626aa4",
        "date": "2023-10-06T09:24:59Z",
        "message": "feat(SDK-1237): CMC: add create_canister to allow creating canisters using cycles"
      },
      {
        "id": "557b532805beb8d63c5ab65146d4e338849a50e1",
        "date": "2023-09-27T07:30:24Z",
        "message": "Merge branch 'NNS1-2430-cmc-add-canister-settings-to-notify-create' into 'master'\n\nfeat(NNS1-2430): CMC: add ability to specify canister settings in notify_create\n\nCloses NNS1-2430\n\nAdds the ability to the CMC to specify canister settings when creating a canister with `notify_create`.\n\nThis is a requirement for the planned cycles ledger integration in dfx. \n\nCloses NNS1-2430\n\nSee merge request dfinity-lab/public/ic!13948"
      },
      {
        "id": "dd6829112e9ff5d01eb11d2c63d3bdfc4da5a39f",
        "date": "2023-09-27T07:30:24Z",
        "message": "feat(NNS1-2430): CMC: add ability to specify canister settings in notify_create"
      }
    ],
    "email": "severin.siffert@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 8,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 4,
    "fixes": 1,
    "feats": 3,
    "non_merge_commits": [
      {
        "id": "63bd1c173e99155b4bb57cc39e9fae5ce949c8d7",
        "date": "2023-10-24T14:58:23Z",
        "message": "fix: Bring cmc.did in sync with code"
      },
      {
        "id": "bb083881c562cc22b084420c80d12dbc5deee038",
        "date": "2023-10-18T09:02:12Z",
        "message": "feat(SDK-1260): allow specifying a subnet on CMC for canister creation"
      },
      {
        "id": "d1d7cc09ce6978f5edc4e748f4b407bdae626aa4",
        "date": "2023-10-06T09:24:59Z",
        "message": "feat(SDK-1237): CMC: add create_canister to allow creating canisters using cycles"
      },
      {
        "id": "dd6829112e9ff5d01eb11d2c63d3bdfc4da5a39f",
        "date": "2023-09-27T07:30:24Z",
        "message": "feat(NNS1-2430): CMC: add ability to specify canister settings in notify_create"
      }
    ],
    "line_additions": 662,
    "line_deletions": 81,
    "lines_effected_total": 743,
    "rel_comm_add": 1,
    "rel_comm_del": 1,
    "rel_comm_total": 1
  },
  {
    "login": "dfinity-bot",
    "id": 58022693,
    "totalContributions": 13,
    "github": "https://github.com/dfinity-bot",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "Mrngilles",
    "id": 6099267,
    "totalContributions": 13,
    "github": "https://github.com/Mrngilles",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "lwshang",
    "id": 13881324,
    "totalContributions": 12,
    "github": "https://github.com/lwshang",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "mstein-dfinity",
    "id": 98627564,
    "totalContributions": 12,
    "github": "https://github.com/mstein-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "martina-dfinity",
    "id": 99174602,
    "totalContributions": 11,
    "github": "https://github.com/martina-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "geekmush",
    "id": 1620201,
    "totalContributions": 10,
    "github": "https://github.com/geekmush",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "ggreif",
    "id": 1312006,
    "totalContributions": 9,
    "github": "https://github.com/ggreif",
    "commits": [],
    "pullRequests": [
      {
        "id": 1492436062,
        "number": 124,
        "title": "fix: synchronise revisions between `ic-btc-validation` to `ic-btc-interface`",
        "created_at": "2023-08-28T17:24:29Z",
        "closed_at": null
      }
    ],
    "pr_count": 1,
    "commit_count": 0,
    "IssuesRaised": [
      {
        "id": 1870155660,
        "number": 124,
        "title": "fix: synchronise revisions between `ic-btc-validation` to `ic-btc-interface`",
        "created_at": "2023-08-28T17:24:29Z",
        "closed_at": null
      }
    ],
    "issue_count": 1,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "pietrodimarco-dfinity",
    "id": 124565147,
    "totalContributions": 9,
    "github": "https://github.com/pietrodimarco-dfinity",
    "commits": [
      {
        "id": "390ebe65461e3cf14bfc77bc9633142d99bccd27",
        "date": "2023-11-13T16:21:15Z",
        "message": "Fix prometheus_url in scalability script"
      },
      {
        "id": "f21e1cdf9deb70a43e8dbc846163e8340e1d9d61",
        "date": "2023-10-24T07:46:19Z",
        "message": "Rotate Pietro Di Marco ssh key"
      }
    ],
    "email": "pietro.di.marco@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 1,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "390ebe65461e3cf14bfc77bc9633142d99bccd27",
        "date": "2023-11-13T16:21:15Z",
        "message": "Fix prometheus_url in scalability script"
      },
      {
        "id": "f21e1cdf9deb70a43e8dbc846163e8340e1d9d61",
        "date": "2023-10-24T07:46:19Z",
        "message": "Rotate Pietro Di Marco ssh key"
      }
    ],
    "line_additions": 1,
    "line_deletions": 1,
    "lines_effected_total": 2,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "BenjaminLoison",
    "id": 100563762,
    "totalContributions": 8,
    "github": "https://github.com/BenjaminLoison",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "bogwar",
    "id": 51327868,
    "totalContributions": 8,
    "github": "https://github.com/bogwar",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "DFINITYManu",
    "id": 123385598,
    "totalContributions": 7,
    "github": "https://github.com/DFINITYManu",
    "commits": [
      {
        "id": "a2095be4b45c56a4cbdf8633152ee72eb859944d",
        "date": "2023-11-21T12:37:38Z",
        "message": "Merge branch 'metricsproxy' into 'master'\n\nfeat(observability): add metrics-proxy to IC OS HostOS\n\nContext: https://dfinity.atlassian.net/browse/OB-405\n\nThe source code is built as external crate by reference to https://github.com/dfinity/metrics-proxy with a specific revision pin. \n\nSee merge request dfinity-lab/public/ic!14881"
      },
      {
        "id": "1454efc009dc970bcfdce2936bcd1db5dc9afc49",
        "date": "2023-11-21T12:37:38Z",
        "message": "feat(observability): add metrics-proxy to IC OS HostOS"
      },
      {
        "id": "2a1d12d894566556a8d85d79fed4076c487c7265",
        "date": "2023-10-30T09:48:45Z",
        "message": "chore(build): bump rules_rust to fix CARGO_MANIFEST_LINKS issues."
      }
    ],
    "email": "manuel.amador@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 3,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 1,
    "fixes": 1,
    "feats": 1,
    "non_merge_commits": [
      {
        "id": "1454efc009dc970bcfdce2936bcd1db5dc9afc49",
        "date": "2023-11-21T12:37:38Z",
        "message": "feat(observability): add metrics-proxy to IC OS HostOS"
      },
      {
        "id": "2a1d12d894566556a8d85d79fed4076c487c7265",
        "date": "2023-10-30T09:48:45Z",
        "message": "chore(build): bump rules_rust to fix CARGO_MANIFEST_LINKS issues."
      }
    ],
    "line_additions": 1751,
    "line_deletions": 257,
    "lines_effected_total": 2008,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "THLO",
    "id": 17572425,
    "totalContributions": 7,
    "github": "https://github.com/THLO",
    "commits": [
      {
        "id": "f4bce3fa0f5a7065ea33510c07452d59f845f23f",
        "date": "2023-08-17T16:04:32Z",
        "message": "Merge branch 'tl/ckbtc_polish' into 'master'\n\nchore(ckbtc): minor code improvements\n\nTrail of Bits conducted a security review of ckBTC and published their findings in a [report](https://drive.google.com/file/d/1r0h6KxyA3MLtwgeBztmco10bmO6IWlFY/view).\nThe findings are captured in this [epic](https://dfinity.atlassian.net/browse/FI-790).\n\nThis PR fixes the remaining minor issues (fixing a URL, capitalization, adding a saturating subtraction, and simplified a type conversion). \n\nSee merge request dfinity-lab/public/ic!13775"
      },
      {
        "id": "b9abb25038b422d52963c698a039a531d969153c",
        "date": "2023-08-17T16:04:30Z",
        "message": "chore(ckbtc): minor code improvements"
      }
    ],
    "email": "thomas.locher@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 1,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "b9abb25038b422d52963c698a039a531d969153c",
        "date": "2023-08-17T16:04:30Z",
        "message": "chore(ckbtc): minor code improvements"
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "bjoernek",
    "id": 101096424,
    "totalContributions": 5,
    "github": "https://github.com/bjoernek",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "dskloetd",
    "id": 122978264,
    "totalContributions": 5,
    "github": "https://github.com/dskloetd",
    "commits": [
      {
        "id": "4de99bc27be74048f80d13200f3c75cf2a43438c",
        "date": "2023-11-20T12:05:11Z",
        "message": "Merge branch 'leo-ckbtc-improve-update-balance' into 'master'\n\nfeat(ckbtc): update_balance returns pending utxos\n\nReturn the pending utxos to improve UX. \n\nSee merge request dfinity-lab/public/ic!16099"
      },
      {
        "id": "897014f3a4842db6c95c861355de0c8c68dcdc36",
        "date": "2023-10-05T19:13:36Z",
        "message": "Merge branch 'kloet/revoke' into 'master'\n\nChange SSH key for David de Kloet\n\nI had to revoke my previous SSH key. \n\nSee merge request dfinity-lab/public/ic!15243"
      },
      {
        "id": "7d113711d8bddd841f22c7a5412631ffe5d88770",
        "date": "2023-10-05T18:02:45Z",
        "message": "Change SSH key for David de Kloet"
      }
    ],
    "email": "david.de.kloet@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 3,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 2,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "7d113711d8bddd841f22c7a5412631ffe5d88770",
        "date": "2023-10-05T18:02:45Z",
        "message": "Change SSH key for David de Kloet"
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "farazshaikh",
    "id": 2507850,
    "totalContributions": 5,
    "github": "https://github.com/farazshaikh",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "TerrorJack",
    "id": 3889585,
    "totalContributions": 4,
    "github": "https://github.com/TerrorJack",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "georgi-dfinity",
    "id": 112886364,
    "totalContributions": 4,
    "github": "https://github.com/georgi-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "oggy-dfin",
    "id": 89794951,
    "totalContributions": 4,
    "github": "https://github.com/oggy-dfin",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "ryancammer",
    "id": 376128,
    "totalContributions": 4,
    "github": "https://github.com/ryancammer",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "tmshlvck",
    "id": 1937910,
    "totalContributions": 4,
    "github": "https://github.com/tmshlvck",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "Dfinity-Bjoern",
    "id": 54846571,
    "totalContributions": 4,
    "github": "https://github.com/Dfinity-Bjoern",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "eduarddfinity",
    "id": 118754595,
    "totalContributions": 3,
    "github": "https://github.com/eduarddfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "ericswanson-dfinity",
    "id": 64809312,
    "totalContributions": 3,
    "github": "https://github.com/ericswanson-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "anandsuresh",
    "id": 1027513,
    "totalContributions": 2,
    "github": "https://github.com/anandsuresh",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "benradf",
    "id": 104896700,
    "totalContributions": 2,
    "github": "https://github.com/benradf",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "hldfinity",
    "id": 83239056,
    "totalContributions": 2,
    "github": "https://github.com/hldfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "jwndlng",
    "id": 7381150,
    "totalContributions": 2,
    "github": "https://github.com/jwndlng",
    "commits": [
      {
        "id": "a76100659718eef59a062f0b027dd74b58d44a05",
        "date": "2023-11-07T10:50:28Z",
        "message": "Merge branch 'jan.wendling/cleanup-testnet-keys' into 'master'\n\nIN-1165: Cleanup up testnet ssh keys\n\n \n\nSee merge request dfinity-lab/public/ic!15928"
      },
      {
        "id": "d514da40112de1c75dcdd8f380fcdcfaea51b9f5",
        "date": "2023-11-07T10:50:28Z",
        "message": "IN-1165: Cleanup up testnet ssh keys"
      }
    ],
    "email": "jan.wendling@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 1,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "d514da40112de1c75dcdd8f380fcdcfaea51b9f5",
        "date": "2023-11-07T10:50:28Z",
        "message": "IN-1165: Cleanup up testnet ssh keys"
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "janeshchhabra",
    "id": 9343921,
    "totalContributions": 2,
    "github": "https://github.com/janeshchhabra",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "jeff-anderson-dfinity",
    "id": 75639283,
    "totalContributions": 2,
    "github": "https://github.com/jeff-anderson-dfinity",
    "commits": [
      {
        "id": "62dce5bb45282d1a49ee9c2061d8e1a6853cb4e9",
        "date": "2023-09-20T15:49:24Z",
        "message": "Updated whitelist in accordance to PFOPS-4304"
      }
    ],
    "email": "jeff.anderson@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 1,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "62dce5bb45282d1a49ee9c2061d8e1a6853cb4e9",
        "date": "2023-09-20T15:49:24Z",
        "message": "Updated whitelist in accordance to PFOPS-4304"
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "jwiegley",
    "id": 8460,
    "totalContributions": 2,
    "github": "https://github.com/jwiegley",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "krpeacock",
    "id": 16298804,
    "totalContributions": 2,
    "github": "https://github.com/krpeacock",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "mstrasinskis",
    "id": 98811342,
    "totalContributions": 2,
    "github": "https://github.com/mstrasinskis",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "smallstepman",
    "id": 21069150,
    "totalContributions": 2,
    "github": "https://github.com/smallstepman",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "rzakrzyk",
    "id": 118275419,
    "totalContributions": 2,
    "github": "https://github.com/rzakrzyk",
    "commits": [
      {
        "id": "55e5d9a856e46f24fa7aa4030d244448e5d8dd2e",
        "date": "2023-10-31T17:26:43Z",
        "message": "Merge branch 'tmshlvck/infradcrenumbering' into 'master'\n\nAdd new FR1 + CH1 InfraDC prefixes\n\nAdd new FR1 InfraDC prefix 2602:fb2b:110::/48 to all hardcoded lists\nModify all hard-coded addresses in old FR1 subnet 2001:4d78:40d::/48 to start\nusing the new subnet\n\nAdd new CH1 InfraDC prefix 2602:fb2b:120::/48 to all hardcoded lists\nModify all hard-coded addresses in old CH1 subnet 2607:f6f0:3004::/48 to start\nusing the new subnet \n\nSee merge request dfinity-lab/public/ic!15750"
      },
      {
        "id": "c4a70b9d26ed4d8dd3d7de4616c346d12bf26773",
        "date": "2023-10-31T17:26:43Z",
        "message": "Add new FR1 + CH1 InfraDC prefixes"
      }
    ],
    "email": "radoslaw.zakrzyk@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 1,
    "fixes": 1,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "c4a70b9d26ed4d8dd3d7de4616c346d12bf26773",
        "date": "2023-10-31T17:26:43Z",
        "message": "Add new FR1 + CH1 InfraDC prefixes"
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "rsundar01",
    "id": 40016762,
    "totalContributions": 2,
    "github": "https://github.com/rsundar01",
    "commits": [
      {
        "id": "a0dd307149510b87b706654fc2d20ab35a2562c7",
        "date": "2023-11-09T14:57:37Z",
        "message": "docs(security): update security policy"
      },
      {
        "id": "c697321fc12ccb1c49beab38491e64516aa44a3e",
        "date": "2023-11-09T01:50:31Z",
        "message": "docs(security): Add security policy"
      }
    ],
    "email": "raghav.sundaravaradan@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "a0dd307149510b87b706654fc2d20ab35a2562c7",
        "date": "2023-11-09T14:57:37Z",
        "message": "docs(security): update security policy"
      },
      {
        "id": "c697321fc12ccb1c49beab38491e64516aa44a3e",
        "date": "2023-11-09T01:50:31Z",
        "message": "docs(security): Add security policy"
      }
    ],
    "line_additions": 231,
    "line_deletions": 0,
    "lines_effected_total": 231,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "chenyan-dfinity",
    "id": 48968912,
    "totalContributions": 2,
    "github": "https://github.com/chenyan-dfinity",
    "commits": [
      {
        "id": "6223a38cfae726e9cc83db9ae27f35ca979dd0d8",
        "date": "2023-09-01T17:33:17Z",
        "message": "Merge branch 'yan/bump-candid-3' into 'master'\n\nchore: bump candid to 0.9\n\n* Bump candid, ic-cdk, and ic-agent everywhere\n* Sync with bitcoin-canister repo \n\nSee merge request dfinity-lab/public/ic!14435"
      },
      {
        "id": "dcb61b829a6c4d7bcac024f3ceeae5e27b5be706",
        "date": "2023-09-01T17:33:16Z",
        "message": "chore: bump candid to 0.9"
      }
    ],
    "email": "yan.chen@dfinity.org",
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 2,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 1,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [
      {
        "id": "dcb61b829a6c4d7bcac024f3ceeae5e27b5be706",
        "date": "2023-09-01T17:33:16Z",
        "message": "chore: bump candid to 0.9"
      }
    ],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "lmuntaner",
    "id": 4550653,
    "totalContributions": 2,
    "github": "https://github.com/lmuntaner",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "dietersommer",
    "id": 90856108,
    "totalContributions": 1,
    "github": "https://github.com/dietersommer",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "googleson78",
    "id": 8667384,
    "totalContributions": 1,
    "github": "https://github.com/googleson78",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "aumayrlukas",
    "id": 109510589,
    "totalContributions": 1,
    "github": "https://github.com/aumayrlukas",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "letmejustputthishere",
    "id": 32162112,
    "totalContributions": 1,
    "github": "https://github.com/letmejustputthishere",
    "commits": [],
    "pullRequests": [
      {
        "id": 1592326954,
        "number": 145,
        "title": "Update README.adoc",
        "created_at": "2023-11-08T10:32:45Z",
        "closed_at": null
      },
      {
        "id": 1592323501,
        "number": 144,
        "title": "Update README.adoc",
        "created_at": "2023-11-08T10:30:39Z",
        "closed_at": null
      },
      {
        "id": 1523051525,
        "number": 138,
        "title": "Rename download_latest_icrc1_leger.sh to download_latest_icrc1_ledger.sh",
        "created_at": "2023-09-20T12:48:44Z",
        "closed_at": null
      }
    ],
    "pr_count": 3,
    "commit_count": 0,
    "IssuesRaised": [
      {
        "id": 1983284179,
        "number": 145,
        "title": "Update README.adoc",
        "created_at": "2023-11-08T10:32:45Z",
        "closed_at": null
      },
      {
        "id": 1983280327,
        "number": 144,
        "title": "Update README.adoc",
        "created_at": "2023-11-08T10:30:39Z",
        "closed_at": null
      },
      {
        "id": 1904925693,
        "number": 138,
        "title": "Rename download_latest_icrc1_leger.sh to download_latest_icrc1_ledger.sh",
        "created_at": "2023-09-20T12:48:44Z",
        "closed_at": null
      }
    ],
    "issue_count": 3,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "roelstorms",
    "id": 1447607,
    "totalContributions": 1,
    "github": "https://github.com/roelstorms",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "SamuelChien123",
    "id": 112415743,
    "totalContributions": 1,
    "github": "https://github.com/SamuelChien123",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  },
  {
    "login": "victorshoup-dfinity",
    "id": 77461754,
    "totalContributions": 1,
    "github": "https://github.com/victorshoup-dfinity",
    "commits": [],
    "pullRequests": [],
    "pr_count": 0,
    "commit_count": 0,
    "IssuesRaised": [],
    "issue_count": 0,
    "merges": 0,
    "fixes": 0,
    "feats": 0,
    "non_merge_commits": [],
    "line_additions": 0,
    "line_deletions": 0,
    "lines_effected_total": 0,
    "rel_comm_add": 0,
    "rel_comm_del": 0,
    "rel_comm_total": 0
  }
]